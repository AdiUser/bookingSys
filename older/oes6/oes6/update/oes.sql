-- phpMyAdmin SQL Dump
-- version 4.0.9
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Mar 29, 2014 at 01:49 PM
-- Server version: 5.6.14
-- PHP Version: 5.5.6

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `oes`
--

-- --------------------------------------------------------

--
-- Table structure for table `adminlogin`
--

CREATE TABLE IF NOT EXISTS `adminlogin` (
  `admname` varchar(32) NOT NULL,
  `admpassword` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`admname`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `adminlogin`
--

INSERT INTO `adminlogin` (`admname`, `admpassword`) VALUES
('root', 'dbd2c348e12a58a674b6771fbeecb736');

-- --------------------------------------------------------

--
-- Table structure for table `level`
--

CREATE TABLE IF NOT EXISTS `level` (
  `testid` bigint(20) NOT NULL,
  `level_e` float DEFAULT NULL,
  `level_m` float DEFAULT NULL,
  `level_h` float DEFAULT NULL,
  `n_level_e` float DEFAULT NULL,
  `n_level_m` float DEFAULT NULL,
  `n_level_h` float DEFAULT NULL,
  KEY `testid` (`testid`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `level`
--

INSERT INTO `level` (`testid`, `level_e`, `level_m`, `level_h`, `n_level_e`, `n_level_m`, `n_level_h`) VALUES
(4, 1, 2, 4, 0.33, 0.66, 1.33),
(8, 1, 2, 4, 0.33, 0.66, 1.33),
(9, 2, 1, 4, 0.66, 0.33, 1.33),
(10, 2, 1, 4, 0.66, 0.33, 1.33),
(11, 2, 1, 4, 0.66, 0.33, 1.33),
(12, 2, 2, 4, 0.66, 0.66, 1.33),
(13, 2, 2, 4, 0.66, 0.66, 1.33),
(7, 1, 2, 4, 0.33, 0.66, 1.33),
(15, 1, 2, 4, 0.33, 0.66, 1.33),
(16, 1, 2, 4, 0.33, 0.66, 1.33),
(17, 1, 2, 4, 0.33, 0.66, 1.33),
(18, 1, 2, 4, 0.33, 0.66, 1.33),
(19, 1, 2, 4, 0.33, 0.66, 1.33),
(20, 1, 2, 4, 0.33, 0.66, 1.33),
(5, 1, 2, 4, 0.33, 0.66, 1.33),
(21, 1, 2, 4, 0.33, 0.66, 1.33),
(22, 1, 2, 4, 0.33, 1.33, 1.66);

-- --------------------------------------------------------

--
-- Table structure for table `question`
--

CREATE TABLE IF NOT EXISTS `question` (
  `testid` bigint(20) NOT NULL DEFAULT '0',
  `qnid` int(11) NOT NULL DEFAULT '0',
  `qnid_s` int(11) DEFAULT NULL,
  PRIMARY KEY (`testid`,`qnid`),
  KEY `qnid_s` (`qnid_s`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question`
--

INSERT INTO `question` (`testid`, `qnid`, `qnid_s`) VALUES
(4, 1, 38),
(4, 2, 39),
(4, 3, 40),
(4, 4, 41),
(4, 5, 42),
(4, 6, 43),
(4, 7, 44),
(4, 8, 45),
(4, 9, 46),
(4, 10, 47),
(4, 11, 48),
(4, 12, 49),
(4, 13, 50),
(4, 14, 51),
(4, 15, 52),
(4, 16, 53),
(4, 17, 54),
(4, 18, 55),
(4, 19, 56),
(4, 20, 57),
(4, 21, 58),
(4, 22, 59),
(4, 23, 60),
(4, 24, 61),
(4, 25, 62),
(4, 26, 63),
(4, 27, 64),
(4, 28, 68),
(4, 29, 69),
(4, 30, 70),
(4, 31, 71),
(4, 32, 72),
(4, 33, 73),
(4, 34, 74),
(4, 35, 75),
(4, 36, 76),
(4, 37, 77),
(4, 38, 78),
(4, 39, 79),
(4, 40, 80),
(4, 41, 81),
(4, 42, 82),
(4, 43, 83),
(4, 44, 84),
(4, 45, 85),
(4, 46, 86),
(4, 47, 87),
(4, 48, 88),
(4, 49, 89),
(4, 50, 90),
(0, 1, 92),
(0, 2, 93),
(0, 3, 94),
(0, 4, 95),
(0, 5, 96),
(0, 6, 97),
(0, 7, 98),
(0, 8, 99),
(0, 9, 100),
(0, 10, 101),
(0, 11, 102),
(0, 12, 103),
(0, 13, 104),
(0, 14, 105),
(0, 15, 106),
(0, 16, 107),
(0, 17, 108),
(0, 18, 109),
(0, 19, 110),
(0, 20, 111),
(0, 21, 112),
(0, 22, 113),
(0, 23, 114),
(0, 24, 115),
(0, 25, 116),
(0, 56, 117),
(0, 57, 118),
(0, 58, 119),
(0, 59, 120),
(0, 60, 121),
(0, 26, 122),
(0, 27, 123),
(0, 28, 124),
(0, 29, 125),
(0, 30, 126),
(0, 31, 127),
(0, 32, 128),
(0, 33, 129),
(0, 34, 130),
(0, 35, 131),
(0, 36, 132),
(0, 37, 133),
(0, 38, 134),
(0, 39, 135),
(0, 40, 136),
(0, 41, 137),
(0, 42, 138),
(0, 43, 139),
(0, 44, 140),
(0, 45, 141),
(0, 46, 142),
(0, 47, 143),
(0, 48, 144),
(0, 49, 145),
(0, 50, 146),
(0, 51, 147),
(0, 52, 148),
(0, 53, 149),
(0, 54, 150),
(0, 55, 151),
(0, 61, 152),
(0, 62, 153),
(0, 63, 154),
(0, 64, 155),
(0, 65, 156),
(5, 65, 216),
(5, 64, 215),
(5, 63, 214),
(5, 62, 213),
(5, 61, 212),
(5, 60, 286),
(5, 59, 220),
(5, 58, 219),
(5, 57, 218),
(5, 56, 217),
(5, 55, 211),
(5, 54, 210),
(5, 53, 209),
(5, 52, 208),
(5, 51, 207),
(5, 50, 206),
(5, 49, 205),
(5, 48, 204),
(5, 47, 203),
(5, 46, 202),
(5, 45, 201),
(5, 44, 200),
(5, 43, 199),
(5, 42, 198),
(5, 41, 197),
(5, 40, 196),
(5, 39, 195),
(5, 38, 194),
(5, 37, 193),
(5, 36, 192),
(5, 35, 191),
(5, 34, 190),
(5, 33, 189),
(5, 32, 188),
(5, 31, 187),
(5, 30, 186),
(5, 29, 185),
(5, 28, 184),
(5, 27, 183),
(5, 26, 182),
(5, 25, 181),
(5, 24, 180),
(5, 23, 179),
(5, 22, 178),
(5, 21, 177),
(5, 20, 176),
(5, 19, 175),
(5, 18, 174),
(5, 17, 173),
(5, 16, 172),
(5, 15, 171),
(5, 14, 170),
(5, 13, 169),
(5, 12, 168),
(5, 11, 167),
(5, 5, 161),
(5, 4, 160),
(5, 3, 159),
(5, 2, 158),
(5, 1, 157),
(5, 10, 166),
(5, 9, 165),
(5, 8, 164),
(5, 7, 163),
(6, 1, 221),
(6, 2, 222),
(6, 3, 223),
(6, 4, 224),
(6, 5, 225),
(6, 6, 226),
(6, 7, 227),
(6, 8, 228),
(6, 9, 229),
(6, 10, 230),
(6, 11, 231),
(6, 12, 232),
(6, 13, 233),
(6, 14, 234),
(6, 15, 235),
(6, 16, 236),
(6, 17, 237),
(6, 18, 238),
(6, 19, 239),
(6, 20, 240),
(6, 21, 241),
(6, 22, 242),
(6, 23, 243),
(6, 24, 244),
(6, 25, 245),
(6, 56, 246),
(6, 57, 247),
(6, 58, 248),
(6, 59, 249),
(6, 60, 250),
(6, 26, 251),
(6, 27, 252),
(6, 28, 253),
(6, 29, 254),
(6, 30, 255),
(6, 31, 256),
(6, 32, 257),
(6, 33, 258),
(6, 34, 259),
(6, 35, 260),
(6, 36, 261),
(6, 37, 262),
(6, 38, 263),
(6, 39, 264),
(6, 40, 265),
(6, 41, 266),
(6, 42, 267),
(6, 43, 268),
(6, 44, 269),
(6, 45, 270),
(6, 46, 271),
(6, 47, 272),
(6, 48, 273),
(6, 49, 274),
(6, 50, 275),
(6, 51, 276),
(6, 52, 277),
(6, 53, 278),
(6, 54, 279),
(6, 55, 280),
(6, 61, 281),
(6, 62, 282),
(6, 63, 283),
(6, 64, 284),
(6, 65, 285),
(5, 6, 162),
(7, 1, 287),
(7, 2, 288),
(7, 3, 289),
(7, 4, 290),
(7, 5, 291),
(7, 6, 292),
(7, 7, 293),
(7, 8, 294),
(7, 9, 295),
(7, 10, 296),
(7, 11, 297),
(7, 12, 298),
(7, 13, 299),
(7, 14, 300),
(7, 15, 301),
(7, 16, 302),
(7, 17, 303),
(7, 18, 304),
(7, 19, 305),
(7, 20, 306),
(7, 21, 307),
(7, 22, 308),
(7, 23, 309),
(7, 24, 310),
(7, 25, 311),
(7, 56, 312),
(7, 57, 313),
(7, 58, 314),
(7, 59, 315),
(7, 60, 316),
(7, 26, 317),
(7, 27, 318),
(7, 28, 319),
(7, 29, 320),
(7, 30, 321),
(7, 31, 322),
(7, 32, 323),
(7, 33, 324),
(7, 34, 325),
(7, 35, 326),
(7, 36, 327),
(7, 37, 328),
(7, 38, 329),
(7, 39, 330),
(7, 40, 331),
(7, 41, 332),
(7, 42, 333),
(7, 43, 334),
(7, 44, 335),
(7, 45, 336),
(7, 46, 337),
(7, 47, 338),
(7, 48, 339),
(7, 49, 340),
(7, 50, 341),
(7, 51, 342),
(7, 52, 343),
(7, 53, 344),
(7, 54, 345),
(7, 55, 346),
(7, 61, 347),
(7, 62, 348),
(7, 63, 349),
(7, 64, 350),
(7, 65, 351),
(8, 1, 353),
(8, 2, 354),
(8, 3, 355),
(8, 4, 356),
(8, 5, 357),
(8, 6, 358),
(8, 7, 359),
(8, 8, 360),
(8, 9, 361),
(8, 10, 362),
(8, 11, 363),
(8, 12, 364),
(8, 13, 365),
(8, 14, 366),
(8, 15, 367),
(8, 16, 368),
(8, 17, 369),
(8, 18, 370),
(8, 19, 371),
(8, 20, 372),
(8, 21, 373),
(8, 22, 374),
(8, 23, 375),
(8, 24, 376),
(8, 25, 377),
(8, 26, 378),
(8, 27, 379),
(8, 28, 380),
(8, 29, 381),
(8, 30, 382),
(8, 31, 383),
(8, 32, 384),
(8, 33, 385),
(8, 34, 386),
(8, 35, 387),
(8, 36, 388),
(8, 37, 389),
(8, 38, 390),
(8, 39, 391),
(8, 40, 392),
(8, 41, 393),
(8, 42, 394),
(8, 43, 395),
(8, 44, 396),
(8, 45, 397),
(9, 1, 398),
(9, 2, 399),
(9, 3, 400),
(9, 4, 401),
(9, 5, 402),
(9, 6, 403),
(9, 7, 404),
(9, 8, 405),
(9, 9, 406),
(9, 10, 407),
(9, 11, 408),
(9, 12, 409),
(9, 13, 410),
(9, 14, 411),
(9, 15, 412),
(9, 16, 413),
(9, 17, 414),
(9, 18, 415),
(9, 19, 416),
(9, 20, 417),
(9, 21, 418),
(9, 22, 419),
(9, 23, 420),
(9, 24, 421),
(9, 25, 422),
(9, 26, 423),
(9, 27, 424),
(9, 28, 425),
(9, 29, 426),
(9, 30, 427),
(9, 31, 428),
(9, 32, 429),
(9, 33, 430),
(9, 34, 431),
(9, 35, 432),
(9, 36, 433),
(9, 37, 434),
(9, 38, 435),
(9, 39, 436),
(9, 40, 437),
(9, 41, 438),
(9, 42, 439),
(9, 43, 440),
(9, 44, 441),
(9, 45, 442),
(9, 46, 443),
(9, 47, 444),
(9, 48, 445),
(9, 49, 446),
(9, 50, 447),
(9, 51, 448),
(9, 52, 449),
(9, 53, 450),
(9, 54, 451),
(9, 55, 452),
(11, 1, 453),
(11, 2, 454),
(11, 3, 455),
(11, 4, 456),
(11, 5, 457),
(11, 6, 458),
(11, 7, 459),
(11, 8, 460),
(11, 9, 461),
(11, 10, 462),
(11, 11, 463),
(11, 12, 464),
(11, 13, 465),
(11, 14, 466),
(11, 15, 467),
(11, 16, 468),
(11, 17, 469),
(11, 18, 470),
(11, 19, 471),
(11, 20, 472),
(11, 21, 473),
(11, 22, 474),
(11, 23, 475),
(11, 24, 476),
(11, 25, 477),
(11, 26, 478),
(11, 27, 479),
(11, 28, 480),
(11, 29, 481),
(11, 30, 482),
(11, 31, 483),
(11, 32, 484),
(11, 33, 485),
(11, 34, 486),
(11, 35, 487),
(11, 36, 488),
(11, 37, 489),
(11, 38, 490),
(11, 39, 491),
(11, 40, 492),
(11, 41, 493),
(11, 42, 494),
(11, 43, 495),
(11, 44, 496),
(11, 45, 497),
(11, 46, 498),
(11, 47, 499),
(11, 48, 500),
(11, 49, 501),
(11, 50, 502),
(11, 51, 503),
(11, 52, 504),
(11, 53, 505),
(11, 54, 506),
(11, 55, 507),
(11, 56, 508),
(11, 57, 509),
(11, 58, 510),
(11, 59, 511),
(11, 60, 512),
(10, 1, 513),
(10, 2, 514),
(10, 3, 515),
(10, 4, 516),
(10, 5, 517),
(10, 6, 518),
(10, 7, 519),
(10, 8, 520),
(10, 9, 521),
(10, 10, 522),
(10, 11, 523),
(10, 12, 524),
(10, 13, 525),
(10, 14, 526),
(10, 15, 527),
(10, 16, 528),
(10, 17, 529),
(10, 18, 530),
(10, 19, 531),
(10, 20, 532),
(10, 21, 533),
(10, 22, 534),
(10, 23, 535),
(10, 24, 536),
(12, 1, 537),
(12, 2, 538),
(12, 3, 539),
(12, 4, 540),
(12, 5, 541),
(12, 6, 542),
(12, 7, 543),
(12, 8, 544),
(12, 9, 545),
(12, 10, 546),
(12, 11, 547),
(12, 12, 548),
(12, 13, 549),
(12, 14, 550),
(12, 15, 551),
(12, 16, 552),
(12, 17, 553),
(12, 18, 554),
(12, 19, 555),
(12, 20, 556),
(12, 21, 557),
(12, 22, 558),
(12, 23, 559),
(12, 24, 560),
(12, 25, 561),
(12, 26, 562),
(12, 27, 563),
(12, 28, 564),
(12, 29, 565),
(12, 30, 566),
(12, 31, 567),
(12, 32, 568),
(12, 33, 569),
(12, 34, 570),
(12, 35, 571),
(12, 36, 572),
(12, 37, 573),
(12, 38, 574),
(12, 39, 575),
(12, 40, 576),
(12, 41, 577),
(12, 42, 578),
(12, 43, 579),
(12, 44, 580),
(12, 45, 581),
(12, 46, 582),
(12, 47, 583),
(12, 48, 584),
(12, 49, 585),
(12, 50, 586),
(12, 51, 587),
(12, 52, 588),
(12, 53, 589),
(12, 54, 590),
(13, 1, 591),
(13, 2, 592),
(13, 3, 594),
(13, 4, 595),
(13, 5, 596),
(13, 6, 597),
(13, 7, 598),
(13, 8, 599),
(13, 9, 600),
(13, 10, 601),
(13, 11, 602),
(13, 12, 603),
(13, 13, 604),
(13, 14, 605),
(13, 15, 606),
(13, 16, 607),
(13, 17, 608),
(13, 18, 609),
(13, 19, 610),
(13, 20, 611),
(13, 21, 612),
(13, 22, 613),
(13, 23, 614),
(13, 24, 615),
(13, 25, 616),
(13, 26, 617),
(13, 27, 618),
(13, 28, 619),
(13, 29, 620),
(13, 30, 621),
(13, 31, 622),
(13, 32, 623),
(13, 33, 624),
(13, 34, 625),
(13, 35, 626),
(13, 36, 627),
(13, 37, 628),
(13, 38, 629),
(13, 39, 630),
(13, 40, 631),
(15, 1, 650),
(15, 2, 651),
(15, 3, 652),
(15, 4, 653),
(15, 5, 654),
(15, 6, 655),
(15, 7, 656),
(15, 8, 657),
(15, 9, 658),
(15, 10, 659),
(15, 11, 660),
(15, 12, 661),
(15, 13, 662),
(15, 14, 663),
(15, 15, 664),
(15, 16, 665),
(15, 17, 666),
(15, 18, 667),
(15, 19, 668),
(15, 20, 669),
(15, 21, 670),
(15, 22, 671),
(15, 23, 672),
(15, 24, 673),
(15, 25, 674),
(15, 26, 675),
(15, 27, 676),
(15, 28, 677),
(15, 29, 678),
(15, 30, 679),
(15, 31, 680),
(15, 32, 681),
(15, 33, 682),
(15, 34, 683),
(15, 35, 684),
(15, 36, 685),
(15, 37, 686),
(15, 38, 687),
(15, 39, 688),
(15, 40, 689),
(15, 41, 690),
(15, 42, 691),
(15, 43, 692),
(15, 44, 693),
(15, 45, 694),
(15, 46, 695),
(15, 47, 696),
(15, 48, 697),
(15, 49, 698),
(15, 50, 699),
(15, 51, 700),
(15, 52, 701),
(15, 53, 702),
(15, 54, 703),
(15, 55, 704),
(15, 61, 705),
(15, 62, 706),
(15, 63, 707),
(15, 64, 708),
(15, 65, 709),
(15, 56, 710),
(15, 57, 711),
(15, 58, 712),
(15, 59, 713),
(15, 60, 714),
(16, 1, 715),
(16, 2, 716),
(16, 3, 717),
(16, 4, 718),
(16, 5, 719),
(16, 6, 720),
(16, 7, 721),
(16, 8, 722),
(16, 9, 723),
(16, 10, 724),
(16, 11, 725),
(16, 12, 726),
(16, 13, 727),
(16, 14, 728),
(16, 15, 729),
(16, 16, 730),
(16, 17, 731),
(16, 18, 732),
(16, 19, 733),
(16, 20, 734),
(16, 21, 735),
(16, 22, 736),
(16, 23, 737),
(16, 24, 738),
(16, 25, 739),
(16, 26, 740),
(16, 27, 741),
(16, 28, 742),
(16, 29, 743),
(16, 30, 744),
(16, 31, 745),
(16, 32, 746),
(16, 33, 747),
(16, 34, 748),
(16, 35, 749),
(16, 36, 750),
(16, 37, 751),
(16, 38, 752),
(16, 39, 753),
(16, 40, 754),
(16, 41, 755),
(16, 42, 756),
(16, 43, 757),
(16, 44, 758),
(16, 45, 759),
(16, 46, 760),
(16, 47, 761),
(16, 48, 762),
(16, 49, 763),
(16, 50, 764),
(16, 51, 765),
(16, 52, 766),
(16, 53, 767),
(16, 54, 768),
(16, 55, 769),
(16, 56, 770),
(16, 57, 771),
(16, 58, 772),
(16, 59, 773),
(16, 60, 774),
(16, 61, 775),
(16, 62, 776),
(16, 63, 777),
(16, 64, 778),
(16, 65, 779),
(17, 1, 780),
(17, 2, 781),
(17, 3, 782),
(17, 4, 783),
(17, 5, 784),
(17, 6, 785),
(17, 7, 786),
(17, 8, 787),
(17, 9, 788),
(17, 10, 789),
(17, 11, 790),
(17, 12, 791),
(17, 13, 792),
(17, 14, 793),
(17, 15, 794),
(17, 16, 795),
(17, 17, 796),
(17, 18, 797),
(17, 19, 798),
(17, 20, 799),
(17, 21, 800),
(17, 22, 801),
(17, 23, 802),
(17, 24, 803),
(17, 25, 804),
(17, 26, 805),
(17, 27, 806),
(17, 28, 807),
(17, 29, 808),
(17, 30, 809),
(17, 31, 810),
(17, 32, 811),
(17, 33, 812),
(17, 34, 813),
(17, 35, 814),
(17, 36, 815),
(17, 37, 816),
(17, 38, 817),
(17, 39, 818),
(17, 40, 819),
(17, 41, 820),
(17, 42, 821),
(17, 43, 822),
(17, 44, 823),
(17, 45, 824),
(17, 46, 825),
(17, 47, 826),
(17, 48, 827),
(17, 49, 828),
(17, 50, 829),
(17, 51, 830),
(17, 52, 831),
(17, 53, 832),
(17, 54, 833),
(17, 55, 834),
(17, 56, 835),
(17, 57, 836),
(17, 58, 837),
(17, 59, 838),
(17, 60, 839),
(17, 61, 840),
(17, 62, 841),
(17, 63, 842),
(17, 64, 843),
(17, 65, 844),
(18, 1, 845),
(18, 2, 846),
(18, 3, 847),
(18, 4, 848),
(18, 5, 849),
(18, 6, 850),
(18, 7, 851),
(18, 8, 852),
(18, 9, 853),
(18, 10, 854),
(18, 11, 855),
(18, 12, 856),
(18, 13, 857),
(18, 14, 858),
(18, 15, 859),
(18, 16, 860),
(18, 17, 861),
(18, 18, 862),
(18, 19, 863),
(18, 20, 864),
(18, 21, 865),
(18, 22, 866),
(18, 23, 867),
(18, 24, 868),
(18, 25, 869),
(18, 26, 870),
(18, 27, 871),
(18, 28, 872),
(18, 29, 873),
(18, 30, 874),
(18, 31, 875),
(18, 32, 876),
(18, 33, 877),
(18, 34, 878),
(18, 35, 879),
(18, 36, 880),
(18, 37, 881),
(18, 38, 882),
(18, 39, 883),
(18, 40, 884),
(18, 41, 885),
(18, 42, 886),
(18, 43, 887),
(18, 44, 888),
(18, 45, 889),
(18, 46, 890),
(18, 47, 891),
(18, 48, 892),
(18, 49, 893),
(18, 50, 894),
(18, 51, 895),
(18, 52, 896),
(18, 53, 897),
(18, 54, 898),
(18, 55, 899),
(18, 56, 900),
(18, 57, 901),
(18, 58, 902),
(18, 59, 903),
(18, 60, 904),
(18, 61, 905),
(18, 62, 906),
(18, 63, 907),
(18, 64, 908),
(18, 65, 909),
(19, 1, 945),
(19, 2, 946),
(19, 3, 947),
(19, 4, 948),
(19, 5, 949),
(19, 6, 950),
(19, 7, 951),
(19, 8, 952),
(19, 9, 953),
(19, 10, 954),
(19, 11, 955),
(19, 12, 956),
(19, 13, 957),
(19, 14, 958),
(19, 15, 959),
(19, 16, 960),
(19, 17, 961),
(19, 18, 962),
(19, 19, 963),
(19, 20, 964),
(19, 21, 965),
(19, 22, 966),
(19, 23, 967),
(19, 24, 968),
(19, 25, 969),
(19, 26, 910),
(19, 27, 911),
(19, 28, 912),
(19, 29, 913),
(19, 30, 914),
(19, 31, 915),
(19, 32, 916),
(19, 33, 917),
(19, 34, 918),
(19, 35, 919),
(19, 36, 920),
(19, 37, 921),
(19, 38, 922),
(19, 39, 923),
(19, 40, 924),
(19, 41, 925),
(19, 42, 926),
(19, 43, 927),
(19, 44, 928),
(19, 45, 929),
(19, 46, 930),
(19, 47, 931),
(19, 48, 932),
(19, 49, 933),
(19, 50, 934),
(19, 51, 935),
(19, 52, 936),
(19, 53, 937),
(19, 54, 938),
(19, 55, 939),
(19, 56, 970),
(19, 57, 971),
(19, 58, 972),
(19, 59, 973),
(19, 60, 974),
(19, 61, 940),
(19, 62, 941),
(19, 63, 942),
(19, 64, 943),
(19, 65, 944),
(20, 1, 975),
(20, 2, 976),
(20, 3, 977),
(20, 4, 978),
(20, 5, 979),
(20, 6, 980),
(20, 7, 981),
(20, 8, 982),
(20, 9, 983),
(20, 10, 984),
(20, 11, 985),
(20, 12, 986),
(20, 13, 987),
(20, 14, 988),
(20, 15, 989),
(20, 16, 990),
(20, 17, 991),
(20, 18, 992),
(20, 19, 993),
(20, 20, 994),
(20, 21, 995),
(20, 22, 996),
(20, 23, 997),
(20, 24, 998),
(20, 25, 999),
(20, 26, 1005),
(20, 27, 1006),
(20, 28, 1007),
(20, 29, 1008),
(20, 30, 1009),
(20, 31, 1010),
(20, 32, 1011),
(20, 33, 1012),
(20, 34, 1013),
(20, 35, 1014),
(20, 36, 1015),
(20, 37, 1016),
(20, 38, 1017),
(20, 39, 1018),
(20, 40, 1019),
(20, 41, 1020),
(20, 42, 1021),
(20, 43, 1022),
(20, 44, 1023),
(20, 45, 1024),
(20, 46, 1025),
(20, 47, 1026),
(20, 48, 1027),
(20, 49, 1028),
(20, 50, 1029),
(20, 51, 1030),
(20, 52, 1031),
(20, 53, 1032),
(20, 54, 1033),
(20, 55, 1034),
(20, 56, 1000),
(20, 57, 1001),
(20, 58, 1002),
(20, 59, 1003),
(20, 60, 1004),
(20, 61, 1035),
(20, 62, 1036),
(20, 63, 1037),
(20, 64, 1038),
(20, 65, 1039),
(21, 1, 1040),
(21, 2, 1041),
(21, 3, 1042),
(21, 4, 1043),
(21, 5, 1044),
(21, 6, 1045),
(21, 7, 1046),
(21, 8, 1047),
(21, 9, 1048),
(21, 10, 1049),
(21, 11, 1050),
(21, 12, 1051),
(21, 13, 1052),
(21, 14, 1053),
(21, 15, 1054),
(21, 16, 1055),
(21, 17, 1056),
(21, 18, 1057),
(21, 22, 1061),
(21, 21, 1060),
(21, 19, 1058),
(21, 20, 1059),
(21, 23, 1062),
(21, 24, 1063),
(21, 25, 1064),
(21, 26, 1075),
(21, 27, 1076),
(21, 28, 1077),
(21, 29, 1078),
(21, 30, 1079),
(21, 31, 1080),
(21, 32, 1081),
(21, 33, 1082),
(21, 34, 1083),
(21, 35, 1084),
(21, 36, 1085),
(21, 37, 1086),
(21, 38, 1087),
(21, 39, 1088),
(21, 40, 1089),
(21, 41, 1090),
(21, 42, 1091),
(21, 43, 1092),
(21, 44, 1093),
(21, 45, 1094),
(21, 46, 1095),
(21, 47, 1096),
(21, 48, 1097),
(21, 49, 1098),
(21, 50, 1099),
(21, 51, 1100),
(21, 52, 1101),
(21, 53, 1102),
(21, 54, 1103),
(21, 55, 1104),
(21, 56, 1065),
(21, 57, 1066),
(21, 58, 1067),
(21, 59, 1068),
(21, 60, 1069),
(21, 61, 1070),
(21, 62, 1071),
(21, 63, 1072),
(21, 64, 1073),
(21, 65, 1074),
(22, 1, 29),
(22, 2, 30),
(22, 3, 31),
(22, 4, 32),
(22, 5, 33),
(22, 6, 34),
(22, 7, 35),
(22, 8, 36),
(22, 9, 1106);

-- --------------------------------------------------------

--
-- Table structure for table `sett`
--

CREATE TABLE IF NOT EXISTS `sett` (
  `key` varchar(100) CHARACTER SET latin1 NOT NULL,
  `flag` float DEFAULT NULL,
  `metadata` text
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `sett`
--

INSERT INTO `sett` (`key`, `flag`, `metadata`) VALUES
('stu_reg', 1, ''),
('notice', NULL, 'Please Register with your correct name_surname without sapace.'),
('batch', 2015, NULL),
('Error_Allowed', 0.03, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `student`
--

CREATE TABLE IF NOT EXISTS `student` (
  `stdid` bigint(20) NOT NULL AUTO_INCREMENT,
  `stdname` varchar(40) DEFAULT NULL,
  `stdpassword` varchar(40) DEFAULT NULL,
  `emailid` varchar(40) DEFAULT NULL,
  `contactno` varchar(20) DEFAULT NULL,
  `address` varchar(40) DEFAULT NULL,
  `city` varchar(40) DEFAULT NULL,
  `pincode` varchar(20) DEFAULT NULL,
  `average_percentage` double DEFAULT NULL,
  `batch` varchar(25) DEFAULT NULL,
  PRIMARY KEY (`stdid`),
  UNIQUE KEY `stdname` (`stdname`),
  UNIQUE KEY `emailid` (`emailid`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=282 ;

--
-- Dumping data for table `student`
--

INSERT INTO `student` (`stdid`, `stdname`, `stdpassword`, `emailid`, `contactno`, `address`, `city`, `pincode`, `average_percentage`, `batch`) VALUES
(20, 'Sanyam', 'a431dcd4a8e6b3c870f38da4c11bd018', NULL, NULL, NULL, NULL, NULL, 49.44, '2014'),
(22, 'shan', '182efd55007507400e8f5db23d51c208', NULL, NULL, NULL, NULL, NULL, 44.91, '2014'),
(36, 'shikha', 'f357ee7fbfdec6c6d13966fda2e03d47', NULL, NULL, NULL, NULL, NULL, 55.95, '2014'),
(28, 'sunilsinghbora', '8f66f3fc0bb727f9beac9fe4367a76e6', NULL, NULL, NULL, NULL, NULL, 38.5, '2014'),
(33, 'Abhimanyu', '7bd5f8f51ac0449a7176dc7c0ea2b77c', NULL, NULL, NULL, NULL, NULL, 28.35, '2014'),
(38, 'kumarsourabh', '5f4dcc3b5aa765d61d8327deb882cf99', NULL, NULL, NULL, NULL, NULL, 28.09, '2014'),
(39, 'Akshara', 'f4679174335a6e90f2f40908d7b53be8', NULL, NULL, NULL, NULL, NULL, 47.33, '2014'),
(44, 'vaibhav', 'eec173a4bbb58a24c6741524858f41ff', NULL, NULL, NULL, NULL, NULL, 25.02, '2014'),
(47, 'himani', '3fd83802cffb0666c66b5ea248a08676', NULL, NULL, NULL, NULL, NULL, 23.64, '2014'),
(52, 'AkanshaPandey', '9058811f0978f08722bc8e7f53a16bf4', NULL, NULL, NULL, NULL, NULL, 37.24, '2014'),
(56, 'vishesh', 'a9a615490b58caec51a269fbddac2832', NULL, NULL, NULL, NULL, NULL, 55.08, '2014'),
(60, 'Amitgkv', 'c3f63f198967c622c995ce77d980e0e3', NULL, NULL, NULL, NULL, NULL, 34.01, '2014'),
(62, 'Piyush', '66ade32eb4a9fc983b5c7691ad5fb10a', NULL, NULL, NULL, NULL, NULL, 46.14, '2014'),
(63, 'KomalSingh01', '98b92a552884f9162eaa5b2854e46426', NULL, NULL, NULL, NULL, NULL, 43.91, '2014'),
(64, 'Reetika', '3fc2f3570d732daa4fddd5b4246389a7', NULL, NULL, NULL, NULL, NULL, 24.6, '2014'),
(65, 'prinsisharma', '64664ec5d4c4167d2f5b45680a6fc3d1', NULL, NULL, NULL, NULL, NULL, 45.84, '2014'),
(66, 'Rohit', 'aa395ba854d23aace6d924cf29ad83a6', NULL, NULL, NULL, NULL, NULL, 31.43, '2014'),
(67, 'AkshayRajput', 'ee554ceab8b86db63474bdf53b240cd3', NULL, NULL, NULL, NULL, NULL, 52.99, '2014'),
(68, 'Kartik_Gupta', 'fef673d04556e6bdfde41688c3330273', NULL, NULL, NULL, NULL, NULL, 48.59, '2014'),
(69, 'saumya', '4765aa5184b260e014fb3f6f795ba5c6', NULL, NULL, NULL, NULL, NULL, 29.51, '2014'),
(70, 'Rahul1988', 'e59ed9e94dae77a09d63ab69933ed64f', NULL, NULL, NULL, NULL, NULL, 28.44, '2014'),
(72, 'javed1', '60e7447595fec44687c1f4dc23c99c84', NULL, NULL, NULL, NULL, NULL, 39.97, '2014'),
(73, 'mudit_goyal', '914a952bb1fe7684dbdf797d03566272', NULL, NULL, NULL, NULL, NULL, 55.53, '2014'),
(74, 'Rashi', 'c3592878f89c605006c2f96b4437ab0e', NULL, NULL, NULL, NULL, NULL, 28.49, '2014'),
(75, 'nikitapant', 'b00a50c448238a71ed479f81fa4d9066', NULL, NULL, NULL, NULL, NULL, 30.01, '2014'),
(76, 'silky_goel', '827ccb0eea8a706c4c34a16891f84e7b', NULL, NULL, NULL, NULL, NULL, 20.08, '2014'),
(77, 'Anushree_Yadav', '3ff2f0c25a0c90e116b7efeaf85d1873', NULL, NULL, NULL, NULL, NULL, 29.86, '2014'),
(78, 'Vartika', '6845b31693308fa62810389ff1f53b5f', NULL, NULL, NULL, NULL, NULL, 18, '2014'),
(79, 'harshi', 'fd1fec8c95b83000e0fd06fe7a702640', NULL, NULL, NULL, NULL, NULL, 33.03, '2014'),
(80, 'anshika', '712df0f3e14df253d7a76f286d292e4f', NULL, NULL, NULL, NULL, NULL, 35.34, '2014'),
(81, 'kavitasingh', '26ef59ce901000ece98a3ddbb17f4439', NULL, NULL, NULL, NULL, NULL, 65.42, '2014'),
(82, 'PRABHJEET_SINGH', 'f2fff5fb2677ede8e6441ee2f77ed6c9', NULL, NULL, NULL, NULL, NULL, 37.51, '2014'),
(83, 'sanchit_agarwal', '4dcded9f6994447289235aa70ef134ee', NULL, NULL, NULL, NULL, NULL, 44.46, '2014'),
(84, 'atin', '712df0f3e14df253d7a76f286d292e4f', NULL, NULL, NULL, NULL, NULL, 17.93, '2014'),
(85, 'Himanshu_Tyagi', '9e997b3b329c01f148dd6c2b6fd1a717', NULL, NULL, NULL, NULL, NULL, 22.66, '2014'),
(86, 'pushp_ranjan', '86aee2c606973c21007e99ed68424c09', NULL, NULL, NULL, NULL, NULL, 32.73, '2014'),
(87, 'medhavi_malik', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 37.53, '2014'),
(88, 'faraz_ahmad', '118fb1468622fc84d4cc3748b5d30ab4', NULL, NULL, NULL, NULL, NULL, 37.01, '2014'),
(90, 'SuryaPratap', '3e4c9b5afe69bb5da8b1298c333728b2', NULL, NULL, NULL, NULL, NULL, 51.35, '2014'),
(92, 'ReenaRana', '3ddaeb82fbba964fb3461d4e4f1342eb', NULL, NULL, NULL, NULL, NULL, 7.25, '2014'),
(93, 'ishita', '827ccb0eea8a706c4c34a16891f84e7b', NULL, NULL, NULL, NULL, NULL, 38.21, '2014'),
(94, 'amit', 'b5c51e9db87827ba6f28de0101151087', NULL, NULL, NULL, NULL, NULL, 48.07, '2014'),
(95, 'NamanGoyal', '3dc7a00f44d78f82e908e9619680e3df', NULL, NULL, NULL, NULL, NULL, 51.48, '2014'),
(96, 'rishab_bansal', '65d4bf3351f35ba883b23483a2c9b1fc', NULL, NULL, NULL, NULL, NULL, 43.41, '2014'),
(97, 'Vivek', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 27.95, '2014'),
(98, 'monika_singh', '81fbd75cda243627254b2d944a48f9ed', NULL, NULL, NULL, NULL, NULL, 44.67, '2014'),
(99, 'mansijoshi', 'ed890275c2011a853b3f729ce295c3dc', NULL, NULL, NULL, NULL, NULL, 21.04, '2014'),
(100, 'Anurag', '536bdedb209924ff1aacb9f7436f3209', NULL, NULL, NULL, NULL, NULL, 45.03, '2014'),
(101, 'deepak_upreti', '827ccb0eea8a706c4c34a16891f84e7b', NULL, NULL, NULL, NULL, NULL, 40.55, '2014'),
(102, 'siddharth_gupta', 'f72e9a1ac26eb390ef16669c43bac7f3', NULL, NULL, NULL, NULL, NULL, 31.03, '2014'),
(104, 'Manav', '6b42d00c4ca6ddc33a604c54b8ce4adc', NULL, NULL, NULL, NULL, NULL, 20.07, '2014'),
(105, 'ankur22', '0468f4349b5f287d2c508b5b65a06ea8', NULL, NULL, NULL, NULL, NULL, 20.52, '2014'),
(107, 'Gajendra', '202c150f3abf3726293028c3ef7a9390', NULL, NULL, NULL, NULL, NULL, 36.01, '2014'),
(108, 'Anand', '8bda8e915e629a9fd1bbca44f8099c81', NULL, NULL, NULL, NULL, NULL, 33.1, '2014'),
(109, 'PAWANTRIPATHI', 'ade7a77b32b0b9e334b1a7f1c2ea09ae', NULL, NULL, NULL, NULL, NULL, 46.43, '2014'),
(111, 'ankitRana', '74ebf86f0ec4a6d78aba7d01b5165966', NULL, NULL, NULL, NULL, NULL, 30.28, '2014'),
(112, 'Harshita_Agarwal', '1b0e3cfb0a71086e2ed8f72687874943', NULL, NULL, NULL, NULL, NULL, 26.14, '2014'),
(113, 'Pallavi_Upreti', '5f7a9a93337c944e15aef42a741d8fbb', NULL, NULL, NULL, NULL, NULL, 16.47, '2014'),
(114, 'Diksha', '4acd1984e393a0553d6fb616dfc3428e', NULL, NULL, NULL, NULL, NULL, 33.68, '2014'),
(115, 'Akansha123', 'd8578edf8458ce06fbc5bb76a58c5ca4', NULL, NULL, NULL, NULL, NULL, 32.42, '2014'),
(116, 'sweta_arya', '712df0f3e14df253d7a76f286d292e4f', NULL, NULL, NULL, NULL, NULL, 56.01, '2014'),
(117, 'Bhanvi_Rohilla', '068aa9e0404facf1cdadf8243ba53f55', NULL, NULL, NULL, NULL, NULL, 38.47, '2014'),
(119, 'nancysemwal', 'e27a57c9315bdf4898a8e51ff96d8d9e', NULL, NULL, NULL, NULL, NULL, 40.16, '2014'),
(120, 'sakshiparihar', '1115a3060ac45ee3be53cc155db69a5e', NULL, NULL, NULL, NULL, NULL, 28.02, '2014'),
(121, 'priya', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 45.84, '2014'),
(122, 'bhargav', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 39.48, '2014'),
(123, 'NamanSinha1992', '498b5924adc469aa7b660f457e0fc7e5', NULL, NULL, NULL, NULL, NULL, 43.97, '2014'),
(124, 'PreetiMittal', '08a34e1a1b837c737b2735514cca9313', NULL, NULL, NULL, NULL, NULL, 29.52, '2014'),
(125, 'jagdish', '8594e8cef73a5f988c47a989219b87cd', NULL, NULL, NULL, NULL, NULL, 38.01, '2014'),
(127, 'arun', '15fbed0db1646879db87fef9c52d18c4', NULL, NULL, NULL, NULL, NULL, 50.41, '2014'),
(128, 'nikitatyagi', 'b00a50c448238a71ed479f81fa4d9066', NULL, NULL, NULL, NULL, NULL, 25.87, '2014'),
(130, 'Anshulgkv', 'd923212886ee843582cfcd6dda95f131', NULL, NULL, NULL, NULL, NULL, 18.34, '2014'),
(134, 'gauravjhaldiyal', '2fd1ffe3452c5e925b935115b24794d9', NULL, NULL, NULL, NULL, NULL, 44.22, '2014'),
(135, 'vaibhavmittalsces', '6b55ccb275ca66eda7d437b28df17a41', NULL, NULL, NULL, NULL, NULL, 24.41, '2014'),
(136, 'Pranav', 'a55c04bd524c4434374997c24f36ef44', NULL, NULL, NULL, NULL, NULL, 10.85, '2014'),
(138, 'Sourabhgkv', '827ccb0eea8a706c4c34a16891f84e7b', NULL, NULL, NULL, NULL, NULL, 32.2, '2014'),
(139, 'HARSH', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 10.31, '2014'),
(140, 'kapil', 'a3694f6bc9cd1734af2f0c521cf37fdd', NULL, NULL, NULL, NULL, NULL, 7.55, '2014'),
(141, 'Apnavi_chaturvedi', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 20.62, '2014'),
(142, 'sumankumari', '1533c67e5e70ae7439a9aa993d6a3393', NULL, NULL, NULL, NULL, NULL, 35.22, '2014'),
(143, 'Natashaarora', 'cf9b8280c0e2bf337ac98c89c865bd4e', NULL, NULL, NULL, NULL, NULL, 31.46, '2014'),
(144, 'gaurav', 'd8578edf8458ce06fbc5bb76a58c5ca4', NULL, NULL, NULL, NULL, NULL, 39.39, '2014'),
(145, 'sidharthmittal', '644d997201f598ef312f6d11f34db94b', NULL, NULL, NULL, NULL, NULL, 49.44, '2014'),
(146, 'VISHAL', '57d42889fab874d1a2b68dafdc2034d3', NULL, NULL, NULL, NULL, NULL, 45.4, '2014'),
(148, 'abdulkadir', '44cb2102346e4318e7d9b411a2343124', NULL, NULL, NULL, NULL, NULL, 19.73, '2014'),
(149, 'Shobhitkumar', '827ccb0eea8a706c4c34a16891f84e7b', NULL, NULL, NULL, NULL, NULL, 8.44, '2014'),
(150, 'Aakash', 'a07d2b2c913c462a432aa00ba6a2856f', NULL, NULL, NULL, NULL, NULL, 37.08, '2014'),
(151, 'nikhil', '712df0f3e14df253d7a76f286d292e4f', NULL, NULL, NULL, NULL, NULL, 32.01, '2014'),
(152, 'aman', '2358d625933bb492b6161dcd05a08e88', NULL, NULL, NULL, NULL, NULL, 23.23, '2014'),
(153, 'Manvendra_singh', '6b42d00c4ca6ddc33a604c54b8ce4adc', NULL, NULL, NULL, NULL, NULL, 34.16, '2014'),
(154, 'ankurpandey', '827ccb0eea8a706c4c34a16891f84e7b', NULL, NULL, NULL, NULL, NULL, 32.91, '2014'),
(156, 'Anuj', '827ccb0eea8a706c4c34a16891f84e7b', NULL, NULL, NULL, NULL, NULL, 6.24, '2014'),
(158, 'ashish_verma', '82019dcdf94667ffe4c65f2ef1578c9f', NULL, NULL, NULL, NULL, NULL, 42.92, '2014'),
(159, 'waseem', '7e4b9f14903758dd6dae26a7ff3d2624', NULL, NULL, NULL, NULL, NULL, 22.97, '2014'),
(160, 'MohitPal', 'd8052f9e09a17e6907629e76bbd261cc', NULL, NULL, NULL, NULL, NULL, 27.09, '2014'),
(161, 'badoni', 'b05a33dc8309fc456b84eb453d3bf182', NULL, NULL, NULL, NULL, NULL, 4.72, '2014'),
(162, 'ayush', 'ee1ea468ff0154bec635c4886b434cd5', NULL, NULL, NULL, NULL, NULL, 44.52, '2014'),
(164, 'test', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 1.18, '2014'),
(165, 'udaysaini', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(166, 'mohitpant316@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 2.02, '2014'),
(167, 'saurabh14oct@gmail.com', 'fcfef8aaf61fc4b3c545cc0f13916b4d', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(168, 'shekharbaluni@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(169, 'myfriendrajeev@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(170, 'nehas1175@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(171, 'sonamarora.92.01@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(172, 'incrediblesharma17@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(173, 'aparna.appytyagi@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(174, 'hitendra18pal@gmail.com', 'c6891a0dd6a38b34e2ca1e6f699c21fa', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(175, 'rahul251488@live.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(176, 'varunika11@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(177, 'arunnautiyal.a@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 18.38, '2014'),
(178, 'er.girishpathak@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(179, 'rahulpratap1990@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(180, 'abdulkadir.hermes@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(181, 'nitin.surya27@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(182, 'agrawal.kratika09@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(183, 'sweet20lovey@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(184, 'gangwardilipkumar@gmail.com', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(185, 'himanshu_joshi', '3e8961306a7d9c49c15e97d4943b2529', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(186, 'test2', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL, NULL, NULL, NULL, 0, '2014'),
(188, 'Vaibhav_Pande', '66563f06c02e93e287b15ba1566ec6c4', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(189, 'ISHAPANCHBHAIYA', '243bd1ce0387f18005abfc43b001646a', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(190, 'chetan_rautela', 'f2678b0ef4a9a928185997278a642fe0', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(191, 'Vivek_Uniyal', '6f1362952604c84afbf623e50987ad25', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(192, 'Divyanshu', '8a2c3b66c9acc854f1099d2dc0ff8a84', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(193, 'vishakha_bhandari', '4157d6286db6b42b61506045e5fed90f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(194, 'Jatin_Muniyal', 'bc9d1a48eba76c92b39b2025640e1e16', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(195, 'Pranav_Gaur', '14787ce9932905f07fac2df2eebad0ce', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(196, 'anirudh_agarwal', '2bab378be01e192a6cbbce3825cac65c', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(197, 'Tanuj', 'f771ac9bb3698b0374ec8af2c83562cf', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(198, 'harshit_joshi', '91eb496fbd9a0977e03aa08fc740ea66', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(199, 'bharat_verma', '063969e7eccb7af7ae17141dd0ff0db0', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(200, 'prakash_ranjan', 'ef300ea2412453d3e55c809daf6a6e3c', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(201, 'himanshu', '4860619c537db5095c071a9f95a9f4f6', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(202, 'Syed_Mohd_Ali', '880b09d830888599c1eb34d6bb8d20a9', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(203, 'paras_arora', 'ebfab53646f7461b964e14fc00834e68', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(204, 'bhuvan_gahlot', 'cd9346a3d92c945fd528c02d88600a9c', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(205, 'piyush_rawat', '86f500cd7b7d38e5d4ae6cde3920f589', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(206, 'arpit_gupta', '4841168762c139573e7714eef83a85c5', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(207, 'sourishm', 'facd2117badb3205ca9318104747249e', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(208, 'Shivangi_Goel', '2c85b8085cac36482b6cf9b176d51970', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(209, 'yogeshkumar', 'b3a8f3cd4e61fc75c9d7670c35e28e8f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(210, 'aditya_bisht', 'b37db140734b90859dc3067cc25b5515', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(211, 'kanishk_lohumi', 'e3a60aa22a6adb54c3cd62519d9dab8b', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(212, 'nitya_tandon', 'b5be40262e7d8ffb15c2241780d6bd70', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(213, 'naman_wats', '24de5c298c6b46787583ca2ad73a928f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(214, 'preetam_roy_choudhury', '44bef2ee415c62f0ce01fbe6c5566250', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(215, 'bhumika_gupta', '2089d711734245d9ac8159406cd23325', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(216, 'Nishtha_Bijalwan', '1342c9194815f1a83fb4bc80601966d4', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(217, 'shrey_agarwal', 'edbd0effac3fcc98e725920a512881e0', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(218, 'kamini_gupta', 'bb289f9daaf39ac917a7cf60b7a7036c', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(219, 'anubhav_sharma', 'f16894b2abcbe64c71ee00d06a4ba6e9', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(220, 'Naman_Jain', 'f1d5802e1cb64962d165f9252aafac27', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(221, 'hitesh_suyal', '80e2235fd9a018996178a07a6a3f4fff', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(222, 'sachin_bhandari', '271f13e3d3ee6b2e5229b3391dd1588f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(223, 'meenakshi_dhami', 'be0f7b5b2d02192d2cfc7e4c42e55ee9', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(224, 'gauravpandey', '1a9d00f2cab83499095a8043b895a3b2', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(225, 'Ajaymaindola', 'e22c9cc44a2b2645fb3a36e3dbfd9401', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(226, 'prabhat_kumar', '3e66e5d6cedf8a3fea10bd337f237f54', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(227, 'Subodh_kumar', '4f4f65928ae0b6a58c1d845933a2880f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(228, 'Vaishali_Verma', '1aff05ad16830b5c1b70279f2a7c2a69', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(229, 'jitender_singh', 'eda6bc778673390320a8c55f9594b3e3', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(230, 'arushi_aggarwal', '94a21e06f4a0609c7b87cac9f4873a3c', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(231, 'pratibha_kumar', '3b835381c8545dc0e08cdea185b34a20', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(232, 'Shreya_Tyagi', 'a3922a93c26fda54456583f2d7b5623a', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(233, 'prakhar_gour', '4f929b6124d236d62a740796322b19db', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(234, 'bhawna_negi', 'e250675c8e7e0282cbcf4ca389f0157e', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(235, 'divyansh_gupta', '4845370b6c94ff43f25489d9e12aee11', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(236, 'palak_langer', '9a0d734a8cc94890376ad2b82e3771e3', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(237, 'nidhi_kumar', 'ce72509b79f6d652dcd1c5e2c753debb', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(238, 'yogesh_kumar', 'b3a8f3cd4e61fc75c9d7670c35e28e8f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(239, 'prabhakar', 'ae1d3c7e0c775e9756461b2d12e62e49', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(240, 'sheetal_garg', 'ac6042267d853549c11ec310f2ee7bfc', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(241, 'sonam_gupta', 'a02d5ce1150288a908816f2811431ddb', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(242, 'rahul_yadav', '99e5db269b81563b9e80f2499e3bd94d', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(243, 'aniketkumar', '32af2d608c954bcb91ea263c589b0f12', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(244, 'ruchika_ahuja', 'da6df37c779ee033f5915c124182c7df', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(245, 'vasudha_kapil', '1610d3ddb611566d48c2a4316b2831db', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(246, 'divesh', 'ff0c2e4d40fb7cbe0322862b202d6a65', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(247, 'rohit_sehgal', '827ccb0eea8a706c4c34a16891f84e7b', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(248, 'ashutosh_barthwal', '9d3b1d7982b08ee4e28193e9756bda54', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(249, 'tanuj_thapa', 'f771ac9bb3698b0374ec8af2c83562cf', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(250, 'Ira_Bajpai', 'a283fef04d01b18e0e5bc2208e8f002c', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(251, 'tanya_singh', '23c6323bfb57bb630b8a2ecf703d6bb0', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(252, 'abhishek_pandey', 'df5ea0d9375e5aadabc43dbcd6362d75', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(253, 'brijesh_pant', 'd712a2fe64f71b3e700908657a49c01d', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(254, 'abhishek_ranjan', '98bfe7780b3044eba8560c4a35455a18', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(255, 'Jeevanjyot_kaur', 'a6a12369249d254711362bda81b2d5f2', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(256, 'pooja_thakur', '8989745d0bf4d56c05b66ed99dab7f7f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(257, 'kamakshi_verma', '850c54b183176d831cb16726bf70b955', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(258, 'Abhishek_Chaudhary', 'b3018d896ccef60de53efeb96258f600', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(259, 'Deepti_Kandpal', 'e29673edbc4d51af54a034bd5ab51415', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(260, 'sheetal_bisht', '0ea2971de035eb6755cfc62ca78e999f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(261, 'Rashmi_Singh', '0ce4ff80e8a029c19abaa08a2019a980', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(262, 'ritika_joshi', '7b54b7b98ab604a6a666cd3c9d84ec18', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(263, 'Pragya_Daksh', '229aa634edcc8d13cf4bdd49da8cf845', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(264, 'aishwarya_aggarwal2', 'f7cade80b7cc92b991cf4d2806d6bd78', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(265, 'neelesh_pandey', 'd8578edf8458ce06fbc5bb76a58c5ca4', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(266, 'shrey_singh', '597d2be2716db709479203e725a3a121', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(267, 'Anandita_Dhasmana', '623d8ebca657e3eceb54e4f5e5ebead1', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(268, 'sonu_kumar', '4321eb761e1f1a2edf2f0861dbcb8bf3', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(269, 'Kriti_Ruhela', '35473d24664035c02d92aba25c94d9c6', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(270, 'gaurav_kumar', 'bf24f1f6ec878655ad39f887363a9a87', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(271, 'shrey_sachdeva', '149f80c6dc7fb7c07ccac8610ca41acb', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(272, 'ABHISHEK_KUMAR', 'c838fd1eab44e7976a7fac54354df00a', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(273, 'abhishekrohela', '770b3860db5d0ac97c5c797983f7d03f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(274, 'Geeta_Semwal', '5211ca919c982903f5d93bd9408349db', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(275, 'richa_vashisth', '2720762d6b556f8e688020ff6034b522', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(276, 'Aishwarya_agarwal1', 'c44a471bd78cc6c2fea32b9fe028d30a', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(277, 'pallavi_srivastava', '919bcd3bc3d4e481e5cd9fb7960fce9e', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(278, 'srishti_agrawal', '8934240d9dd86934f9f197d1796a47fe', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(279, 'RANJIT_KUMAR', 'ef18f9fd3c5fe7efc19741c20901999f', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(280, 'Parveen_kumar', '30bde8e6488f992d930cc35721f4a3b1', NULL, NULL, NULL, NULL, NULL, NULL, '2015'),
(281, 'musahib', 'c9fb043b7de2d07988130e6e7164faea', NULL, NULL, NULL, NULL, NULL, NULL, '2015');

-- --------------------------------------------------------

--
-- Table structure for table `studentquestion`
--

CREATE TABLE IF NOT EXISTS `studentquestion` (
  `stdid` bigint(20) NOT NULL DEFAULT '0',
  `testid` bigint(20) NOT NULL DEFAULT '0',
  `qnid` int(11) NOT NULL DEFAULT '0',
  `marks` float DEFAULT '0',
  `stdanswer` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`stdid`,`testid`,`qnid`),
  KEY `testid` (`testid`,`qnid`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `studentquestion`
--

INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(20, 7, 1, 1, 'optionc'),
(20, 7, 2, -0.33, 'optionb'),
(20, 7, 3, -0.33, 'optionc'),
(20, 7, 4, 1, 'optiond'),
(20, 7, 5, -0.33, 'optiona'),
(20, 7, 6, -0.33, 'optiona'),
(20, 7, 7, -0.33, 'optiona'),
(20, 7, 8, 1, 'optionb'),
(20, 7, 9, 1, 'optiona'),
(20, 7, 10, 1, 'optionc'),
(20, 7, 11, 1, 'optiona'),
(20, 7, 12, 1, 'optionb'),
(20, 7, 14, 1, 'optionc'),
(20, 7, 15, 1, 'optionb'),
(20, 7, 16, -0.33, 'optionb'),
(20, 7, 17, 1, 'optionc'),
(20, 7, 18, 1, 'optiona'),
(20, 7, 19, 1, 'optiond'),
(20, 7, 20, 1, 'optiona'),
(20, 7, 21, 1, 'optiond'),
(20, 7, 22, 1, 'optiond'),
(20, 7, 23, -0.33, 'optionb'),
(20, 7, 24, 1, 'optiona'),
(20, 7, 25, 1, 'optionc'),
(20, 7, 26, 2, 'optiona'),
(20, 7, 27, -0.66, 'optiona'),
(20, 7, 28, 2, 'optiona'),
(20, 7, 29, -0.66, 'optionc'),
(20, 7, 30, -0.66, 'optiond'),
(20, 7, 31, 2, 'optiona'),
(20, 7, 32, 2, 'optiona'),
(20, 7, 35, 2, 'optionc'),
(20, 7, 36, 2, 'optionc'),
(20, 7, 37, -0.66, 'optiona'),
(20, 7, 39, -0.66, 'optiond'),
(20, 7, 40, 2, 'optionb'),
(20, 7, 41, 2, 'optionc'),
(20, 7, 42, 2, 'optionc'),
(20, 7, 43, 2, 'optionb'),
(20, 7, 44, 2, 'optionb'),
(20, 7, 45, 2, 'optiond'),
(20, 7, 46, -0.66, 'optionc'),
(20, 7, 47, 2, 'optionb'),
(20, 7, 48, 2, 'optionb'),
(20, 7, 49, -0.66, 'optiona'),
(20, 7, 50, 2, 'optionc'),
(20, 7, 51, 2, 'optionb'),
(20, 7, 52, 2, 'optiona'),
(20, 7, 53, 2, 'optionb'),
(20, 7, 54, 2, 'optiond'),
(20, 7, 57, 1, 'optionc'),
(20, 7, 58, 1, 'optionb'),
(20, 7, 59, 1, 'optiond'),
(20, 7, 60, 1, 'optionc'),
(20, 7, 61, -0.66, 'optiond'),
(20, 7, 62, -0.66, 'optiond'),
(20, 7, 63, 2, 'optiond'),
(20, 7, 64, 2, 'optionc'),
(20, 7, 65, 2, 'optionb'),
(20, 8, 1, 1, 'optione'),
(20, 8, 2, 1, 'optiona'),
(20, 8, 3, 1, 'optionb'),
(20, 8, 4, -0.33, 'optionb'),
(20, 8, 5, -0.33, 'optiona'),
(20, 8, 6, 1, 'optiond'),
(20, 8, 7, 1, 'optionb'),
(20, 8, 8, 1, 'optionb'),
(20, 8, 9, -0.33, 'optiona'),
(20, 8, 10, -0.33, 'optiond'),
(20, 8, 11, 1, 'optiond'),
(20, 8, 12, 1, 'optiona'),
(20, 8, 13, 1, 'optionb'),
(20, 8, 14, 1, 'optiona'),
(20, 8, 15, 1, 'optionc'),
(20, 8, 17, -0.33, 'optiond'),
(20, 8, 18, 1, 'optione'),
(20, 8, 19, 1, 'optiona'),
(20, 8, 21, 1, 'optiona'),
(20, 8, 24, 1, 'optiona'),
(20, 8, 25, 1, 'optiond'),
(20, 8, 27, 1, 'optiond'),
(20, 8, 28, -0.33, 'optiona'),
(20, 8, 29, 1, 'optionb'),
(20, 8, 30, 1, 'optionc'),
(20, 8, 31, 1, 'optionc'),
(20, 8, 32, 1, 'optionb'),
(20, 8, 33, 1, 'optiona'),
(20, 8, 34, 1, 'optiond'),
(20, 8, 35, 1, 'optionc'),
(20, 8, 36, 1, 'optionc'),
(20, 8, 37, 1, 'optiond'),
(20, 8, 38, 1, 'optionb'),
(20, 8, 39, 1, 'optiond'),
(20, 8, 40, -0.33, 'optiona'),
(20, 8, 41, 1, 'optiona'),
(20, 8, 42, 1, 'optiond'),
(20, 8, 43, 1, 'optionb'),
(20, 8, 44, 1, 'optionb'),
(20, 8, 45, -0.33, 'optionb'),
(20, 9, 4, -0.66, 'optiond'),
(20, 9, 5, 2, 'optiond'),
(20, 9, 7, 2, 'optionc'),
(20, 9, 8, 2, 'optionb'),
(20, 9, 12, -0.66, 'optionb'),
(20, 9, 19, 2, 'optionc'),
(20, 9, 21, 2, 'optionc'),
(20, 9, 26, 2, 'optionc'),
(20, 9, 27, -0.66, 'optionb'),
(20, 9, 29, 2, 'optionc'),
(20, 9, 30, 2, 'optionb'),
(20, 9, 31, -0.66, 'optiond'),
(20, 9, 32, 2, 'optionb'),
(20, 9, 34, 2, 'optiond'),
(20, 9, 35, 2, 'optionb'),
(20, 9, 36, -0.66, 'optiond'),
(20, 9, 37, 2, 'optionb'),
(20, 9, 40, -0.66, 'optiona'),
(20, 9, 47, 2, 'optionc'),
(20, 9, 50, -0.66, 'optiond'),
(20, 9, 52, 2, 'optionb'),
(20, 9, 53, 2, 'optionc'),
(20, 10, 1, 2, 'optione'),
(20, 10, 2, 2, 'optionb'),
(20, 10, 3, 2, 'optiond'),
(20, 10, 4, 2, 'optionc'),
(20, 10, 5, 2, 'optionb'),
(20, 10, 6, 2, 'optionb'),
(20, 10, 7, 2, 'optiona'),
(20, 10, 8, 2, 'optione'),
(20, 10, 9, 2, 'optionc'),
(20, 10, 10, 2, 'optiond'),
(20, 10, 11, 2, 'optionc'),
(20, 10, 12, 2, 'optionb'),
(20, 10, 13, 2, 'optionc'),
(20, 10, 14, 2, 'optionb'),
(20, 10, 15, 2, 'optiond'),
(20, 10, 16, 2, 'optiona'),
(20, 10, 18, -0.66, 'optiond'),
(20, 10, 19, 2, 'optiona'),
(20, 10, 21, 2, 'optionb'),
(20, 10, 22, 2, 'optionb'),
(20, 10, 23, 2, 'optiond'),
(20, 10, 24, -0.66, 'optionc'),
(20, 11, 1, 2, 'optionb'),
(20, 11, 2, -0.66, 'optiond'),
(20, 11, 3, 2, 'optiona'),
(20, 11, 4, 2, 'optiond'),
(20, 11, 5, 2, 'optionb'),
(20, 11, 6, 2, 'optionb'),
(20, 11, 7, 2, 'optionb'),
(20, 11, 8, 2, 'optiona'),
(20, 11, 9, 2, 'optionc'),
(20, 11, 10, 2, 'optiona'),
(20, 11, 11, 2, 'optiona'),
(20, 11, 12, 2, 'optiona'),
(20, 11, 15, 2, 'optionc'),
(20, 11, 16, 2, 'optionb'),
(20, 11, 17, 2, 'optiona'),
(20, 11, 18, 2, 'optionb'),
(20, 11, 19, 2, 'optionb'),
(20, 11, 20, -0.66, 'optionb'),
(20, 11, 21, 2, 'optionc'),
(20, 11, 22, 2, 'optiona'),
(20, 11, 25, 2, 'optionb'),
(20, 11, 26, 2, 'optionc'),
(20, 11, 27, 2, 'optione'),
(20, 11, 28, 2, 'optiona'),
(20, 11, 29, 2, 'optiond'),
(20, 11, 30, -0.66, 'optionb'),
(20, 11, 31, 2, 'optione'),
(20, 11, 32, -0.66, 'optione'),
(20, 11, 33, -0.66, 'optione'),
(20, 11, 34, -0.66, 'optiona'),
(20, 11, 35, 2, 'optiond'),
(20, 11, 36, 2, 'optione'),
(20, 11, 37, 2, 'optionb'),
(20, 11, 38, 2, 'optiona'),
(20, 11, 39, -0.66, 'optionb'),
(20, 11, 40, 2, 'optiond'),
(20, 11, 41, 2, 'optionc'),
(20, 11, 42, 2, 'optione'),
(20, 11, 43, -0.66, 'optionc'),
(20, 11, 45, 2, 'optiona'),
(20, 11, 46, 2, 'optiona'),
(20, 11, 48, 2, 'optiond'),
(20, 11, 49, 2, 'optiond'),
(20, 11, 50, -0.66, 'optionb'),
(20, 11, 51, 2, 'optiond'),
(20, 11, 52, 2, 'optionb'),
(20, 11, 53, 2, 'optionc'),
(20, 11, 54, -0.66, 'optiona'),
(20, 11, 55, -0.66, 'optionc'),
(20, 11, 56, 2, 'optione'),
(20, 11, 57, 2, 'optionc'),
(20, 11, 58, 2, 'optione'),
(20, 11, 59, -0.66, 'optionc'),
(20, 11, 60, -0.66, 'optione'),
(20, 12, 1, 2, 'optionc'),
(20, 12, 2, 2, 'optionc'),
(20, 12, 3, 2, 'optiond'),
(20, 12, 4, -0.66, 'optiona'),
(20, 12, 5, 2, 'optiona'),
(20, 12, 6, -0.66, 'optiona'),
(20, 12, 7, 2, 'optionb'),
(20, 12, 8, 2, 'optionb'),
(20, 12, 9, 2, 'optiona'),
(20, 12, 10, 2, 'optiond'),
(20, 12, 11, -0.66, 'optiond'),
(20, 12, 12, 2, 'optionb'),
(20, 12, 13, 2, 'optionb'),
(20, 12, 14, 2, 'optiona'),
(20, 12, 15, 2, 'optiond'),
(20, 12, 16, 2, 'optionc'),
(20, 12, 17, 2, 'optionc'),
(20, 12, 18, 2, 'optiond'),
(20, 12, 19, 2, 'optionb'),
(20, 12, 20, 2, 'optionb'),
(20, 12, 21, 2, 'optiona'),
(20, 12, 22, 2, 'optiond'),
(20, 12, 23, 2, 'optionb'),
(20, 12, 24, 2, 'optiona'),
(20, 12, 26, -0.66, 'optionc'),
(20, 12, 27, -0.66, 'optiond'),
(20, 12, 29, 2, 'optiona'),
(20, 12, 30, 2, 'optionb'),
(20, 12, 31, 2, 'optionc'),
(20, 12, 32, 2, 'optionc'),
(20, 12, 35, -0.66, 'optionc'),
(20, 12, 36, 2, 'optionc'),
(20, 12, 37, -0.66, 'optionb'),
(20, 12, 38, 2, 'optionc'),
(20, 12, 39, 2, 'optiona'),
(20, 12, 40, 2, 'optiona'),
(20, 12, 41, 2, 'optionb'),
(20, 12, 42, -0.66, 'optionb'),
(20, 12, 43, -0.66, 'optionc'),
(20, 12, 44, -0.66, 'optionc'),
(20, 12, 45, 2, 'optiond'),
(20, 12, 46, 2, 'optiond'),
(20, 12, 47, 2, 'optionc'),
(20, 12, 48, -0.66, 'optionc'),
(20, 12, 50, 2, 'optionb'),
(20, 12, 51, 2, 'optionc'),
(20, 12, 52, 2, 'optionb'),
(20, 12, 53, 2, 'optiona'),
(20, 12, 54, -0.66, 'optionb'),
(20, 13, 1, -0.66, 'optiond'),
(20, 13, 2, 2, 'optionb'),
(20, 13, 3, -0.66, 'optionb'),
(20, 13, 5, 2, 'optionc'),
(20, 13, 7, 2, 'optionb'),
(20, 13, 8, 2, 'optionc'),
(20, 13, 9, 2, 'optione'),
(20, 13, 10, 2, 'optione'),
(20, 13, 11, 2, 'optiond'),
(20, 13, 15, 2, 'optionc'),
(20, 13, 22, -0.66, 'optionb'),
(20, 13, 23, 2, 'optiona'),
(20, 13, 24, 2, 'optionc'),
(20, 13, 25, -0.66, 'optionc'),
(20, 13, 26, 2, 'optiond'),
(20, 13, 27, 2, 'optiond'),
(20, 13, 28, 2, 'optionc'),
(20, 13, 29, -0.66, 'optiona'),
(20, 13, 30, 2, 'optiona'),
(20, 13, 31, 2, 'optiond'),
(20, 13, 32, 2, 'optiona'),
(20, 13, 33, 2, 'optionb'),
(20, 13, 34, 2, 'optiona'),
(20, 13, 35, -0.66, 'optionb'),
(20, 13, 36, 2, 'optionc'),
(20, 13, 38, 2, 'optionb'),
(20, 13, 39, 2, 'optiona'),
(20, 13, 40, 2, 'optiond'),
(20, 15, 1, 1, 'optionc'),
(20, 15, 2, 1, 'optiond'),
(20, 15, 4, 1, 'optiona'),
(20, 15, 6, 1, 'optiona'),
(20, 15, 8, 1, 'optiona'),
(20, 15, 9, 1, 'optionb'),
(20, 15, 10, 1, 'optiona'),
(20, 15, 11, 1, 'optiond'),
(20, 15, 12, 1, 'optionc'),
(20, 15, 13, 1, 'optionb'),
(20, 15, 14, 1, 'optionc'),
(20, 15, 15, 1, 'optiond'),
(20, 15, 16, 1, 'optiond'),
(20, 15, 17, -0.33, 'optionc'),
(20, 15, 18, 1, 'optionb'),
(20, 15, 19, 1, 'optionc'),
(20, 15, 20, 1, 'optionb'),
(20, 15, 21, 1, 'optiona'),
(20, 15, 22, 1, 'optionb'),
(20, 15, 23, 1, 'optiona'),
(20, 15, 24, 1, 'optiona'),
(20, 15, 25, 1, 'optiond'),
(20, 15, 26, 2, 'optiona'),
(20, 15, 29, 2, 'optiond'),
(20, 15, 30, 2, 'optionb'),
(20, 15, 31, -0.66, 'optionb'),
(20, 15, 32, 2, 'optiona'),
(20, 15, 33, 2, 'optionc'),
(20, 15, 35, 2, 'optionc'),
(20, 15, 36, 2, 'optiond'),
(20, 15, 37, 2, 'optionb'),
(20, 15, 38, 2, 'optionc'),
(20, 15, 39, 2, 'optionb'),
(20, 15, 40, 2, 'optiond'),
(20, 15, 41, -0.66, 'optiona'),
(20, 15, 42, 2, 'optiona'),
(20, 15, 43, 2, 'optiona'),
(20, 15, 44, -0.66, 'optiona'),
(20, 15, 45, -0.66, 'optionc'),
(20, 15, 46, -0.66, 'optiond'),
(20, 15, 47, 2, 'optiond'),
(20, 15, 48, 2, 'optionc'),
(20, 15, 50, -0.66, 'optiona'),
(20, 15, 51, 2, 'optionb'),
(20, 15, 52, 2, 'optionc'),
(20, 15, 54, -0.66, 'optionb'),
(20, 15, 55, -0.66, 'optionc'),
(20, 15, 56, -0.33, 'optionb'),
(20, 15, 57, 1, 'optionb'),
(20, 15, 58, 1, 'optiond'),
(20, 15, 59, 1, 'optiond'),
(20, 15, 60, 1, 'optiona'),
(20, 15, 61, -0.66, 'optiona'),
(20, 15, 62, 2, 'optionb'),
(20, 15, 63, 2, 'optiond'),
(20, 15, 64, -0.66, 'optionc'),
(20, 16, 1, 1, 'optionc'),
(20, 16, 4, -0.33, 'optiona'),
(20, 16, 5, 1, 'optiond'),
(20, 16, 6, 1, 'optionb'),
(20, 16, 8, 1, 'optiona'),
(20, 16, 9, -0.33, 'optiond'),
(20, 16, 10, 1, 'optionc'),
(20, 16, 11, -0.33, 'optiona'),
(20, 16, 12, -0.33, 'optionc'),
(20, 16, 14, -0.33, 'optionb'),
(20, 16, 15, -0.33, 'optiond'),
(20, 16, 16, 1, 'optiond'),
(20, 16, 19, -0.33, 'optionb'),
(20, 16, 20, -0.33, 'optionb'),
(20, 16, 21, -0.33, 'optionb'),
(20, 16, 22, 1, 'optionb'),
(20, 16, 24, -0.33, 'optiond'),
(20, 16, 26, 2, 'optiona'),
(20, 16, 28, 2, 'optiond'),
(20, 16, 29, -0.66, 'optiona'),
(20, 16, 30, 2, 'optiond'),
(20, 16, 31, -0.66, 'optiona'),
(20, 16, 33, 2, 'optiond'),
(20, 16, 35, 2, 'optionb'),
(20, 16, 37, 2, 'optionb'),
(20, 16, 38, 2, 'optionb'),
(20, 16, 40, 2, 'optiona'),
(20, 16, 41, 2, 'optionc'),
(20, 16, 43, 2, 'optiona'),
(20, 16, 44, 2, 'optiond'),
(20, 16, 45, 2, 'optiona'),
(20, 16, 46, -0.66, 'optionb'),
(20, 16, 47, 2, 'optionc'),
(20, 16, 48, 2, 'optiona'),
(20, 16, 49, 2, 'optionc'),
(20, 16, 50, -0.66, 'optionb'),
(20, 16, 51, 2, 'optiona'),
(20, 16, 53, 2, 'optionb'),
(20, 16, 54, -0.66, 'optiond'),
(20, 16, 57, -0.33, 'optiona'),
(20, 16, 58, 1, 'optiona'),
(20, 16, 59, 1, 'optionc'),
(20, 16, 60, 1, 'optionc'),
(20, 16, 61, 2, 'optionb'),
(20, 16, 64, 2, 'optionb'),
(20, 17, 1, 1, 'optiona'),
(20, 17, 2, 1, 'optionb'),
(20, 17, 3, 1, 'optionb'),
(20, 17, 4, -0.33, 'optionb'),
(20, 17, 5, 1, 'optionc'),
(20, 17, 6, -0.33, 'optionb'),
(20, 17, 7, -0.33, 'optiona'),
(20, 17, 8, 1, 'optiona'),
(20, 17, 9, -0.33, 'optiona'),
(20, 17, 10, -0.33, 'optionb'),
(20, 17, 12, 1, 'optiona'),
(20, 17, 13, -0.33, 'optionc'),
(20, 17, 14, 1, 'optionc'),
(20, 17, 18, 1, 'optionb'),
(20, 17, 19, 1, 'optionb'),
(20, 17, 20, -0.33, 'optionb'),
(20, 17, 21, 1, 'optionc'),
(20, 17, 22, 1, 'optionb'),
(20, 17, 23, 1, 'optiond'),
(20, 17, 24, 1, 'optionb'),
(20, 17, 25, 1, 'optionb'),
(20, 17, 26, 2, 'optionc'),
(20, 17, 28, 2, 'optiond'),
(20, 17, 29, 2, 'optiond'),
(20, 17, 30, 2, 'optiona'),
(20, 17, 31, 2, 'optiond'),
(20, 17, 32, 2, 'optiona'),
(20, 17, 33, 2, 'optiona'),
(20, 17, 35, 2, 'optionb'),
(20, 17, 36, -0.66, 'optiona'),
(20, 17, 37, 2, 'optionc'),
(20, 17, 41, 2, 'optionc'),
(20, 17, 42, 2, 'optionb'),
(20, 17, 45, 2, 'optionb'),
(20, 17, 46, 2, 'optionb'),
(20, 17, 47, -0.66, 'optionb'),
(20, 17, 48, -0.66, 'optionc'),
(20, 17, 50, 2, 'optiond'),
(20, 17, 51, 2, 'optionc'),
(20, 17, 52, 2, 'optiond'),
(20, 17, 54, -0.66, 'optiona'),
(20, 17, 56, -0.33, 'optiond'),
(20, 17, 57, 1, 'optionb'),
(20, 17, 58, -0.33, 'optiond'),
(20, 17, 59, -0.33, 'optionc'),
(20, 17, 61, 2, 'optionb'),
(20, 18, 1, 1, 'optiona'),
(20, 18, 2, 1, 'optiond'),
(20, 18, 3, 1, 'optionb'),
(20, 18, 4, 1, 'optiona'),
(20, 18, 5, 1, 'optiond'),
(20, 18, 6, -0.33, 'optiona'),
(20, 18, 7, 1, 'optionb'),
(20, 18, 8, 1, 'optionb'),
(20, 18, 9, 1, 'optiond'),
(20, 18, 10, -0.33, 'optiond'),
(20, 18, 11, 1, 'optionb'),
(20, 18, 12, 1, 'optiona'),
(20, 18, 13, 1, 'optiond'),
(20, 18, 14, 1, 'optionc'),
(20, 18, 16, -0.33, 'optiona'),
(20, 18, 17, 1, 'optionb'),
(20, 18, 18, -0.33, 'optionb'),
(20, 18, 19, 1, 'optionc'),
(20, 18, 20, 1, 'optionb'),
(20, 18, 21, 1, 'optiond'),
(20, 18, 22, 1, 'optiond'),
(20, 18, 23, -0.33, 'optiona'),
(20, 18, 24, 1, 'optionc'),
(20, 18, 25, 1, 'optionc'),
(20, 18, 26, 2, 'optionb'),
(20, 18, 27, 2, 'optiond'),
(20, 18, 28, 2, 'optiona'),
(20, 18, 29, 2, 'optiond'),
(20, 18, 30, 2, 'optionc'),
(20, 18, 31, 2, 'optiona'),
(20, 18, 32, 2, 'optionb'),
(20, 18, 33, 2, 'optiond'),
(20, 18, 34, 2, 'optiona'),
(20, 18, 35, -0.66, 'optionc'),
(20, 18, 36, 2, 'optiona'),
(20, 18, 37, 2, 'optionc'),
(20, 18, 38, 2, 'optionb'),
(20, 18, 39, -0.66, 'optionc'),
(20, 18, 40, 2, 'optionb'),
(20, 18, 41, 2, 'optiond'),
(20, 18, 42, 2, 'optionb'),
(20, 18, 43, 2, 'optionb'),
(20, 18, 45, -0.66, 'optionc'),
(20, 18, 47, 2, 'optiond'),
(20, 18, 49, 2, 'optionc'),
(20, 18, 50, 2, 'optionc'),
(20, 18, 51, -0.66, 'optiond'),
(20, 18, 52, -0.66, 'optionc'),
(20, 18, 53, 2, 'optiona'),
(20, 18, 54, 2, 'optiona'),
(20, 18, 55, 2, 'optiond'),
(20, 18, 56, 1, 'optione'),
(20, 18, 57, 1, 'optionb'),
(20, 18, 58, 1, 'optionc'),
(20, 18, 59, 1, 'optionc'),
(20, 18, 60, 1, 'optiona'),
(20, 18, 61, 2, 'optionb'),
(20, 18, 62, 2, 'optiond'),
(20, 18, 64, 2, 'optionb'),
(20, 18, 65, 2, 'optiond'),
(22, 7, 1, 1, 'optionc'),
(22, 7, 2, -0.33, 'optionb'),
(22, 7, 3, -0.33, 'optiond'),
(22, 7, 4, 1, 'optiond'),
(22, 7, 5, -0.33, 'optionc'),
(22, 7, 6, 1, 'optionb'),
(22, 7, 7, -0.33, 'optiond'),
(22, 7, 10, 1, 'optionc'),
(22, 7, 11, 1, 'optiona'),
(22, 7, 12, -0.33, 'optiona'),
(22, 7, 14, 1, 'optionc'),
(22, 7, 15, 1, 'optionb'),
(22, 7, 16, -0.33, 'optionc'),
(22, 7, 17, 1, 'optionc'),
(22, 7, 18, 1, 'optiona'),
(22, 7, 19, 1, 'optiond'),
(22, 7, 20, 1, 'optiona'),
(22, 7, 23, -0.33, 'optionb'),
(22, 7, 24, 1, 'optiona'),
(22, 7, 25, -0.33, 'optionb'),
(22, 7, 28, 2, 'optiona'),
(22, 7, 29, 2, 'optiond'),
(22, 7, 30, -0.66, 'optiond'),
(22, 7, 31, 2, 'optiona'),
(22, 7, 33, 2, 'optiond'),
(22, 7, 35, 2, 'optionc'),
(22, 7, 36, 2, 'optionc'),
(22, 7, 38, 2, 'optiona'),
(22, 7, 39, -0.66, 'optiona'),
(22, 7, 40, 2, 'optionb'),
(22, 7, 41, 2, 'optionc'),
(22, 7, 42, -0.66, 'optiond'),
(22, 7, 43, 2, 'optionb'),
(22, 7, 44, 2, 'optionb'),
(22, 7, 45, 2, 'optiond'),
(22, 7, 49, -0.66, 'optiona'),
(22, 7, 51, 2, 'optionb'),
(22, 7, 52, 2, 'optiona'),
(22, 7, 54, 2, 'optiond'),
(22, 7, 55, 2, 'optionb'),
(22, 7, 56, 1, 'optiona'),
(22, 7, 58, -0.33, 'optionc'),
(22, 7, 59, 1, 'optiond'),
(22, 7, 60, 1, 'optionc'),
(22, 7, 61, -0.66, 'optionc'),
(22, 7, 63, -0.66, 'optiona'),
(22, 7, 64, 2, 'optionc'),
(22, 7, 65, -0.66, 'optiond'),
(22, 8, 1, 1, 'optione'),
(22, 8, 2, 1, 'optiona'),
(22, 8, 3, -0.33, 'optionc'),
(22, 8, 4, -0.33, 'optionb'),
(22, 8, 5, -0.33, 'optiond'),
(22, 8, 6, 1, 'optiond'),
(22, 8, 7, 1, 'optionb'),
(22, 8, 8, 1, 'optionb'),
(22, 8, 9, 1, 'optiond'),
(22, 8, 10, 1, 'optionc'),
(22, 8, 11, 1, 'optiond'),
(22, 8, 12, 1, 'optiona'),
(22, 8, 13, 1, 'optionb'),
(22, 8, 14, 1, 'optiona'),
(22, 8, 15, 1, 'optionc'),
(22, 8, 16, -0.33, 'optionb'),
(22, 8, 17, -0.33, 'optionb'),
(22, 8, 18, 1, 'optione'),
(22, 8, 19, -0.33, 'optionc'),
(22, 8, 20, -0.33, 'optionb'),
(22, 8, 21, -0.33, 'optionb'),
(22, 8, 22, -0.33, 'optionb'),
(22, 8, 23, 1, 'optiona'),
(22, 8, 24, 1, 'optiona'),
(22, 8, 25, 1, 'optiond'),
(22, 8, 26, 1, 'optiond'),
(22, 8, 27, 1, 'optiond'),
(22, 8, 28, -0.33, 'optiond'),
(22, 8, 29, 1, 'optionb'),
(22, 8, 30, 1, 'optionc'),
(22, 8, 31, 1, 'optionc'),
(22, 8, 32, 1, 'optionb'),
(22, 8, 33, 1, 'optiona'),
(22, 8, 34, 1, 'optiond'),
(22, 8, 35, 1, 'optionc'),
(22, 8, 36, 1, 'optionc'),
(22, 8, 37, 1, 'optiond'),
(22, 8, 38, -0.33, 'optionc'),
(22, 8, 39, 1, 'optiond'),
(22, 8, 40, -0.33, 'optiona'),
(22, 8, 41, 1, 'optiona'),
(22, 8, 42, 1, 'optiond'),
(22, 8, 43, 1, 'optionb'),
(22, 8, 44, -0.33, 'optiona'),
(22, 8, 45, -0.33, 'optiona'),
(22, 9, 2, 2, 'optionb'),
(22, 9, 3, -0.66, 'optionc'),
(22, 9, 4, 2, 'optiona'),
(22, 9, 5, 2, 'optiond'),
(22, 9, 10, 2, 'optionc'),
(22, 9, 12, -0.66, 'optionc'),
(22, 9, 14, -0.66, 'optiona'),
(22, 9, 16, -0.66, 'optiond'),
(22, 9, 17, 2, 'optionb'),
(22, 9, 18, 2, 'optionb'),
(22, 9, 24, 2, 'optionc'),
(22, 9, 26, 2, 'optionc'),
(22, 9, 28, -0.66, 'optionc'),
(22, 9, 30, 2, 'optionb'),
(22, 9, 32, 2, 'optionb'),
(22, 9, 47, -0.66, 'optionb'),
(22, 9, 50, 2, 'optionb'),
(22, 9, 52, 2, 'optionb'),
(22, 9, 53, -0.66, 'optionb'),
(22, 10, 1, -0.66, 'optionc'),
(22, 10, 2, 2, 'optionb'),
(22, 10, 3, 2, 'optiond'),
(22, 10, 4, 2, 'optionc'),
(22, 10, 5, -0.66, 'optionc'),
(22, 10, 6, 2, 'optionb'),
(22, 10, 8, -0.66, 'optiona'),
(22, 10, 9, -0.66, 'optiond'),
(22, 10, 10, 2, 'optiond'),
(22, 10, 11, 2, 'optionc'),
(22, 10, 12, 2, 'optionb'),
(22, 10, 15, 2, 'optiond'),
(22, 10, 16, 2, 'optiona'),
(22, 10, 17, 2, 'optionb'),
(22, 10, 19, 2, 'optiona'),
(22, 10, 21, 2, 'optionb'),
(22, 10, 22, 2, 'optionb'),
(22, 10, 23, -0.66, 'optionc'),
(22, 11, 1, 2, 'optionb'),
(22, 11, 2, 2, 'optionc'),
(22, 11, 3, 2, 'optiona'),
(22, 11, 4, 2, 'optiond'),
(22, 11, 5, 2, 'optionb'),
(22, 11, 6, 2, 'optionb'),
(22, 11, 7, 2, 'optionb'),
(22, 11, 8, 2, 'optiona'),
(22, 11, 9, 2, 'optionc'),
(22, 11, 10, -0.66, 'optionc'),
(22, 11, 11, 2, 'optiona'),
(22, 11, 12, 2, 'optiona'),
(22, 11, 15, 2, 'optionc'),
(22, 11, 17, 2, 'optiona'),
(22, 11, 18, -0.66, 'optiond'),
(22, 11, 21, 2, 'optionc'),
(22, 11, 22, 2, 'optiona'),
(22, 11, 23, -0.66, 'optiona'),
(22, 11, 24, -0.66, 'optionc'),
(22, 11, 25, -0.66, 'optionc'),
(22, 11, 26, 2, 'optionc'),
(22, 11, 27, 2, 'optione'),
(22, 11, 28, -0.66, 'optionc'),
(22, 11, 29, 2, 'optiond'),
(22, 11, 31, 2, 'optione'),
(22, 11, 32, 2, 'optionc'),
(22, 11, 33, 2, 'optiond'),
(22, 11, 34, 2, 'optiond'),
(22, 11, 35, 2, 'optiond'),
(22, 11, 36, 2, 'optione'),
(22, 11, 37, -0.66, 'optiond'),
(22, 11, 38, 2, 'optiona'),
(22, 11, 39, 2, 'optiona'),
(22, 11, 41, 2, 'optionc'),
(22, 11, 44, 2, 'optionb'),
(22, 11, 45, 2, 'optiona'),
(22, 11, 46, -0.66, 'optione'),
(22, 11, 47, 2, 'optione'),
(22, 11, 48, 2, 'optiond'),
(22, 11, 49, 2, 'optiond'),
(22, 11, 50, 2, 'optionc'),
(22, 11, 51, 2, 'optiond'),
(22, 11, 52, 2, 'optionb'),
(22, 11, 53, -0.66, 'optione'),
(22, 11, 54, -0.66, 'optione'),
(22, 11, 55, 2, 'optionb'),
(22, 11, 56, 2, 'optione'),
(22, 11, 57, 2, 'optionc'),
(22, 11, 58, 2, 'optione'),
(22, 11, 59, 2, 'optiona'),
(22, 11, 60, 2, 'optiond'),
(22, 12, 1, 2, 'optionc'),
(22, 12, 2, -0.66, 'optiond'),
(22, 12, 4, 2, 'optionc'),
(22, 12, 5, 2, 'optiona'),
(22, 12, 6, 2, 'optiond'),
(22, 12, 7, 2, 'optionb'),
(22, 12, 8, 2, 'optionb'),
(22, 12, 9, 2, 'optiona'),
(22, 12, 12, 2, 'optionb'),
(22, 12, 14, 2, 'optiona'),
(22, 12, 15, 2, 'optiond'),
(22, 12, 16, 2, 'optionc'),
(22, 12, 20, 2, 'optionb'),
(22, 12, 21, 2, 'optiona'),
(22, 12, 22, 2, 'optiond'),
(22, 12, 25, 2, 'optionc'),
(22, 12, 26, 2, 'optionb'),
(22, 12, 27, 2, 'optionc'),
(22, 12, 28, 2, 'optiond'),
(22, 12, 29, 2, 'optiona'),
(22, 12, 30, -0.66, 'optiond'),
(22, 12, 31, 2, 'optionc'),
(22, 12, 32, 2, 'optionc'),
(22, 12, 33, -0.66, 'optionb'),
(22, 12, 34, 2, 'optiond'),
(22, 12, 35, -0.66, 'optionc'),
(22, 12, 36, 2, 'optionc'),
(22, 12, 37, -0.66, 'optiond'),
(22, 12, 38, 2, 'optionc'),
(22, 12, 40, -0.66, 'optiond'),
(22, 12, 41, 2, 'optionb'),
(22, 12, 42, 2, 'optiona'),
(22, 12, 43, 2, 'optiond'),
(22, 12, 44, 2, 'optionb'),
(22, 12, 45, 2, 'optiond'),
(22, 12, 46, 2, 'optiond'),
(22, 12, 47, -0.66, 'optiond'),
(22, 12, 48, 2, 'optiona'),
(22, 12, 49, 2, 'optionc'),
(22, 12, 50, 2, 'optionb'),
(22, 12, 51, 2, 'optionc'),
(22, 12, 52, 2, 'optionb'),
(22, 12, 53, 2, 'optiona'),
(22, 12, 54, 2, 'optiona'),
(22, 13, 2, 2, 'optionb'),
(22, 13, 5, 2, 'optionc'),
(22, 13, 6, -0.66, 'optiona'),
(22, 13, 7, 2, 'optionb'),
(22, 13, 8, 2, 'optionc'),
(22, 13, 9, 2, 'optione'),
(22, 13, 11, 2, 'optiond'),
(22, 13, 12, 2, 'optiona'),
(22, 13, 13, 2, 'optiond'),
(22, 13, 14, 2, 'optionb'),
(22, 13, 15, -0.66, 'optiona'),
(22, 13, 18, -0.66, 'optionc'),
(22, 13, 19, 2, 'optionb'),
(22, 13, 20, 2, 'optiona'),
(22, 13, 21, -0.66, 'optiond'),
(22, 13, 22, -0.66, 'optionb'),
(22, 13, 23, 2, 'optiona'),
(22, 13, 24, 2, 'optionc'),
(22, 13, 25, 2, 'optiona'),
(22, 13, 26, 2, 'optiond'),
(22, 13, 27, 2, 'optiond'),
(22, 13, 28, 2, 'optionc'),
(22, 13, 29, 2, 'optionc'),
(22, 13, 30, 2, 'optiona'),
(22, 13, 31, -0.66, 'optionb'),
(22, 13, 33, 2, 'optionb'),
(22, 13, 35, 2, 'optionc'),
(22, 13, 36, 2, 'optionc'),
(22, 13, 37, -0.66, 'optionb'),
(22, 13, 38, 2, 'optionb'),
(22, 15, 2, 1, 'optiond'),
(22, 15, 3, 1, 'optionc'),
(22, 15, 4, 1, 'optiona'),
(22, 15, 6, 1, 'optiona'),
(22, 15, 7, -0.33, 'optionc'),
(22, 15, 9, 1, 'optionb'),
(22, 15, 10, 1, 'optiona'),
(22, 15, 11, 1, 'optiond'),
(22, 15, 12, 1, 'optionc'),
(22, 15, 13, 1, 'optionb'),
(22, 15, 14, 1, 'optionc'),
(22, 15, 15, 1, 'optiond'),
(22, 15, 16, 1, 'optiond'),
(22, 15, 17, 1, 'optionb'),
(22, 15, 18, 1, 'optionb'),
(22, 15, 19, 1, 'optionc'),
(22, 15, 20, 1, 'optionb'),
(22, 15, 21, 1, 'optiona'),
(22, 15, 22, 1, 'optionb'),
(22, 15, 23, 1, 'optiona'),
(22, 15, 24, 1, 'optiona'),
(22, 15, 25, 1, 'optiond'),
(22, 15, 26, 2, 'optiona'),
(22, 15, 27, 2, 'optiona'),
(22, 15, 29, 2, 'optiond'),
(22, 15, 30, 2, 'optionb'),
(22, 15, 31, 2, 'optiona'),
(22, 15, 33, -0.66, 'optiond'),
(22, 15, 35, 2, 'optionc'),
(22, 15, 36, 2, 'optiond'),
(22, 15, 37, -0.66, 'optionc'),
(22, 15, 38, 2, 'optionc'),
(22, 15, 39, 2, 'optionb'),
(22, 15, 40, 2, 'optiond'),
(22, 15, 41, 2, 'optionc'),
(22, 15, 42, 2, 'optiona'),
(22, 15, 43, 2, 'optiona'),
(22, 15, 44, -0.66, 'optionb'),
(22, 15, 47, 2, 'optiond'),
(22, 15, 48, 2, 'optionc'),
(22, 15, 49, 2, 'optionc'),
(22, 15, 52, 2, 'optionc'),
(22, 15, 53, 2, 'optionc'),
(22, 15, 54, 2, 'optionc'),
(22, 15, 55, -0.66, 'optiona'),
(22, 15, 56, 1, 'optionc'),
(22, 15, 58, 1, 'optiond'),
(22, 15, 59, 1, 'optiond'),
(22, 15, 60, 1, 'optiona'),
(22, 15, 61, 2, 'optionc'),
(22, 15, 62, 2, 'optionb'),
(22, 15, 65, -0.66, 'optionc'),
(22, 16, 1, 1, 'optionc'),
(22, 16, 3, -0.33, 'optionc'),
(22, 16, 6, 1, 'optionb'),
(22, 16, 8, 1, 'optiona'),
(22, 16, 9, 1, 'optionc'),
(22, 16, 10, 1, 'optionc'),
(22, 16, 11, -0.33, 'optionc'),
(22, 16, 12, -0.33, 'optionc'),
(22, 16, 13, 1, 'optionb'),
(22, 16, 14, 1, 'optiond'),
(22, 16, 15, -0.33, 'optiond'),
(22, 16, 16, 1, 'optiond'),
(22, 16, 19, 1, 'optiond'),
(22, 16, 20, 1, 'optiona'),
(22, 16, 21, 1, 'optiond'),
(22, 16, 22, 1, 'optionb'),
(22, 16, 23, -0.33, 'optionb'),
(22, 16, 24, -0.33, 'optiond'),
(22, 16, 25, 1, 'optionb'),
(22, 16, 26, 2, 'optiona'),
(22, 16, 28, -0.66, 'optionc'),
(22, 16, 29, -0.66, 'optionb'),
(22, 16, 30, -0.66, 'optionc'),
(22, 16, 35, 2, 'optionb'),
(22, 16, 36, -0.66, 'optiond'),
(22, 16, 37, 2, 'optionb'),
(22, 16, 40, 2, 'optiona'),
(22, 16, 43, 2, 'optiona'),
(22, 16, 44, 2, 'optiond'),
(22, 16, 45, 2, 'optiona'),
(22, 16, 46, 2, 'optionc'),
(22, 16, 47, 2, 'optionc'),
(22, 16, 50, 2, 'optiona'),
(22, 16, 51, 2, 'optiona'),
(22, 16, 52, 2, 'optiona'),
(22, 16, 53, 2, 'optionb'),
(22, 16, 54, -0.66, 'optiond'),
(22, 16, 55, 2, 'optiona'),
(22, 16, 56, 1, 'optiond'),
(22, 16, 57, -0.33, 'optiond'),
(22, 16, 58, -0.33, 'optionb'),
(22, 16, 59, 1, 'optionc'),
(22, 16, 60, 1, 'optionc'),
(22, 16, 61, 2, 'optionb'),
(22, 17, 1, 1, 'optiona'),
(22, 17, 2, 1, 'optionb'),
(22, 17, 3, 1, 'optionb'),
(22, 17, 4, -0.33, 'optionb'),
(22, 17, 5, 1, 'optionc'),
(22, 17, 6, 1, 'optiona'),
(22, 17, 7, 1, 'optionc'),
(22, 17, 8, -0.33, 'optiond'),
(22, 17, 10, -0.33, 'optionc'),
(22, 17, 11, 1, 'optiond'),
(22, 17, 12, 1, 'optiona'),
(22, 17, 13, 1, 'optionb'),
(22, 17, 14, 1, 'optionc'),
(22, 17, 15, 1, 'optionb'),
(22, 17, 16, -0.33, 'optionc'),
(22, 17, 17, 1, 'optiona'),
(22, 17, 18, 1, 'optionb'),
(22, 17, 19, 1, 'optionb'),
(22, 17, 22, 1, 'optionb'),
(22, 17, 23, 1, 'optiond'),
(22, 17, 24, 1, 'optionb'),
(22, 17, 25, 1, 'optionb'),
(22, 17, 26, 2, 'optionc'),
(22, 17, 28, -0.66, 'optiona'),
(22, 17, 29, 2, 'optiond'),
(22, 17, 30, 2, 'optiona'),
(22, 17, 31, 2, 'optiond'),
(22, 17, 33, 2, 'optiona'),
(22, 17, 35, 2, 'optionb'),
(22, 17, 38, -0.66, 'optiond'),
(22, 17, 39, 2, 'optionb'),
(22, 17, 40, 2, 'optionb'),
(22, 17, 41, -0.66, 'optiona'),
(22, 17, 45, 2, 'optionb'),
(22, 17, 46, -0.66, 'optionc'),
(22, 17, 47, -0.66, 'optionb'),
(22, 17, 48, 2, 'optiond'),
(22, 17, 50, 2, 'optiond'),
(22, 17, 51, 2, 'optionc'),
(22, 17, 52, 2, 'optiond'),
(22, 17, 54, 2, 'optiond'),
(22, 17, 55, 2, 'optiona'),
(22, 17, 56, -0.33, 'optionb'),
(22, 17, 57, -0.33, 'optionc'),
(22, 17, 58, -0.33, 'optionb'),
(22, 17, 59, 1, 'optiond'),
(22, 17, 61, -0.66, 'optiona'),
(22, 17, 63, -0.66, 'optionb'),
(22, 17, 65, -0.66, 'optionc'),
(22, 18, 2, 1, 'optiond'),
(22, 18, 3, 1, 'optionb'),
(22, 18, 4, 1, 'optiona'),
(22, 18, 6, 1, 'optionc'),
(22, 18, 7, 1, 'optionb'),
(22, 18, 8, -0.33, 'optiona'),
(22, 18, 9, 1, 'optiond'),
(22, 18, 11, 1, 'optionb'),
(22, 18, 12, -0.33, 'optionb'),
(22, 18, 13, 1, 'optiond'),
(22, 18, 16, 1, 'optionc'),
(22, 18, 18, 1, 'optiona'),
(22, 18, 19, 1, 'optionc'),
(22, 18, 20, -0.33, 'optionc'),
(22, 18, 21, 1, 'optiond'),
(22, 18, 22, 1, 'optiond'),
(22, 18, 24, 1, 'optionc'),
(22, 18, 25, 1, 'optionc'),
(22, 18, 26, 2, 'optionb'),
(22, 18, 27, -0.66, 'optionc'),
(22, 18, 28, 2, 'optiona'),
(22, 18, 29, 2, 'optiond'),
(22, 18, 30, 2, 'optionc'),
(22, 18, 31, 2, 'optiona'),
(22, 18, 32, 2, 'optionb'),
(22, 18, 33, 2, 'optiond'),
(22, 18, 34, 2, 'optiona'),
(22, 18, 35, -0.66, 'optionc'),
(22, 18, 36, 2, 'optiona'),
(22, 18, 38, 2, 'optionb'),
(22, 18, 39, 2, 'optiona'),
(22, 18, 42, 2, 'optionb'),
(22, 18, 43, -0.66, 'optiona'),
(22, 18, 45, -0.66, 'optionc'),
(22, 18, 47, 2, 'optiond'),
(22, 18, 48, 2, 'optionb'),
(22, 18, 49, 2, 'optionc'),
(22, 18, 50, 2, 'optionc'),
(22, 18, 51, -0.66, 'optiond'),
(22, 18, 52, -0.66, 'optionb'),
(22, 18, 53, -0.66, 'optiond'),
(22, 18, 54, 2, 'optiona'),
(22, 18, 55, -0.66, 'optionc'),
(22, 18, 56, 1, 'optione'),
(22, 18, 57, 1, 'optionb'),
(22, 18, 58, 1, 'optionc'),
(22, 18, 59, 1, 'optionc'),
(22, 18, 60, 1, 'optiona'),
(22, 18, 61, -0.66, 'optiona'),
(22, 18, 62, -0.66, 'optiona'),
(22, 18, 63, -0.66, 'optionc'),
(22, 18, 65, 2, 'optiond'),
(128, 4, 1, 1, 'optiona'),
(128, 4, 2, 1, 'optiond'),
(128, 4, 3, 1, 'optionc'),
(128, 4, 4, 1, 'optionc'),
(128, 4, 5, -0.33, 'optionc'),
(128, 4, 6, -0.33, 'optionc'),
(128, 4, 7, -0.33, 'optionb'),
(128, 4, 8, 1, 'optionb'),
(128, 4, 9, 1, 'optionb'),
(128, 4, 10, 1, 'optionc'),
(128, 4, 11, -0.33, 'optionb'),
(128, 4, 12, 1, 'optionc'),
(128, 4, 13, 1, 'optionb'),
(128, 4, 14, -0.33, 'optionc'),
(128, 4, 15, 1, 'optiona'),
(128, 4, 16, 1, 'optiona'),
(128, 4, 17, 1, 'optiond'),
(128, 4, 18, 1, 'optionc'),
(128, 4, 19, 1, 'optionb'),
(128, 4, 20, 1, 'optiona'),
(128, 4, 22, 2, 'optionc'),
(128, 4, 23, -0.66, ''),
(128, 4, 24, -0.66, 'optiond'),
(128, 4, 25, 2, 'optiona'),
(128, 4, 26, 2, 'optionc'),
(128, 4, 27, 2, 'optionc'),
(128, 4, 28, 2, 'optiond'),
(128, 4, 30, -0.66, 'optiona'),
(128, 4, 31, 2, 'optionc'),
(128, 4, 32, 2, 'optiond'),
(128, 4, 33, 2, 'optionc'),
(128, 4, 34, 2, 'optiona'),
(128, 4, 35, -0.66, 'optiona'),
(128, 4, 36, 2, 'optionc'),
(128, 4, 37, 2, 'optiond'),
(128, 4, 38, 2, 'optiond'),
(128, 4, 39, 2, 'optionb'),
(128, 4, 40, -0.66, 'optionc'),
(128, 4, 41, 4, 'optionc'),
(128, 4, 42, 4, 'optionc'),
(128, 4, 43, 4, 'optionc'),
(128, 4, 44, 4, 'optionb'),
(128, 4, 45, -1.33, 'optionc'),
(128, 4, 46, 4, ''),
(128, 4, 47, 4, 'optionc'),
(128, 4, 50, 4, 'optionc'),
(28, 4, 3, -0.33, 'optionb'),
(28, 4, 4, 1, 'optionc'),
(28, 4, 5, 1, 'optionb'),
(28, 4, 6, -0.33, 'optionc'),
(28, 4, 7, -0.33, 'optionb'),
(28, 4, 8, 1, 'optionb'),
(28, 4, 9, 1, 'optionb'),
(28, 4, 10, 1, 'optionc'),
(28, 4, 12, 1, 'optionc'),
(28, 4, 14, 1, 'optiond'),
(28, 4, 15, 1, 'optiona'),
(28, 4, 16, 1, 'optiona'),
(28, 4, 17, -0.33, 'optionc'),
(28, 4, 18, 1, 'optionc'),
(28, 4, 20, 1, 'optiona'),
(28, 4, 21, 2, 'optiond'),
(28, 4, 23, 2, 'optionb'),
(28, 4, 24, 2, 'optionc'),
(28, 4, 25, -0.66, 'optionb'),
(28, 4, 26, -0.66, 'optionb'),
(28, 4, 27, 2, 'optionc'),
(28, 4, 29, 2, 'optionb'),
(28, 4, 30, -0.66, 'optionb'),
(28, 4, 31, -0.66, 'optionb'),
(28, 4, 33, 2, 'optionc'),
(28, 4, 36, -0.66, 'optiona'),
(28, 4, 37, -0.66, 'optionb'),
(28, 4, 38, -0.66, 'optionc'),
(28, 4, 40, -0.66, 'optionb'),
(28, 4, 42, 4, 'optionc'),
(28, 4, 43, -1.33, 'optionb'),
(28, 4, 44, -1.33, 'optiond'),
(28, 4, 45, 4, 'optiond'),
(28, 4, 46, 4, ''),
(28, 4, 47, 4, 'optionc'),
(28, 4, 48, -1.33, 'optionc'),
(28, 4, 50, 4, 'optionc'),
(28, 7, 1, 1, 'optionc'),
(28, 7, 4, 1, 'optiond'),
(28, 7, 5, 1, 'optionb'),
(28, 7, 6, 1, 'optionb'),
(28, 7, 7, 1, 'optionb'),
(28, 7, 9, 1, 'optiona'),
(28, 7, 10, 1, 'optionc'),
(28, 7, 11, 1, 'optiona'),
(28, 7, 12, -0.33, 'optionc'),
(28, 7, 13, -0.33, 'optionb'),
(28, 7, 14, 1, 'optionc'),
(28, 7, 15, 1, 'optionb'),
(28, 7, 16, 1, 'optiona'),
(28, 7, 17, 1, 'optionc'),
(28, 7, 18, 1, 'optiona'),
(28, 7, 19, 1, 'optiond'),
(28, 7, 20, 1, 'optiona'),
(28, 7, 21, -0.33, 'optionc'),
(28, 7, 22, -0.33, 'optiona'),
(28, 7, 25, 1, 'optionc'),
(28, 7, 28, 2, 'optiona'),
(28, 7, 31, 2, 'optiona'),
(28, 7, 34, -0.66, 'optionc'),
(28, 7, 35, 2, 'optionc'),
(28, 7, 36, 2, 'optionc'),
(28, 7, 38, -0.66, 'optionb'),
(28, 7, 39, 2, 'optione'),
(28, 7, 40, 2, 'optionb'),
(28, 7, 41, 2, 'optionc'),
(28, 7, 43, 2, 'optionb'),
(28, 7, 44, 2, 'optionb'),
(28, 7, 45, 2, 'optiond'),
(28, 7, 47, 2, 'optionb'),
(28, 7, 50, 2, 'optionc'),
(28, 7, 51, 2, 'optionb'),
(28, 7, 54, 2, 'optiond'),
(28, 7, 55, -0.66, 'optionc'),
(28, 7, 56, 1, 'optiona'),
(28, 7, 57, -0.33, 'optionb'),
(28, 7, 58, 1, 'optionb'),
(28, 7, 59, 1, 'optiond'),
(28, 7, 60, -0.33, 'optiond'),
(28, 7, 61, -0.66, 'optiona'),
(28, 7, 63, 2, 'optiond'),
(28, 7, 64, 2, 'optionc'),
(28, 7, 65, 2, 'optionb'),
(28, 8, 1, 1, 'optione'),
(28, 8, 3, 1, 'optionb'),
(28, 8, 4, -0.33, 'optionb'),
(28, 8, 5, -0.33, 'optiona'),
(28, 8, 6, 1, 'optiond'),
(28, 8, 7, 1, 'optionb'),
(28, 8, 8, 1, 'optionb'),
(28, 8, 9, 1, 'optiond'),
(28, 8, 10, 1, 'optionc'),
(28, 8, 11, -0.33, 'optionc'),
(28, 8, 12, 1, 'optiona'),
(28, 8, 13, 1, 'optionb'),
(28, 8, 14, 1, 'optiona'),
(28, 8, 15, -0.33, 'optiond'),
(28, 8, 16, 1, 'optionc'),
(28, 8, 17, -0.33, 'optionb'),
(28, 8, 18, -0.33, 'optionb'),
(28, 8, 19, 1, 'optiona'),
(28, 8, 21, -0.33, 'optiond'),
(28, 8, 26, 1, 'optiond'),
(28, 8, 27, 1, 'optiond'),
(28, 8, 28, -0.33, 'optiond'),
(28, 8, 29, -0.33, 'optiona'),
(28, 8, 30, 1, 'optionc'),
(28, 8, 31, 1, 'optionc'),
(28, 8, 32, 1, 'optionb'),
(28, 8, 33, 1, 'optiona'),
(28, 8, 34, 1, 'optiond'),
(28, 8, 35, 1, 'optionc'),
(28, 8, 36, 1, 'optionc'),
(28, 8, 37, 1, 'optiond'),
(28, 8, 38, 1, 'optionb'),
(28, 8, 39, 1, 'optiond'),
(28, 8, 40, -0.33, 'optionb'),
(28, 8, 41, 1, 'optiona'),
(28, 8, 42, 1, 'optiond'),
(28, 8, 43, 1, 'optionb'),
(28, 8, 44, 1, 'optionb'),
(28, 8, 45, 1, 'optiond'),
(28, 9, 4, 2, 'optiona'),
(28, 9, 5, 2, 'optiond'),
(28, 9, 6, 2, 'optiond'),
(28, 9, 7, 2, 'optionc'),
(28, 9, 8, 2, 'optionb'),
(28, 9, 10, 2, 'optionc'),
(28, 9, 11, 2, 'optiona'),
(28, 9, 12, 2, 'optiona'),
(28, 9, 15, -0.66, 'optiond'),
(28, 9, 17, 2, 'optionb'),
(28, 9, 19, 2, 'optionc'),
(28, 9, 30, 2, 'optionb'),
(28, 9, 34, 2, 'optiond'),
(28, 9, 37, 2, 'optionb'),
(28, 9, 50, 2, 'optionb'),
(28, 9, 54, 2, 'optione'),
(28, 9, 55, 2, 'optionb'),
(28, 10, 1, -0.66, 'optionc'),
(28, 10, 2, -0.66, 'optiona'),
(28, 10, 3, 2, 'optiond'),
(28, 10, 5, 2, 'optionb'),
(28, 10, 6, 2, 'optionb'),
(28, 10, 8, 2, 'optione'),
(28, 10, 9, 2, 'optionc'),
(28, 10, 10, 2, 'optiond'),
(28, 10, 12, 2, 'optionb'),
(28, 10, 14, 2, 'optionb'),
(28, 10, 15, 2, 'optiond'),
(28, 10, 16, 2, 'optiona'),
(28, 10, 17, 2, 'optionb'),
(28, 10, 19, 2, 'optiona'),
(28, 10, 20, -0.66, 'optionb'),
(28, 10, 21, 2, 'optionb'),
(28, 10, 23, -0.66, 'optionc'),
(28, 10, 24, -0.66, 'optionc'),
(28, 11, 1, 2, 'optionb'),
(28, 11, 3, 2, 'optiona'),
(28, 11, 4, 2, 'optiond'),
(28, 11, 5, 2, 'optionb'),
(28, 11, 6, 2, 'optionb'),
(28, 11, 7, 2, 'optionb'),
(28, 11, 8, 2, 'optiona'),
(28, 11, 9, 2, 'optionc'),
(28, 11, 10, 2, 'optiona'),
(28, 11, 11, -0.66, 'optiond'),
(28, 11, 15, 2, 'optionc'),
(28, 11, 17, 2, 'optiona'),
(28, 11, 18, 2, 'optionb'),
(28, 11, 19, -0.66, 'optiona'),
(28, 11, 20, 2, 'optiona'),
(28, 11, 21, 2, 'optionc'),
(28, 11, 22, -0.66, 'optionb'),
(28, 11, 24, 2, 'optiona'),
(28, 11, 25, 2, 'optionb'),
(28, 11, 26, 2, 'optionc'),
(28, 11, 27, 2, 'optione'),
(28, 11, 29, 2, 'optiond'),
(28, 11, 31, -0.66, 'optionc'),
(28, 11, 32, 2, 'optionc'),
(28, 11, 33, -0.66, 'optione'),
(28, 11, 34, 2, 'optiond'),
(28, 11, 35, 2, 'optiond'),
(28, 11, 36, 2, 'optione'),
(28, 11, 37, 2, 'optionb'),
(28, 11, 38, 2, 'optiona'),
(28, 11, 39, 2, 'optiona'),
(28, 11, 40, -0.66, 'optionc'),
(28, 11, 41, 2, 'optionc'),
(28, 11, 42, -0.66, 'optiona'),
(28, 11, 43, 2, 'optiond'),
(28, 11, 46, -0.66, 'optione'),
(28, 11, 48, 2, 'optiond'),
(28, 11, 49, 2, 'optiond'),
(28, 11, 50, -0.66, 'optione'),
(28, 11, 51, -0.66, 'optionc'),
(28, 11, 52, -0.66, 'optiond'),
(28, 11, 53, 2, 'optionc'),
(28, 11, 54, 2, 'optionb'),
(28, 11, 56, 2, 'optione'),
(28, 11, 57, 2, 'optionc'),
(28, 11, 58, 2, 'optione'),
(28, 11, 60, 2, 'optiond'),
(28, 12, 1, 2, 'optionc'),
(28, 12, 2, 2, 'optionc'),
(28, 12, 4, 2, 'optionc'),
(28, 12, 5, -0.66, 'optionc'),
(28, 12, 6, -0.66, 'optiona'),
(28, 12, 7, -0.66, 'optiond'),
(28, 12, 8, 2, 'optionb'),
(28, 12, 9, 2, 'optiona'),
(28, 12, 12, -0.66, 'optiona'),
(28, 12, 13, 2, 'optionb'),
(28, 12, 14, -0.66, 'optionc'),
(28, 12, 15, 2, 'optiond'),
(28, 12, 16, 2, 'optionc'),
(28, 12, 17, -0.66, 'optionb'),
(28, 12, 18, 2, 'optiond'),
(28, 12, 19, 2, 'optionb'),
(28, 12, 20, 2, 'optionb'),
(28, 12, 21, 2, 'optiona'),
(28, 12, 22, 2, 'optiond'),
(28, 12, 26, 2, 'optionb'),
(28, 12, 27, -0.66, 'optionb'),
(28, 12, 28, 2, 'optiond'),
(28, 12, 29, 2, 'optiona'),
(28, 12, 30, 2, 'optionb'),
(28, 12, 31, -0.66, 'optiond'),
(28, 12, 32, 2, 'optionc'),
(28, 12, 34, 2, 'optiond'),
(28, 12, 35, -0.66, 'optionc'),
(28, 12, 36, -0.66, 'optiond'),
(28, 12, 37, -0.66, 'optionb'),
(28, 12, 38, 2, 'optionc'),
(28, 12, 40, 2, 'optiona'),
(28, 12, 41, 2, 'optionb'),
(28, 12, 43, -0.66, 'optionc'),
(28, 12, 44, -0.66, 'optionc'),
(28, 12, 45, -0.66, 'optionc'),
(28, 12, 46, 2, 'optiond'),
(28, 12, 47, -0.66, 'optiond'),
(28, 12, 48, 2, 'optiona'),
(28, 12, 50, 2, 'optionb'),
(28, 12, 51, 2, 'optionc'),
(28, 12, 52, 2, 'optionb'),
(28, 12, 53, 2, 'optiona'),
(28, 12, 54, 2, 'optiona'),
(28, 13, 1, -0.66, 'optiond'),
(28, 13, 2, -0.66, 'optiona'),
(28, 13, 8, 2, 'optionc'),
(28, 13, 12, 2, 'optiona'),
(28, 13, 13, -0.66, 'optiona'),
(28, 13, 15, 2, 'optionc'),
(28, 13, 17, -0.66, 'optiona'),
(28, 13, 20, -0.66, 'optionc'),
(28, 13, 22, 2, 'optiona'),
(28, 13, 23, 2, 'optiona'),
(28, 13, 24, -0.66, 'optionb'),
(28, 13, 25, 2, 'optiona'),
(28, 13, 26, 2, 'optiond'),
(28, 13, 27, -0.66, 'optione'),
(28, 13, 28, 2, 'optionc'),
(28, 13, 29, -0.66, 'optiond'),
(28, 13, 30, 2, 'optiona'),
(28, 13, 31, 2, 'optiond'),
(28, 13, 32, 2, 'optiona'),
(28, 13, 33, 2, 'optionb'),
(28, 13, 34, 2, 'optiona'),
(28, 13, 35, 2, 'optionc'),
(28, 13, 36, 2, 'optionc'),
(28, 13, 38, 2, 'optionb'),
(28, 13, 39, 2, 'optiona'),
(28, 13, 40, 2, 'optiond'),
(28, 15, 1, 1, 'optionc'),
(28, 15, 2, 1, 'optiond'),
(28, 15, 6, 1, 'optiona'),
(28, 15, 8, 1, 'optiona'),
(28, 15, 9, -0.33, 'optionc'),
(28, 15, 10, -0.33, 'optionc'),
(28, 15, 11, 1, 'optiond'),
(28, 15, 12, -0.33, 'optionb'),
(28, 15, 13, 1, 'optionb'),
(28, 15, 14, 1, 'optionc'),
(28, 15, 15, 1, 'optiond'),
(28, 15, 16, -0.33, 'optiona'),
(28, 15, 17, 1, 'optionb'),
(28, 15, 18, 1, 'optionb'),
(28, 15, 19, 1, 'optionc'),
(28, 15, 20, 1, 'optionb'),
(28, 15, 21, 1, 'optiona'),
(28, 15, 22, 1, 'optionb'),
(28, 15, 23, 1, 'optiona'),
(28, 15, 24, 1, 'optiona'),
(28, 15, 25, 1, 'optiond'),
(28, 15, 26, 2, 'optiona'),
(28, 15, 27, 2, 'optiona'),
(28, 15, 28, 2, 'optiond'),
(28, 15, 29, 2, 'optiond'),
(28, 15, 30, 2, 'optionb'),
(28, 15, 31, -0.66, 'optionb'),
(28, 15, 32, 2, 'optiona'),
(28, 15, 33, 2, 'optionc'),
(28, 15, 35, 2, 'optionc'),
(28, 15, 36, 2, 'optiond'),
(28, 15, 37, 2, 'optionb'),
(28, 15, 38, 2, 'optionc'),
(28, 15, 39, 2, 'optionb'),
(28, 15, 40, 2, 'optiond'),
(28, 15, 41, 2, 'optionc'),
(28, 15, 42, 2, 'optiona'),
(28, 15, 43, 2, 'optiona'),
(28, 15, 44, 2, 'optiond'),
(28, 15, 45, -0.66, 'optionb'),
(28, 15, 47, 2, 'optiond'),
(28, 15, 48, -0.66, 'optiond'),
(28, 15, 49, -0.66, 'optionb'),
(28, 15, 50, -0.66, 'optionc'),
(28, 15, 52, 2, 'optionc'),
(28, 15, 54, 2, 'optionc'),
(28, 15, 55, 2, 'optionb'),
(28, 15, 56, 1, 'optionc'),
(28, 15, 57, 1, 'optionb'),
(28, 15, 58, 1, 'optiond'),
(28, 15, 59, 1, 'optiond'),
(28, 15, 61, -0.66, 'optionb'),
(28, 15, 64, -0.66, 'optionb'),
(28, 16, 1, 1, 'optionc'),
(28, 16, 3, 1, 'optiond'),
(28, 16, 4, 1, 'optiond'),
(28, 16, 6, 1, 'optionb'),
(28, 16, 9, 1, 'optionc'),
(28, 16, 10, -0.33, 'optionb'),
(28, 16, 12, 1, 'optiond'),
(28, 16, 13, 1, 'optionb'),
(28, 16, 14, 1, 'optiond'),
(28, 16, 16, 1, 'optiond'),
(28, 16, 19, 1, 'optiond'),
(28, 16, 20, 1, 'optiona'),
(28, 16, 22, 1, 'optionb'),
(28, 16, 23, -0.33, 'optiona'),
(28, 16, 25, -0.33, 'optiond'),
(28, 16, 28, -0.66, 'optionc'),
(28, 16, 29, 2, 'optiond'),
(28, 16, 30, 2, 'optiond'),
(28, 16, 32, -0.66, 'optionb'),
(28, 16, 35, 2, 'optionb'),
(28, 16, 38, 2, 'optionb'),
(28, 16, 40, 2, 'optiona'),
(28, 16, 41, -0.66, 'optionb'),
(28, 16, 43, -0.66, 'optionc'),
(28, 16, 44, 2, 'optiond'),
(28, 16, 45, -0.66, 'optionc'),
(28, 16, 50, 2, 'optiona'),
(28, 16, 60, 1, 'optionc'),
(28, 16, 61, 2, 'optionb'),
(28, 16, 65, -0.66, 'optiond'),
(28, 17, 1, -0.33, 'optionb'),
(28, 17, 3, 1, 'optionb'),
(28, 17, 4, 1, 'optionc'),
(28, 17, 5, 1, 'optionc'),
(28, 17, 6, -0.33, 'optionc'),
(28, 17, 7, -0.33, 'optiond'),
(28, 17, 8, 1, 'optiona'),
(28, 17, 9, -0.33, 'optiona'),
(28, 17, 10, -0.33, 'optionb'),
(28, 17, 11, -0.33, 'optionc'),
(28, 17, 12, -0.33, 'optionc'),
(28, 17, 13, -0.33, 'optionc'),
(28, 17, 14, -0.33, 'optionb'),
(28, 17, 15, 1, 'optionb'),
(28, 17, 19, 1, 'optionb'),
(28, 17, 21, 1, 'optionc'),
(28, 17, 22, 1, 'optionb'),
(28, 17, 23, 1, 'optiond'),
(28, 17, 25, 1, 'optionb'),
(28, 17, 26, 2, 'optionc'),
(28, 17, 28, 2, 'optiond'),
(28, 17, 29, 2, 'optiond'),
(28, 17, 30, 2, 'optiona'),
(28, 17, 31, 2, 'optiond'),
(28, 17, 32, 2, 'optiona'),
(28, 17, 33, 2, 'optiona'),
(28, 17, 34, 2, 'optiond'),
(28, 17, 35, 2, 'optionb'),
(28, 17, 37, 2, 'optionc'),
(28, 17, 38, -0.66, 'optiona'),
(28, 17, 39, 2, 'optionb'),
(28, 17, 40, 2, 'optionb'),
(28, 17, 41, 2, 'optionc'),
(28, 17, 42, -0.66, 'optiona'),
(28, 17, 45, -0.66, 'optiona'),
(28, 17, 46, -0.66, 'optiona'),
(28, 17, 47, -0.66, 'optionb'),
(28, 17, 48, 2, 'optiond'),
(28, 17, 49, -0.66, 'optiond'),
(28, 17, 50, -0.66, 'optionc'),
(28, 17, 51, 2, 'optionc'),
(28, 17, 54, 2, 'optiond'),
(28, 17, 60, 1, 'optiond'),
(28, 18, 1, -0.33, 'optionb'),
(28, 18, 2, 1, 'optiond'),
(28, 18, 3, 1, 'optionb'),
(28, 18, 4, 1, 'optiona'),
(28, 18, 6, -0.33, 'optiona'),
(28, 18, 8, 1, 'optionb'),
(28, 18, 9, -0.33, 'optiona'),
(28, 18, 10, -0.33, 'optionc'),
(28, 18, 11, 1, 'optionb'),
(28, 18, 12, 1, 'optiona'),
(28, 18, 13, 1, 'optiond'),
(28, 18, 14, 1, 'optionc'),
(28, 18, 16, 1, 'optionc'),
(28, 18, 18, -0.33, 'optionb'),
(28, 18, 19, -0.33, 'optionb'),
(28, 18, 20, 1, 'optionb'),
(28, 18, 21, 1, 'optiond'),
(28, 18, 22, 1, 'optiond'),
(28, 18, 23, -0.33, 'optionb'),
(28, 18, 24, 1, 'optionc'),
(28, 18, 25, 1, 'optionc'),
(28, 18, 26, 2, 'optionb'),
(28, 18, 27, 2, 'optiond'),
(28, 18, 29, 2, 'optiond'),
(28, 18, 30, -0.66, 'optiona'),
(28, 18, 31, -0.66, 'optionc'),
(28, 18, 32, -0.66, 'optiond'),
(28, 18, 34, 2, 'optiona'),
(28, 18, 35, -0.66, 'optionb'),
(28, 18, 37, 2, 'optionc'),
(28, 18, 38, 2, 'optionb'),
(28, 18, 42, 2, 'optionb'),
(28, 18, 45, -0.66, 'optionc'),
(28, 18, 47, 2, 'optiond'),
(28, 18, 48, -0.66, 'optiona'),
(28, 18, 49, 2, 'optionc'),
(28, 18, 51, -0.66, 'optiond'),
(28, 18, 52, 2, 'optiona'),
(28, 18, 56, 1, 'optione'),
(28, 18, 60, 1, 'optiona'),
(28, 18, 61, 2, 'optionb'),
(33, 4, 1, 1, 'optiona'),
(33, 4, 2, -0.33, 'optionc'),
(33, 4, 3, -0.33, 'optionb'),
(33, 4, 4, 1, 'optionc'),
(33, 4, 5, 1, 'optionb'),
(33, 4, 6, -0.33, 'optionc'),
(33, 4, 7, -0.33, 'optionb'),
(33, 4, 8, 1, 'optionb'),
(33, 4, 9, 1, 'optionb'),
(33, 4, 10, 1, 'optionc'),
(33, 4, 12, 1, 'optionc'),
(33, 4, 15, 1, 'optiona'),
(33, 4, 16, 1, 'optiona'),
(33, 4, 17, 1, 'optiond'),
(33, 4, 18, -0.33, 'optiona'),
(33, 4, 19, -0.33, 'optionc'),
(33, 4, 20, -0.33, 'optionc'),
(33, 4, 21, 2, 'optiond'),
(33, 4, 23, 2, 'optionb'),
(33, 4, 24, 2, 'optionc'),
(33, 4, 25, -0.66, 'optionb'),
(33, 4, 26, -0.66, 'optionb'),
(33, 4, 27, 2, 'optionc'),
(33, 4, 29, 2, 'optionb'),
(33, 4, 30, -0.66, 'optionb'),
(33, 4, 33, 2, 'optionc'),
(33, 4, 34, 2, 'optiona'),
(33, 4, 35, 2, 'optionc'),
(33, 4, 36, 2, 'optionc'),
(33, 4, 37, 2, 'optiond'),
(33, 4, 38, 2, 'optiond'),
(33, 4, 39, 2, 'optionb'),
(33, 4, 41, 4, 'optionc'),
(33, 4, 42, 4, 'optionc'),
(33, 4, 43, 4, 'optionc'),
(33, 4, 44, 4, 'optionb'),
(33, 4, 45, 4, 'optiond'),
(33, 4, 46, 4, ''),
(33, 4, 50, 4, 'optionc'),
(33, 7, 2, 1, 'optiond'),
(33, 7, 3, 1, 'optionb'),
(33, 7, 4, -0.33, 'optionc'),
(33, 7, 5, -0.33, 'optionb'),
(33, 7, 6, -0.33, 'optiona'),
(33, 7, 7, -0.33, 'optionc'),
(33, 7, 9, 1, 'optiona'),
(33, 7, 10, -0.33, 'optionb'),
(33, 15, 1, 1, 'optionc'),
(33, 15, 2, 1, 'optiond'),
(33, 15, 4, 1, 'optiona'),
(33, 15, 5, 1, 'optionb'),
(33, 15, 6, 1, 'optiona'),
(33, 15, 8, -0.33, 'optiond'),
(33, 15, 9, 1, 'optionb'),
(33, 15, 10, 1, 'optiona'),
(33, 15, 13, 1, 'optionb'),
(33, 15, 14, 1, 'optionc'),
(33, 15, 15, 1, 'optiond'),
(33, 15, 16, 1, 'optiond'),
(33, 15, 18, -0.33, 'optionc'),
(33, 15, 19, 1, 'optionc'),
(33, 15, 21, 1, 'optiona'),
(33, 15, 22, 1, 'optionb'),
(33, 15, 24, 1, 'optiona'),
(33, 15, 25, 1, 'optiond'),
(33, 15, 26, 2, 'optiona'),
(33, 15, 28, 2, 'optiond'),
(33, 15, 29, 2, 'optiond'),
(33, 15, 30, 2, 'optionb'),
(33, 15, 31, -0.66, 'optiond'),
(33, 15, 33, -0.66, 'optiond'),
(33, 15, 36, -0.66, 'optionb'),
(33, 15, 37, -0.66, 'optiond'),
(33, 15, 38, 2, 'optionc'),
(33, 15, 39, -0.66, 'optiona'),
(33, 15, 41, -0.66, 'optiond'),
(33, 15, 42, 2, 'optiona'),
(33, 15, 43, 2, 'optiona'),
(33, 15, 44, -0.66, 'optionc'),
(33, 15, 45, -0.66, 'optiond'),
(33, 15, 48, 2, 'optionc'),
(33, 15, 49, -0.66, 'optiona'),
(33, 15, 50, 2, 'optiond'),
(33, 15, 51, 2, 'optionb'),
(33, 15, 52, 2, 'optionc'),
(33, 15, 56, -0.33, 'optionb'),
(33, 15, 57, -0.33, 'optiona'),
(33, 15, 58, 1, 'optiond'),
(33, 15, 59, 1, 'optiond'),
(33, 15, 60, -0.33, 'optionc'),
(33, 15, 62, -0.66, 'optionc'),
(33, 15, 64, 2, 'optiond'),
(33, 16, 1, 1, 'optionc'),
(33, 16, 3, 1, 'optiond'),
(33, 16, 4, -0.33, 'optionb'),
(33, 16, 6, 1, 'optionb'),
(33, 16, 9, 1, 'optionc'),
(33, 16, 10, 1, 'optionc'),
(33, 16, 13, 1, 'optionb'),
(33, 16, 15, -0.33, 'optiond'),
(33, 16, 16, 1, 'optiond'),
(33, 16, 19, 1, 'optiond'),
(33, 16, 20, 1, 'optiona'),
(33, 16, 21, 1, 'optiond'),
(33, 16, 22, -0.33, 'optiond'),
(33, 16, 28, -0.66, 'optionc'),
(33, 16, 29, 2, 'optiond'),
(33, 16, 30, 2, 'optiond'),
(33, 16, 37, 2, 'optionb'),
(33, 16, 38, 2, 'optionb'),
(33, 16, 39, -0.66, 'optiond'),
(33, 16, 40, 2, 'optiona'),
(33, 16, 43, 2, 'optiona'),
(33, 16, 44, -0.66, 'optiona'),
(33, 16, 45, 2, 'optiona'),
(33, 16, 46, 2, 'optionc'),
(33, 16, 47, 2, 'optionc'),
(33, 16, 48, 2, 'optiona'),
(33, 16, 50, -0.66, 'optionc'),
(33, 16, 56, 1, 'optiond'),
(33, 16, 57, 1, 'optionc'),
(33, 16, 59, -0.33, 'optiond'),
(33, 16, 60, -0.33, 'optionc'),
(33, 16, 61, 2, 'optionb'),
(33, 16, 62, 2, 'optiond'),
(33, 16, 64, -0.66, 'optiona'),
(33, 17, 2, 1, 'optionb'),
(33, 17, 3, 1, 'optionb'),
(33, 17, 5, 1, 'optionc'),
(33, 17, 6, -0.33, 'optionb'),
(33, 17, 8, -0.33, 'optionc'),
(33, 17, 9, 1, 'optionb'),
(33, 17, 10, -0.33, 'optionb'),
(33, 17, 11, -0.33, 'optiona'),
(33, 17, 13, -0.33, 'optiona'),
(33, 17, 14, -0.33, 'optionb'),
(33, 17, 16, -0.33, 'optiona'),
(33, 17, 18, -0.33, 'optiona'),
(33, 17, 19, 1, 'optionb'),
(33, 17, 20, -0.33, 'optionb'),
(33, 17, 21, -0.33, 'optiona'),
(33, 17, 23, 1, 'optiond'),
(33, 17, 25, 1, 'optionb'),
(33, 17, 26, 2, 'optionc'),
(33, 17, 28, 2, 'optiond'),
(33, 17, 30, 2, 'optiona'),
(33, 17, 31, 2, 'optiond'),
(33, 17, 33, 2, 'optiona'),
(33, 17, 35, -0.66, 'optionc'),
(33, 17, 38, -0.66, 'optiona'),
(33, 17, 44, -0.66, 'optiona'),
(33, 17, 45, -0.66, 'optiona'),
(33, 17, 46, 2, 'optionb'),
(33, 17, 50, 2, 'optiond'),
(33, 17, 52, 2, 'optiond'),
(33, 17, 56, 1, 'optiona'),
(33, 17, 57, -0.33, 'optiona'),
(33, 17, 58, 1, 'optionc'),
(33, 17, 60, 1, 'optiond'),
(33, 17, 61, 2, 'optionb'),
(33, 17, 62, -0.66, 'optiond'),
(33, 17, 63, -0.66, 'optionb'),
(33, 17, 65, -0.66, 'optionb'),
(33, 18, 2, 1, 'optiond'),
(33, 18, 3, -0.33, 'optiond'),
(33, 18, 4, 1, 'optiona'),
(33, 18, 6, -0.33, 'optionb'),
(33, 18, 7, 1, 'optionb'),
(33, 18, 8, -0.33, 'optionc'),
(33, 18, 9, -0.33, 'optiona'),
(33, 18, 11, 1, 'optionb'),
(33, 18, 12, 1, 'optiona'),
(33, 18, 14, 1, 'optionc'),
(33, 18, 15, -0.33, 'optiona'),
(33, 18, 16, -0.33, 'optiona'),
(33, 18, 17, 1, 'optionb'),
(33, 18, 18, 1, 'optiona'),
(33, 18, 19, -0.33, 'optiona'),
(33, 18, 21, -0.33, 'optiona'),
(33, 18, 22, 1, 'optiond'),
(33, 18, 23, -0.33, 'optionc'),
(33, 18, 24, 1, 'optionc'),
(33, 18, 26, -0.66, 'optionc'),
(33, 18, 32, -0.66, 'optiona'),
(33, 18, 33, 2, 'optiond'),
(33, 18, 34, 2, 'optiona'),
(33, 18, 37, -0.66, 'optionb'),
(33, 18, 38, 2, 'optionb'),
(33, 18, 42, -0.66, 'optiond'),
(33, 18, 47, -0.66, 'optiona'),
(33, 18, 48, -0.66, 'optionc'),
(33, 18, 49, 2, 'optionc'),
(33, 18, 50, -0.66, 'optiona'),
(33, 18, 51, -0.66, 'optionb'),
(33, 18, 54, 2, 'optiona'),
(33, 18, 56, 1, 'optione'),
(33, 18, 57, -0.33, 'optiond'),
(33, 18, 58, -0.33, 'optionb'),
(33, 18, 59, -0.33, 'optiond'),
(33, 18, 61, 2, 'optionb'),
(33, 18, 63, -0.66, 'optionb'),
(33, 18, 65, 2, 'optiond'),
(36, 4, 1, 1, 'optiona'),
(36, 4, 2, 1, 'optiond'),
(36, 4, 3, 1, 'optionc'),
(36, 4, 4, 1, 'optionc'),
(36, 4, 5, 1, 'optionb'),
(36, 4, 6, -0.33, 'optionc'),
(36, 4, 7, -0.33, 'optionb'),
(36, 4, 9, 1, 'optionb'),
(36, 4, 10, 1, 'optionc'),
(36, 4, 12, 1, 'optionc'),
(36, 4, 13, 1, 'optionb'),
(36, 4, 14, 1, 'optiond'),
(36, 4, 15, 1, 'optiona'),
(36, 4, 16, 1, 'optiona'),
(36, 4, 17, 1, 'optiond'),
(36, 4, 18, 1, 'optionc'),
(36, 4, 19, 1, 'optionb'),
(36, 4, 20, -0.33, 'optionb'),
(36, 4, 21, 2, 'optiond'),
(36, 4, 22, 2, 'optionc'),
(36, 4, 23, 2, 'optionb'),
(36, 4, 24, 2, 'optionc'),
(36, 4, 25, -0.66, 'optionc'),
(36, 7, 1, 1, 'optionc'),
(36, 7, 2, 1, 'optiond'),
(36, 7, 3, -0.33, 'optiond'),
(36, 7, 4, 1, 'optiond'),
(36, 7, 5, -0.33, 'optionc'),
(36, 7, 6, 1, 'optionb'),
(36, 7, 7, 1, 'optionb'),
(36, 7, 10, 1, 'optionc'),
(36, 7, 11, 1, 'optiona'),
(36, 7, 12, -0.33, 'optiond'),
(36, 7, 13, 1, 'optionc'),
(36, 7, 14, 1, 'optionc'),
(36, 7, 15, 1, 'optionb'),
(36, 7, 16, 1, 'optiona'),
(36, 7, 17, 1, 'optionc'),
(36, 7, 18, 1, 'optiona'),
(36, 7, 19, 1, 'optiond'),
(36, 7, 20, 1, 'optiona'),
(36, 7, 21, 1, 'optiond'),
(36, 7, 22, 1, 'optiond'),
(36, 7, 23, 1, 'optiond'),
(36, 7, 24, 1, 'optiona'),
(36, 7, 25, 1, 'optionc'),
(36, 7, 26, 2, 'optiona'),
(36, 7, 27, -0.66, 'optiond'),
(36, 7, 28, 2, 'optiona'),
(36, 7, 31, 2, 'optiona'),
(36, 7, 32, 2, 'optiona'),
(36, 7, 33, 2, 'optiond'),
(36, 7, 35, -0.66, 'optione'),
(36, 7, 36, 2, 'optionc'),
(36, 7, 37, -0.66, 'optionc'),
(36, 7, 38, -0.66, 'optionb'),
(36, 7, 39, 2, 'optione'),
(36, 7, 40, 2, 'optionb'),
(36, 7, 41, 2, 'optionc'),
(36, 7, 42, -0.66, 'optiond'),
(36, 7, 43, 2, 'optionb'),
(36, 7, 44, 2, 'optionb'),
(36, 7, 45, 2, 'optiond'),
(36, 7, 47, 2, 'optionb'),
(36, 7, 48, 2, 'optionb'),
(36, 7, 49, -0.66, 'optiona'),
(36, 7, 50, 2, 'optionc'),
(36, 7, 51, -0.66, 'optiona'),
(36, 7, 52, 2, 'optiona'),
(36, 7, 53, 2, 'optionb'),
(36, 7, 54, 2, 'optiond'),
(36, 7, 55, -0.66, 'optiond'),
(36, 7, 56, -0.33, 'optiona'),
(36, 7, 57, 1, 'optionc'),
(36, 7, 58, 1, 'optionb'),
(36, 7, 59, 1, 'optiond'),
(36, 7, 61, -0.66, 'optiond'),
(36, 7, 62, 2, 'optionc'),
(36, 7, 63, 2, 'optiond'),
(36, 7, 64, 2, 'optionc'),
(36, 8, 1, 1, 'optione'),
(36, 8, 2, 1, 'optiona'),
(36, 8, 3, -0.33, 'optionc'),
(36, 8, 4, -0.33, 'optionb'),
(36, 8, 5, 1, 'optionc'),
(36, 8, 6, 1, 'optiond'),
(36, 8, 7, 1, 'optionb'),
(36, 8, 8, 1, 'optionb'),
(36, 8, 9, 1, 'optiond'),
(36, 8, 10, 1, 'optionc'),
(36, 8, 11, 1, 'optiond'),
(36, 8, 12, 1, 'optiona'),
(36, 8, 13, 1, 'optionb'),
(36, 8, 14, 1, 'optiona'),
(36, 8, 15, 1, 'optionc'),
(36, 8, 16, 1, 'optionc'),
(36, 8, 17, 1, 'optione'),
(36, 8, 18, 1, 'optione'),
(36, 8, 19, 1, 'optiona'),
(36, 8, 20, 1, 'optione'),
(36, 8, 21, -0.33, 'optiond'),
(36, 8, 22, -0.33, 'optiond'),
(36, 8, 23, 1, 'optiona'),
(36, 8, 24, 1, 'optiona'),
(36, 8, 25, 1, 'optiond'),
(36, 8, 26, 1, 'optiond'),
(36, 8, 27, 1, 'optiond'),
(36, 8, 29, 1, 'optionb'),
(36, 8, 30, 1, 'optionc'),
(36, 8, 31, 1, 'optionc'),
(36, 8, 32, 1, 'optionb'),
(36, 8, 33, 1, 'optiona'),
(36, 8, 34, 1, 'optiond'),
(36, 8, 35, 1, 'optionc'),
(36, 8, 36, 1, 'optionc'),
(36, 8, 37, 1, 'optiond'),
(36, 8, 38, 1, 'optionb'),
(36, 8, 39, 1, 'optiond'),
(36, 8, 40, -0.33, 'optiona'),
(36, 8, 41, 1, 'optiona'),
(36, 8, 42, 1, 'optiond'),
(36, 8, 43, -0.33, 'optiona'),
(36, 8, 44, 1, 'optionb'),
(36, 8, 45, 1, 'optiond'),
(36, 9, 1, 2, 'optionc'),
(36, 9, 2, 2, 'optionb'),
(36, 9, 5, 2, 'optiond'),
(36, 9, 6, 2, 'optiond'),
(36, 9, 7, 2, 'optionc'),
(36, 9, 8, -0.66, 'optionc'),
(36, 9, 9, 2, 'optionb'),
(36, 9, 10, 2, 'optionc'),
(36, 9, 11, 2, 'optiona'),
(36, 9, 12, -0.66, 'optionc'),
(36, 9, 14, 2, 'optionb'),
(36, 9, 16, -0.66, 'optiond'),
(36, 9, 17, 2, 'optionb'),
(36, 9, 19, 2, 'optionc'),
(36, 9, 21, 2, 'optionc'),
(36, 9, 23, 2, 'optionc'),
(36, 9, 24, 2, 'optionc'),
(36, 9, 25, 2, 'optiond'),
(36, 9, 26, 2, 'optionc'),
(36, 9, 28, 2, 'optionb'),
(36, 9, 29, 2, 'optionc'),
(36, 9, 30, 2, 'optionb'),
(36, 9, 31, -0.66, 'optiond'),
(36, 9, 34, 2, 'optiond'),
(36, 9, 35, 2, 'optionb'),
(36, 9, 36, -0.66, 'optiond'),
(36, 9, 37, 2, 'optionb'),
(36, 9, 39, 2, 'optiond'),
(36, 10, 1, 2, 'optione'),
(36, 10, 2, 2, 'optionb'),
(36, 10, 3, 2, 'optiond'),
(36, 10, 5, 2, 'optionb'),
(36, 10, 6, 2, 'optionb'),
(36, 10, 7, -0.66, 'optiond'),
(36, 10, 8, -0.66, 'optiond'),
(36, 10, 9, 2, 'optionc'),
(36, 10, 10, 2, 'optiond'),
(36, 10, 11, 2, 'optionc'),
(36, 10, 12, 2, 'optionb'),
(36, 10, 13, 2, 'optionc'),
(36, 10, 14, 2, 'optionb'),
(36, 10, 15, 2, 'optiond'),
(36, 10, 16, 2, 'optiona'),
(36, 10, 17, 2, 'optionb'),
(36, 10, 18, 2, 'optiona'),
(36, 10, 19, 2, 'optiona'),
(36, 10, 20, -0.66, 'optionb'),
(36, 10, 21, 2, 'optionb'),
(36, 10, 22, 2, 'optionb'),
(36, 10, 23, -0.66, 'optionc'),
(36, 10, 24, -0.66, 'optionc'),
(36, 11, 1, 2, 'optionb'),
(36, 11, 2, 2, 'optionc'),
(36, 11, 3, 2, 'optiona'),
(36, 11, 4, 2, 'optiond'),
(36, 11, 5, 2, 'optionb'),
(36, 11, 6, 2, 'optionb'),
(36, 11, 7, 2, 'optionb'),
(36, 11, 8, 2, 'optiona'),
(36, 11, 9, 2, 'optionc'),
(36, 11, 10, 2, 'optiona'),
(36, 11, 11, 2, 'optiona'),
(36, 11, 12, 2, 'optiona'),
(36, 11, 13, 2, 'optionb'),
(36, 11, 14, -0.66, 'optiond'),
(36, 11, 15, 2, 'optionc'),
(36, 11, 17, 2, 'optiona'),
(36, 11, 18, 2, 'optionb'),
(36, 11, 19, 2, 'optionb'),
(36, 11, 20, -0.66, 'optionc'),
(36, 11, 21, 2, 'optionc'),
(36, 11, 22, 2, 'optiona'),
(36, 11, 23, 2, 'optionc'),
(36, 11, 24, 2, 'optiona'),
(36, 11, 25, 2, 'optionb'),
(36, 11, 26, -0.66, 'optiond'),
(36, 11, 27, 2, 'optione'),
(36, 11, 28, 2, 'optiona'),
(36, 11, 29, 2, 'optiond'),
(36, 11, 30, -0.66, 'optiona'),
(36, 11, 32, 2, 'optionc'),
(36, 11, 33, -0.66, 'optione'),
(36, 11, 34, 2, 'optiond'),
(36, 11, 35, 2, 'optiond'),
(36, 11, 36, 2, 'optione'),
(36, 11, 37, 2, 'optionb'),
(36, 11, 38, 2, 'optiona'),
(36, 11, 40, 2, 'optiond'),
(36, 11, 41, 2, 'optionc'),
(36, 11, 42, 2, 'optione'),
(36, 11, 43, 2, 'optiond'),
(36, 11, 46, 2, 'optiona'),
(36, 11, 47, -0.66, 'optiona'),
(36, 11, 48, 2, 'optiond'),
(36, 12, 1, 2, 'optionc'),
(36, 12, 2, 2, 'optionc'),
(36, 12, 3, 2, 'optiond'),
(36, 12, 4, 2, 'optionc'),
(36, 12, 6, -0.66, 'optiona'),
(36, 12, 7, 2, 'optionb'),
(36, 12, 8, -0.66, 'optiona'),
(36, 12, 9, 2, 'optiona'),
(36, 12, 10, 2, 'optiond'),
(36, 12, 11, 2, 'optionb'),
(36, 12, 12, 2, 'optionb'),
(36, 12, 13, 2, 'optionb'),
(36, 12, 14, 2, 'optiona'),
(36, 12, 15, 2, 'optiond'),
(36, 12, 16, 2, 'optionc'),
(36, 12, 17, 2, 'optionc'),
(36, 12, 18, 2, 'optiond'),
(36, 12, 19, 2, 'optionb'),
(36, 12, 20, 2, 'optionb'),
(36, 12, 21, 2, 'optiona'),
(36, 12, 22, 2, 'optiond'),
(36, 12, 23, 2, 'optionb'),
(36, 12, 24, 2, 'optiona'),
(36, 12, 25, 2, 'optionc'),
(36, 12, 26, 2, 'optionb'),
(36, 12, 27, -0.66, 'optionb'),
(36, 12, 28, -0.66, 'optionb'),
(36, 12, 29, -0.66, 'optiond'),
(36, 12, 30, 2, 'optionb'),
(36, 12, 31, 2, 'optionc'),
(36, 12, 32, 2, 'optionc'),
(36, 12, 34, 2, 'optiond'),
(36, 12, 35, -0.66, 'optionb'),
(36, 12, 36, -0.66, 'optiona'),
(36, 12, 37, -0.66, 'optiond'),
(36, 12, 38, 2, 'optionc'),
(36, 12, 40, 2, 'optiona'),
(36, 12, 41, 2, 'optionb'),
(36, 12, 42, 2, 'optiona'),
(36, 12, 43, -0.66, 'optionc');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(36, 12, 44, 2, 'optionb'),
(36, 12, 45, 2, 'optiond'),
(36, 12, 46, 2, 'optiond'),
(36, 12, 47, 2, 'optionc'),
(36, 12, 48, -0.66, 'optionc'),
(36, 12, 49, -0.66, 'optiona'),
(36, 12, 50, 2, 'optionb'),
(36, 12, 51, 2, 'optionc'),
(36, 12, 52, 2, 'optionb'),
(36, 12, 53, 2, 'optiona'),
(36, 12, 54, 2, 'optiona'),
(36, 13, 1, -0.66, 'optiond'),
(36, 13, 2, 2, 'optionb'),
(36, 13, 3, -0.66, 'optionb'),
(36, 13, 5, -0.66, 'optiond'),
(36, 13, 6, -0.66, 'optiona'),
(36, 13, 7, 2, 'optionb'),
(36, 13, 8, 2, 'optionc'),
(36, 13, 9, 2, 'optione'),
(36, 13, 10, 2, 'optione'),
(36, 13, 11, 2, 'optiond'),
(36, 13, 12, -0.66, 'optionb'),
(36, 13, 13, -0.66, 'optiona'),
(36, 13, 14, -0.66, 'optionc'),
(36, 13, 15, 2, 'optionc'),
(36, 13, 18, 2, 'optiona'),
(36, 13, 19, 2, 'optionb'),
(36, 13, 20, 2, 'optiona'),
(36, 13, 21, -0.66, 'optiond'),
(36, 13, 22, 2, 'optiona'),
(36, 13, 23, 2, 'optiona'),
(36, 13, 24, -0.66, 'optiond'),
(36, 13, 25, 2, 'optiona'),
(36, 13, 26, 2, 'optiond'),
(36, 13, 27, 2, 'optiond'),
(36, 13, 28, 2, 'optionc'),
(36, 13, 29, -0.66, 'optiond'),
(36, 13, 30, 2, 'optiona'),
(36, 13, 31, 2, 'optiond'),
(36, 13, 32, -0.66, 'optionb'),
(36, 13, 33, 2, 'optionb'),
(36, 13, 34, 2, 'optiona'),
(36, 13, 36, 2, 'optionc'),
(36, 13, 37, 2, 'optiona'),
(36, 13, 38, 2, 'optionb'),
(36, 13, 39, 2, 'optiona'),
(36, 13, 40, 2, 'optiond'),
(36, 15, 1, 1, 'optionc'),
(36, 15, 2, 1, 'optiond'),
(36, 15, 3, 1, 'optionc'),
(36, 15, 5, 1, 'optionb'),
(36, 15, 6, 1, 'optiona'),
(36, 15, 7, -0.33, 'optiond'),
(36, 15, 8, 1, 'optiona'),
(36, 15, 9, 1, 'optionb'),
(36, 15, 10, -0.33, 'optionb'),
(36, 15, 11, 1, 'optiond'),
(36, 15, 12, 1, 'optionc'),
(36, 15, 13, 1, 'optionb'),
(36, 15, 14, 1, 'optionc'),
(36, 15, 15, 1, 'optiond'),
(36, 15, 16, 1, 'optiond'),
(36, 15, 17, 1, 'optionb'),
(36, 15, 18, 1, 'optionb'),
(36, 15, 19, 1, 'optionc'),
(36, 15, 20, 1, 'optionb'),
(36, 15, 21, 1, 'optiona'),
(36, 15, 22, 1, 'optionb'),
(36, 15, 23, 1, 'optiona'),
(36, 15, 24, 1, 'optiona'),
(36, 15, 25, 1, 'optiond'),
(36, 15, 26, 2, 'optiona'),
(36, 15, 27, 2, 'optiona'),
(36, 15, 28, 2, 'optiond'),
(36, 15, 29, 2, 'optiond'),
(36, 15, 30, 2, 'optionb'),
(36, 15, 31, 2, 'optiona'),
(36, 15, 32, 2, 'optiona'),
(36, 15, 33, -0.66, 'optionb'),
(36, 15, 35, 2, 'optionc'),
(36, 15, 36, 2, 'optiond'),
(36, 15, 37, 2, 'optionb'),
(36, 15, 38, 2, 'optionc'),
(36, 15, 39, 2, 'optionb'),
(36, 15, 40, 2, 'optiond'),
(36, 15, 41, 2, 'optionc'),
(36, 15, 42, 2, 'optiona'),
(36, 15, 43, 2, 'optiona'),
(36, 15, 44, 2, 'optiond'),
(36, 15, 45, 2, 'optiona'),
(36, 15, 46, -0.66, 'optiond'),
(36, 15, 47, 2, 'optiond'),
(36, 15, 48, 2, 'optionc'),
(36, 15, 49, 2, 'optionc'),
(36, 15, 50, 2, 'optiond'),
(36, 15, 51, 2, 'optionb'),
(36, 15, 52, 2, 'optionc'),
(36, 15, 53, 2, 'optionc'),
(36, 15, 54, 2, 'optionc'),
(36, 15, 55, 2, 'optionb'),
(36, 15, 57, 1, 'optionb'),
(36, 15, 58, 1, 'optiond'),
(36, 15, 59, 1, 'optiond'),
(36, 15, 60, 1, 'optiona'),
(36, 15, 61, 2, 'optionc'),
(36, 15, 62, 2, 'optionb'),
(36, 15, 63, 2, 'optiond'),
(36, 15, 65, -0.66, 'optiona'),
(36, 16, 1, 1, 'optionc'),
(36, 16, 3, -0.33, 'optionb'),
(36, 16, 4, 1, 'optiond'),
(36, 16, 6, 1, 'optionb'),
(36, 16, 8, 1, 'optiona'),
(36, 16, 9, 1, 'optionc'),
(36, 16, 10, 1, 'optionc'),
(36, 16, 12, 1, 'optiond'),
(36, 16, 14, 1, 'optiond'),
(36, 16, 16, 1, 'optiond'),
(36, 16, 19, 1, 'optiond'),
(36, 16, 20, 1, 'optiona'),
(36, 16, 21, 1, 'optiond'),
(36, 16, 22, 1, 'optionb'),
(36, 16, 23, 1, 'optionc'),
(36, 16, 24, 1, 'optiona'),
(36, 16, 26, -0.66, 'optionc'),
(36, 16, 27, 2, 'optionb'),
(36, 16, 28, 2, 'optiond'),
(36, 16, 29, -0.66, 'optiona'),
(36, 16, 30, 2, 'optiond'),
(36, 16, 33, -0.66, 'optiona'),
(36, 16, 35, 2, 'optionb'),
(36, 16, 36, 2, 'optionc'),
(36, 16, 37, 2, 'optionb'),
(36, 16, 38, -0.66, 'optiona'),
(36, 16, 40, 2, 'optiona'),
(36, 16, 41, -0.66, 'optiona'),
(36, 16, 42, 2, 'optiona'),
(36, 16, 43, 2, 'optiona'),
(36, 16, 44, 2, 'optiond'),
(36, 16, 45, 2, 'optiona'),
(36, 16, 46, -0.66, 'optiond'),
(36, 16, 47, 2, 'optionc'),
(36, 16, 48, 2, 'optiona'),
(36, 16, 49, -0.66, 'optiond'),
(36, 16, 50, 2, 'optiona'),
(36, 16, 51, -0.66, 'optionb'),
(36, 16, 56, 1, 'optiond'),
(36, 16, 60, 1, 'optionc'),
(36, 16, 61, -0.66, 'optiond'),
(36, 16, 62, 2, 'optiond'),
(36, 16, 63, 2, 'optionc'),
(36, 17, 1, 1, 'optiona'),
(36, 17, 2, 1, 'optionb'),
(36, 17, 3, 1, 'optionb'),
(36, 17, 4, -0.33, 'optionb'),
(36, 17, 5, 1, 'optionc'),
(36, 17, 6, 1, 'optiona'),
(36, 17, 7, 1, 'optionc'),
(36, 17, 8, 1, 'optiona'),
(36, 17, 9, -0.33, 'optiona'),
(36, 17, 10, 1, 'optiona'),
(36, 17, 11, 1, 'optiond'),
(36, 17, 12, 1, 'optiona'),
(36, 17, 13, 1, 'optionb'),
(36, 17, 14, 1, 'optionc'),
(36, 17, 15, 1, 'optionb'),
(36, 17, 16, 1, 'optionb'),
(36, 17, 18, 1, 'optionb'),
(36, 17, 19, 1, 'optionb'),
(36, 17, 20, -0.33, 'optionb'),
(36, 17, 21, 1, 'optionc'),
(36, 17, 22, 1, 'optionb'),
(36, 17, 23, 1, 'optiond'),
(36, 17, 24, 1, 'optionb'),
(36, 17, 25, 1, 'optionb'),
(36, 17, 26, 2, 'optionc'),
(36, 17, 27, -0.66, 'optiona'),
(36, 17, 28, 2, 'optiond'),
(36, 17, 29, 2, 'optiond'),
(36, 17, 30, 2, 'optiona'),
(36, 17, 31, 2, 'optiond'),
(36, 17, 32, 2, 'optiona'),
(36, 17, 33, 2, 'optiona'),
(36, 17, 34, 2, 'optiond'),
(36, 17, 35, 2, 'optionb'),
(36, 17, 36, 2, 'optiond'),
(36, 17, 37, 2, 'optionc'),
(36, 17, 38, -0.66, 'optiona'),
(36, 17, 39, 2, 'optionb'),
(36, 17, 41, 2, 'optionc'),
(36, 17, 42, -0.66, 'optiona'),
(36, 17, 44, 2, 'optionb'),
(36, 17, 45, -0.66, 'optiona'),
(36, 17, 46, -0.66, 'optionc'),
(36, 17, 47, -0.66, 'optiond'),
(36, 17, 48, 2, 'optiond'),
(36, 17, 50, 2, 'optiond'),
(36, 17, 51, 2, 'optionc'),
(36, 17, 52, 2, 'optiond'),
(36, 17, 53, 2, 'optiona'),
(36, 17, 54, 2, 'optiond'),
(36, 17, 55, 2, 'optiona'),
(36, 17, 56, 1, 'optiona'),
(36, 17, 58, 1, 'optionc'),
(36, 17, 59, -0.33, 'optiona'),
(36, 17, 65, 2, 'optiond'),
(36, 18, 1, 1, 'optiona'),
(36, 18, 2, 1, 'optiond'),
(36, 18, 3, 1, 'optionb'),
(36, 18, 4, 1, 'optiona'),
(36, 18, 5, 1, 'optiond'),
(36, 18, 6, 1, 'optionc'),
(36, 18, 7, 1, 'optionb'),
(36, 18, 8, 1, 'optionb'),
(36, 18, 9, 1, 'optiond'),
(36, 18, 10, 1, 'optionb'),
(36, 18, 11, -0.33, 'optionc'),
(36, 18, 12, 1, 'optiona'),
(36, 18, 13, -0.33, 'optionb'),
(36, 18, 15, 1, 'optionc'),
(36, 18, 16, -0.33, 'optiond'),
(36, 18, 17, 1, 'optionb'),
(36, 18, 18, 1, 'optiona'),
(36, 18, 19, 1, 'optionc'),
(36, 18, 20, 1, 'optionb'),
(36, 18, 21, 1, 'optiond'),
(36, 18, 22, 1, 'optiond'),
(36, 18, 23, -0.33, 'optionb'),
(36, 18, 24, 1, 'optionc'),
(36, 18, 25, 1, 'optionc'),
(36, 18, 26, 2, 'optionb'),
(36, 18, 27, 2, 'optiond'),
(36, 18, 28, 2, 'optiona'),
(36, 18, 29, 2, 'optiond'),
(36, 18, 30, 2, 'optionc'),
(36, 18, 31, 2, 'optiona'),
(36, 18, 32, -0.66, 'optionc'),
(36, 18, 33, 2, 'optiond'),
(36, 18, 34, 2, 'optiona'),
(36, 18, 35, 2, 'optiond'),
(36, 18, 36, 2, 'optiona'),
(36, 18, 37, 2, 'optionc'),
(36, 18, 38, 2, 'optionb'),
(36, 18, 39, 2, 'optiona'),
(36, 18, 40, 2, 'optionb'),
(36, 18, 42, 2, 'optionb'),
(36, 18, 43, 2, 'optionb'),
(36, 18, 45, -0.66, 'optionc'),
(36, 18, 46, -0.66, 'optiona'),
(36, 18, 47, 2, 'optiond'),
(36, 18, 48, 2, 'optionb'),
(36, 18, 49, 2, 'optionc'),
(36, 18, 50, 2, 'optionc'),
(36, 18, 51, -0.66, 'optionb'),
(36, 18, 52, 2, 'optiona'),
(36, 18, 53, 2, 'optiona'),
(36, 18, 54, 2, 'optiona'),
(36, 18, 56, 1, 'optione'),
(36, 18, 57, 1, 'optionb'),
(36, 18, 58, 1, 'optionc'),
(36, 18, 59, 1, 'optionc'),
(36, 18, 60, 1, 'optiona'),
(36, 18, 61, 2, 'optionb'),
(36, 18, 62, 2, 'optiond'),
(36, 18, 64, -0.66, 'optionc'),
(36, 18, 65, 2, 'optiond'),
(38, 4, 1, -0.33, 'optionc'),
(38, 4, 2, -0.33, 'optiona'),
(38, 4, 3, 1, 'optionc'),
(38, 4, 4, 1, 'optionc'),
(38, 4, 5, 1, 'optionb'),
(38, 4, 6, 1, 'optiond'),
(38, 4, 7, -0.33, 'optiona'),
(38, 4, 8, 1, 'optionb'),
(38, 4, 9, 1, 'optionb'),
(38, 4, 10, 1, 'optionc'),
(38, 4, 11, 1, 'optiona'),
(38, 4, 12, 1, 'optionc'),
(38, 4, 13, 1, 'optionb'),
(38, 4, 14, 1, 'optiond'),
(38, 4, 15, -0.33, 'optiond'),
(38, 4, 16, 1, 'optiona'),
(38, 4, 17, -0.33, 'optiona'),
(38, 4, 18, 1, 'optionc'),
(38, 4, 19, 1, 'optionb'),
(38, 4, 20, 1, 'optiona'),
(38, 4, 21, -0.66, 'optiona'),
(38, 4, 22, -0.66, 'optiond'),
(38, 4, 23, -0.66, 'optiond'),
(38, 4, 24, -0.66, 'optionb'),
(38, 4, 25, 2, 'optiona'),
(38, 4, 28, 2, 'optiond'),
(38, 4, 29, -0.66, 'optiond'),
(38, 4, 30, 2, 'optionc'),
(38, 4, 31, -0.66, 'optiona'),
(38, 4, 32, 2, 'optiond'),
(38, 4, 33, 2, 'optionc'),
(38, 4, 34, 2, 'optiona'),
(38, 4, 35, -0.66, 'optiona'),
(38, 4, 36, 2, 'optionc'),
(38, 4, 37, -0.66, 'optionc'),
(38, 4, 38, 2, 'optiond'),
(38, 4, 39, 2, 'optionb'),
(38, 4, 40, 2, 'optiona'),
(38, 4, 41, 4, 'optionc'),
(38, 4, 42, -1.33, 'optiond'),
(38, 4, 43, 4, 'optionc'),
(38, 4, 44, -1.33, 'optiond'),
(38, 4, 46, -1.33, 'optiond'),
(38, 4, 47, -1.33, 'optiona'),
(38, 4, 48, -1.33, 'optiond'),
(38, 4, 50, -1.33, 'optiond'),
(39, 4, 1, 1, 'optiona'),
(39, 4, 2, 1, 'optiond'),
(39, 4, 3, 1, 'optionc'),
(39, 4, 4, 1, 'optionc'),
(39, 4, 5, 1, 'optionb'),
(39, 4, 6, -0.33, 'optionc'),
(39, 4, 7, -0.33, 'optionb'),
(39, 4, 9, 1, 'optionb'),
(39, 4, 10, 1, 'optionc'),
(39, 4, 11, -0.33, 'optiond'),
(39, 4, 12, 1, 'optionc'),
(39, 4, 13, 1, 'optionb'),
(39, 4, 14, 1, 'optiond'),
(39, 4, 15, 1, 'optiona'),
(39, 4, 16, 1, 'optiona'),
(39, 4, 17, 1, 'optiond'),
(39, 4, 18, 1, 'optionc'),
(39, 4, 19, 1, 'optionb'),
(39, 4, 20, -0.33, 'optionb'),
(39, 4, 21, 2, 'optiond'),
(39, 4, 22, 2, 'optionc'),
(39, 4, 23, 2, 'optionb'),
(39, 4, 24, 2, 'optionc'),
(39, 4, 25, -0.66, 'optionc'),
(39, 7, 1, 1, 'optionc'),
(39, 7, 2, 1, 'optiond'),
(39, 7, 3, -0.33, 'optiond'),
(39, 7, 4, 1, 'optiond'),
(39, 7, 5, -0.33, 'optiond'),
(39, 7, 6, 1, 'optionb'),
(39, 7, 7, -0.33, 'optionc'),
(39, 7, 8, 1, 'optionb'),
(39, 7, 10, 1, 'optionc'),
(39, 7, 11, 1, 'optiona'),
(39, 7, 12, -0.33, 'optiond'),
(39, 7, 14, 1, 'optionc'),
(39, 7, 15, 1, 'optionb'),
(39, 7, 16, 1, 'optiona'),
(39, 7, 17, 1, 'optionc'),
(39, 7, 18, 1, 'optiona'),
(39, 7, 19, 1, 'optiond'),
(39, 7, 20, 1, 'optiona'),
(39, 7, 21, 1, 'optiond'),
(39, 7, 22, 1, 'optiond'),
(39, 7, 23, -0.33, 'optionc'),
(39, 7, 24, 1, 'optiona'),
(39, 7, 25, -0.33, 'optionb'),
(39, 7, 26, 2, 'optiona'),
(39, 7, 27, -0.66, 'optionc'),
(39, 7, 28, 2, 'optiona'),
(39, 7, 31, 2, 'optiona'),
(39, 7, 34, -0.66, 'optiond'),
(39, 7, 35, 2, 'optionc'),
(39, 7, 36, 2, 'optionc'),
(39, 7, 38, -0.66, 'optionb'),
(39, 7, 39, -0.66, 'optionb'),
(39, 7, 40, 2, 'optionb'),
(39, 7, 41, 2, 'optionc'),
(39, 7, 42, 2, 'optionc'),
(39, 7, 43, 2, 'optionb'),
(39, 7, 44, 2, 'optionb'),
(39, 7, 45, 2, 'optiond'),
(39, 7, 46, -0.66, 'optionb'),
(39, 7, 47, 2, 'optionb'),
(39, 7, 48, -0.66, 'optiond'),
(39, 7, 49, -0.66, 'optiona'),
(39, 7, 50, 2, 'optionc'),
(39, 7, 51, 2, 'optionb'),
(39, 7, 52, 2, 'optiona'),
(39, 7, 53, 2, 'optionb'),
(39, 7, 54, 2, 'optiond'),
(39, 7, 55, -0.66, 'optiond'),
(39, 7, 56, -0.33, 'optiona'),
(39, 7, 57, 1, 'optionc'),
(39, 7, 58, 1, 'optionb'),
(39, 7, 59, 1, 'optiond'),
(39, 7, 60, 1, 'optionc'),
(39, 7, 61, -0.66, 'optiona'),
(39, 7, 62, 2, 'optionc'),
(39, 7, 63, -0.66, 'optiona'),
(39, 7, 65, 2, 'optionb'),
(39, 8, 1, 1, 'optione'),
(39, 8, 2, 1, 'optiona'),
(39, 8, 3, -0.33, 'optionc'),
(39, 8, 4, -0.33, 'optionb'),
(39, 8, 5, -0.33, 'optiona'),
(39, 8, 6, 1, 'optiond'),
(39, 8, 7, 1, 'optionb'),
(39, 8, 8, -0.33, 'optiona'),
(39, 8, 9, 1, 'optiond'),
(39, 8, 10, 1, 'optionc'),
(39, 8, 11, 1, 'optiond'),
(39, 8, 12, 1, 'optiona'),
(39, 8, 13, 1, 'optionb'),
(39, 8, 14, 1, 'optiona'),
(39, 8, 15, 1, 'optionc'),
(39, 8, 16, 1, 'optionc'),
(39, 8, 17, -0.33, 'optionb'),
(39, 8, 18, 1, 'optione'),
(39, 8, 19, 1, 'optiona'),
(39, 8, 21, 1, 'optiona'),
(39, 8, 22, -0.33, 'optionb'),
(39, 8, 23, 1, 'optiona'),
(39, 8, 24, 1, 'optiona'),
(39, 8, 25, 1, 'optiond'),
(39, 8, 26, 1, 'optiond'),
(39, 8, 27, 1, 'optiond'),
(39, 8, 29, 1, 'optionb'),
(39, 8, 30, 1, 'optionc'),
(39, 8, 31, 1, 'optionc'),
(39, 8, 32, 1, 'optionb'),
(39, 8, 33, 1, 'optiona'),
(39, 8, 34, 1, 'optiond'),
(39, 8, 35, 1, 'optionc'),
(39, 8, 36, 1, 'optionc'),
(39, 8, 37, 1, 'optiond'),
(39, 8, 38, 1, 'optionb'),
(39, 8, 39, 1, 'optiond'),
(39, 8, 40, -0.33, 'optiona'),
(39, 8, 41, 1, 'optiona'),
(39, 8, 42, 1, 'optiond'),
(39, 8, 43, 1, 'optionb'),
(39, 8, 44, -0.33, 'optiona'),
(39, 8, 45, 1, 'optiond'),
(39, 9, 1, -0.66, 'optiona'),
(39, 9, 2, 2, 'optionb'),
(39, 9, 4, 2, 'optiona'),
(39, 9, 5, 2, 'optiond'),
(39, 9, 7, -0.66, 'optionb'),
(39, 9, 9, 2, 'optionb'),
(39, 9, 12, 2, 'optiona'),
(39, 9, 15, -0.66, 'optiond'),
(39, 9, 18, 2, 'optionb'),
(39, 9, 23, 2, 'optionc'),
(39, 9, 24, -0.66, 'optiond'),
(39, 9, 25, 2, 'optiond'),
(39, 9, 26, 2, 'optionc'),
(39, 9, 29, 2, 'optionc'),
(39, 9, 30, 2, 'optionb'),
(39, 9, 31, -0.66, 'optiond'),
(39, 9, 34, 2, 'optiond'),
(39, 9, 35, 2, 'optionb'),
(39, 9, 36, -0.66, 'optiond'),
(39, 10, 1, 2, 'optione'),
(39, 10, 2, 2, 'optionb'),
(39, 10, 3, 2, 'optiond'),
(39, 10, 4, 2, 'optionc'),
(39, 10, 5, 2, 'optionb'),
(39, 10, 6, 2, 'optionb'),
(39, 10, 7, -0.66, 'optiond'),
(39, 10, 8, -0.66, 'optiond'),
(39, 10, 9, 2, 'optionc'),
(39, 10, 10, -0.66, 'optiona'),
(39, 10, 11, 2, 'optionc'),
(39, 10, 12, 2, 'optionb'),
(39, 10, 13, -0.66, 'optione'),
(39, 10, 14, 2, 'optionb'),
(39, 10, 15, -0.66, 'optionb'),
(39, 10, 16, 2, 'optiona'),
(39, 10, 17, -0.66, 'optionc'),
(39, 10, 18, 2, 'optiona'),
(39, 10, 19, 2, 'optiona'),
(39, 10, 20, -0.66, 'optionb'),
(39, 10, 21, 2, 'optionb'),
(39, 10, 23, 2, 'optiond'),
(39, 10, 24, -0.66, 'optionc'),
(39, 11, 1, -0.66, 'optionc'),
(39, 11, 2, -0.66, 'optiond'),
(39, 11, 3, -0.66, 'optionc'),
(39, 11, 4, 2, 'optiond'),
(39, 11, 5, 2, 'optionb'),
(39, 11, 6, 2, 'optionb'),
(39, 11, 7, 2, 'optionb'),
(39, 11, 8, 2, 'optiona'),
(39, 11, 9, 2, 'optionc'),
(39, 11, 10, 2, 'optiona'),
(39, 11, 11, 2, 'optiona'),
(39, 11, 12, 2, 'optiona'),
(39, 11, 13, 2, 'optionb'),
(39, 11, 14, -0.66, 'optiond'),
(39, 11, 15, 2, 'optionc'),
(39, 11, 17, 2, 'optiona'),
(39, 11, 18, 2, 'optionb'),
(39, 11, 19, 2, 'optionb'),
(39, 11, 20, 2, 'optiona'),
(39, 11, 21, -0.66, 'optionb'),
(39, 11, 22, -0.66, 'optionb'),
(39, 11, 24, 2, 'optiona'),
(39, 11, 25, 2, 'optionb'),
(39, 11, 26, -0.66, 'optiona'),
(39, 11, 27, 2, 'optione'),
(39, 11, 29, 2, 'optiond'),
(39, 11, 30, -0.66, 'optionb'),
(39, 11, 31, 2, 'optione'),
(39, 11, 32, 2, 'optionc'),
(39, 11, 33, -0.66, 'optione'),
(39, 11, 34, -0.66, 'optione'),
(39, 11, 35, -0.66, 'optionc'),
(39, 11, 36, 2, 'optione'),
(39, 11, 37, -0.66, 'optiond'),
(39, 11, 38, 2, 'optiona'),
(39, 11, 39, 2, 'optiona'),
(39, 11, 40, 2, 'optiond'),
(39, 11, 41, -0.66, 'optionb'),
(39, 11, 42, 2, 'optione'),
(39, 11, 43, 2, 'optiond'),
(39, 11, 45, 2, 'optiona'),
(39, 11, 46, 2, 'optiona'),
(39, 11, 48, 2, 'optiond'),
(39, 11, 49, 2, 'optiond'),
(39, 11, 50, 2, 'optionc'),
(39, 11, 51, 2, 'optiond'),
(39, 11, 52, 2, 'optionb'),
(39, 11, 53, 2, 'optionc'),
(39, 11, 54, -0.66, 'optiona'),
(39, 11, 55, -0.66, 'optiond'),
(39, 11, 56, 2, 'optione'),
(39, 11, 57, 2, 'optionc'),
(39, 11, 58, 2, 'optione'),
(39, 11, 60, 2, 'optiond'),
(39, 12, 1, 2, 'optionc'),
(39, 12, 2, -0.66, 'optiond'),
(39, 12, 3, 2, 'optiond'),
(39, 12, 4, -0.66, 'optiona'),
(39, 12, 6, -0.66, 'optiona'),
(39, 12, 7, 2, 'optionb'),
(39, 12, 8, 2, 'optionb'),
(39, 12, 9, -0.66, 'optionc'),
(39, 12, 10, 2, 'optiond'),
(39, 12, 12, -0.66, 'optiona'),
(39, 12, 13, 2, 'optionb'),
(39, 12, 14, 2, 'optiona'),
(39, 12, 15, 2, 'optiond'),
(39, 12, 16, 2, 'optionc'),
(39, 12, 17, 2, 'optionc'),
(39, 12, 18, 2, 'optiond'),
(39, 12, 19, 2, 'optionb'),
(39, 12, 20, 2, 'optionb'),
(39, 12, 21, 2, 'optiona'),
(39, 12, 22, 2, 'optiond'),
(39, 12, 23, 2, 'optionb'),
(39, 12, 24, 2, 'optiona'),
(39, 12, 25, -0.66, 'optiona'),
(39, 12, 26, 2, 'optionb'),
(39, 12, 27, -0.66, 'optionb'),
(39, 12, 29, 2, 'optiona'),
(39, 12, 30, 2, 'optionb'),
(39, 12, 31, 2, 'optionc'),
(39, 12, 32, 2, 'optionc'),
(39, 12, 33, 2, 'optiond'),
(39, 12, 34, 2, 'optiond'),
(39, 12, 35, 2, 'optiond'),
(39, 12, 36, -0.66, 'optiond'),
(39, 12, 37, -0.66, 'optiond'),
(39, 12, 38, 2, 'optionc'),
(39, 12, 40, 2, 'optiona'),
(39, 12, 41, 2, 'optionb'),
(39, 12, 42, 2, 'optiona'),
(39, 12, 43, -0.66, 'optionc'),
(39, 12, 44, -0.66, 'optionc'),
(39, 12, 45, 2, 'optiond'),
(39, 12, 46, 2, 'optiond'),
(39, 12, 47, 2, 'optionc'),
(39, 12, 48, 2, 'optiona'),
(39, 12, 50, 2, 'optionb'),
(39, 12, 51, 2, 'optionc'),
(39, 12, 52, 2, 'optionb'),
(39, 12, 53, 2, 'optiona'),
(39, 12, 54, -0.66, 'optionb'),
(39, 13, 1, -0.66, 'optiond'),
(39, 13, 2, 2, 'optionb'),
(39, 13, 6, -0.66, 'optiona'),
(39, 13, 7, 2, 'optionb'),
(39, 13, 8, 2, 'optionc'),
(39, 13, 10, 2, 'optione'),
(39, 13, 11, 2, 'optiond'),
(39, 13, 12, 2, 'optiona'),
(39, 13, 13, 2, 'optiond'),
(39, 13, 14, 2, 'optionb'),
(39, 13, 15, 2, 'optionc'),
(39, 13, 18, -0.66, 'optionc'),
(39, 13, 20, 2, 'optiona'),
(39, 13, 22, 2, 'optiona'),
(39, 13, 24, -0.66, 'optiond'),
(39, 13, 25, 2, 'optiona'),
(39, 13, 26, -0.66, 'optionb'),
(39, 13, 27, 2, 'optiond'),
(39, 13, 28, 2, 'optionc'),
(39, 13, 29, -0.66, 'optiond'),
(39, 13, 30, 2, 'optiona'),
(39, 13, 32, 2, 'optiona'),
(39, 13, 33, 2, 'optionb'),
(39, 13, 34, 2, 'optiona'),
(39, 13, 35, 2, 'optionc'),
(39, 13, 36, 2, 'optionc'),
(39, 13, 38, 2, 'optionb'),
(39, 13, 39, 2, 'optiona'),
(39, 13, 40, 2, 'optiond'),
(39, 15, 1, 1, 'optionc'),
(39, 15, 2, 1, 'optiond'),
(39, 15, 4, 1, 'optiona'),
(39, 15, 6, 1, 'optiona'),
(39, 15, 7, -0.33, 'optiond'),
(39, 15, 9, 1, 'optionb'),
(39, 15, 10, -0.33, 'optionb'),
(39, 15, 11, 1, 'optiond'),
(39, 15, 12, 1, 'optionc'),
(39, 15, 13, 1, 'optionb'),
(39, 15, 14, 1, 'optionc'),
(39, 15, 15, 1, 'optiond'),
(39, 15, 17, -0.33, 'optionc'),
(39, 15, 18, -0.33, 'optionc'),
(39, 15, 19, 1, 'optionc'),
(39, 15, 20, 1, 'optionb'),
(39, 15, 21, 1, 'optiona'),
(39, 15, 22, 1, 'optionb'),
(39, 15, 23, 1, 'optiona'),
(39, 15, 24, 1, 'optiona'),
(39, 15, 25, 1, 'optiond'),
(39, 15, 26, 2, 'optiona'),
(39, 15, 28, -0.66, 'optionc'),
(39, 15, 29, 2, 'optiond'),
(39, 15, 30, -0.66, 'optiond'),
(39, 15, 31, 2, 'optiona'),
(39, 15, 32, 2, 'optiona'),
(39, 15, 33, 2, 'optionc'),
(39, 15, 35, 2, 'optionc'),
(39, 15, 36, 2, 'optiond'),
(39, 15, 37, 2, 'optionb'),
(39, 15, 38, 2, 'optionc'),
(39, 15, 39, 2, 'optionb'),
(39, 15, 40, -0.66, 'optionb'),
(39, 15, 41, -0.66, 'optionb'),
(39, 15, 42, 2, 'optiona'),
(39, 15, 43, 2, 'optiona'),
(39, 15, 44, 2, 'optiond'),
(39, 15, 45, 2, 'optiona'),
(39, 15, 47, 2, 'optiond'),
(39, 15, 48, 2, 'optionc'),
(39, 15, 49, 2, 'optionc'),
(39, 15, 50, -0.66, 'optiona'),
(39, 15, 51, -0.66, 'optionc'),
(39, 15, 52, 2, 'optionc'),
(39, 15, 53, -0.66, 'optionb'),
(39, 15, 54, 2, 'optionc'),
(39, 15, 55, 2, 'optionb'),
(39, 15, 56, -0.33, 'optionb'),
(39, 15, 57, -0.33, 'optiona'),
(39, 15, 58, 1, 'optiond'),
(39, 15, 59, 1, 'optiond'),
(39, 15, 60, 1, 'optiona'),
(39, 15, 61, 2, 'optionc'),
(39, 15, 62, 2, 'optionb'),
(39, 15, 64, -0.66, 'optionb'),
(39, 16, 1, 1, 'optionc'),
(39, 16, 3, 1, 'optiond'),
(39, 16, 4, 1, 'optiond'),
(39, 16, 6, 1, 'optionb'),
(39, 16, 7, 1, 'optiond'),
(39, 16, 8, 1, 'optiona'),
(39, 16, 9, 1, 'optionc'),
(39, 16, 10, 1, 'optionc'),
(39, 16, 12, -0.33, 'optionc'),
(39, 16, 13, 1, 'optionb'),
(39, 16, 15, 1, 'optionc'),
(39, 16, 16, 1, 'optiond'),
(39, 16, 19, 1, 'optiond'),
(39, 16, 20, -0.33, 'optionc'),
(39, 16, 21, 1, 'optiond'),
(39, 16, 22, 1, 'optionb'),
(39, 16, 28, 2, 'optiond'),
(39, 16, 30, 2, 'optiond'),
(39, 16, 31, -0.66, 'optiona'),
(39, 16, 32, 2, 'optiond'),
(39, 16, 33, 2, 'optiond'),
(39, 16, 35, 2, 'optionb'),
(39, 16, 36, 2, 'optionc'),
(39, 16, 37, 2, 'optionb'),
(39, 16, 38, 2, 'optionb'),
(39, 16, 40, 2, 'optiona'),
(39, 16, 43, 2, 'optiona'),
(39, 16, 44, 2, 'optiond'),
(39, 16, 45, 2, 'optiona'),
(39, 16, 47, 2, 'optionc'),
(39, 16, 48, 2, 'optiona'),
(39, 16, 49, 2, 'optionc'),
(39, 16, 50, -0.66, 'optionb'),
(39, 16, 53, 2, 'optionb'),
(39, 16, 58, -0.33, 'optionc'),
(39, 16, 59, 1, 'optionc'),
(39, 16, 61, 2, 'optionb'),
(39, 16, 62, 2, 'optiond'),
(39, 17, 1, 1, 'optiona'),
(39, 17, 2, 1, 'optionb'),
(39, 17, 3, 1, 'optionb'),
(39, 17, 4, -0.33, 'optiona'),
(39, 17, 5, 1, 'optionc'),
(39, 17, 6, 1, 'optiona'),
(39, 17, 7, -0.33, 'optiond'),
(39, 17, 8, 1, 'optiona'),
(39, 17, 9, 1, 'optionb'),
(39, 17, 10, 1, 'optiona'),
(39, 17, 12, -0.33, 'optionc'),
(39, 17, 13, -0.33, 'optionc'),
(39, 17, 14, 1, 'optionc'),
(39, 17, 15, 1, 'optionb'),
(39, 17, 17, -0.33, 'optiond'),
(39, 17, 18, -0.33, 'optiona'),
(39, 17, 19, 1, 'optionb'),
(39, 17, 20, -0.33, 'optionb'),
(39, 17, 21, 1, 'optionc'),
(39, 17, 22, 1, 'optionb'),
(39, 17, 23, 1, 'optiond'),
(39, 17, 24, 1, 'optionb'),
(39, 17, 25, 1, 'optionb'),
(39, 17, 26, 2, 'optionc'),
(39, 17, 28, 2, 'optiond'),
(39, 17, 29, 2, 'optiond'),
(39, 17, 30, 2, 'optiona'),
(39, 17, 32, 2, 'optiona'),
(39, 17, 33, 2, 'optiona'),
(39, 17, 34, 2, 'optiond'),
(39, 17, 35, 2, 'optionb'),
(39, 17, 37, 2, 'optionc'),
(39, 17, 38, 2, 'optionc'),
(39, 17, 39, 2, 'optionb'),
(39, 17, 41, 2, 'optionc'),
(39, 17, 42, 2, 'optionb'),
(39, 17, 45, 2, 'optionb'),
(39, 17, 47, -0.66, 'optiond'),
(39, 17, 48, 2, 'optiond'),
(39, 17, 50, 2, 'optiond'),
(39, 17, 51, 2, 'optionc'),
(39, 17, 52, 2, 'optiond'),
(39, 17, 53, 2, 'optiona'),
(39, 17, 54, 2, 'optiond'),
(39, 17, 55, 2, 'optiona'),
(39, 17, 57, 1, 'optionb'),
(39, 17, 58, 1, 'optionc'),
(39, 17, 59, 1, 'optiond'),
(39, 17, 60, 1, 'optiond'),
(39, 17, 61, 2, 'optionb'),
(39, 17, 62, 2, 'optionc'),
(39, 17, 64, 2, 'optionb'),
(39, 17, 65, 2, 'optiond'),
(39, 18, 1, 1, 'optiona'),
(39, 18, 2, 1, 'optiond'),
(39, 18, 3, 1, 'optionb'),
(39, 18, 4, 1, 'optiona'),
(39, 18, 5, 1, 'optiond'),
(39, 18, 6, 1, 'optionc'),
(39, 18, 7, 1, 'optionb'),
(39, 18, 8, -0.33, 'optiona'),
(39, 18, 9, 1, 'optiond'),
(39, 18, 11, 1, 'optionb'),
(39, 18, 12, 1, 'optiona'),
(39, 18, 13, 1, 'optiond'),
(39, 18, 14, 1, 'optionc'),
(39, 18, 15, -0.33, 'optionb'),
(39, 18, 16, 1, 'optionc'),
(39, 18, 18, 1, 'optiona'),
(39, 18, 19, 1, 'optionc'),
(39, 18, 20, 1, 'optionb'),
(39, 18, 21, 1, 'optiond'),
(39, 18, 22, 1, 'optiond'),
(39, 18, 23, 1, 'optiond'),
(39, 18, 24, 1, 'optionc'),
(39, 18, 25, 1, 'optionc'),
(39, 18, 26, 2, 'optionb'),
(39, 18, 27, -0.66, 'optionb'),
(39, 18, 28, 2, 'optiona'),
(39, 18, 29, 2, 'optiond'),
(39, 18, 30, 2, 'optionc'),
(39, 18, 31, 2, 'optiona'),
(39, 18, 32, 2, 'optionb'),
(39, 18, 33, 2, 'optiond'),
(39, 18, 34, 2, 'optiona'),
(39, 18, 35, -0.66, 'optionb'),
(39, 18, 36, -0.66, 'optionb'),
(39, 18, 37, 2, 'optionc'),
(39, 18, 38, 2, 'optionb'),
(39, 18, 39, -0.66, 'optionc'),
(39, 18, 41, -0.66, 'optiona'),
(39, 18, 42, 2, 'optionb'),
(39, 18, 45, -0.66, 'optionc'),
(39, 18, 47, 2, 'optiond'),
(39, 18, 48, -0.66, 'optiona'),
(39, 18, 49, 2, 'optionc'),
(39, 18, 50, -0.66, 'optiond'),
(39, 18, 51, -0.66, 'optionb'),
(39, 18, 52, -0.66, 'optionb'),
(39, 18, 54, 2, 'optiona'),
(39, 18, 55, -0.66, 'optionb'),
(39, 18, 56, 1, 'optione'),
(39, 18, 57, 1, 'optionb'),
(39, 18, 58, 1, 'optionc'),
(39, 18, 59, 1, 'optionc'),
(39, 18, 60, 1, 'optiona'),
(39, 18, 61, 2, 'optionb'),
(39, 18, 62, -0.66, 'optiona'),
(39, 18, 63, -0.66, 'optionc'),
(39, 18, 64, 2, 'optionb'),
(39, 18, 65, 2, 'optiond'),
(44, 7, 1, -0.33, 'optionc'),
(44, 7, 2, 1, 'optiond'),
(44, 7, 3, -0.33, 'optiond'),
(44, 7, 5, -0.33, 'optiona'),
(44, 7, 7, -0.33, 'optiond'),
(44, 7, 8, -0.33, 'optiond'),
(44, 7, 9, 1, 'optiona'),
(44, 7, 11, 1, 'optiona'),
(44, 7, 12, -0.33, 'optiona'),
(44, 7, 16, -0.33, 'optionc'),
(44, 7, 17, 1, 'optionc'),
(44, 7, 19, 1, 'optiond'),
(44, 7, 20, 1, 'optiona'),
(44, 7, 21, 1, 'optiond'),
(44, 7, 22, -0.33, 'optiona'),
(44, 7, 23, -0.33, 'optionb'),
(44, 7, 24, 1, 'optiona'),
(44, 7, 29, 2, 'optiond'),
(44, 7, 31, 2, 'optiona'),
(44, 7, 32, -0.66, 'optionb'),
(44, 7, 34, -0.66, 'optionc'),
(44, 7, 35, 2, 'optionc'),
(44, 7, 36, 2, 'optionc'),
(44, 7, 39, -0.66, 'optionb'),
(44, 7, 40, 2, 'optionb'),
(44, 7, 41, -0.66, 'optiona'),
(44, 7, 42, 2, 'optionc'),
(44, 7, 43, 2, 'optionb'),
(44, 7, 44, 2, 'optionb'),
(44, 7, 45, -0.66, 'optionc'),
(44, 7, 46, 2, 'optiond'),
(44, 7, 47, -0.66, 'optiond'),
(44, 7, 50, 2, 'optionc'),
(44, 7, 52, -0.66, 'optionb'),
(44, 7, 53, -0.66, 'optiond'),
(44, 7, 54, -0.66, 'optionb'),
(44, 7, 56, -0.33, 'optiona'),
(44, 7, 57, 1, 'optionc'),
(44, 7, 58, 1, 'optionb'),
(44, 7, 59, 1, 'optiond'),
(44, 7, 61, -0.66, 'optiond'),
(44, 7, 63, 2, 'optiond'),
(44, 7, 64, 2, 'optionc'),
(44, 8, 1, -0.33, 'optiond'),
(44, 8, 2, 1, 'optiona'),
(44, 8, 5, -0.33, 'optiona'),
(44, 8, 6, 1, 'optiond'),
(44, 8, 10, 1, 'optionc'),
(44, 8, 11, 1, 'optiond'),
(44, 8, 12, -0.33, 'optionb'),
(44, 8, 14, 1, 'optiona'),
(44, 8, 16, 1, 'optionc'),
(44, 8, 17, -0.33, 'optiond'),
(44, 8, 25, 1, 'optiond'),
(44, 8, 27, 1, 'optiond'),
(44, 8, 29, -0.33, 'optionc'),
(44, 8, 30, 1, 'optionc'),
(44, 8, 31, 1, 'optionc'),
(44, 8, 32, 1, 'optionb'),
(44, 8, 33, -0.33, 'optionb'),
(44, 8, 34, 1, 'optiond'),
(44, 8, 35, 1, 'optionc'),
(44, 8, 36, 1, 'optionc'),
(44, 8, 37, 1, 'optiond'),
(44, 8, 38, 1, 'optionb'),
(44, 8, 39, 1, 'optiond'),
(44, 8, 40, -0.33, 'optiona'),
(44, 8, 41, 1, 'optiona'),
(44, 8, 42, -0.33, 'optionc'),
(44, 8, 43, 1, 'optionb'),
(44, 8, 44, -0.33, 'optiona'),
(44, 8, 45, 1, 'optiond'),
(44, 10, 1, 2, 'optione'),
(44, 10, 2, 2, 'optionb'),
(44, 10, 3, -0.66, 'optionb'),
(44, 10, 4, 2, 'optionc'),
(44, 10, 5, 2, 'optionb'),
(44, 10, 6, 2, 'optionb'),
(44, 10, 7, 2, 'optiona'),
(44, 10, 10, -0.66, 'optionc'),
(44, 10, 11, 2, 'optionc'),
(44, 10, 12, 2, 'optionb'),
(44, 10, 13, 2, 'optionc'),
(44, 10, 14, 2, 'optionb'),
(44, 10, 15, 2, 'optiond'),
(44, 10, 16, 2, 'optiona'),
(44, 10, 17, 2, 'optionb'),
(44, 10, 18, -0.66, 'optionb'),
(44, 10, 21, 2, 'optionb'),
(44, 10, 22, 2, 'optionb'),
(44, 10, 23, -0.66, 'optionc'),
(44, 11, 1, -0.66, 'optiona'),
(44, 11, 2, -0.66, 'optiond'),
(44, 11, 3, -0.66, 'optiond'),
(44, 11, 4, -0.66, 'optionb'),
(44, 11, 5, 2, 'optionb'),
(44, 11, 6, 2, 'optionb'),
(44, 11, 7, 2, 'optionb'),
(44, 11, 8, 2, 'optiona'),
(44, 11, 9, 2, 'optionc'),
(44, 11, 10, -0.66, 'optionc'),
(44, 11, 11, -0.66, 'optiond'),
(44, 11, 12, 2, 'optiona'),
(44, 11, 13, -0.66, 'optiona'),
(44, 11, 15, -0.66, 'optiona'),
(44, 11, 16, 2, 'optionb'),
(44, 11, 17, -0.66, 'optionb'),
(44, 11, 18, 2, 'optionb'),
(44, 11, 19, -0.66, 'optiona'),
(44, 11, 20, -0.66, 'optionb'),
(44, 11, 21, 2, 'optionc'),
(44, 11, 22, -0.66, 'optionc'),
(44, 11, 24, -0.66, 'optiond'),
(44, 11, 25, 2, 'optionb'),
(44, 11, 26, 2, 'optionc'),
(44, 11, 27, 2, 'optione'),
(44, 11, 29, 2, 'optiond'),
(44, 11, 32, -0.66, 'optiond'),
(44, 11, 33, -0.66, 'optione'),
(44, 11, 35, 2, 'optiond'),
(44, 11, 36, 2, 'optione'),
(44, 11, 37, -0.66, 'optione'),
(44, 11, 38, 2, 'optiona'),
(44, 11, 39, -0.66, 'optionb'),
(44, 11, 41, 2, 'optionc'),
(44, 11, 42, -0.66, 'optionb'),
(44, 11, 43, -0.66, 'optionc'),
(44, 11, 44, -0.66, 'optiond'),
(44, 11, 45, -0.66, 'optionc'),
(44, 11, 46, 2, 'optiona'),
(44, 11, 47, 2, 'optione'),
(44, 11, 48, 2, 'optiond'),
(44, 11, 49, 2, 'optiond'),
(44, 11, 50, 2, 'optionc'),
(44, 11, 51, -0.66, 'optionc'),
(44, 11, 52, -0.66, 'optionc'),
(44, 11, 53, 2, 'optionc'),
(44, 11, 54, 2, 'optionb'),
(44, 11, 55, -0.66, 'optionc'),
(44, 11, 56, 2, 'optione'),
(44, 11, 57, -0.66, 'optionb'),
(44, 11, 58, -0.66, 'optionb'),
(44, 11, 60, -0.66, 'optione'),
(44, 12, 3, -0.66, 'optionb'),
(44, 12, 4, -0.66, 'optionb'),
(44, 12, 5, 2, 'optiona'),
(44, 12, 6, 2, 'optiond'),
(44, 12, 7, -0.66, 'optiond'),
(44, 12, 8, -0.66, 'optionc'),
(44, 12, 9, -0.66, 'optionb'),
(44, 12, 10, 2, 'optiond'),
(44, 12, 12, 2, 'optionb'),
(44, 12, 13, 2, 'optionb'),
(44, 12, 14, -0.66, 'optionc'),
(44, 12, 15, 2, 'optiond'),
(44, 12, 16, 2, 'optionc'),
(44, 12, 18, -0.66, 'optionb'),
(44, 12, 20, 2, 'optionb'),
(44, 12, 21, 2, 'optiona'),
(44, 12, 22, 2, 'optiond'),
(44, 12, 26, -0.66, 'optiona'),
(44, 12, 27, 2, 'optionc'),
(44, 12, 29, -0.66, 'optiond'),
(44, 12, 31, 2, 'optionc'),
(44, 12, 32, -0.66, 'optionb'),
(44, 12, 34, 2, 'optiond'),
(44, 12, 35, 2, 'optiond'),
(44, 12, 37, -0.66, 'optionb'),
(44, 12, 38, 2, 'optionc'),
(44, 12, 39, 2, 'optiona'),
(44, 12, 40, -0.66, 'optiond'),
(44, 12, 43, -0.66, 'optionb'),
(44, 12, 45, 2, 'optiond'),
(44, 12, 46, 2, 'optiond'),
(44, 12, 47, 2, 'optionc'),
(44, 12, 48, 2, 'optiona'),
(44, 12, 50, 2, 'optionb'),
(44, 12, 51, 2, 'optionc'),
(44, 12, 52, -0.66, 'optiond'),
(44, 12, 54, -0.66, 'optiond'),
(44, 13, 1, -0.66, 'optiond'),
(44, 13, 2, -0.66, 'optiond'),
(44, 13, 3, -0.66, 'optiond'),
(44, 13, 5, -0.66, 'optiond'),
(44, 13, 8, 2, 'optionc'),
(44, 13, 10, 2, 'optione'),
(44, 13, 11, 2, 'optiond'),
(44, 13, 17, -0.66, 'optione'),
(44, 13, 18, -0.66, 'optionb'),
(44, 13, 22, -0.66, 'optionb'),
(44, 13, 23, 2, 'optiona'),
(44, 13, 24, 2, 'optionc'),
(44, 13, 25, -0.66, 'optionc'),
(44, 13, 26, 2, 'optiond'),
(44, 13, 27, 2, 'optiond'),
(44, 13, 28, 2, 'optionc'),
(44, 13, 30, -0.66, 'optiond'),
(44, 13, 31, 2, 'optiond'),
(44, 13, 32, -0.66, 'optionc'),
(44, 13, 33, 2, 'optionb'),
(44, 13, 34, 2, 'optiona'),
(44, 13, 35, 2, 'optionc'),
(44, 13, 36, 2, 'optionc'),
(44, 13, 37, -0.66, 'optionb'),
(44, 13, 39, 2, 'optiona'),
(44, 13, 40, 2, 'optiond'),
(44, 15, 4, -0.33, 'optionc'),
(44, 15, 5, 1, 'optionb'),
(44, 15, 6, 1, 'optiona'),
(44, 15, 9, -0.33, 'optiona'),
(44, 15, 10, -0.33, 'optionb'),
(44, 15, 11, 1, 'optiond'),
(44, 15, 12, -0.33, 'optiond'),
(44, 15, 13, -0.33, 'optiond'),
(44, 15, 14, 1, 'optionc'),
(44, 15, 15, 1, 'optiond'),
(44, 15, 16, -0.33, 'optiona'),
(44, 15, 18, -0.33, 'optiona'),
(44, 15, 19, 1, 'optionc'),
(44, 15, 20, 1, 'optionb'),
(44, 15, 22, 1, 'optionb'),
(44, 15, 24, 1, 'optiona'),
(44, 15, 25, 1, 'optiond'),
(44, 15, 26, 2, 'optiona'),
(44, 15, 28, 2, 'optiond'),
(44, 15, 29, 2, 'optiond'),
(44, 15, 30, -0.66, 'optiond'),
(44, 15, 31, -0.66, 'optiond'),
(44, 15, 32, 2, 'optiona'),
(44, 15, 33, 2, 'optionc'),
(44, 15, 35, 2, 'optionc'),
(44, 15, 37, -0.66, 'optionc'),
(44, 15, 38, -0.66, 'optiona'),
(44, 15, 40, -0.66, 'optionb'),
(44, 15, 41, -0.66, 'optiond'),
(44, 15, 42, 2, 'optiona'),
(44, 15, 43, -0.66, 'optionb'),
(44, 15, 44, 2, 'optiond'),
(44, 15, 45, -0.66, 'optionc'),
(44, 15, 46, -0.66, 'optiond'),
(44, 15, 47, -0.66, 'optionb'),
(44, 15, 50, -0.66, 'optiona'),
(44, 15, 51, -0.66, 'optionc'),
(44, 15, 52, 2, 'optionc'),
(44, 15, 54, -0.66, 'optionb'),
(44, 15, 55, -0.66, 'optionc'),
(44, 15, 57, -0.33, 'optiond'),
(44, 15, 58, 1, 'optiond'),
(44, 15, 59, 1, 'optiond'),
(44, 15, 60, 1, 'optiona'),
(44, 15, 61, -0.66, 'optiona'),
(44, 15, 63, 2, 'optiond'),
(44, 15, 64, 2, 'optiond'),
(44, 16, 1, -0.33, 'optiond'),
(44, 16, 2, -0.33, 'optiond'),
(44, 16, 4, 1, 'optiond'),
(44, 16, 7, -0.33, 'optionb'),
(44, 16, 9, -0.33, 'optiond'),
(44, 16, 10, -0.33, 'optionb'),
(44, 16, 11, -0.33, 'optiona'),
(44, 16, 12, -0.33, 'optionb'),
(44, 16, 13, 1, 'optionb'),
(44, 16, 15, 1, 'optionc'),
(44, 16, 16, 1, 'optiond'),
(44, 16, 17, 1, 'optiona'),
(44, 16, 20, -0.33, 'optionb'),
(44, 16, 21, 1, 'optiond'),
(44, 16, 26, -0.66, 'optionc'),
(44, 16, 29, -0.66, 'optionb'),
(44, 16, 30, 2, 'optiond'),
(44, 16, 31, -0.66, 'optionc'),
(44, 16, 32, -0.66, 'optionb'),
(44, 16, 34, -0.66, 'optionb'),
(44, 16, 35, 2, 'optionb'),
(44, 16, 36, 2, 'optionc'),
(44, 16, 37, 2, 'optionb'),
(44, 16, 39, -0.66, 'optiona'),
(44, 16, 40, 2, 'optiona'),
(44, 16, 43, 2, 'optiona'),
(44, 16, 44, 2, 'optiond'),
(44, 16, 45, 2, 'optiona'),
(44, 16, 46, -0.66, 'optionb'),
(44, 16, 47, -0.66, 'optiond'),
(44, 16, 50, -0.66, 'optionc'),
(44, 16, 57, 1, 'optionc'),
(44, 16, 58, -0.33, 'optiond'),
(44, 16, 59, -0.33, 'optiona'),
(44, 16, 60, -0.33, 'optionb'),
(44, 16, 61, -0.66, 'optiond'),
(44, 17, 3, -0.33, 'optiond'),
(44, 17, 5, 1, 'optionc'),
(44, 17, 8, 1, 'optiona'),
(44, 17, 9, -0.33, 'optiona'),
(44, 17, 10, 1, 'optiona'),
(44, 17, 11, -0.33, 'optionb'),
(44, 17, 13, -0.33, 'optiond'),
(44, 17, 14, 1, 'optionc'),
(44, 17, 15, -0.33, 'optionc'),
(44, 17, 18, -0.33, 'optiond'),
(44, 17, 19, 1, 'optionb'),
(44, 17, 21, -0.33, 'optiona'),
(44, 17, 23, 1, 'optiond'),
(44, 17, 24, -0.33, 'optionc'),
(44, 17, 25, 1, 'optionb'),
(44, 17, 26, 2, 'optionc'),
(44, 17, 27, -0.66, 'optiond'),
(44, 17, 30, -0.66, 'optiond'),
(44, 17, 32, 2, 'optiona'),
(44, 17, 33, 2, 'optiona'),
(44, 17, 34, 2, 'optiond'),
(44, 17, 38, -0.66, 'optiona'),
(44, 17, 39, -0.66, 'optiond'),
(44, 17, 44, -0.66, 'optionc'),
(44, 17, 45, -0.66, 'optiond'),
(44, 17, 47, 2, 'optiona'),
(44, 17, 51, -0.66, 'optiona'),
(44, 17, 52, 2, 'optiond'),
(44, 17, 54, -0.66, 'optionb'),
(44, 17, 56, -0.33, 'optionb'),
(44, 17, 58, 1, 'optionc'),
(44, 17, 60, 1, 'optiond'),
(44, 17, 61, -0.66, 'optionc'),
(44, 17, 62, -0.66, 'optionb'),
(44, 17, 63, 2, 'optiona'),
(44, 17, 65, 2, 'optiond'),
(44, 18, 2, 1, 'optiond'),
(44, 18, 3, 1, 'optionb'),
(44, 18, 4, 1, 'optiona'),
(44, 18, 6, -0.33, 'optionb'),
(44, 18, 7, 1, 'optionb'),
(44, 18, 10, 1, 'optionb'),
(44, 18, 11, -0.33, 'optiond'),
(44, 18, 12, -0.33, 'optionb'),
(44, 18, 13, 1, 'optiond'),
(44, 18, 16, -0.33, 'optionb'),
(44, 18, 18, 1, 'optiona'),
(44, 18, 19, -0.33, 'optiona'),
(44, 18, 20, 1, 'optionb'),
(44, 18, 22, 1, 'optiond'),
(44, 18, 24, 1, 'optionc'),
(44, 18, 25, 1, 'optionc'),
(44, 18, 26, 2, 'optionb'),
(44, 18, 27, 2, 'optiond'),
(44, 18, 28, -0.66, 'optiond'),
(44, 18, 31, 2, 'optiona'),
(44, 18, 33, -0.66, 'optionc'),
(44, 18, 34, -0.66, 'optionc'),
(44, 18, 35, -0.66, 'optionb'),
(44, 18, 37, -0.66, 'optionb'),
(44, 18, 38, 2, 'optionb'),
(44, 18, 41, -0.66, 'optiona'),
(44, 18, 42, 2, 'optionb'),
(44, 18, 44, 2, 'optionc'),
(44, 18, 45, -0.66, 'optiond'),
(44, 18, 47, 2, 'optiond'),
(44, 18, 49, 2, 'optionc'),
(44, 18, 50, 2, 'optionc'),
(44, 18, 51, -0.66, 'optionc'),
(44, 18, 52, 2, 'optiona'),
(44, 18, 53, -0.66, 'optiond'),
(44, 18, 54, 2, 'optiona'),
(44, 18, 56, 1, 'optione'),
(44, 18, 57, 1, 'optionb'),
(44, 18, 58, 1, 'optionc'),
(44, 18, 61, 2, 'optionb'),
(44, 18, 62, -0.66, 'optionb'),
(44, 18, 65, 2, 'optiond'),
(47, 4, 1, 1, 'optiona'),
(47, 4, 2, -0.33, 'optionc'),
(47, 4, 3, 1, 'optionc'),
(47, 4, 4, 1, 'optionc'),
(47, 4, 5, 1, 'optionb'),
(47, 4, 6, -0.33, 'optionc'),
(47, 4, 7, -0.33, 'optionb'),
(47, 4, 8, -0.33, 'optionc'),
(47, 4, 9, -0.33, 'optiona'),
(47, 4, 10, 1, 'optionc'),
(47, 4, 11, -0.33, 'optionc'),
(47, 4, 12, -0.33, 'optiond'),
(47, 4, 37, 2, 'optiond'),
(47, 4, 38, 2, 'optiond'),
(47, 4, 39, 2, 'optionb'),
(47, 4, 40, 2, 'optiona'),
(47, 4, 41, 4, 'optionc'),
(47, 4, 42, 4, 'optionc'),
(47, 4, 43, 4, 'optionc'),
(47, 4, 44, 4, 'optionb'),
(47, 7, 1, 1, 'optionc'),
(47, 7, 3, -0.33, 'optiona'),
(47, 7, 4, 1, 'optiond'),
(47, 7, 5, -0.33, 'optionc'),
(47, 7, 6, -0.33, 'optione'),
(47, 7, 8, -0.33, 'optiona'),
(47, 7, 9, 1, 'optiona'),
(47, 7, 11, 1, 'optiona'),
(47, 7, 14, 1, 'optionc'),
(47, 7, 15, 1, 'optionb'),
(47, 7, 16, 1, 'optiona'),
(47, 7, 17, -0.33, 'optiona'),
(47, 7, 19, 1, 'optiond'),
(47, 7, 20, -0.33, 'optiond'),
(47, 7, 22, -0.33, 'optionb'),
(47, 7, 24, -0.33, 'optiond'),
(47, 7, 25, -0.33, 'optionb'),
(47, 7, 26, 2, 'optiona'),
(47, 7, 29, -0.66, 'optionb'),
(47, 7, 31, -0.66, 'optionb'),
(47, 7, 32, -0.66, 'optionb'),
(47, 7, 33, -0.66, 'optiona'),
(47, 7, 35, 2, 'optionc'),
(47, 7, 36, 2, 'optionc'),
(47, 7, 40, 2, 'optionb'),
(47, 7, 41, -0.66, 'optiona'),
(47, 7, 42, 2, 'optionc'),
(47, 7, 43, 2, 'optionb'),
(47, 7, 45, 2, 'optiond'),
(47, 7, 46, 2, 'optiond'),
(47, 7, 47, 2, 'optionb'),
(47, 7, 50, 2, 'optionc'),
(47, 7, 51, -0.66, 'optiona'),
(47, 7, 53, 2, 'optionb'),
(47, 7, 54, -0.66, 'optionb'),
(47, 7, 55, -0.66, 'optionc'),
(47, 7, 57, -0.33, 'optiona'),
(47, 7, 58, 1, 'optionb'),
(47, 7, 59, 1, 'optiond'),
(47, 7, 60, 1, 'optionc'),
(47, 7, 62, 2, 'optionc'),
(47, 7, 63, 2, 'optiond'),
(47, 7, 65, 2, 'optionb'),
(47, 8, 1, 1, 'optione'),
(47, 8, 2, -0.33, 'optionc'),
(47, 8, 3, -0.33, 'optionc'),
(47, 8, 4, -0.33, 'optionb'),
(47, 8, 5, -0.33, 'optiona'),
(47, 8, 6, 1, 'optiond'),
(47, 8, 7, 1, 'optionb'),
(47, 8, 8, 1, 'optionb'),
(47, 8, 9, 1, 'optiond'),
(47, 8, 10, -0.33, 'optiond'),
(47, 8, 12, 1, 'optiona'),
(47, 8, 13, 1, 'optionb'),
(47, 8, 14, 1, 'optiona'),
(47, 8, 15, 1, 'optionc'),
(47, 8, 16, 1, 'optionc'),
(47, 8, 17, 1, 'optione'),
(47, 8, 18, 1, 'optione'),
(47, 8, 19, 1, 'optiona'),
(47, 8, 20, -0.33, 'optionc'),
(47, 8, 21, 1, 'optiona'),
(47, 8, 22, -0.33, 'optionc'),
(47, 8, 23, -0.33, 'optionb'),
(47, 8, 24, 1, 'optiona'),
(47, 8, 25, 1, 'optiond'),
(47, 8, 26, -0.33, 'optionb'),
(47, 8, 27, 1, 'optiond'),
(47, 8, 29, -0.33, 'optiona'),
(47, 8, 30, 1, 'optionc'),
(47, 8, 31, 1, 'optionc'),
(47, 8, 32, 1, 'optionb'),
(47, 8, 33, -0.33, 'optionb'),
(47, 8, 34, 1, 'optiond'),
(47, 8, 35, 1, 'optionc'),
(47, 8, 36, 1, 'optionc'),
(47, 8, 37, 1, 'optiond'),
(47, 8, 38, -0.33, 'optionc'),
(47, 8, 39, 1, 'optiond'),
(47, 8, 40, -0.33, 'optiona'),
(47, 8, 41, 1, 'optiona'),
(47, 8, 42, 1, 'optiond'),
(47, 8, 43, 1, 'optionb'),
(47, 8, 44, -0.33, 'optiona'),
(47, 8, 45, 1, 'optiond'),
(47, 9, 1, -0.66, 'optionb'),
(47, 9, 2, 2, 'optionb'),
(47, 9, 4, 2, 'optiona'),
(47, 9, 5, -0.66, 'optionc'),
(47, 9, 6, 2, 'optiond'),
(47, 9, 7, -0.66, 'optionb'),
(47, 9, 9, 2, 'optionb'),
(47, 9, 10, 2, 'optionc'),
(47, 9, 12, 2, 'optiona'),
(47, 9, 13, -0.66, 'optionc'),
(47, 9, 14, -0.66, 'optiond'),
(47, 9, 17, -0.66, 'optiona'),
(47, 9, 20, 2, 'optionc'),
(47, 9, 21, 2, 'optionc'),
(47, 9, 25, -0.66, 'optiona'),
(47, 9, 26, -0.66, 'optiona'),
(47, 9, 27, -0.66, 'optionb'),
(47, 9, 30, -0.66, 'optiona'),
(47, 9, 31, -0.66, 'optiond'),
(47, 9, 34, 2, 'optiond'),
(47, 9, 55, -0.66, 'optiona'),
(47, 10, 1, 2, 'optione'),
(47, 10, 2, -0.66, 'optiond'),
(47, 10, 3, 2, 'optiond'),
(47, 10, 5, 2, 'optionb'),
(47, 10, 6, 2, 'optionb'),
(47, 10, 7, -0.66, 'optiond'),
(47, 10, 8, -0.66, 'optiond'),
(47, 10, 9, -0.66, 'optiona'),
(47, 10, 10, -0.66, 'optiona'),
(47, 10, 11, 2, 'optionc'),
(47, 10, 12, 2, 'optionb'),
(47, 10, 14, 2, 'optionb'),
(47, 10, 15, -0.66, 'optionb'),
(47, 10, 16, 2, 'optiona'),
(47, 10, 17, -0.66, 'optionc'),
(47, 10, 18, -0.66, 'optionc'),
(47, 10, 19, 2, 'optiona'),
(47, 10, 21, 2, 'optionb'),
(47, 10, 23, -0.66, 'optionc'),
(47, 10, 24, -0.66, 'optionc'),
(47, 11, 1, -0.66, 'optionc'),
(47, 11, 2, -0.66, 'optiond'),
(47, 11, 3, -0.66, 'optionc'),
(47, 11, 4, 2, 'optiond'),
(47, 11, 5, 2, 'optionb'),
(47, 11, 6, 2, 'optionb'),
(47, 11, 7, 2, 'optionb'),
(47, 11, 8, 2, 'optiona'),
(47, 11, 9, 2, 'optionc'),
(47, 11, 10, -0.66, 'optionc'),
(47, 11, 11, 2, 'optiona'),
(47, 11, 12, 2, 'optiona'),
(47, 11, 14, -0.66, 'optiond'),
(47, 11, 15, 2, 'optionc'),
(47, 11, 16, -0.66, 'optiond'),
(47, 11, 17, -0.66, 'optionb'),
(47, 11, 18, 2, 'optionb'),
(47, 11, 19, 2, 'optionb'),
(47, 11, 21, -0.66, 'optiond'),
(47, 11, 22, 2, 'optiona'),
(47, 11, 24, 2, 'optiona'),
(47, 11, 25, 2, 'optionb'),
(47, 11, 26, 2, 'optionc'),
(47, 11, 27, 2, 'optione'),
(47, 11, 29, 2, 'optiond'),
(47, 11, 30, -0.66, 'optionb'),
(47, 11, 35, 2, 'optiond'),
(47, 11, 36, 2, 'optione'),
(47, 11, 37, -0.66, 'optionc'),
(47, 11, 41, 2, 'optionc'),
(47, 11, 42, 2, 'optione'),
(47, 11, 43, -0.66, 'optionb'),
(47, 11, 44, -0.66, 'optiond'),
(47, 11, 46, 2, 'optiona'),
(47, 11, 48, -0.66, 'optiona'),
(47, 11, 50, -0.66, 'optiond'),
(47, 11, 51, -0.66, 'optionc'),
(47, 11, 52, -0.66, 'optionc'),
(47, 11, 53, 2, 'optionc'),
(47, 11, 54, 2, 'optionb'),
(47, 11, 55, -0.66, 'optione'),
(47, 11, 56, -0.66, 'optionc'),
(47, 11, 58, -0.66, 'optiona'),
(47, 11, 59, 2, 'optiona'),
(47, 11, 60, 2, 'optiond'),
(47, 13, 1, -0.66, 'optiond'),
(47, 13, 2, -0.66, 'optiond'),
(47, 13, 3, -0.66, 'optiond'),
(47, 13, 5, -0.66, 'optiond'),
(47, 13, 6, -0.66, 'optiona'),
(47, 13, 7, 2, 'optionb'),
(47, 13, 8, 2, 'optionc'),
(47, 13, 9, -0.66, 'optiond'),
(47, 13, 10, 2, 'optione'),
(47, 13, 11, 2, 'optiond'),
(47, 13, 12, -0.66, 'optiond'),
(47, 13, 13, -0.66, 'optionc'),
(47, 13, 14, -0.66, 'optione'),
(47, 13, 15, -0.66, 'optiona'),
(47, 13, 18, -0.66, 'optionc'),
(47, 13, 19, -0.66, 'optiona'),
(47, 13, 20, -0.66, 'optionb'),
(47, 13, 22, 2, 'optiona'),
(47, 13, 23, -0.66, 'optionc'),
(47, 13, 24, -0.66, 'optionb'),
(47, 13, 29, -0.66, 'optiond'),
(47, 13, 33, 2, 'optionb'),
(47, 13, 34, 2, 'optiona'),
(47, 13, 35, 2, 'optionc'),
(47, 13, 36, 2, 'optionc'),
(47, 13, 37, -0.66, 'optiond'),
(47, 13, 38, 2, 'optionb'),
(47, 13, 39, 2, 'optiona'),
(47, 13, 40, 2, 'optiond'),
(47, 15, 1, 1, 'optionc'),
(47, 15, 2, 1, 'optiond'),
(47, 15, 4, 1, 'optiona'),
(47, 15, 5, 1, 'optionb'),
(47, 15, 6, 1, 'optiona'),
(47, 15, 9, 1, 'optionb'),
(47, 15, 11, 1, 'optiond'),
(47, 15, 13, 1, 'optionb'),
(47, 15, 14, 1, 'optionc'),
(47, 15, 15, 1, 'optiond'),
(47, 15, 16, 1, 'optiond'),
(47, 15, 17, -0.33, 'optionc'),
(47, 15, 18, 1, 'optionb'),
(47, 15, 19, 1, 'optionc'),
(47, 15, 20, 1, 'optionb'),
(47, 15, 21, 1, 'optiona'),
(47, 15, 22, 1, 'optionb'),
(47, 15, 23, -0.33, 'optionb'),
(47, 15, 24, 1, 'optiona'),
(47, 15, 25, -0.33, 'optionb'),
(47, 15, 29, 2, 'optiond'),
(47, 15, 30, -0.66, 'optionc'),
(47, 15, 31, 2, 'optiona'),
(47, 15, 32, 2, 'optiona'),
(47, 15, 33, 2, 'optionc'),
(47, 15, 35, 2, 'optionc'),
(47, 15, 36, 2, 'optiond'),
(47, 15, 37, 2, 'optionb'),
(47, 15, 38, 2, 'optionc'),
(47, 15, 39, 2, 'optionb'),
(47, 15, 40, -0.66, 'optiona'),
(47, 15, 41, 2, 'optionc'),
(47, 15, 42, 2, 'optiona'),
(47, 15, 43, 2, 'optiona'),
(47, 15, 44, 2, 'optiond'),
(47, 15, 45, -0.66, 'optionc'),
(47, 15, 47, 2, 'optiond'),
(47, 15, 50, -0.66, 'optiona'),
(47, 15, 51, -0.66, 'optiona'),
(47, 15, 56, -0.33, 'optiond'),
(47, 15, 58, 1, 'optiond'),
(47, 15, 59, 1, 'optiond'),
(47, 15, 60, -0.33, 'optiond'),
(47, 15, 63, -0.66, 'optionc'),
(47, 15, 65, -0.66, 'optiond'),
(47, 16, 1, 1, 'optionc'),
(47, 16, 3, 1, 'optiond'),
(47, 16, 4, 1, 'optiond'),
(47, 16, 6, -0.33, 'optiona'),
(47, 16, 7, -0.33, 'optionb'),
(47, 16, 8, -0.33, 'optionb'),
(47, 16, 9, -0.33, 'optiona'),
(47, 16, 11, -0.33, 'optiona'),
(47, 16, 13, -0.33, 'optionc'),
(47, 16, 14, 1, 'optiond'),
(47, 16, 16, 1, 'optiond'),
(47, 16, 19, -0.33, 'optionb'),
(47, 16, 20, 1, 'optiona'),
(47, 16, 21, -0.33, 'optionb'),
(47, 16, 22, 1, 'optionb'),
(47, 16, 25, -0.33, 'optiond'),
(47, 16, 28, -0.66, 'optionc'),
(47, 16, 29, 2, 'optiond'),
(47, 16, 30, 2, 'optiond'),
(47, 16, 32, -0.66, 'optionb'),
(47, 16, 35, -0.66, 'optiond'),
(47, 16, 37, 2, 'optionb'),
(47, 16, 38, -0.66, 'optionc'),
(47, 16, 40, -0.66, 'optionc'),
(47, 16, 43, 2, 'optiona'),
(47, 16, 44, 2, 'optiond'),
(47, 16, 45, 2, 'optiona'),
(47, 16, 46, -0.66, 'optiond'),
(47, 16, 48, 2, 'optiona'),
(47, 16, 50, 2, 'optiona'),
(47, 16, 53, -0.66, 'optiona'),
(47, 16, 56, 1, 'optiond'),
(47, 16, 58, -0.33, 'optionc'),
(47, 16, 59, 1, 'optionc'),
(47, 16, 61, 2, 'optionb'),
(47, 16, 63, -0.66, 'optiond'),
(47, 17, 1, 1, 'optiona'),
(47, 17, 2, 1, 'optionb'),
(47, 17, 3, 1, 'optionb'),
(47, 17, 5, -0.33, 'optionb'),
(47, 17, 6, -0.33, 'optionb'),
(47, 17, 7, -0.33, 'optiond'),
(47, 17, 8, 1, 'optiona'),
(47, 17, 10, -0.33, 'optionb'),
(47, 17, 12, -0.33, 'optionc'),
(47, 17, 13, 1, 'optionb'),
(47, 17, 14, -0.33, 'optionb'),
(47, 17, 15, -0.33, 'optiond'),
(47, 17, 18, 1, 'optionb'),
(47, 17, 19, 1, 'optionb'),
(47, 17, 20, -0.33, 'optionb'),
(47, 17, 21, -0.33, 'optiona'),
(47, 17, 22, 1, 'optionb'),
(47, 17, 24, 1, 'optionb'),
(47, 17, 25, -0.33, 'optiond'),
(47, 17, 26, 2, 'optionc'),
(47, 17, 27, -0.66, 'optiond'),
(47, 17, 28, -0.66, 'optionb'),
(47, 17, 29, -0.66, 'optionb'),
(47, 17, 30, 2, 'optiona'),
(47, 17, 32, 2, 'optiona'),
(47, 17, 33, 2, 'optiona'),
(47, 17, 34, -0.66, 'optionc'),
(47, 17, 37, -0.66, 'optionb'),
(47, 17, 38, -0.66, 'optiona'),
(47, 17, 39, -0.66, 'optiond'),
(47, 17, 44, 2, 'optionb'),
(47, 17, 45, 2, 'optionb'),
(47, 17, 46, -0.66, 'optiona'),
(47, 17, 50, -0.66, 'optionc'),
(47, 17, 52, 2, 'optiond'),
(47, 17, 53, 2, 'optiona'),
(47, 17, 56, -0.33, 'optionc'),
(47, 17, 57, -0.33, 'optiond'),
(47, 17, 58, -0.33, 'optionb'),
(47, 17, 59, -0.33, 'optiona'),
(47, 17, 61, -0.66, 'optiona'),
(47, 17, 63, 2, 'optiona'),
(47, 17, 64, -0.66, 'optiona'),
(47, 17, 65, -0.66, 'optiona'),
(47, 18, 1, 1, 'optiona'),
(47, 18, 2, 1, 'optiond'),
(47, 18, 3, 1, 'optionb'),
(47, 18, 4, 1, 'optiona'),
(47, 18, 6, 1, 'optionc'),
(47, 18, 9, 1, 'optiond'),
(47, 18, 11, -0.33, 'optiona'),
(47, 18, 12, -0.33, 'optionb'),
(47, 18, 14, -0.33, 'optiond'),
(47, 18, 16, -0.33, 'optiona'),
(47, 18, 17, 1, 'optionb'),
(47, 18, 19, -0.33, 'optiona'),
(47, 18, 20, 1, 'optionb'),
(47, 18, 21, 1, 'optiond'),
(47, 18, 22, 1, 'optiond'),
(47, 18, 24, 1, 'optionc'),
(47, 18, 25, 1, 'optionc'),
(47, 18, 26, 2, 'optionb'),
(47, 18, 27, 2, 'optiond'),
(47, 18, 29, 2, 'optiond'),
(47, 18, 31, 2, 'optiona'),
(47, 18, 32, 2, 'optionb'),
(47, 18, 34, 2, 'optiona'),
(47, 18, 36, 2, 'optiona'),
(47, 18, 37, 2, 'optionc'),
(47, 18, 38, -0.66, 'optiona'),
(47, 18, 41, -0.66, 'optiona'),
(47, 18, 42, -0.66, 'optionc'),
(47, 18, 45, -0.66, 'optionc'),
(47, 18, 46, -0.66, 'optionb'),
(47, 18, 48, -0.66, 'optionc'),
(47, 18, 49, -0.66, 'optionb'),
(47, 18, 50, 2, 'optionc'),
(47, 18, 54, 2, 'optiona'),
(47, 18, 55, 2, 'optiond'),
(47, 18, 56, 1, 'optione'),
(47, 18, 58, 1, 'optionc'),
(47, 18, 60, 1, 'optiona'),
(47, 18, 61, 2, 'optionb'),
(47, 18, 62, 2, 'optiond'),
(47, 18, 64, -0.66, 'optionc'),
(47, 18, 65, 2, 'optiond'),
(52, 4, 1, 1, 'optiona'),
(52, 4, 2, 1, 'optiond'),
(52, 4, 3, 1, 'optionc'),
(52, 4, 4, 1, 'optionc'),
(52, 4, 5, -0.33, 'optionc'),
(52, 4, 6, -0.33, 'optionc'),
(52, 4, 8, 1, 'optionb'),
(52, 4, 9, 1, 'optionb'),
(52, 4, 10, 1, 'optionc'),
(52, 4, 12, 1, 'optionc'),
(52, 4, 13, 1, 'optionb'),
(52, 4, 14, 1, 'optiond'),
(52, 4, 15, 1, 'optiona'),
(52, 4, 16, 1, 'optiona'),
(52, 4, 17, 1, 'optiond'),
(52, 4, 18, -0.33, 'optiona'),
(52, 4, 19, 1, 'optionb'),
(52, 4, 20, 1, 'optiona'),
(52, 4, 22, -0.66, 'optionb'),
(52, 4, 23, 2, 'optionb'),
(52, 4, 24, 2, 'optionc'),
(52, 4, 25, 2, 'optiona'),
(52, 4, 28, 2, 'optiond'),
(52, 4, 29, 2, 'optionb'),
(52, 4, 30, 2, 'optionc'),
(52, 4, 31, 2, 'optionc'),
(52, 4, 32, 2, 'optiond'),
(52, 4, 33, 2, 'optionc'),
(52, 4, 34, 2, 'optiona'),
(52, 4, 35, 2, 'optionc'),
(52, 4, 36, 2, 'optionc'),
(52, 4, 37, 2, 'optiond'),
(52, 4, 38, 2, 'optiond'),
(52, 4, 39, 2, 'optionb'),
(52, 4, 40, 2, 'optiona'),
(52, 4, 41, 4, 'optionc'),
(52, 4, 42, 4, 'optionc'),
(52, 4, 43, 4, 'optionc'),
(52, 4, 45, 4, 'optiond'),
(52, 4, 46, 4, ''),
(52, 4, 50, 4, 'optionc'),
(52, 7, 2, 1, 'optiond'),
(52, 7, 3, -0.33, 'optiond'),
(52, 7, 4, 1, 'optiond'),
(52, 7, 5, -0.33, 'optionb'),
(52, 7, 6, 1, 'optionb'),
(52, 7, 7, 1, 'optionb'),
(52, 7, 8, 1, 'optionb'),
(52, 7, 9, 1, 'optiona'),
(52, 7, 10, 1, 'optionc'),
(52, 7, 11, 1, 'optiona'),
(52, 13, 1, 2, 'optionc'),
(52, 13, 2, 2, 'optionb'),
(52, 13, 6, -0.66, 'optiona'),
(52, 13, 8, 2, 'optionc'),
(52, 13, 10, -0.66, 'optionc'),
(52, 13, 11, 2, 'optiond'),
(52, 13, 12, 2, 'optiona'),
(52, 13, 14, 2, 'optionb'),
(52, 13, 15, -0.66, 'optiona'),
(52, 13, 25, 2, 'optiona'),
(52, 13, 27, 2, 'optiond'),
(52, 15, 1, 1, 'optionc'),
(52, 15, 2, 1, 'optiond'),
(52, 15, 3, 1, 'optionc'),
(52, 15, 4, 1, 'optiona'),
(52, 15, 5, 1, 'optionb'),
(52, 15, 6, 1, 'optiona'),
(52, 15, 8, 1, 'optiona'),
(52, 15, 9, 1, 'optionb'),
(52, 15, 11, 1, 'optiond'),
(52, 15, 12, 1, 'optionc'),
(52, 15, 13, 1, 'optionb'),
(52, 15, 14, 1, 'optionc'),
(52, 15, 15, 1, 'optiond'),
(52, 15, 16, 1, 'optiond'),
(52, 15, 17, 1, 'optionb'),
(52, 15, 18, 1, 'optionb'),
(52, 15, 19, 1, 'optionc'),
(52, 15, 21, 1, 'optiona'),
(52, 15, 22, 1, 'optionb'),
(52, 15, 23, -0.33, 'optiond'),
(52, 15, 24, 1, 'optiona'),
(52, 15, 25, 1, 'optiond'),
(52, 15, 26, 2, 'optiona'),
(52, 15, 27, 2, 'optiona'),
(52, 15, 28, -0.66, 'optionb'),
(52, 15, 29, 2, 'optiond'),
(52, 15, 30, 2, 'optionb'),
(52, 15, 31, 2, 'optiona'),
(52, 15, 32, 2, 'optiona'),
(52, 15, 33, -0.66, 'optionb'),
(52, 15, 34, -0.66, 'optiona'),
(52, 15, 35, 2, 'optionc'),
(52, 15, 36, 2, 'optiond'),
(52, 15, 37, 2, 'optionb'),
(52, 15, 38, 2, 'optionc'),
(52, 15, 39, 2, 'optionb'),
(52, 15, 40, 2, 'optiond'),
(52, 15, 41, 2, 'optionc'),
(52, 15, 43, 2, 'optiona'),
(52, 15, 44, 2, 'optiond'),
(52, 15, 45, 2, 'optiona'),
(52, 15, 46, 2, 'optionb'),
(52, 15, 47, 2, 'optiond'),
(52, 15, 48, -0.66, 'optiond'),
(52, 15, 50, 2, 'optiond'),
(52, 15, 51, 2, 'optionb'),
(52, 15, 52, 2, 'optionc'),
(52, 15, 54, -0.66, 'optionb'),
(52, 15, 55, -0.66, 'optiond'),
(52, 15, 56, 1, 'optionc'),
(52, 15, 57, 1, 'optionb'),
(52, 15, 58, 1, 'optiond'),
(52, 15, 59, 1, 'optiond'),
(52, 15, 62, -0.66, 'optionc'),
(52, 15, 63, 2, 'optiond'),
(52, 15, 64, -0.66, 'optionc'),
(52, 16, 1, 1, 'optionc'),
(52, 16, 2, 1, 'optionb'),
(52, 16, 4, 1, 'optiond'),
(52, 16, 6, 1, 'optionb'),
(52, 16, 8, 1, 'optiona'),
(52, 16, 9, 1, 'optionc'),
(52, 16, 10, 1, 'optionc'),
(52, 16, 12, -0.33, 'optionc'),
(52, 16, 13, 1, 'optionb'),
(52, 16, 14, -0.33, 'optionb'),
(52, 16, 16, 1, 'optiond'),
(52, 16, 19, 1, 'optiond'),
(52, 16, 20, 1, 'optiona'),
(52, 16, 21, 1, 'optiond'),
(52, 16, 22, 1, 'optionb'),
(52, 16, 23, 1, 'optionc'),
(52, 16, 24, -0.33, 'optionb'),
(52, 16, 25, 1, 'optionb'),
(52, 16, 28, 2, 'optiond'),
(52, 16, 29, -0.66, 'optiona'),
(52, 16, 30, 2, 'optiond'),
(52, 16, 31, -0.66, 'optionc'),
(52, 16, 34, -0.66, 'optiond'),
(52, 16, 35, -0.66, 'optiond'),
(52, 16, 36, 2, 'optionc'),
(52, 16, 37, 2, 'optionb'),
(52, 16, 40, -0.66, 'optionb'),
(52, 16, 43, 2, 'optiona'),
(52, 16, 44, 2, 'optiond'),
(52, 16, 45, 2, 'optiona'),
(52, 16, 47, 2, 'optionc'),
(52, 16, 48, 2, 'optiona'),
(52, 16, 49, 2, 'optionc'),
(52, 16, 51, 2, 'optiona'),
(52, 16, 60, 1, 'optionc'),
(52, 16, 61, 2, 'optionb'),
(52, 16, 62, 2, 'optiond'),
(52, 16, 63, 2, 'optionc'),
(52, 17, 1, -0.33, 'optionb'),
(52, 17, 2, 1, 'optionb'),
(52, 17, 3, 1, 'optionb'),
(52, 17, 4, 1, 'optionc'),
(52, 17, 5, 1, 'optionc'),
(52, 17, 6, 1, 'optiona'),
(52, 17, 7, -0.33, 'optionb'),
(52, 17, 8, 1, 'optiona'),
(52, 17, 9, 1, 'optionb'),
(52, 17, 10, 1, 'optiona'),
(52, 17, 12, 1, 'optiona'),
(52, 17, 13, -0.33, 'optiona'),
(52, 17, 14, 1, 'optionc'),
(52, 17, 17, -0.33, 'optiond'),
(52, 17, 18, 1, 'optionb'),
(52, 17, 19, 1, 'optionb'),
(52, 17, 20, -0.33, 'optionc'),
(52, 17, 21, -0.33, 'optiona'),
(52, 17, 22, 1, 'optionb'),
(52, 17, 23, 1, 'optiond'),
(52, 17, 25, 1, 'optionb'),
(52, 17, 26, 2, 'optionc'),
(52, 17, 28, 2, 'optiond'),
(52, 17, 30, 2, 'optiona'),
(52, 17, 31, 2, 'optiond'),
(52, 17, 32, 2, 'optiona'),
(52, 17, 33, 2, 'optiona'),
(52, 17, 34, 2, 'optiond'),
(52, 17, 35, 2, 'optionb'),
(52, 17, 37, -0.66, 'optiond'),
(52, 17, 38, 2, 'optionc'),
(52, 17, 39, 2, 'optionb'),
(52, 17, 41, 2, 'optionc'),
(52, 17, 44, 2, 'optionb'),
(52, 17, 45, 2, 'optionb'),
(52, 17, 46, -0.66, 'optionc'),
(52, 17, 47, -0.66, 'optionb'),
(52, 17, 48, 2, 'optiond'),
(52, 17, 49, -0.66, 'optiond'),
(52, 17, 50, 2, 'optiond'),
(52, 17, 51, 2, 'optionc'),
(52, 17, 52, 2, 'optiond'),
(52, 17, 53, 2, 'optiona'),
(52, 17, 54, 2, 'optiond'),
(52, 17, 58, 1, 'optionc'),
(52, 17, 60, 1, 'optiond'),
(52, 17, 62, 2, 'optionc'),
(52, 17, 63, 2, 'optiona'),
(52, 17, 64, 2, 'optionb'),
(52, 17, 65, -0.66, 'optionb'),
(52, 18, 1, -0.33, 'optionc'),
(52, 18, 2, 1, 'optiond'),
(52, 18, 3, 1, 'optionb'),
(52, 18, 4, 1, 'optiona'),
(52, 18, 6, 1, 'optionc'),
(52, 18, 7, 1, 'optionb'),
(52, 18, 9, -0.33, 'optiona'),
(52, 18, 10, -0.33, 'optiond'),
(52, 18, 11, -0.33, 'optionc'),
(52, 18, 12, 1, 'optiona'),
(52, 18, 13, 1, 'optiond'),
(52, 18, 14, 1, 'optionc'),
(52, 18, 16, 1, 'optionc'),
(52, 18, 17, 1, 'optionb'),
(52, 18, 18, 1, 'optiona'),
(52, 18, 19, 1, 'optionc'),
(52, 18, 20, -0.33, 'optiona'),
(52, 18, 21, 1, 'optiond'),
(52, 18, 24, 1, 'optionc'),
(52, 18, 26, 2, 'optionb'),
(52, 18, 27, 2, 'optiond'),
(52, 18, 29, 2, 'optiond'),
(52, 18, 30, 2, 'optionc'),
(52, 18, 31, 2, 'optiona'),
(52, 18, 32, -0.66, 'optiona'),
(52, 18, 33, 2, 'optiond'),
(52, 18, 35, 2, 'optiond'),
(52, 18, 36, -0.66, 'optionb'),
(52, 18, 37, 2, 'optionc'),
(52, 18, 38, 2, 'optionb'),
(52, 18, 40, -0.66, 'optiond'),
(52, 18, 41, 2, 'optiond'),
(52, 18, 42, 2, 'optionb'),
(52, 18, 43, -0.66, 'optionc'),
(52, 18, 45, -0.66, 'optionc'),
(52, 18, 46, -0.66, 'optionb'),
(52, 18, 47, 2, 'optiond'),
(52, 18, 48, 2, 'optionb'),
(52, 18, 49, 2, 'optionc'),
(52, 18, 50, 2, 'optionc'),
(52, 18, 51, -0.66, 'optiond'),
(52, 18, 52, 2, 'optiona'),
(52, 18, 53, 2, 'optiona'),
(52, 18, 54, 2, 'optiona'),
(52, 18, 56, 1, 'optione'),
(52, 18, 58, 1, 'optionc'),
(52, 18, 59, 1, 'optionc'),
(52, 18, 60, 1, 'optiona'),
(52, 18, 61, 2, 'optionb'),
(52, 18, 62, 2, 'optiond'),
(52, 18, 64, -0.66, 'optionc'),
(52, 18, 65, 2, 'optiond'),
(56, 4, 1, 1, 'optiona'),
(56, 4, 2, 1, 'optiond'),
(56, 4, 3, 1, 'optionc'),
(56, 4, 4, 1, 'optionc'),
(56, 4, 5, -0.33, 'optionc'),
(56, 4, 6, 1, 'optiond'),
(56, 4, 7, 1, 'optiond'),
(56, 4, 9, 1, 'optionb'),
(56, 4, 10, 1, 'optionc'),
(56, 4, 12, 1, 'optionc'),
(56, 4, 13, 1, 'optionb'),
(56, 4, 14, 1, 'optiond'),
(56, 4, 16, 1, 'optiona'),
(56, 4, 17, 1, 'optiond'),
(56, 4, 18, 1, 'optionc'),
(56, 4, 19, 1, 'optionb'),
(56, 4, 21, 2, 'optiond'),
(56, 4, 22, 2, 'optionc'),
(56, 4, 23, 2, 'optionb'),
(56, 4, 24, 2, 'optionc'),
(56, 4, 25, 2, 'optiona'),
(56, 4, 26, 2, 'optionc'),
(56, 4, 27, 2, 'optionc'),
(56, 4, 29, -0.66, 'optiond'),
(56, 4, 30, 2, 'optionc'),
(56, 4, 31, 2, 'optionc'),
(56, 4, 32, 2, 'optiond'),
(56, 4, 33, 2, 'optionc'),
(56, 4, 34, -0.66, 'optionc'),
(56, 4, 35, 2, 'optionc'),
(56, 4, 36, 2, 'optionc'),
(56, 4, 37, 2, 'optiond'),
(56, 4, 38, 2, 'optiond'),
(56, 4, 39, 2, 'optionb'),
(56, 4, 40, 2, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(56, 4, 41, 4, 'optionc'),
(56, 4, 42, 4, 'optionc'),
(56, 4, 43, 4, 'optionc'),
(56, 4, 44, 4, 'optionb'),
(56, 4, 45, -1.33, 'optionb'),
(56, 4, 46, -1.33, 'optiond'),
(56, 4, 47, -1.33, 'optionb'),
(56, 4, 49, 4, 'optiona'),
(56, 4, 50, 4, 'optionc'),
(56, 7, 1, 1, 'optionc'),
(56, 7, 2, 1, 'optiond'),
(56, 7, 3, 1, 'optionb'),
(56, 7, 4, 1, 'optiond'),
(56, 7, 5, -0.33, 'optionc'),
(56, 7, 6, 1, 'optionb'),
(56, 7, 7, -0.33, 'optiona'),
(56, 7, 8, 1, 'optionb'),
(56, 7, 9, 1, 'optiona'),
(56, 7, 10, 1, 'optionc'),
(56, 7, 11, 1, 'optiona'),
(56, 7, 12, -0.33, 'optionc'),
(56, 7, 13, 1, 'optionc'),
(56, 7, 14, -0.33, 'optiona'),
(56, 7, 15, 1, 'optionb'),
(56, 7, 16, 1, 'optiona'),
(56, 7, 17, 1, 'optionc'),
(56, 7, 18, 1, 'optiona'),
(56, 7, 19, 1, 'optiond'),
(56, 7, 20, 1, 'optiona'),
(56, 7, 21, 1, 'optiond'),
(56, 7, 22, -0.33, 'optiona'),
(56, 7, 23, 1, 'optiond'),
(56, 7, 25, -0.33, 'optionb'),
(56, 7, 26, -0.66, 'optionb'),
(56, 7, 27, -0.66, 'optionc'),
(56, 7, 28, 2, 'optiona'),
(56, 7, 30, 2, 'optionc'),
(56, 7, 31, 2, 'optiona'),
(56, 7, 32, 2, 'optiona'),
(56, 7, 33, 2, 'optiond'),
(56, 7, 34, -0.66, 'optiond'),
(56, 7, 35, 2, 'optionc'),
(56, 7, 36, 2, 'optionc'),
(56, 7, 37, -0.66, 'optionc'),
(56, 7, 38, -0.66, 'optionb'),
(56, 7, 39, 2, 'optione'),
(56, 7, 40, 2, 'optionb'),
(56, 7, 41, 2, 'optionc'),
(56, 7, 42, 2, 'optionc'),
(56, 7, 45, 2, 'optiond'),
(56, 7, 46, -0.66, 'optionb'),
(56, 7, 47, 2, 'optionb'),
(56, 7, 48, -0.66, 'optiond'),
(56, 7, 50, 2, 'optionc'),
(56, 7, 51, 2, 'optionb'),
(56, 7, 52, 2, 'optiona'),
(56, 7, 53, 2, 'optionb'),
(56, 7, 54, 2, 'optiond'),
(56, 7, 56, 1, 'optiona'),
(56, 7, 57, 1, 'optionc'),
(56, 7, 59, 1, 'optiond'),
(56, 7, 60, 1, 'optionc'),
(56, 7, 61, -0.66, 'optiona'),
(56, 7, 63, 2, 'optiond'),
(56, 7, 65, 2, 'optionb'),
(56, 8, 1, 1, 'optione'),
(56, 8, 2, -0.33, 'optiond'),
(56, 8, 4, -0.33, 'optionb'),
(56, 8, 5, -0.33, 'optiona'),
(56, 8, 6, 1, 'optiond'),
(56, 8, 9, 1, 'optiond'),
(56, 8, 10, 1, 'optionc'),
(56, 8, 11, 1, 'optiond'),
(56, 8, 12, 1, 'optiona'),
(56, 8, 13, 1, 'optionb'),
(56, 8, 14, 1, 'optiona'),
(56, 8, 15, 1, 'optionc'),
(56, 8, 16, 1, 'optionc'),
(56, 8, 17, 1, 'optione'),
(56, 8, 19, 1, 'optiona'),
(56, 8, 21, 1, 'optiona'),
(56, 8, 22, -0.33, 'optionb'),
(56, 8, 23, 1, 'optiona'),
(56, 8, 24, 1, 'optiona'),
(56, 8, 25, 1, 'optiond'),
(56, 8, 26, 1, 'optiond'),
(56, 8, 27, 1, 'optiond'),
(56, 8, 29, 1, 'optionb'),
(56, 8, 30, 1, 'optionc'),
(56, 8, 31, 1, 'optionc'),
(56, 8, 32, 1, 'optionb'),
(56, 8, 33, 1, 'optiona'),
(56, 8, 34, 1, 'optiond'),
(56, 8, 35, 1, 'optionc'),
(56, 8, 36, 1, 'optionc'),
(56, 8, 37, 1, 'optiond'),
(56, 8, 38, 1, 'optionb'),
(56, 8, 39, 1, 'optiond'),
(56, 8, 40, 1, 'optionc'),
(56, 8, 41, 1, 'optiona'),
(56, 8, 42, 1, 'optiond'),
(56, 8, 43, 1, 'optionb'),
(56, 8, 44, -0.33, 'optiona'),
(56, 8, 45, 1, 'optiond'),
(56, 9, 1, -0.66, 'optionb'),
(56, 9, 2, 2, 'optionb'),
(56, 9, 3, 2, 'optiona'),
(56, 9, 4, -0.66, 'optionb'),
(56, 9, 5, 2, 'optiond'),
(56, 9, 6, 2, 'optiond'),
(56, 9, 7, 2, 'optionc'),
(56, 9, 8, -0.66, 'optionc'),
(56, 9, 9, 2, 'optionb'),
(56, 9, 10, 2, 'optionc'),
(56, 9, 12, 2, 'optiona'),
(56, 9, 16, -0.66, 'optiond'),
(56, 9, 17, -0.66, 'optiond'),
(56, 9, 23, 2, 'optionc'),
(56, 9, 26, 2, 'optionc'),
(56, 9, 28, -0.66, 'optionc'),
(56, 9, 29, 2, 'optionc'),
(56, 9, 30, 2, 'optionb'),
(56, 9, 31, -0.66, 'optiond'),
(56, 9, 32, 2, 'optionb'),
(56, 9, 34, 2, 'optiond'),
(56, 9, 35, 2, 'optionb'),
(56, 9, 37, 2, 'optionb'),
(56, 9, 46, 2, 'optiond'),
(56, 10, 1, -0.66, 'optionc'),
(56, 10, 2, 2, 'optionb'),
(56, 10, 3, 2, 'optiond'),
(56, 10, 4, -0.66, 'optione'),
(56, 10, 5, 2, 'optionb'),
(56, 10, 6, 2, 'optionb'),
(56, 10, 8, 2, 'optione'),
(56, 10, 9, 2, 'optionc'),
(56, 10, 10, 2, 'optiond'),
(56, 10, 11, 2, 'optionc'),
(56, 10, 12, 2, 'optionb'),
(56, 10, 13, 2, 'optionc'),
(56, 10, 14, 2, 'optionb'),
(56, 10, 15, 2, 'optiond'),
(56, 10, 16, 2, 'optiona'),
(56, 10, 17, -0.66, 'optiond'),
(56, 10, 19, 2, 'optiona'),
(56, 10, 21, 2, 'optionb'),
(56, 10, 22, 2, 'optionb'),
(56, 10, 23, 2, 'optiond'),
(56, 10, 24, -0.66, 'optionc'),
(56, 11, 1, 2, 'optionb'),
(56, 11, 2, 2, 'optionc'),
(56, 11, 3, 2, 'optiona'),
(56, 11, 4, 2, 'optiond'),
(56, 11, 5, 2, 'optionb'),
(56, 11, 6, 2, 'optionb'),
(56, 11, 7, -0.66, 'optiona'),
(56, 11, 8, 2, 'optiona'),
(56, 11, 9, 2, 'optionc'),
(56, 11, 10, 2, 'optiona'),
(56, 11, 11, 2, 'optiona'),
(56, 11, 12, 2, 'optiona'),
(56, 11, 13, 2, 'optionb'),
(56, 11, 14, -0.66, 'optiond'),
(56, 11, 15, -0.66, 'optiona'),
(56, 11, 17, 2, 'optiona'),
(56, 11, 18, 2, 'optionb'),
(56, 11, 19, 2, 'optionb'),
(56, 11, 20, 2, 'optiona'),
(56, 11, 21, 2, 'optionc'),
(56, 11, 22, 2, 'optiona'),
(56, 11, 23, -0.66, 'optiona'),
(56, 11, 24, 2, 'optiona'),
(56, 11, 25, 2, 'optionb'),
(56, 11, 26, 2, 'optionc'),
(56, 11, 27, 2, 'optione'),
(56, 11, 28, 2, 'optiona'),
(56, 11, 29, 2, 'optiond'),
(56, 11, 30, 2, 'optiond'),
(56, 11, 31, 2, 'optione'),
(56, 11, 32, 2, 'optionc'),
(56, 11, 33, 2, 'optiond'),
(56, 11, 34, 2, 'optiond'),
(56, 11, 35, 2, 'optiond'),
(56, 11, 36, 2, 'optione'),
(56, 11, 37, -0.66, 'optiond'),
(56, 11, 38, 2, 'optiona'),
(56, 11, 39, 2, 'optiona'),
(56, 11, 40, 2, 'optiond'),
(56, 11, 41, 2, 'optionc'),
(56, 11, 42, 2, 'optione'),
(56, 11, 43, 2, 'optiond'),
(56, 11, 44, 2, 'optionb'),
(56, 11, 45, 2, 'optiona'),
(56, 11, 46, 2, 'optiona'),
(56, 11, 47, 2, 'optione'),
(56, 11, 48, 2, 'optiond'),
(56, 11, 49, 2, 'optiond'),
(56, 11, 50, 2, 'optionc'),
(56, 11, 51, 2, 'optiond'),
(56, 11, 52, 2, 'optionb'),
(56, 11, 53, 2, 'optionc'),
(56, 11, 54, 2, 'optionb'),
(56, 11, 55, 2, 'optionb'),
(56, 11, 56, 2, 'optione'),
(56, 11, 57, 2, 'optionc'),
(56, 11, 58, 2, 'optione'),
(56, 11, 60, 2, 'optiond'),
(56, 12, 6, 2, 'optiond'),
(56, 12, 7, 2, 'optionb'),
(56, 12, 8, -0.66, 'optionc'),
(56, 12, 9, 2, 'optiona'),
(56, 12, 10, -0.66, 'optionc'),
(56, 12, 11, 2, 'optionb'),
(56, 12, 12, -0.66, 'optiona'),
(56, 12, 13, 2, 'optionb'),
(56, 12, 14, 2, 'optiona'),
(56, 12, 15, 2, 'optiond'),
(56, 12, 16, 2, 'optionc'),
(56, 12, 17, 2, 'optionc'),
(56, 12, 18, 2, 'optiond'),
(56, 12, 19, 2, 'optionb'),
(56, 12, 20, 2, 'optionb'),
(56, 12, 21, 2, 'optiona'),
(56, 12, 22, 2, 'optiond'),
(56, 12, 23, 2, 'optionb'),
(56, 12, 24, 2, 'optiona'),
(56, 12, 25, 2, 'optionc'),
(56, 12, 26, 2, 'optionb'),
(56, 12, 27, 2, 'optionc'),
(56, 12, 28, 2, 'optiond'),
(56, 12, 30, 2, 'optionb'),
(56, 12, 31, 2, 'optionc'),
(56, 12, 32, 2, 'optionc'),
(56, 12, 33, 2, 'optiond'),
(56, 12, 34, 2, 'optiond'),
(56, 12, 35, 2, 'optiond'),
(56, 12, 36, 2, 'optionc'),
(56, 12, 38, 2, 'optionc'),
(56, 12, 40, 2, 'optiona'),
(56, 12, 41, 2, 'optionb'),
(56, 12, 42, 2, 'optiona'),
(56, 12, 43, -0.66, 'optionc'),
(56, 12, 44, -0.66, 'optionc'),
(56, 12, 45, 2, 'optiond'),
(56, 12, 46, 2, 'optiond'),
(56, 12, 47, 2, 'optionc'),
(56, 12, 50, 2, 'optionb'),
(56, 12, 51, 2, 'optionc'),
(56, 12, 52, 2, 'optionb'),
(56, 12, 53, 2, 'optiona'),
(56, 12, 54, 2, 'optiona'),
(56, 13, 1, -0.66, 'optiond'),
(56, 13, 3, -0.66, 'optiond'),
(56, 13, 5, -0.66, 'optiond'),
(56, 13, 6, -0.66, 'optiona'),
(56, 13, 7, -0.66, 'optionc'),
(56, 13, 8, 2, 'optionc'),
(56, 13, 9, 2, 'optione'),
(56, 13, 10, 2, 'optione'),
(56, 13, 11, 2, 'optiond'),
(56, 13, 12, 2, 'optiona'),
(56, 13, 13, 2, 'optiond'),
(56, 13, 14, -0.66, 'optione'),
(56, 13, 15, -0.66, 'optiona'),
(56, 13, 24, -0.66, 'optiond'),
(56, 13, 25, 2, 'optiona'),
(56, 13, 26, -0.66, 'optionc'),
(56, 13, 27, 2, 'optiond'),
(56, 13, 28, 2, 'optionc'),
(56, 13, 29, -0.66, 'optiond'),
(56, 13, 30, 2, 'optiona'),
(56, 13, 31, 2, 'optiond'),
(56, 13, 32, 2, 'optiona'),
(56, 13, 33, 2, 'optionb'),
(56, 13, 34, 2, 'optiona'),
(56, 13, 35, 2, 'optionc'),
(56, 13, 36, 2, 'optionc'),
(56, 13, 38, 2, 'optionb'),
(56, 13, 39, 2, 'optiona'),
(56, 13, 40, 2, 'optiond'),
(56, 15, 2, 1, 'optiond'),
(56, 15, 3, 1, 'optionc'),
(56, 15, 4, 1, 'optiona'),
(56, 15, 5, 1, 'optionb'),
(56, 15, 6, 1, 'optiona'),
(56, 15, 7, -0.33, 'optiond'),
(56, 15, 8, 1, 'optiona'),
(56, 15, 9, 1, 'optionb'),
(56, 15, 10, 1, 'optiona'),
(56, 15, 11, 1, 'optiond'),
(56, 15, 12, -0.33, 'optionb'),
(56, 15, 13, 1, 'optionb'),
(56, 15, 14, 1, 'optionc'),
(56, 15, 15, 1, 'optiond'),
(56, 15, 16, -0.33, 'optiona'),
(56, 15, 17, 1, 'optionb'),
(56, 15, 18, 1, 'optionb'),
(56, 15, 19, 1, 'optionc'),
(56, 15, 20, 1, 'optionb'),
(56, 15, 21, 1, 'optiona'),
(56, 15, 22, 1, 'optionb'),
(56, 15, 23, -0.33, 'optiond'),
(56, 15, 24, 1, 'optiona'),
(56, 15, 25, 1, 'optiond'),
(56, 15, 26, 2, 'optiona'),
(56, 15, 27, 2, 'optiona'),
(56, 15, 28, 2, 'optiond'),
(56, 15, 29, 2, 'optiond'),
(56, 15, 30, 2, 'optionb'),
(56, 15, 31, -0.66, 'optiond'),
(56, 15, 32, 2, 'optiona'),
(56, 15, 33, 2, 'optionc'),
(56, 15, 35, 2, 'optionc'),
(56, 15, 36, 2, 'optiond'),
(56, 15, 37, -0.66, 'optiona'),
(56, 15, 38, 2, 'optionc'),
(56, 15, 39, 2, 'optionb'),
(56, 15, 40, 2, 'optiond'),
(56, 15, 41, 2, 'optionc'),
(56, 15, 42, 2, 'optiona'),
(56, 15, 43, 2, 'optiona'),
(56, 15, 44, 2, 'optiond'),
(56, 15, 45, 2, 'optiona'),
(56, 15, 47, -0.66, 'optionc'),
(56, 15, 48, 2, 'optionc'),
(56, 15, 49, 2, 'optionc'),
(56, 15, 50, 2, 'optiond'),
(56, 15, 51, -0.66, 'optionc'),
(56, 15, 52, 2, 'optionc'),
(56, 15, 53, 2, 'optionc'),
(56, 15, 54, 2, 'optionc'),
(56, 15, 55, -0.66, 'optiona'),
(56, 15, 57, 1, 'optionb'),
(56, 15, 58, 1, 'optiond'),
(56, 15, 59, 1, 'optiond'),
(56, 15, 60, 1, 'optiona'),
(56, 15, 61, -0.66, 'optiona'),
(56, 15, 62, -0.66, 'optiona'),
(56, 15, 63, 2, 'optiond'),
(56, 15, 64, -0.66, 'optionc'),
(56, 16, 1, 1, 'optionc'),
(56, 16, 3, 1, 'optiond'),
(56, 16, 4, 1, 'optiond'),
(56, 16, 6, 1, 'optionb'),
(56, 16, 8, 1, 'optiona'),
(56, 16, 9, 1, 'optionc'),
(56, 16, 10, 1, 'optionc'),
(56, 16, 11, -0.33, 'optionc'),
(56, 16, 12, 1, 'optiond'),
(56, 16, 13, 1, 'optionb'),
(56, 16, 14, 1, 'optiond'),
(56, 16, 16, 1, 'optiond'),
(56, 16, 17, 1, 'optiona'),
(56, 16, 19, 1, 'optiond'),
(56, 16, 21, 1, 'optiond'),
(56, 16, 22, 1, 'optionb'),
(56, 16, 25, 1, 'optionb'),
(56, 16, 26, 2, 'optiona'),
(56, 16, 27, -0.66, 'optionc'),
(56, 16, 28, 2, 'optiond'),
(56, 16, 29, 2, 'optiond'),
(56, 16, 30, -0.66, 'optiona'),
(56, 16, 35, 2, 'optionb'),
(56, 16, 38, -0.66, 'optiona'),
(56, 16, 40, 2, 'optiona'),
(56, 16, 43, 2, 'optiona'),
(56, 16, 44, 2, 'optiond'),
(56, 16, 45, 2, 'optiona'),
(56, 16, 46, -0.66, 'optiond'),
(56, 16, 47, 2, 'optionc'),
(56, 16, 48, 2, 'optiona'),
(56, 16, 50, -0.66, 'optionb'),
(56, 16, 51, -0.66, 'optionc'),
(56, 16, 52, 2, 'optiona'),
(56, 16, 53, 2, 'optionb'),
(56, 16, 54, 2, 'optionc'),
(56, 16, 56, 1, 'optiond'),
(56, 16, 57, 1, 'optionc'),
(56, 16, 61, 2, 'optionb'),
(56, 16, 62, 2, 'optiond'),
(56, 16, 63, 2, 'optionc'),
(56, 17, 1, 1, 'optiona'),
(56, 17, 2, 1, 'optionb'),
(56, 17, 3, 1, 'optionb'),
(56, 17, 4, 1, 'optionc'),
(56, 17, 5, 1, 'optionc'),
(56, 17, 6, 1, 'optiona'),
(56, 17, 7, 1, 'optionc'),
(56, 17, 8, 1, 'optiona'),
(56, 17, 9, 1, 'optionb'),
(56, 17, 10, 1, 'optiona'),
(56, 17, 11, 1, 'optiond'),
(56, 17, 12, 1, 'optiona'),
(56, 17, 13, 1, 'optionb'),
(56, 17, 14, 1, 'optionc'),
(56, 17, 16, 1, 'optionb'),
(56, 17, 17, 1, 'optiona'),
(56, 17, 18, -0.33, 'optiona'),
(56, 17, 19, 1, 'optionb'),
(56, 17, 20, -0.33, 'optionb'),
(56, 17, 21, -0.33, 'optiond'),
(56, 17, 22, 1, 'optionb'),
(56, 17, 23, 1, 'optiond'),
(56, 17, 25, 1, 'optionb'),
(56, 17, 26, 2, 'optionc'),
(56, 17, 27, 2, 'optionc'),
(56, 17, 28, -0.66, 'optionb'),
(56, 17, 29, -0.66, 'optionb'),
(56, 17, 30, 2, 'optiona'),
(56, 17, 32, -0.66, 'optionc'),
(56, 17, 33, 2, 'optiona'),
(56, 17, 34, -0.66, 'optionc'),
(56, 17, 35, 2, 'optionb'),
(56, 17, 36, 2, 'optiond'),
(56, 17, 37, 2, 'optionc'),
(56, 17, 38, -0.66, 'optiona'),
(56, 17, 41, 2, 'optionc'),
(56, 17, 42, 2, 'optionb'),
(56, 17, 44, 2, 'optionb'),
(56, 17, 45, 2, 'optionb'),
(56, 17, 47, -0.66, 'optionb'),
(56, 17, 48, 2, 'optiond'),
(56, 17, 50, 2, 'optiond'),
(56, 17, 51, 2, 'optionc'),
(56, 17, 52, 2, 'optiond'),
(56, 17, 53, 2, 'optiona'),
(56, 17, 54, 2, 'optiond'),
(56, 17, 55, 2, 'optiona'),
(56, 17, 57, -0.33, 'optiond'),
(56, 17, 59, -0.33, 'optionb'),
(56, 17, 61, 2, 'optionb'),
(56, 17, 63, 2, 'optiona'),
(56, 17, 64, -0.66, 'optiona'),
(56, 17, 65, 2, 'optiond'),
(56, 18, 2, 1, 'optiond'),
(56, 18, 3, 1, 'optionb'),
(56, 18, 4, 1, 'optiona'),
(56, 18, 6, 1, 'optionc'),
(56, 18, 8, 1, 'optionb'),
(56, 18, 9, -0.33, 'optiona'),
(56, 18, 10, 1, 'optionb'),
(56, 18, 11, 1, 'optionb'),
(56, 18, 12, 1, 'optiona'),
(56, 18, 13, -0.33, 'optionb'),
(56, 18, 15, 1, 'optionc'),
(56, 18, 16, -0.33, 'optiona'),
(56, 18, 17, -0.33, 'optionc'),
(56, 18, 18, 1, 'optiona'),
(56, 18, 19, 1, 'optionc'),
(56, 18, 20, 1, 'optionb'),
(56, 18, 21, 1, 'optiond'),
(56, 18, 22, 1, 'optiond'),
(56, 18, 23, 1, 'optiond'),
(56, 18, 24, 1, 'optionc'),
(56, 18, 25, 1, 'optionc'),
(56, 18, 26, 2, 'optionb'),
(56, 18, 27, 2, 'optiond'),
(56, 18, 28, 2, 'optiona'),
(56, 18, 29, 2, 'optiond'),
(56, 18, 31, 2, 'optiona'),
(56, 18, 32, 2, 'optionb'),
(56, 18, 33, 2, 'optiond'),
(56, 18, 34, 2, 'optiona'),
(56, 18, 36, -0.66, 'optionb'),
(56, 18, 38, 2, 'optionb'),
(56, 18, 39, 2, 'optiona'),
(56, 18, 42, 2, 'optionb'),
(56, 18, 43, -0.66, 'optionc'),
(56, 18, 44, 2, 'optionc'),
(56, 18, 45, -0.66, 'optionc'),
(56, 18, 46, -0.66, 'optionb'),
(56, 18, 47, 2, 'optiond'),
(56, 18, 48, 2, 'optionb'),
(56, 18, 49, 2, 'optionc'),
(56, 18, 50, 2, 'optionc'),
(56, 18, 51, -0.66, 'optiond'),
(56, 18, 54, 2, 'optiona'),
(56, 18, 56, 1, 'optione'),
(56, 18, 58, 1, 'optionc'),
(56, 18, 59, 1, 'optionc'),
(56, 18, 60, 1, 'optiona'),
(56, 18, 61, 2, 'optionb'),
(56, 18, 62, 2, 'optiond'),
(56, 18, 64, 2, 'optionb'),
(56, 18, 65, 2, 'optiond'),
(59, 8, 1, -0.33, 'optionc'),
(59, 8, 2, -0.33, 'optionb'),
(59, 8, 3, 1, 'optionb'),
(59, 8, 4, -0.33, 'optionb'),
(59, 8, 5, -0.33, 'optiona'),
(59, 8, 6, 1, 'optiond'),
(59, 8, 7, -0.33, 'optiond'),
(59, 8, 8, -0.33, 'optionc'),
(59, 8, 9, -0.33, 'optionb'),
(59, 8, 11, 1, 'optiond'),
(59, 8, 12, 1, 'optiona'),
(59, 8, 13, 1, 'optionb'),
(59, 8, 14, 1, 'optiona'),
(59, 8, 15, 1, 'optionc'),
(59, 8, 17, -0.33, 'optionc'),
(59, 8, 18, -0.33, 'optiond'),
(59, 8, 19, -0.33, 'optionc'),
(59, 8, 26, -0.33, 'optione'),
(59, 8, 27, 1, 'optiond'),
(59, 8, 29, 1, 'optionb'),
(59, 8, 30, -0.33, 'optionb'),
(59, 8, 31, -0.33, 'optiond'),
(59, 8, 32, 1, 'optionb'),
(59, 8, 34, -0.33, 'optiona'),
(59, 8, 35, -0.33, 'optionb'),
(59, 8, 36, 1, 'optionc'),
(59, 8, 37, -0.33, 'optionb'),
(59, 8, 38, 1, 'optionb'),
(59, 8, 39, -0.33, 'optionc'),
(59, 8, 40, -0.33, 'optionb'),
(59, 8, 41, 1, 'optiona'),
(59, 8, 42, -0.33, 'optionc'),
(59, 8, 43, 1, 'optionb'),
(59, 8, 44, -0.33, 'optiona'),
(59, 8, 45, -0.33, 'optionc'),
(59, 9, 2, 2, 'optionb'),
(59, 9, 5, 2, 'optiond'),
(59, 9, 7, 2, 'optionc'),
(59, 9, 8, -0.66, 'optiond'),
(59, 9, 9, -0.66, 'optiona'),
(59, 9, 10, -0.66, 'optionb'),
(59, 9, 11, -0.66, 'optionb'),
(59, 9, 12, -0.66, 'optionc'),
(59, 9, 14, -0.66, 'optiond'),
(59, 9, 17, -0.66, 'optionc'),
(59, 9, 18, -0.66, 'optionc'),
(59, 9, 19, -0.66, 'optiond'),
(59, 9, 20, -0.66, 'optiona'),
(59, 9, 21, -0.66, 'optiona'),
(59, 9, 22, -0.66, 'optiond'),
(59, 9, 26, 2, 'optionc'),
(59, 9, 27, -0.66, 'optionb'),
(59, 9, 28, 2, 'optionb'),
(59, 9, 30, 2, 'optionb'),
(59, 9, 31, -0.66, 'optionc'),
(59, 9, 32, -0.66, 'optionc'),
(59, 9, 33, -0.66, 'optionb'),
(59, 9, 35, -0.66, 'optiona'),
(59, 9, 36, -0.66, 'optiond'),
(59, 9, 37, -0.66, 'optiond'),
(59, 9, 38, 2, 'optionc'),
(59, 9, 40, 2, 'optionc'),
(59, 9, 42, -0.66, 'optiona'),
(59, 9, 43, -0.66, 'optiona'),
(59, 9, 44, 2, 'optionc'),
(59, 9, 45, -0.66, 'optionb'),
(59, 9, 46, 2, 'optiond'),
(59, 9, 47, -0.66, 'optionb'),
(59, 9, 50, -0.66, 'optiona'),
(59, 9, 51, 2, 'optionb'),
(59, 9, 52, 2, 'optionb'),
(59, 9, 53, -0.66, 'optionb'),
(59, 9, 54, -0.66, 'optionc'),
(59, 10, 1, 2, 'optione'),
(59, 10, 5, 2, 'optionb'),
(59, 10, 6, -0.66, 'optionc'),
(59, 10, 7, -0.66, 'optionb'),
(59, 10, 8, -0.66, 'optiond'),
(59, 10, 9, 2, 'optionc'),
(59, 10, 10, 2, 'optiond'),
(59, 10, 11, -0.66, 'optiona'),
(59, 10, 12, 2, 'optionb'),
(59, 10, 15, -0.66, 'optionc'),
(59, 10, 16, 2, 'optiona'),
(59, 10, 17, -0.66, 'optiond'),
(59, 10, 18, -0.66, 'optionc'),
(59, 10, 19, 2, 'optiona'),
(59, 10, 21, -0.66, 'optiona'),
(59, 10, 22, -0.66, 'optionc'),
(59, 10, 23, 2, 'optiond'),
(59, 11, 1, 2, 'optionb'),
(59, 11, 2, 2, 'optionc'),
(59, 11, 4, 2, 'optiond'),
(59, 11, 5, 2, 'optionb'),
(59, 11, 6, 2, 'optionb'),
(59, 11, 7, 2, 'optionb'),
(59, 11, 8, 2, 'optiona'),
(59, 11, 9, -0.66, 'optiond'),
(59, 11, 14, 2, 'optionc'),
(59, 11, 15, 2, 'optionc'),
(59, 11, 17, 2, 'optiona'),
(59, 11, 21, -0.66, 'optiond'),
(59, 11, 22, 2, 'optiona'),
(59, 11, 24, -0.66, 'optionb'),
(59, 11, 26, 2, 'optionc'),
(59, 11, 27, 2, 'optione'),
(59, 11, 28, -0.66, 'optiond'),
(59, 11, 29, 2, 'optiond'),
(59, 11, 30, -0.66, 'optionb'),
(59, 11, 31, -0.66, 'optionc'),
(59, 11, 32, 2, 'optionc'),
(59, 11, 33, 2, 'optiond'),
(59, 11, 34, 2, 'optiond'),
(59, 11, 35, 2, 'optiond'),
(59, 11, 36, -0.66, 'optionb'),
(59, 11, 37, -0.66, 'optionc'),
(59, 11, 38, -0.66, 'optione'),
(59, 11, 41, -0.66, 'optiond'),
(59, 11, 42, 2, 'optione'),
(59, 11, 43, 2, 'optiond'),
(59, 11, 44, -0.66, 'optionc'),
(59, 11, 46, 2, 'optiona'),
(59, 11, 47, -0.66, 'optiond'),
(59, 11, 49, -0.66, 'optiona'),
(59, 11, 51, -0.66, 'optionc'),
(59, 11, 52, -0.66, 'optionc'),
(59, 11, 55, -0.66, 'optionc'),
(59, 11, 58, -0.66, 'optionb'),
(59, 11, 59, -0.66, 'optiond'),
(59, 11, 60, -0.66, 'optione'),
(60, 7, 1, 1, 'optionc'),
(60, 7, 2, -0.33, 'optionc'),
(60, 7, 3, -0.33, 'optiond'),
(60, 7, 4, -0.33, 'optionb'),
(60, 7, 5, -0.33, 'optionc'),
(60, 7, 6, 1, 'optionb'),
(60, 7, 7, 1, 'optionb'),
(60, 7, 8, -0.33, 'optiona'),
(60, 7, 11, 1, 'optiona'),
(60, 7, 13, -0.33, 'optionb'),
(60, 7, 15, 1, 'optionb'),
(60, 7, 16, 1, 'optiona'),
(60, 7, 17, 1, 'optionc'),
(60, 7, 18, 1, 'optiona'),
(60, 7, 19, 1, 'optiond'),
(60, 7, 20, 1, 'optiona'),
(60, 7, 21, 1, 'optiond'),
(60, 7, 22, -0.33, 'optiona'),
(60, 7, 23, 1, 'optiond'),
(60, 7, 24, 1, 'optiona'),
(60, 7, 25, -0.33, 'optionb'),
(60, 7, 26, 2, 'optiona'),
(60, 7, 28, 2, 'optiona'),
(60, 7, 31, 2, 'optiona'),
(60, 7, 34, -0.66, 'optionc'),
(60, 7, 35, 2, 'optionc'),
(60, 7, 36, 2, 'optionc'),
(60, 7, 37, -0.66, 'optiona'),
(60, 7, 39, -0.66, 'optiona'),
(60, 7, 41, 2, 'optionc'),
(60, 7, 42, 2, 'optionc'),
(60, 7, 43, 2, 'optionb'),
(60, 7, 44, 2, 'optionb'),
(60, 7, 45, 2, 'optiond'),
(60, 7, 47, 2, 'optionb'),
(60, 7, 52, -0.66, 'optionb'),
(60, 7, 53, -0.66, 'optiona'),
(60, 7, 54, 2, 'optiond'),
(60, 7, 56, -0.33, 'optiona'),
(60, 7, 57, 1, 'optionc'),
(60, 7, 62, 2, 'optionc'),
(60, 7, 63, -0.66, 'optiona'),
(60, 7, 64, 2, 'optionc'),
(60, 7, 65, 2, 'optionb'),
(60, 8, 1, 1, 'optione'),
(60, 8, 2, -0.33, 'optionb'),
(60, 8, 3, 1, 'optionb'),
(60, 8, 4, 1, 'optiond'),
(60, 8, 5, 1, 'optionc'),
(60, 8, 6, 1, 'optiond'),
(60, 8, 7, 1, 'optionb'),
(60, 8, 8, -0.33, 'optiona'),
(60, 8, 9, 1, 'optiond'),
(60, 8, 10, 1, 'optionc'),
(60, 8, 11, 1, 'optiond'),
(60, 8, 12, 1, 'optiona'),
(60, 8, 13, 1, 'optionb'),
(60, 8, 14, 1, 'optiona'),
(60, 8, 15, -0.33, 'optiond'),
(60, 8, 16, 1, 'optionc'),
(60, 8, 17, -0.33, 'optiond'),
(60, 8, 18, 1, 'optione'),
(60, 8, 19, 1, 'optiona'),
(60, 8, 26, 1, 'optiond'),
(60, 8, 27, -0.33, 'optione'),
(60, 8, 29, 1, 'optionb'),
(60, 8, 30, 1, 'optionc'),
(60, 8, 31, 1, 'optionc'),
(60, 8, 32, 1, 'optionb'),
(60, 8, 33, 1, 'optiona'),
(60, 8, 34, 1, 'optiond'),
(60, 8, 35, 1, 'optionc'),
(60, 8, 36, -0.33, 'optionb'),
(60, 8, 37, -0.33, 'optionb'),
(60, 8, 38, 1, 'optionb'),
(60, 8, 39, 1, 'optiond'),
(60, 8, 40, 1, 'optionc'),
(60, 8, 41, 1, 'optiona'),
(60, 8, 42, 1, 'optiond'),
(60, 8, 43, -0.33, 'optiona'),
(60, 8, 44, 1, 'optionb'),
(60, 8, 45, 1, 'optiond'),
(60, 9, 2, 2, 'optionb'),
(60, 9, 4, 2, 'optiona'),
(60, 9, 5, 2, 'optiond'),
(60, 9, 8, -0.66, 'optiona'),
(60, 9, 9, 2, 'optionb'),
(60, 9, 11, 2, 'optiona'),
(60, 9, 12, 2, 'optiona'),
(60, 9, 21, 2, 'optionc'),
(60, 9, 24, 2, 'optionc'),
(60, 9, 26, 2, 'optionc'),
(60, 9, 30, 2, 'optionb'),
(60, 9, 31, -0.66, 'optionc'),
(60, 9, 35, 2, 'optionb'),
(60, 9, 37, 2, 'optionb'),
(60, 9, 39, 2, 'optiond'),
(60, 9, 43, -0.66, 'optiona'),
(60, 9, 47, 2, 'optionc'),
(60, 10, 1, 2, 'optione'),
(60, 10, 2, 2, 'optionb'),
(60, 10, 3, 2, 'optiond'),
(60, 10, 4, -0.66, 'optione'),
(60, 10, 5, 2, 'optionb'),
(60, 10, 6, 2, 'optionb'),
(60, 10, 7, 2, 'optiona'),
(60, 10, 9, -0.66, 'optiond'),
(60, 10, 10, 2, 'optiond'),
(60, 10, 11, 2, 'optionc'),
(60, 10, 12, 2, 'optionb'),
(60, 10, 13, 2, 'optionc'),
(60, 10, 14, 2, 'optionb'),
(60, 10, 15, 2, 'optiond'),
(60, 10, 16, 2, 'optiona'),
(60, 10, 18, -0.66, 'optiond'),
(60, 10, 19, 2, 'optiona'),
(60, 10, 21, 2, 'optionb'),
(60, 10, 22, 2, 'optionb'),
(60, 10, 23, -0.66, 'optionc'),
(60, 10, 24, -0.66, 'optiond'),
(60, 11, 1, 2, 'optionb'),
(60, 11, 2, 2, 'optionc'),
(60, 11, 3, -0.66, 'optionc'),
(60, 11, 4, 2, 'optiond'),
(60, 11, 5, 2, 'optionb'),
(60, 11, 6, 2, 'optionb'),
(60, 11, 8, 2, 'optiona'),
(60, 11, 9, 2, 'optionc'),
(60, 11, 10, 2, 'optiona'),
(60, 11, 11, 2, 'optiona'),
(60, 11, 12, 2, 'optiona'),
(60, 11, 15, 2, 'optionc'),
(60, 11, 17, 2, 'optiona'),
(60, 11, 18, -0.66, 'optiond'),
(60, 11, 19, -0.66, 'optiona'),
(60, 11, 21, 2, 'optionc'),
(60, 11, 22, -0.66, 'optiond'),
(60, 11, 23, 2, 'optionc'),
(60, 11, 24, -0.66, 'optionc'),
(60, 11, 25, 2, 'optionb'),
(60, 11, 26, 2, 'optionc'),
(60, 11, 27, 2, 'optione'),
(60, 11, 29, 2, 'optiond'),
(60, 11, 30, 2, 'optiond'),
(60, 11, 31, -0.66, 'optiond'),
(60, 11, 32, 2, 'optionc'),
(60, 11, 33, -0.66, 'optione'),
(60, 11, 34, 2, 'optiond'),
(60, 11, 35, 2, 'optiond'),
(60, 11, 36, -0.66, 'optiond'),
(60, 11, 37, -0.66, 'optionc'),
(60, 11, 38, 2, 'optiona'),
(60, 11, 39, 2, 'optiona'),
(60, 11, 40, 2, 'optiond'),
(60, 11, 41, 2, 'optionc'),
(60, 11, 42, 2, 'optione'),
(60, 11, 43, 2, 'optiond'),
(60, 11, 45, 2, 'optiona'),
(60, 11, 46, 2, 'optiona'),
(60, 11, 47, -0.66, 'optionb'),
(60, 11, 48, 2, 'optiond'),
(60, 11, 49, 2, 'optiond'),
(60, 11, 50, -0.66, 'optionb'),
(60, 11, 51, 2, 'optiond'),
(60, 11, 52, 2, 'optionb'),
(60, 11, 53, 2, 'optionc'),
(60, 11, 54, 2, 'optionb'),
(60, 11, 55, -0.66, 'optione'),
(60, 11, 56, 2, 'optione'),
(60, 11, 57, 2, 'optionc'),
(60, 11, 58, 2, 'optione'),
(60, 11, 60, -0.66, 'optionc'),
(60, 13, 1, 2, 'optionc'),
(60, 13, 2, 2, 'optionb'),
(60, 13, 3, -0.66, 'optionc'),
(60, 13, 5, -0.66, 'optiond'),
(60, 13, 6, -0.66, 'optiona'),
(60, 13, 8, 2, 'optionc'),
(60, 13, 11, 2, 'optiond'),
(60, 13, 12, -0.66, 'optionb'),
(60, 13, 13, -0.66, 'optiona'),
(60, 13, 20, -0.66, 'optiond'),
(60, 13, 22, -0.66, 'optionc'),
(60, 13, 24, -0.66, 'optiond'),
(60, 13, 25, 2, 'optiona'),
(60, 13, 26, -0.66, 'optionb'),
(60, 13, 27, 2, 'optiond'),
(60, 13, 28, 2, 'optionc'),
(60, 13, 29, 2, 'optionc'),
(60, 13, 30, 2, 'optiona'),
(60, 13, 32, 2, 'optiona'),
(60, 13, 33, 2, 'optionb'),
(60, 13, 35, -0.66, 'optiond'),
(60, 13, 36, 2, 'optionc'),
(60, 13, 38, 2, 'optionb'),
(60, 13, 39, 2, 'optiona'),
(60, 13, 40, 2, 'optiond'),
(60, 15, 1, -0.33, 'optiona'),
(60, 15, 2, 1, 'optiond'),
(60, 15, 3, 1, 'optionc'),
(60, 15, 4, 1, 'optiona'),
(60, 15, 6, 1, 'optiona'),
(60, 15, 7, 1, 'optionb'),
(60, 15, 9, 1, 'optionb'),
(60, 15, 11, -0.33, 'optionc'),
(60, 15, 12, 1, 'optionc'),
(60, 15, 13, 1, 'optionb'),
(60, 15, 14, 1, 'optionc'),
(60, 15, 15, 1, 'optiond'),
(60, 15, 16, 1, 'optiond'),
(60, 15, 17, -0.33, 'optiona'),
(60, 15, 18, 1, 'optionb'),
(60, 15, 19, 1, 'optionc'),
(60, 15, 20, 1, 'optionb'),
(60, 15, 21, 1, 'optiona'),
(60, 15, 22, 1, 'optionb'),
(60, 15, 23, -0.33, 'optiond'),
(60, 15, 24, 1, 'optiona'),
(60, 15, 25, 1, 'optiond'),
(60, 15, 27, 2, 'optiona'),
(60, 15, 29, -0.66, 'optiona'),
(60, 15, 30, 2, 'optionb'),
(60, 15, 31, -0.66, 'optiond'),
(60, 15, 33, -0.66, 'optionb'),
(60, 15, 35, 2, 'optionc'),
(60, 15, 37, 2, 'optionb'),
(60, 15, 38, 2, 'optionc'),
(60, 15, 39, -0.66, 'optiona'),
(60, 15, 40, 2, 'optiond'),
(60, 15, 41, 2, 'optionc'),
(60, 15, 43, 2, 'optiona'),
(60, 15, 45, 2, 'optiona'),
(60, 15, 47, -0.66, 'optionb'),
(60, 15, 48, 2, 'optionc'),
(60, 15, 49, -0.66, 'optionb'),
(60, 15, 50, -0.66, 'optionc'),
(60, 15, 51, 2, 'optionb'),
(60, 15, 52, 2, 'optionc'),
(60, 15, 53, -0.66, 'optiona'),
(60, 15, 54, 2, 'optionc'),
(60, 15, 57, -0.33, 'optiona'),
(60, 15, 58, 1, 'optiond'),
(60, 15, 59, 1, 'optiond'),
(60, 15, 61, -0.66, 'optiona'),
(60, 15, 62, 2, 'optionb'),
(60, 16, 1, 1, 'optionc'),
(60, 16, 2, 1, 'optionb'),
(60, 16, 3, 1, 'optiond'),
(60, 16, 4, 1, 'optiond'),
(60, 16, 10, -0.33, 'optionb'),
(60, 16, 11, 1, 'optionb'),
(60, 16, 13, -0.33, 'optionc'),
(60, 16, 14, -0.33, 'optionb'),
(60, 16, 15, -0.33, 'optiond'),
(60, 16, 16, 1, 'optiond'),
(60, 16, 17, -0.33, 'optionb'),
(60, 16, 18, -0.33, 'optiona'),
(60, 16, 19, -0.33, 'optionb'),
(60, 16, 20, -0.33, 'optiond'),
(60, 16, 21, 1, 'optiond'),
(60, 16, 22, 1, 'optionb'),
(60, 16, 23, 1, 'optionc'),
(60, 16, 24, -0.33, 'optiond'),
(60, 16, 25, -0.33, 'optionc'),
(60, 16, 27, -0.66, 'optionc'),
(60, 16, 28, -0.66, 'optiona'),
(60, 16, 30, 2, 'optiond'),
(60, 16, 31, -0.66, 'optionc'),
(60, 16, 32, -0.66, 'optionb'),
(60, 16, 34, -0.66, 'optionc'),
(60, 16, 35, -0.66, 'optiond'),
(60, 16, 36, 2, 'optionc'),
(60, 16, 37, 2, 'optionb'),
(60, 16, 38, 2, 'optionb'),
(60, 16, 40, -0.66, 'optionb'),
(60, 16, 44, 2, 'optiond'),
(60, 16, 45, 2, 'optiona'),
(60, 16, 46, -0.66, 'optiona'),
(60, 16, 48, -0.66, 'optiond'),
(60, 16, 49, 2, 'optionc'),
(60, 16, 50, 2, 'optiona'),
(60, 16, 54, -0.66, 'optiond'),
(60, 16, 57, 1, 'optionc'),
(60, 16, 60, -0.33, 'optiond'),
(60, 16, 62, 2, 'optiond'),
(60, 16, 63, -0.66, 'optionb'),
(60, 16, 64, 2, 'optionb'),
(60, 17, 1, 1, 'optiona'),
(60, 17, 2, 1, 'optionb'),
(60, 17, 3, 1, 'optionb'),
(60, 17, 4, -0.33, 'optiond'),
(60, 17, 5, 1, 'optionc'),
(60, 17, 6, 1, 'optiona'),
(60, 17, 8, 1, 'optiona'),
(60, 17, 9, 1, 'optionb'),
(60, 17, 10, -0.33, 'optionb'),
(60, 17, 12, -0.33, 'optionc'),
(60, 17, 13, 1, 'optionb'),
(60, 17, 18, 1, 'optionb'),
(60, 17, 19, 1, 'optionb'),
(60, 17, 21, -0.33, 'optiona'),
(60, 17, 22, 1, 'optionb'),
(60, 17, 23, 1, 'optiond'),
(60, 17, 24, -0.33, 'optionc'),
(60, 17, 25, -0.33, 'optiond'),
(60, 17, 26, 2, 'optionc'),
(60, 17, 28, 2, 'optiond'),
(60, 17, 29, 2, 'optiond'),
(60, 17, 31, 2, 'optiond'),
(60, 17, 32, 2, 'optiona'),
(60, 17, 33, 2, 'optiona'),
(60, 17, 35, -0.66, 'optionc'),
(60, 17, 37, 2, 'optionc'),
(60, 17, 38, -0.66, 'optiona'),
(60, 17, 40, -0.66, 'optiond'),
(60, 17, 41, 2, 'optionc'),
(60, 17, 44, 2, 'optionb'),
(60, 17, 45, 2, 'optionb'),
(60, 17, 46, -0.66, 'optiond'),
(60, 17, 47, -0.66, 'optiond'),
(60, 17, 48, -0.66, 'optionc'),
(60, 17, 50, -0.66, 'optiona'),
(60, 17, 52, 2, 'optiond'),
(60, 17, 53, 2, 'optiona'),
(60, 17, 54, 2, 'optiond'),
(60, 17, 55, 2, 'optiona'),
(60, 17, 56, 1, 'optiona'),
(60, 17, 57, -0.33, 'optiona'),
(60, 17, 58, 1, 'optionc'),
(60, 17, 65, -0.66, 'optionb'),
(60, 18, 2, 1, 'optiond'),
(60, 18, 3, 1, 'optionb'),
(60, 18, 4, 1, 'optiona'),
(60, 18, 6, 1, 'optionc'),
(60, 18, 7, 1, 'optionb'),
(60, 18, 9, 1, 'optiond'),
(60, 18, 10, 1, 'optionb'),
(60, 18, 11, -0.33, 'optiona'),
(60, 18, 12, 1, 'optiona'),
(60, 18, 13, 1, 'optiond'),
(60, 18, 14, 1, 'optionc'),
(60, 18, 15, -0.33, 'optionb'),
(60, 18, 17, 1, 'optionb'),
(60, 18, 19, 1, 'optionc'),
(60, 18, 20, -0.33, 'optiona'),
(60, 18, 21, 1, 'optiond'),
(60, 18, 22, 1, 'optiond'),
(60, 18, 24, 1, 'optionc'),
(60, 18, 25, 1, 'optionc'),
(60, 18, 26, 2, 'optionb'),
(60, 18, 27, 2, 'optiond'),
(60, 18, 29, 2, 'optiond'),
(60, 18, 30, 2, 'optionc'),
(60, 18, 31, 2, 'optiona'),
(60, 18, 32, 2, 'optionb'),
(60, 18, 33, 2, 'optiond'),
(60, 18, 34, 2, 'optiona'),
(60, 18, 35, -0.66, 'optiona'),
(60, 18, 38, 2, 'optionb'),
(60, 18, 42, 2, 'optionb'),
(60, 18, 43, -0.66, 'optionc'),
(60, 18, 45, -0.66, 'optionc'),
(60, 18, 47, 2, 'optiond'),
(60, 18, 48, -0.66, 'optionc'),
(60, 18, 49, 2, 'optionc'),
(60, 18, 50, -0.66, 'optiond'),
(60, 18, 51, -0.66, 'optionc'),
(60, 18, 54, 2, 'optiona'),
(60, 18, 56, -0.33, 'optionb'),
(60, 18, 57, 1, 'optionb'),
(60, 18, 58, 1, 'optionc'),
(60, 18, 59, -0.33, 'optiond'),
(60, 18, 60, 1, 'optiona'),
(60, 18, 61, 2, 'optionb'),
(60, 18, 63, -0.66, 'optionb'),
(60, 18, 65, 2, 'optiond'),
(62, 7, 1, -0.33, 'optionc'),
(62, 7, 4, 1, 'optiond'),
(62, 7, 5, -0.33, 'optiona'),
(62, 7, 6, -0.33, 'optiona'),
(62, 7, 8, 1, 'optionb'),
(62, 7, 9, 1, 'optiona'),
(62, 7, 10, 1, 'optionc'),
(62, 7, 11, 1, 'optiona'),
(62, 7, 12, -0.33, 'optiond'),
(62, 7, 13, -0.33, 'optionb'),
(62, 7, 14, 1, 'optionc'),
(62, 7, 16, 1, 'optiona'),
(62, 7, 17, 1, 'optionc'),
(62, 7, 18, 1, 'optiona'),
(62, 7, 19, 1, 'optiond'),
(62, 7, 20, 1, 'optiona'),
(62, 7, 22, 1, 'optiond'),
(62, 7, 23, -0.33, 'optionb'),
(62, 7, 24, 1, 'optiona'),
(62, 7, 26, 2, 'optiona'),
(62, 7, 27, -0.66, 'optiond'),
(62, 7, 28, 2, 'optiona'),
(62, 7, 29, -0.66, 'optiona'),
(62, 7, 30, -0.66, 'optionb'),
(62, 7, 31, 2, 'optiona'),
(62, 7, 34, -0.66, 'optiond'),
(62, 7, 35, 2, 'optionc'),
(62, 7, 36, 2, 'optionc'),
(62, 7, 38, 2, 'optiona'),
(62, 7, 39, -0.66, 'optionc'),
(62, 7, 40, 2, 'optionb'),
(62, 7, 41, -0.66, 'optiond'),
(62, 7, 42, 2, 'optionc'),
(62, 7, 43, 2, 'optionb'),
(62, 7, 44, 2, 'optionb'),
(62, 7, 45, 2, 'optiond'),
(62, 7, 47, 2, 'optionb'),
(62, 7, 48, 2, 'optionb'),
(62, 7, 50, 2, 'optionc'),
(62, 7, 51, 2, 'optionb'),
(62, 7, 52, 2, 'optiona'),
(62, 7, 53, 2, 'optionb'),
(62, 7, 54, 2, 'optiond'),
(62, 7, 55, -0.66, 'optionb'),
(62, 7, 56, -0.33, 'optiona'),
(62, 7, 59, 1, 'optiond'),
(62, 7, 61, -0.66, 'optionc'),
(62, 7, 62, 2, 'optionc'),
(62, 7, 63, 2, 'optiond'),
(62, 7, 64, 2, 'optionc'),
(62, 8, 1, -0.33, 'optionc'),
(62, 8, 2, -0.33, 'optionc'),
(62, 8, 3, 1, 'optionb'),
(62, 8, 4, 1, 'optiond'),
(62, 8, 5, 1, 'optionc'),
(62, 8, 6, 1, 'optiond'),
(62, 8, 7, 1, 'optionb'),
(62, 8, 9, 1, 'optiond'),
(62, 8, 10, 1, 'optionc'),
(62, 8, 11, 1, 'optiond'),
(62, 8, 12, 1, 'optiona'),
(62, 8, 13, 1, 'optionb'),
(62, 8, 14, 1, 'optiona'),
(62, 8, 15, 1, 'optionc'),
(62, 8, 16, 1, 'optionc'),
(62, 8, 17, -0.33, 'optionb'),
(62, 8, 18, 1, 'optione'),
(62, 8, 19, 1, 'optiona'),
(62, 8, 25, -0.33, 'optionb'),
(62, 8, 26, 1, 'optiond'),
(62, 8, 27, 1, 'optiond'),
(62, 8, 30, 1, 'optionc'),
(62, 8, 31, 1, 'optionc'),
(62, 8, 32, 1, 'optionb'),
(62, 8, 33, 1, 'optiona'),
(62, 8, 34, -0.33, 'optiona'),
(62, 8, 35, 1, 'optionc'),
(62, 8, 36, 1, 'optionc'),
(62, 8, 37, 1, 'optiond'),
(62, 8, 38, 1, 'optionb'),
(62, 8, 39, -0.33, 'optionc'),
(62, 8, 40, 1, 'optionc'),
(62, 8, 41, 1, 'optiona'),
(62, 8, 42, 1, 'optiond'),
(62, 8, 43, 1, 'optionb'),
(62, 8, 44, 1, 'optionb'),
(62, 8, 45, -0.33, 'optionc'),
(62, 9, 1, -0.66, 'optionb'),
(62, 9, 2, 2, 'optionb'),
(62, 9, 4, 2, 'optiona'),
(62, 9, 5, 2, 'optiond'),
(62, 9, 6, 2, 'optiond'),
(62, 9, 7, 2, 'optionc'),
(62, 9, 8, 2, 'optionb'),
(62, 9, 10, 2, 'optionc'),
(62, 9, 12, 2, 'optiona'),
(62, 9, 21, -0.66, 'optiona'),
(62, 9, 24, 2, 'optionc'),
(62, 9, 26, 2, 'optionc'),
(62, 9, 29, 2, 'optionc'),
(62, 9, 32, -0.66, 'optiond'),
(62, 9, 34, 2, 'optiond'),
(62, 9, 35, 2, 'optionb'),
(62, 9, 37, 2, 'optionb'),
(62, 9, 43, -0.66, 'optiona'),
(62, 9, 46, 2, 'optiond'),
(62, 9, 47, -0.66, 'optionb'),
(62, 9, 49, 2, 'optionb'),
(62, 9, 50, 2, 'optionb'),
(62, 9, 52, 2, 'optionb'),
(62, 9, 53, -0.66, 'optionb'),
(62, 9, 54, 2, 'optione'),
(62, 10, 1, -0.66, 'optionc'),
(62, 10, 2, 2, 'optionb'),
(62, 10, 3, 2, 'optiond'),
(62, 10, 4, 2, 'optionc'),
(62, 10, 6, 2, 'optionb'),
(62, 10, 8, -0.66, 'optiond'),
(62, 10, 9, -0.66, 'optiona'),
(62, 10, 10, -0.66, 'optionc'),
(62, 10, 11, 2, 'optionc'),
(62, 10, 12, -0.66, 'optionc'),
(62, 10, 14, 2, 'optionb'),
(62, 10, 15, 2, 'optiond'),
(62, 10, 16, 2, 'optiona'),
(62, 10, 17, 2, 'optionb'),
(62, 10, 21, 2, 'optionb'),
(62, 10, 22, 2, 'optionb'),
(62, 10, 23, -0.66, 'optionc'),
(62, 11, 1, 2, 'optionb'),
(62, 11, 2, 2, 'optionc'),
(62, 11, 3, -0.66, 'optionc'),
(62, 11, 4, 2, 'optiond'),
(62, 11, 5, 2, 'optionb'),
(62, 11, 6, 2, 'optionb'),
(62, 11, 7, 2, 'optionb'),
(62, 11, 8, 2, 'optiona'),
(62, 11, 9, 2, 'optionc'),
(62, 11, 11, 2, 'optiona'),
(62, 11, 12, 2, 'optiona'),
(62, 11, 13, 2, 'optionb'),
(62, 11, 14, -0.66, 'optiond'),
(62, 11, 15, 2, 'optionc'),
(62, 11, 17, 2, 'optiona'),
(62, 11, 18, 2, 'optionb'),
(62, 11, 19, 2, 'optionb'),
(62, 11, 20, 2, 'optiona'),
(62, 11, 21, 2, 'optionc'),
(62, 11, 22, 2, 'optiona'),
(62, 11, 23, 2, 'optionc'),
(62, 11, 24, 2, 'optiona'),
(62, 11, 25, 2, 'optionb'),
(62, 11, 26, 2, 'optionc'),
(62, 11, 27, 2, 'optione'),
(62, 11, 28, 2, 'optiona'),
(62, 11, 29, 2, 'optiond'),
(62, 11, 30, -0.66, 'optionc'),
(62, 11, 31, 2, 'optione'),
(62, 11, 32, -0.66, 'optione'),
(62, 11, 33, 2, 'optiond'),
(62, 11, 34, -0.66, 'optionc'),
(62, 11, 35, 2, 'optiond'),
(62, 11, 36, 2, 'optione'),
(62, 11, 37, -0.66, 'optionc'),
(62, 11, 38, 2, 'optiona'),
(62, 11, 39, 2, 'optiona'),
(62, 11, 41, 2, 'optionc'),
(62, 11, 42, 2, 'optione'),
(62, 11, 45, 2, 'optiona'),
(62, 11, 46, 2, 'optiona'),
(62, 11, 47, -0.66, 'optiona'),
(62, 11, 48, 2, 'optiond'),
(62, 11, 49, 2, 'optiond'),
(62, 11, 51, 2, 'optiond'),
(62, 11, 52, 2, 'optionb'),
(62, 11, 53, 2, 'optionc'),
(62, 11, 54, 2, 'optionb'),
(62, 11, 55, 2, 'optionb'),
(62, 11, 56, 2, 'optione'),
(62, 11, 57, 2, 'optionc'),
(62, 11, 58, 2, 'optione'),
(62, 11, 60, 2, 'optiond'),
(62, 12, 1, 2, 'optionc'),
(62, 12, 2, -0.66, 'optiona'),
(62, 12, 4, -0.66, 'optiona'),
(62, 12, 6, -0.66, 'optiona'),
(62, 12, 7, -0.66, 'optiond'),
(62, 12, 8, 2, 'optionb'),
(62, 12, 9, 2, 'optiona'),
(62, 12, 10, -0.66, 'optionc'),
(62, 12, 12, -0.66, 'optiona'),
(62, 12, 13, -0.66, 'optionc'),
(62, 12, 15, 2, 'optiond'),
(62, 12, 16, 2, 'optionc'),
(62, 12, 17, 2, 'optionc'),
(62, 12, 18, 2, 'optiond'),
(62, 12, 19, 2, 'optionb'),
(62, 12, 20, 2, 'optionb'),
(62, 12, 21, 2, 'optiona'),
(62, 12, 22, 2, 'optiond'),
(62, 12, 23, 2, 'optionb'),
(62, 12, 24, 2, 'optiona'),
(62, 12, 25, 2, 'optionc'),
(62, 12, 26, 2, 'optionb'),
(62, 12, 30, 2, 'optionb'),
(62, 12, 31, -0.66, 'optiond'),
(62, 12, 32, 2, 'optionc'),
(62, 12, 33, 2, 'optiond'),
(62, 12, 34, -0.66, 'optionb'),
(62, 12, 35, -0.66, 'optionb'),
(62, 12, 36, 2, 'optionc'),
(62, 12, 37, -0.66, 'optionb'),
(62, 12, 38, 2, 'optionc'),
(62, 12, 39, -0.66, 'optionb'),
(62, 12, 40, 2, 'optiona'),
(62, 12, 42, 2, 'optiona'),
(62, 12, 43, 2, 'optiond'),
(62, 12, 44, 2, 'optionb'),
(62, 12, 45, 2, 'optiond'),
(62, 12, 46, 2, 'optiond'),
(62, 12, 47, -0.66, 'optionb'),
(62, 12, 50, 2, 'optionb'),
(62, 12, 51, 2, 'optionc'),
(62, 12, 52, 2, 'optionb'),
(62, 12, 53, 2, 'optiona'),
(62, 13, 1, -0.66, 'optiond'),
(62, 13, 3, -0.66, 'optiond'),
(62, 13, 7, 2, 'optionb'),
(62, 13, 8, 2, 'optionc'),
(62, 13, 9, 2, 'optione'),
(62, 13, 10, 2, 'optione'),
(62, 13, 11, 2, 'optiond'),
(62, 13, 12, 2, 'optiona'),
(62, 13, 13, -0.66, 'optiona'),
(62, 13, 14, 2, 'optionb'),
(62, 13, 15, -0.66, 'optiona'),
(62, 13, 20, 2, 'optiona'),
(62, 13, 22, 2, 'optiona'),
(62, 13, 23, 2, 'optiona'),
(62, 13, 24, 2, 'optionc'),
(62, 13, 25, 2, 'optiona'),
(62, 13, 26, 2, 'optiond'),
(62, 13, 27, 2, 'optiond'),
(62, 13, 28, 2, 'optionc'),
(62, 13, 29, -0.66, 'optione'),
(62, 13, 30, -0.66, 'optionc'),
(62, 13, 32, 2, 'optiona'),
(62, 13, 33, -0.66, 'optiona'),
(62, 13, 34, 2, 'optiona'),
(62, 13, 35, 2, 'optionc'),
(62, 13, 36, 2, 'optionc'),
(62, 13, 38, 2, 'optionb'),
(62, 13, 39, 2, 'optiona'),
(62, 13, 40, 2, 'optiond'),
(62, 15, 1, 1, 'optionc'),
(62, 15, 2, 1, 'optiond'),
(62, 15, 3, 1, 'optionc'),
(62, 15, 4, 1, 'optiona'),
(62, 15, 5, 1, 'optionb'),
(62, 15, 6, 1, 'optiona'),
(62, 15, 7, -0.33, 'optiond'),
(62, 15, 8, 1, 'optiona'),
(62, 15, 9, 1, 'optionb'),
(62, 15, 10, 1, 'optiona'),
(62, 15, 11, 1, 'optiond'),
(62, 15, 12, -0.33, 'optiond'),
(62, 15, 13, 1, 'optionb'),
(62, 15, 14, 1, 'optionc'),
(62, 15, 15, 1, 'optiond'),
(62, 15, 16, 1, 'optiond'),
(62, 15, 17, 1, 'optionb'),
(62, 15, 18, 1, 'optionb'),
(62, 15, 19, 1, 'optionc'),
(62, 15, 20, 1, 'optionb'),
(62, 15, 21, 1, 'optiona'),
(62, 15, 22, 1, 'optionb'),
(62, 15, 23, 1, 'optiona'),
(62, 15, 24, 1, 'optiona'),
(62, 15, 25, 1, 'optiond'),
(62, 15, 26, 2, 'optiona'),
(62, 15, 27, 2, 'optiona'),
(62, 15, 28, 2, 'optiond'),
(62, 15, 29, -0.66, 'optiona'),
(62, 15, 30, 2, 'optionb'),
(62, 15, 31, 2, 'optiona'),
(62, 15, 32, 2, 'optiona'),
(62, 15, 33, 2, 'optionc'),
(62, 15, 35, 2, 'optionc'),
(62, 15, 36, 2, 'optiond'),
(62, 15, 37, -0.66, 'optiona'),
(62, 15, 38, 2, 'optionc'),
(62, 15, 39, 2, 'optionb'),
(62, 15, 40, 2, 'optiond'),
(62, 15, 41, 2, 'optionc'),
(62, 15, 42, 2, 'optiona'),
(62, 15, 43, 2, 'optiona'),
(62, 15, 44, 2, 'optiond'),
(62, 15, 45, -0.66, 'optionc'),
(62, 15, 46, 2, 'optionb'),
(62, 15, 47, 2, 'optiond'),
(62, 15, 48, 2, 'optionc'),
(62, 15, 49, 2, 'optionc'),
(62, 15, 50, -0.66, 'optiona'),
(62, 15, 51, 2, 'optionb'),
(62, 15, 52, 2, 'optionc'),
(62, 15, 53, 2, 'optionc'),
(62, 15, 54, 2, 'optionc'),
(62, 15, 55, 2, 'optionb'),
(62, 15, 58, 1, 'optiond'),
(62, 15, 59, 1, 'optiond'),
(62, 15, 61, 2, 'optionc'),
(62, 15, 62, 2, 'optionb'),
(62, 15, 63, 2, 'optiond'),
(62, 16, 1, 1, 'optionc'),
(62, 16, 3, -0.33, 'optionb'),
(62, 16, 4, 1, 'optiond'),
(62, 16, 6, 1, 'optionb'),
(62, 16, 7, -0.33, 'optionb'),
(62, 16, 8, 1, 'optiona'),
(62, 16, 9, 1, 'optionc'),
(62, 16, 11, -0.33, 'optiona'),
(62, 16, 12, 1, 'optiond'),
(62, 16, 13, 1, 'optionb'),
(62, 16, 14, 1, 'optiond'),
(62, 16, 16, 1, 'optiond'),
(62, 16, 17, -0.33, 'optionb'),
(62, 16, 19, 1, 'optiond'),
(62, 16, 20, 1, 'optiona'),
(62, 16, 21, 1, 'optiond'),
(62, 16, 22, 1, 'optionb'),
(62, 16, 23, -0.33, 'optionb'),
(62, 16, 28, -0.66, 'optionc'),
(62, 16, 29, 2, 'optiond'),
(62, 16, 30, 2, 'optiond'),
(62, 16, 32, 2, 'optiond'),
(62, 16, 35, 2, 'optionb'),
(62, 16, 36, -0.66, 'optiond'),
(62, 16, 37, 2, 'optionb'),
(62, 16, 38, 2, 'optionb'),
(62, 16, 40, 2, 'optiona'),
(62, 16, 41, 2, 'optionc'),
(62, 16, 43, 2, 'optiona'),
(62, 16, 44, 2, 'optiond'),
(62, 16, 45, 2, 'optiona'),
(62, 16, 46, 2, 'optionc'),
(62, 16, 47, -0.66, 'optiona'),
(62, 16, 48, 2, 'optiona'),
(62, 16, 50, 2, 'optiona'),
(62, 16, 51, -0.66, 'optionb'),
(62, 16, 52, 2, 'optiona'),
(62, 16, 53, 2, 'optionb'),
(62, 16, 61, 2, 'optionb'),
(62, 17, 1, 1, 'optiona'),
(62, 17, 2, 1, 'optionb'),
(62, 17, 3, 1, 'optionb'),
(62, 17, 4, -0.33, 'optionb'),
(62, 17, 5, -0.33, 'optiond'),
(62, 17, 6, 1, 'optiona'),
(62, 17, 7, -0.33, 'optionb'),
(62, 17, 8, 1, 'optiona'),
(62, 17, 9, -0.33, 'optiona'),
(62, 17, 10, -0.33, 'optionc'),
(62, 17, 11, 1, 'optiond'),
(62, 17, 12, -0.33, 'optionc'),
(62, 17, 13, 1, 'optionb'),
(62, 17, 14, 1, 'optionc'),
(62, 17, 17, 1, 'optiona'),
(62, 17, 18, -0.33, 'optiond'),
(62, 17, 19, 1, 'optionb'),
(62, 17, 20, -0.33, 'optionb'),
(62, 17, 21, 1, 'optionc'),
(62, 17, 22, 1, 'optionb'),
(62, 17, 23, 1, 'optiond'),
(62, 17, 24, -0.33, 'optionc'),
(62, 17, 25, 1, 'optionb'),
(62, 17, 26, 2, 'optionc'),
(62, 17, 27, 2, 'optionc'),
(62, 17, 28, 2, 'optiond'),
(62, 17, 30, 2, 'optiona'),
(62, 17, 31, 2, 'optiond'),
(62, 17, 32, 2, 'optiona'),
(62, 17, 33, 2, 'optiona'),
(62, 17, 34, 2, 'optiond'),
(62, 17, 35, 2, 'optionb'),
(62, 17, 37, 2, 'optionc'),
(62, 17, 38, -0.66, 'optiona'),
(62, 17, 39, 2, 'optionb'),
(62, 17, 41, 2, 'optionc'),
(62, 17, 42, 2, 'optionb'),
(62, 17, 43, 2, 'optiond'),
(62, 17, 44, 2, 'optionb'),
(62, 17, 45, 2, 'optionb'),
(62, 17, 46, -0.66, 'optiona'),
(62, 17, 47, -0.66, 'optionb'),
(62, 17, 48, 2, 'optiond'),
(62, 17, 49, -0.66, 'optiond'),
(62, 17, 50, -0.66, 'optionc'),
(62, 17, 54, 2, 'optiond'),
(62, 17, 55, 2, 'optiona'),
(62, 17, 62, 2, 'optionc'),
(62, 17, 63, 2, 'optiona'),
(62, 17, 64, 2, 'optionb'),
(62, 17, 65, 2, 'optiond'),
(62, 18, 1, -0.33, 'optionc'),
(62, 18, 2, 1, 'optiond'),
(62, 18, 3, 1, 'optionb'),
(62, 18, 4, 1, 'optiona'),
(62, 18, 6, 1, 'optionc'),
(62, 18, 7, 1, 'optionb'),
(62, 18, 8, 1, 'optionb'),
(62, 18, 9, 1, 'optiond'),
(62, 18, 11, 1, 'optionb'),
(62, 18, 12, 1, 'optiona'),
(62, 18, 14, 1, 'optionc'),
(62, 18, 15, 1, 'optionc'),
(62, 18, 17, 1, 'optionb'),
(62, 18, 18, 1, 'optiona'),
(62, 18, 19, 1, 'optionc'),
(62, 18, 20, 1, 'optionb'),
(62, 18, 21, -0.33, 'optionc'),
(62, 18, 22, 1, 'optiond'),
(62, 18, 24, 1, 'optionc'),
(62, 18, 25, 1, 'optionc'),
(62, 18, 26, 2, 'optionb'),
(62, 18, 27, 2, 'optiond'),
(62, 18, 28, 2, 'optiona'),
(62, 18, 29, 2, 'optiond'),
(62, 18, 30, 2, 'optionc'),
(62, 18, 31, -0.66, 'optionb'),
(62, 18, 32, 2, 'optionb'),
(62, 18, 33, 2, 'optiond'),
(62, 18, 34, 2, 'optiona'),
(62, 18, 35, -0.66, 'optionc'),
(62, 18, 36, -0.66, 'optionb'),
(62, 18, 38, 2, 'optionb'),
(62, 18, 39, -0.66, 'optionc'),
(62, 18, 41, 2, 'optiond'),
(62, 18, 42, 2, 'optionb'),
(62, 18, 43, -0.66, 'optiona'),
(62, 18, 45, -0.66, 'optionc'),
(62, 18, 47, 2, 'optiond'),
(62, 18, 48, -0.66, 'optiona'),
(62, 18, 49, 2, 'optionc'),
(62, 18, 50, 2, 'optionc'),
(62, 18, 51, -0.66, 'optiond'),
(62, 18, 54, 2, 'optiona'),
(62, 18, 55, 2, 'optiond'),
(62, 18, 56, 1, 'optione'),
(62, 18, 58, -0.33, 'optiona'),
(62, 18, 60, 1, 'optiona'),
(62, 18, 61, 2, 'optionb'),
(62, 18, 62, 2, 'optiond'),
(62, 18, 65, 2, 'optiond'),
(63, 7, 1, 1, 'optionc'),
(63, 7, 2, 1, 'optiond'),
(63, 7, 3, -0.33, 'optiond'),
(63, 7, 4, 1, 'optiond'),
(63, 7, 5, 1, 'optionb'),
(63, 7, 6, -0.33, 'optiona'),
(63, 7, 7, 1, 'optionb'),
(63, 7, 8, 1, 'optionb'),
(63, 7, 9, -0.33, 'optionb'),
(63, 7, 10, -0.33, 'optionb'),
(63, 7, 11, 1, 'optiona'),
(63, 7, 12, -0.33, 'optiona'),
(63, 7, 13, -0.33, 'optionb'),
(63, 7, 14, 1, 'optionc'),
(63, 7, 15, 1, 'optionb'),
(63, 7, 16, 1, 'optiona'),
(63, 7, 17, -0.33, 'optiond'),
(63, 7, 18, 1, 'optiona'),
(63, 7, 19, 1, 'optiond'),
(63, 7, 20, 1, 'optiona'),
(63, 7, 22, 1, 'optiond'),
(63, 7, 23, -0.33, 'optionc'),
(63, 7, 24, 1, 'optiona'),
(63, 7, 26, -0.66, 'optiond'),
(63, 7, 27, -0.66, 'optiond'),
(63, 7, 28, -0.66, 'optiond'),
(63, 7, 30, -0.66, 'optiona'),
(63, 7, 31, 2, 'optiona'),
(63, 7, 34, 2, 'optione'),
(63, 7, 35, 2, 'optionc'),
(63, 7, 36, 2, 'optionc'),
(63, 7, 38, -0.66, 'optionc'),
(63, 7, 40, 2, 'optionb'),
(63, 7, 41, 2, 'optionc'),
(63, 7, 42, 2, 'optionc'),
(63, 7, 43, 2, 'optionb'),
(63, 7, 44, -0.66, 'optiona'),
(63, 7, 45, 2, 'optiond'),
(63, 7, 46, 2, 'optiond'),
(63, 7, 47, 2, 'optionb'),
(63, 7, 48, 2, 'optionb'),
(63, 7, 50, -0.66, 'optionb'),
(63, 7, 51, 2, 'optionb'),
(63, 7, 52, 2, 'optiona'),
(63, 7, 53, 2, 'optionb'),
(63, 7, 54, 2, 'optiond'),
(63, 7, 56, -0.33, 'optiona'),
(63, 7, 60, 1, 'optionc'),
(63, 7, 63, 2, 'optiond'),
(63, 7, 64, 2, 'optionc'),
(63, 7, 65, 2, 'optionb'),
(63, 8, 1, 1, 'optione'),
(63, 8, 2, -0.33, 'optionb'),
(63, 8, 3, 1, 'optionb'),
(63, 8, 4, 1, 'optiond'),
(63, 8, 5, 1, 'optionc'),
(63, 8, 6, -0.33, 'optiona'),
(63, 8, 7, 1, 'optionb'),
(63, 8, 8, 1, 'optionb'),
(63, 8, 9, 1, 'optiond'),
(63, 8, 10, 1, 'optionc'),
(63, 8, 11, 1, 'optiond'),
(63, 8, 12, -0.33, 'optiond'),
(63, 8, 13, 1, 'optionb'),
(63, 8, 14, 1, 'optiona'),
(63, 8, 15, 1, 'optionc'),
(63, 8, 16, 1, 'optionc'),
(63, 8, 18, 1, 'optione'),
(63, 8, 19, 1, 'optiona'),
(63, 8, 22, -0.33, 'optiond'),
(63, 8, 23, 1, 'optiona'),
(63, 8, 24, -0.33, 'optionb'),
(63, 8, 25, 1, 'optiond'),
(63, 8, 26, 1, 'optiond'),
(63, 8, 27, 1, 'optiond'),
(63, 8, 29, 1, 'optionb'),
(63, 8, 30, 1, 'optionc'),
(63, 8, 31, 1, 'optionc'),
(63, 8, 32, 1, 'optionb'),
(63, 8, 33, 1, 'optiona'),
(63, 8, 34, 1, 'optiond'),
(63, 8, 35, 1, 'optionc'),
(63, 8, 36, 1, 'optionc'),
(63, 8, 37, 1, 'optiond'),
(63, 8, 38, 1, 'optionb'),
(63, 8, 39, 1, 'optiond'),
(63, 8, 40, -0.33, 'optiona'),
(63, 8, 41, 1, 'optiona'),
(63, 8, 42, 1, 'optiond'),
(63, 8, 43, 1, 'optionb'),
(63, 8, 44, 1, 'optionb'),
(63, 8, 45, 1, 'optiond'),
(63, 9, 2, 2, 'optionb'),
(63, 9, 4, 2, 'optiona'),
(63, 9, 5, 2, 'optiond'),
(63, 9, 6, 2, 'optiond'),
(63, 9, 7, -0.66, 'optionb'),
(63, 9, 8, -0.66, 'optionc'),
(63, 9, 9, 2, 'optionb'),
(63, 9, 11, 2, 'optiona'),
(63, 9, 12, 2, 'optiona'),
(63, 9, 14, -0.66, 'optiond'),
(63, 9, 17, 2, 'optionb'),
(63, 9, 21, 2, 'optionc'),
(63, 9, 26, 2, 'optionc'),
(63, 9, 28, -0.66, 'optionc'),
(63, 9, 29, -0.66, 'optiona'),
(63, 9, 30, -0.66, 'optionc'),
(63, 9, 31, -0.66, 'optionc'),
(63, 9, 35, 2, 'optionb'),
(63, 9, 39, 2, 'optiond'),
(63, 9, 40, -0.66, 'optiona'),
(63, 9, 46, -0.66, 'optiona'),
(63, 9, 49, 2, 'optionb'),
(63, 9, 50, -0.66, 'optionc'),
(63, 9, 51, 2, 'optionb'),
(63, 9, 52, 2, 'optionb'),
(63, 9, 53, 2, 'optionc'),
(63, 9, 54, -0.66, 'optiond'),
(63, 9, 55, 2, 'optionb'),
(63, 10, 2, 2, 'optionb'),
(63, 10, 3, 2, 'optiond'),
(63, 10, 4, -0.66, 'optione'),
(63, 10, 5, -0.66, 'optiona'),
(63, 10, 6, 2, 'optionb'),
(63, 10, 8, -0.66, 'optionb'),
(63, 10, 9, 2, 'optionc'),
(63, 10, 10, 2, 'optiond'),
(63, 10, 11, 2, 'optionc'),
(63, 10, 12, 2, 'optionb'),
(63, 10, 13, 2, 'optionc'),
(63, 10, 14, 2, 'optionb'),
(63, 10, 15, 2, 'optiond'),
(63, 10, 16, -0.66, 'optionb'),
(63, 10, 17, 2, 'optionb'),
(63, 10, 20, 2, 'optionc'),
(63, 10, 21, 2, 'optionb'),
(63, 10, 22, 2, 'optionb'),
(63, 10, 23, -0.66, 'optionc'),
(63, 11, 1, -0.66, 'optiond'),
(63, 11, 2, -0.66, 'optiond'),
(63, 11, 3, 2, 'optiona'),
(63, 11, 4, 2, 'optiond'),
(63, 11, 5, 2, 'optionb'),
(63, 11, 6, 2, 'optionb'),
(63, 11, 7, 2, 'optionb'),
(63, 11, 8, 2, 'optiona'),
(63, 11, 9, 2, 'optionc'),
(63, 11, 10, 2, 'optiona'),
(63, 11, 11, 2, 'optiona'),
(63, 11, 12, 2, 'optiona'),
(63, 11, 13, 2, 'optionb'),
(63, 11, 14, -0.66, 'optionb'),
(63, 11, 15, 2, 'optionc'),
(63, 11, 17, 2, 'optiona'),
(63, 11, 18, 2, 'optionb'),
(63, 11, 19, -0.66, 'optiona'),
(63, 11, 20, 2, 'optiona'),
(63, 11, 21, 2, 'optionc'),
(63, 11, 22, 2, 'optiona'),
(63, 11, 23, -0.66, 'optiona'),
(63, 11, 24, -0.66, 'optiond'),
(63, 11, 25, 2, 'optionb'),
(63, 11, 26, 2, 'optionc'),
(63, 11, 27, 2, 'optione'),
(63, 11, 29, 2, 'optiond'),
(63, 11, 30, -0.66, 'optionc'),
(63, 11, 31, 2, 'optione'),
(63, 11, 32, 2, 'optionc'),
(63, 11, 33, -0.66, 'optione'),
(63, 11, 34, -0.66, 'optionb'),
(63, 11, 35, 2, 'optiond'),
(63, 11, 36, 2, 'optione'),
(63, 11, 37, -0.66, 'optiond'),
(63, 11, 38, 2, 'optiona'),
(63, 11, 39, 2, 'optiona'),
(63, 11, 40, 2, 'optiond'),
(63, 11, 41, 2, 'optionc'),
(63, 11, 45, 2, 'optiona'),
(63, 11, 46, 2, 'optiona'),
(63, 11, 47, -0.66, 'optiona'),
(63, 11, 48, 2, 'optiond'),
(63, 11, 49, 2, 'optiond'),
(63, 11, 51, 2, 'optiond'),
(63, 11, 52, 2, 'optionb'),
(63, 11, 53, 2, 'optionc'),
(63, 11, 54, 2, 'optionb'),
(63, 11, 55, -0.66, 'optionc'),
(63, 11, 56, 2, 'optione'),
(63, 11, 57, 2, 'optionc'),
(63, 11, 58, 2, 'optione'),
(63, 11, 60, -0.66, 'optionc'),
(63, 12, 1, 2, 'optionc'),
(63, 12, 2, 2, 'optionc'),
(63, 12, 3, 2, 'optiond'),
(63, 12, 4, 2, 'optionc'),
(63, 12, 5, 2, 'optiona'),
(63, 12, 6, -0.66, 'optionb'),
(63, 12, 7, 2, 'optionb'),
(63, 12, 8, 2, 'optionb'),
(63, 12, 9, 2, 'optiona'),
(63, 12, 10, 2, 'optiond'),
(63, 12, 11, 2, 'optionb'),
(63, 12, 12, 2, 'optionb'),
(63, 12, 13, 2, 'optionb'),
(63, 12, 14, -0.66, 'optiond'),
(63, 12, 15, 2, 'optiond'),
(63, 12, 16, 2, 'optionc'),
(63, 12, 17, -0.66, 'optionb'),
(63, 12, 19, 2, 'optionb'),
(63, 12, 20, 2, 'optionb'),
(63, 12, 21, 2, 'optiona'),
(63, 12, 22, 2, 'optiond'),
(63, 12, 23, 2, 'optionb'),
(63, 12, 24, 2, 'optiona'),
(63, 12, 25, 2, 'optionc'),
(63, 12, 26, 2, 'optionb'),
(63, 12, 27, -0.66, 'optione'),
(63, 12, 28, 2, 'optiond'),
(63, 12, 31, 2, 'optionc'),
(63, 12, 32, 2, 'optionc'),
(63, 12, 34, -0.66, 'optionb'),
(63, 12, 35, -0.66, 'optionc'),
(63, 12, 38, 2, 'optionc'),
(63, 12, 40, 2, 'optiona'),
(63, 12, 41, 2, 'optionb'),
(63, 12, 42, 2, 'optiona'),
(63, 12, 43, 2, 'optiond'),
(63, 12, 45, 2, 'optiond'),
(63, 12, 46, 2, 'optiond'),
(63, 12, 47, 2, 'optionc'),
(63, 12, 48, -0.66, 'optionc'),
(63, 12, 50, 2, 'optionb'),
(63, 12, 51, 2, 'optionc'),
(63, 12, 52, 2, 'optionb'),
(63, 12, 53, 2, 'optiona'),
(63, 12, 54, 2, 'optiona'),
(63, 13, 1, -0.66, 'optiond'),
(63, 13, 2, -0.66, 'optiona'),
(63, 13, 3, -0.66, 'optiond'),
(63, 13, 4, -0.66, 'optiona'),
(63, 13, 5, 2, 'optionc'),
(63, 13, 6, -0.66, 'optiona'),
(63, 13, 7, 2, 'optionb'),
(63, 13, 8, 2, 'optionc'),
(63, 13, 9, 2, 'optione'),
(63, 13, 10, 2, 'optione'),
(63, 13, 11, 2, 'optiond'),
(63, 13, 12, 2, 'optiona'),
(63, 13, 13, 2, 'optiond'),
(63, 13, 14, 2, 'optionb'),
(63, 13, 15, -0.66, 'optione'),
(63, 13, 20, 2, 'optiona'),
(63, 13, 22, 2, 'optiona'),
(63, 13, 23, 2, 'optiona'),
(63, 13, 24, 2, 'optionc'),
(63, 13, 25, 2, 'optiona'),
(63, 13, 26, -0.66, 'optionb'),
(63, 13, 27, 2, 'optiond'),
(63, 13, 28, 2, 'optionc'),
(63, 13, 30, 2, 'optiona'),
(63, 13, 31, 2, 'optiond'),
(63, 13, 32, 2, 'optiona'),
(63, 13, 33, 2, 'optionb'),
(63, 13, 34, 2, 'optiona'),
(63, 13, 35, -0.66, 'optionb'),
(63, 13, 36, 2, 'optionc'),
(63, 13, 38, 2, 'optionb'),
(63, 13, 39, 2, 'optiona'),
(63, 13, 40, 2, 'optiond'),
(63, 15, 2, 1, 'optiond'),
(63, 15, 6, 1, 'optiona'),
(63, 15, 8, 1, 'optiona'),
(63, 15, 10, 1, 'optiona'),
(63, 15, 11, 1, 'optiond'),
(63, 15, 12, 1, 'optionc'),
(63, 15, 13, 1, 'optionb'),
(63, 15, 14, 1, 'optionc'),
(63, 15, 15, 1, 'optiond'),
(63, 15, 18, 1, 'optionb'),
(63, 15, 19, 1, 'optionc'),
(63, 15, 20, -0.33, 'optiond'),
(63, 15, 21, 1, 'optiona'),
(63, 15, 22, 1, 'optionb'),
(63, 15, 23, -0.33, 'optiond'),
(63, 15, 24, 1, 'optiona'),
(63, 15, 25, -0.33, 'optiona'),
(63, 15, 26, 2, 'optiona'),
(63, 15, 28, 2, 'optiond'),
(63, 15, 29, 2, 'optiond'),
(63, 15, 30, -0.66, 'optiond'),
(63, 15, 31, 2, 'optiona'),
(63, 15, 33, -0.66, 'optionb'),
(63, 15, 35, 2, 'optionc'),
(63, 15, 36, 2, 'optiond'),
(63, 15, 37, 2, 'optionb'),
(63, 15, 38, 2, 'optionc'),
(63, 15, 39, 2, 'optionb'),
(63, 15, 40, -0.66, 'optiona'),
(63, 15, 41, 2, 'optionc'),
(63, 15, 42, 2, 'optiona'),
(63, 15, 43, 2, 'optiona'),
(63, 15, 44, 2, 'optiond'),
(63, 15, 45, -0.66, 'optiond'),
(63, 15, 47, 2, 'optiond'),
(63, 15, 48, 2, 'optionc'),
(63, 15, 50, -0.66, 'optiona'),
(63, 15, 51, -0.66, 'optiona'),
(63, 15, 52, 2, 'optionc'),
(63, 15, 53, 2, 'optionc'),
(63, 15, 54, -0.66, 'optiond'),
(63, 15, 55, 2, 'optionb'),
(63, 15, 58, 1, 'optiond'),
(63, 15, 59, 1, 'optiond'),
(63, 15, 62, -0.66, 'optiona'),
(63, 15, 63, 2, 'optiond'),
(63, 16, 1, 1, 'optionc'),
(63, 16, 2, 1, 'optionb'),
(63, 16, 3, 1, 'optiond'),
(63, 16, 4, 1, 'optiond'),
(63, 16, 6, 1, 'optionb'),
(63, 16, 8, 1, 'optiona'),
(63, 16, 9, 1, 'optionc'),
(63, 16, 10, 1, 'optionc'),
(63, 16, 11, 1, 'optionb'),
(63, 16, 12, -0.33, 'optionc'),
(63, 16, 13, -0.33, 'optionc'),
(63, 16, 14, 1, 'optiond'),
(63, 16, 16, 1, 'optiond'),
(63, 16, 19, 1, 'optiond'),
(63, 16, 20, 1, 'optiona'),
(63, 16, 21, -0.33, 'optiona'),
(63, 16, 22, 1, 'optionb'),
(63, 16, 23, 1, 'optionc'),
(63, 16, 24, 1, 'optiona'),
(63, 16, 25, -0.33, 'optiond'),
(63, 16, 28, 2, 'optiond'),
(63, 16, 29, 2, 'optiond'),
(63, 16, 30, 2, 'optiond'),
(63, 16, 31, -0.66, 'optiona'),
(63, 16, 32, -0.66, 'optionb'),
(63, 16, 33, 2, 'optiond'),
(63, 16, 35, 2, 'optionb'),
(63, 16, 36, -0.66, 'optiond'),
(63, 16, 37, 2, 'optionb'),
(63, 16, 38, -0.66, 'optiona'),
(63, 16, 40, 2, 'optiona'),
(63, 16, 41, 2, 'optionc'),
(63, 16, 43, 2, 'optiona'),
(63, 16, 44, 2, 'optiond'),
(63, 16, 45, 2, 'optiona'),
(63, 16, 48, 2, 'optiona'),
(63, 16, 49, 2, 'optionc'),
(63, 16, 50, 2, 'optiona'),
(63, 16, 51, 2, 'optiona'),
(63, 16, 52, 2, 'optiona'),
(63, 16, 60, -0.33, 'optiona'),
(63, 16, 61, 2, 'optionb'),
(63, 16, 62, 2, 'optiond'),
(63, 16, 63, 2, 'optionc'),
(63, 16, 64, -0.66, 'optiona'),
(63, 17, 1, -0.33, 'optionb'),
(63, 17, 2, 1, 'optionb'),
(63, 17, 4, -0.33, 'optionb'),
(63, 17, 5, 1, 'optionc'),
(63, 17, 6, 1, 'optiona'),
(63, 17, 7, 1, 'optionc'),
(63, 17, 8, 1, 'optiona'),
(63, 17, 9, 1, 'optionb'),
(63, 17, 10, 1, 'optiona'),
(63, 17, 11, -0.33, 'optionb'),
(63, 17, 12, 1, 'optiona'),
(63, 17, 13, 1, 'optionb'),
(63, 17, 14, -0.33, 'optiona'),
(63, 17, 15, -0.33, 'optionc'),
(63, 17, 18, 1, 'optionb'),
(63, 17, 19, 1, 'optionb'),
(63, 17, 21, -0.33, 'optiona'),
(63, 17, 22, 1, 'optionb'),
(63, 17, 23, 1, 'optiond'),
(63, 17, 24, -0.33, 'optionc'),
(63, 17, 25, 1, 'optionb'),
(63, 17, 26, 2, 'optionc'),
(63, 17, 27, -0.66, 'optiona'),
(63, 17, 28, -0.66, 'optionb'),
(63, 17, 29, -0.66, 'optionc'),
(63, 17, 30, 2, 'optiona'),
(63, 17, 32, 2, 'optiona'),
(63, 17, 33, 2, 'optiona'),
(63, 17, 34, 2, 'optiond'),
(63, 17, 35, 2, 'optionb'),
(63, 17, 37, 2, 'optionc'),
(63, 17, 38, -0.66, 'optiona'),
(63, 17, 39, 2, 'optionb'),
(63, 17, 40, -0.66, 'optiona'),
(63, 17, 42, 2, 'optionb'),
(63, 17, 45, -0.66, 'optiond'),
(63, 17, 46, -0.66, 'optionc'),
(63, 17, 47, -0.66, 'optionb'),
(63, 17, 48, 2, 'optiond'),
(63, 17, 49, -0.66, 'optiond'),
(63, 17, 50, 2, 'optiond'),
(63, 17, 51, -0.66, 'optiona'),
(63, 17, 52, 2, 'optiond'),
(63, 17, 53, 2, 'optiona'),
(63, 17, 54, 2, 'optiond'),
(63, 17, 61, 2, 'optionb'),
(63, 17, 62, 2, 'optionc'),
(63, 17, 63, 2, 'optiona'),
(63, 17, 64, 2, 'optionb'),
(63, 17, 65, -0.66, 'optiona'),
(63, 18, 1, 1, 'optiona'),
(63, 18, 2, 1, 'optiond'),
(63, 18, 3, 1, 'optionb'),
(63, 18, 4, 1, 'optiona'),
(63, 18, 5, -0.33, 'optionc'),
(63, 18, 6, -0.33, 'optiona'),
(63, 18, 7, 1, 'optionb'),
(63, 18, 8, 1, 'optionb'),
(63, 18, 9, 1, 'optiond'),
(63, 18, 11, -0.33, 'optionc'),
(63, 18, 12, 1, 'optiona'),
(63, 18, 13, 1, 'optiond'),
(63, 18, 14, 1, 'optionc'),
(63, 18, 15, 1, 'optionc'),
(63, 18, 16, 1, 'optionc'),
(63, 18, 17, 1, 'optionb'),
(63, 18, 18, 1, 'optiona'),
(63, 18, 19, 1, 'optionc'),
(63, 18, 20, 1, 'optionb'),
(63, 18, 21, 1, 'optiond'),
(63, 18, 22, 1, 'optiond'),
(63, 18, 23, 1, 'optiond');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(63, 18, 24, 1, 'optionc'),
(63, 18, 25, 1, 'optionc'),
(63, 18, 26, 2, 'optionb'),
(63, 18, 27, 2, 'optiond'),
(63, 18, 28, 2, 'optiona'),
(63, 18, 29, 2, 'optiond'),
(63, 18, 30, -0.66, 'optionb'),
(63, 18, 31, 2, 'optiona'),
(63, 18, 32, 2, 'optionb'),
(63, 18, 33, 2, 'optiond'),
(63, 18, 35, -0.66, 'optionc'),
(63, 18, 36, -0.66, 'optionb'),
(63, 18, 37, 2, 'optionc'),
(63, 18, 38, 2, 'optionb'),
(63, 18, 42, 2, 'optionb'),
(63, 18, 45, -0.66, 'optionc'),
(63, 18, 47, 2, 'optiond'),
(63, 18, 48, 2, 'optionb'),
(63, 18, 49, 2, 'optionc'),
(63, 18, 50, 2, 'optionc'),
(63, 18, 51, -0.66, 'optiond'),
(63, 18, 52, -0.66, 'optionb'),
(63, 18, 54, 2, 'optiona'),
(63, 18, 55, 2, 'optiond'),
(63, 18, 56, 1, 'optione'),
(63, 18, 57, 1, 'optionb'),
(63, 18, 58, 1, 'optionc'),
(63, 18, 60, 1, 'optiona'),
(63, 18, 61, 2, 'optionb'),
(63, 18, 65, 2, 'optiond'),
(64, 7, 1, 1, 'optionc'),
(64, 7, 3, -0.33, 'optiond'),
(64, 7, 4, -0.33, 'optionb'),
(64, 7, 5, 1, 'optionb'),
(64, 7, 7, -0.33, 'optionc'),
(64, 7, 8, -0.33, 'optiona'),
(64, 7, 9, 1, 'optiona'),
(64, 7, 10, 1, 'optionc'),
(64, 7, 11, 1, 'optiona'),
(64, 7, 14, 1, 'optionc'),
(64, 7, 15, 1, 'optionb'),
(64, 7, 16, 1, 'optiona'),
(64, 7, 17, 1, 'optionc'),
(64, 7, 18, -0.33, 'optionc'),
(64, 7, 19, 1, 'optiond'),
(64, 7, 23, -0.33, 'optionb'),
(64, 7, 24, 1, 'optiona'),
(64, 7, 25, -0.33, 'optionb'),
(64, 7, 26, -0.66, 'optiond'),
(64, 7, 29, -0.66, 'optiona'),
(64, 7, 30, -0.66, 'optiond'),
(64, 7, 31, 2, 'optiona'),
(64, 7, 34, -0.66, 'optiond'),
(64, 7, 35, 2, 'optionc'),
(64, 7, 36, 2, 'optionc'),
(64, 7, 38, -0.66, 'optiond'),
(64, 7, 40, 2, 'optionb'),
(64, 7, 42, -0.66, 'optiond'),
(64, 7, 43, 2, 'optionb'),
(64, 7, 44, -0.66, 'optiona'),
(64, 7, 45, 2, 'optiond'),
(64, 7, 46, -0.66, 'optionb'),
(64, 7, 47, 2, 'optionb'),
(64, 7, 48, 2, 'optionb'),
(64, 7, 49, -0.66, 'optiond'),
(64, 7, 50, -0.66, 'optionb'),
(64, 7, 52, 2, 'optiona'),
(64, 7, 53, -0.66, 'optionc'),
(64, 7, 54, 2, 'optiond'),
(64, 7, 55, 2, 'optionb'),
(64, 7, 57, -0.33, 'optionb'),
(64, 7, 58, -0.33, 'optiona'),
(64, 7, 59, 1, 'optiond'),
(64, 7, 60, -0.33, 'optiond'),
(64, 7, 61, -0.66, 'optiona'),
(64, 7, 62, -0.66, 'optionb'),
(64, 7, 63, 2, 'optiond'),
(64, 7, 65, -0.66, 'optiond'),
(64, 8, 1, 1, 'optione'),
(64, 8, 2, -0.33, 'optionb'),
(64, 8, 3, 1, 'optionb'),
(64, 8, 4, -0.33, 'optionb'),
(64, 8, 5, 1, 'optionc'),
(64, 8, 6, 1, 'optiond'),
(64, 8, 7, -0.33, 'optionc'),
(64, 8, 8, 1, 'optionb'),
(64, 8, 9, 1, 'optiond'),
(64, 8, 10, 1, 'optionc'),
(64, 8, 11, 1, 'optiond'),
(64, 8, 12, 1, 'optiona'),
(64, 8, 13, -0.33, 'optiond'),
(64, 8, 14, 1, 'optiona'),
(64, 8, 15, -0.33, 'optiona'),
(64, 8, 17, -0.33, 'optiond'),
(64, 8, 18, 1, 'optione'),
(64, 8, 19, 1, 'optiona'),
(64, 8, 25, -0.33, 'optione'),
(64, 8, 26, 1, 'optiond'),
(64, 8, 27, 1, 'optiond'),
(64, 8, 29, -0.33, 'optionc'),
(64, 8, 30, 1, 'optionc'),
(64, 8, 31, 1, 'optionc'),
(64, 8, 32, 1, 'optionb'),
(64, 8, 33, 1, 'optiona'),
(64, 8, 34, 1, 'optiond'),
(64, 8, 35, 1, 'optionc'),
(64, 8, 36, 1, 'optionc'),
(64, 8, 37, 1, 'optiond'),
(64, 8, 38, 1, 'optionb'),
(64, 8, 39, 1, 'optiond'),
(64, 8, 40, -0.33, 'optiona'),
(64, 8, 41, 1, 'optiona'),
(64, 8, 42, 1, 'optiond'),
(64, 8, 43, 1, 'optionb'),
(64, 8, 44, 1, 'optionb'),
(64, 8, 45, 1, 'optiond'),
(64, 9, 1, -0.66, 'optionb'),
(64, 9, 2, 2, 'optionb'),
(64, 9, 4, 2, 'optiona'),
(64, 9, 6, -0.66, 'optionc'),
(64, 9, 7, 2, 'optionc'),
(64, 9, 8, 2, 'optionb'),
(64, 9, 9, -0.66, 'optionc'),
(64, 9, 12, 2, 'optiona'),
(64, 9, 14, -0.66, 'optiond'),
(64, 9, 17, -0.66, 'optiond'),
(64, 9, 25, -0.66, 'optionc'),
(64, 9, 26, 2, 'optionc'),
(64, 9, 28, -0.66, 'optiona'),
(64, 9, 34, 2, 'optiond'),
(64, 9, 35, 2, 'optionb'),
(64, 9, 36, -0.66, 'optiona'),
(64, 9, 37, -0.66, 'optiond'),
(64, 9, 42, 2, 'optionb'),
(64, 9, 43, -0.66, 'optiona'),
(64, 9, 46, 2, 'optiond'),
(64, 9, 47, 2, 'optionc'),
(64, 9, 49, 2, 'optionb'),
(64, 9, 50, -0.66, 'optiona'),
(64, 9, 51, -0.66, 'optiona'),
(64, 9, 52, 2, 'optionb'),
(64, 9, 53, -0.66, 'optionb'),
(64, 9, 54, -0.66, 'optionb'),
(64, 9, 55, 2, 'optionb'),
(64, 10, 1, 2, 'optione'),
(64, 10, 2, 2, 'optionb'),
(64, 10, 3, -0.66, 'optiona'),
(64, 10, 5, 2, 'optionb'),
(64, 10, 8, -0.66, 'optiond'),
(64, 10, 9, 2, 'optionc'),
(64, 10, 11, 2, 'optionc'),
(64, 10, 12, -0.66, 'optione'),
(64, 10, 13, 2, 'optionc'),
(64, 10, 14, 2, 'optionb'),
(64, 10, 15, 2, 'optiond'),
(64, 10, 16, 2, 'optiona'),
(64, 10, 17, 2, 'optionb'),
(64, 10, 18, -0.66, 'optiond'),
(64, 10, 19, 2, 'optiona'),
(64, 10, 21, 2, 'optionb'),
(64, 10, 22, 2, 'optionb'),
(64, 10, 23, -0.66, 'optionc'),
(64, 11, 1, 2, 'optionb'),
(64, 11, 2, 2, 'optionc'),
(64, 11, 5, 2, 'optionb'),
(64, 11, 6, 2, 'optionb'),
(64, 11, 7, 2, 'optionb'),
(64, 11, 8, 2, 'optiona'),
(64, 11, 9, 2, 'optionc'),
(64, 11, 10, -0.66, 'optionc'),
(64, 11, 11, 2, 'optiona'),
(64, 11, 12, 2, 'optiona'),
(64, 11, 15, 2, 'optionc'),
(64, 11, 17, 2, 'optiona'),
(64, 11, 18, 2, 'optionb'),
(64, 11, 19, -0.66, 'optiona'),
(64, 11, 20, -0.66, 'optionc'),
(64, 11, 22, 2, 'optiona'),
(64, 11, 24, -0.66, 'optionc'),
(64, 11, 26, -0.66, 'optiond'),
(64, 11, 27, 2, 'optione'),
(64, 11, 29, 2, 'optiond'),
(64, 11, 30, -0.66, 'optionb'),
(64, 11, 33, -0.66, 'optione'),
(64, 11, 34, 2, 'optiond'),
(64, 11, 35, 2, 'optiond'),
(64, 11, 36, 2, 'optione'),
(64, 11, 37, 2, 'optionb'),
(64, 11, 38, 2, 'optiona'),
(64, 11, 39, 2, 'optiona'),
(64, 11, 40, 2, 'optiond'),
(64, 11, 41, 2, 'optionc'),
(64, 11, 42, -0.66, 'optiona'),
(64, 11, 43, 2, 'optiond'),
(64, 11, 45, 2, 'optiona'),
(64, 11, 46, 2, 'optiona'),
(64, 11, 47, -0.66, 'optionb'),
(64, 11, 48, -0.66, 'optionc'),
(64, 11, 49, 2, 'optiond'),
(64, 11, 51, -0.66, 'optionc'),
(64, 11, 52, -0.66, 'optionc'),
(64, 11, 53, 2, 'optionc'),
(64, 11, 55, -0.66, 'optionc'),
(64, 11, 56, 2, 'optione'),
(64, 11, 57, 2, 'optionc'),
(64, 11, 58, 2, 'optione'),
(64, 11, 59, -0.66, 'optiond'),
(64, 12, 1, 2, 'optionc'),
(64, 12, 2, -0.66, 'optionb'),
(64, 12, 3, -0.66, 'optionc'),
(64, 12, 4, -0.66, 'optiona'),
(64, 12, 5, 2, 'optiona'),
(64, 12, 6, -0.66, 'optionc'),
(64, 12, 7, -0.66, 'optiond'),
(64, 12, 8, 2, 'optionb'),
(64, 12, 9, -0.66, 'optionc'),
(64, 12, 10, 2, 'optiond'),
(64, 12, 12, 2, 'optionb'),
(64, 12, 14, 2, 'optiona'),
(64, 12, 15, 2, 'optiond'),
(64, 12, 17, 2, 'optionc'),
(64, 12, 18, 2, 'optiond'),
(64, 12, 19, 2, 'optionb'),
(64, 12, 20, 2, 'optionb'),
(64, 12, 21, 2, 'optiona'),
(64, 12, 22, 2, 'optiond'),
(64, 12, 26, 2, 'optionb'),
(64, 12, 27, -0.66, 'optionb'),
(64, 12, 28, -0.66, 'optionb'),
(64, 12, 30, -0.66, 'optionc'),
(64, 12, 31, -0.66, 'optionb'),
(64, 12, 32, -0.66, 'optiona'),
(64, 12, 34, -0.66, 'optiona'),
(64, 12, 37, -0.66, 'optionc'),
(64, 12, 38, 2, 'optionc'),
(64, 12, 40, 2, 'optiona'),
(64, 12, 41, 2, 'optionb'),
(64, 12, 42, -0.66, 'optionc'),
(64, 12, 43, -0.66, 'optionc'),
(64, 12, 45, -0.66, 'optionc'),
(64, 12, 46, 2, 'optiond'),
(64, 12, 47, 2, 'optionc'),
(64, 12, 48, -0.66, 'optionc'),
(64, 12, 50, 2, 'optionb'),
(64, 12, 52, 2, 'optionb'),
(64, 12, 53, 2, 'optiona'),
(64, 12, 54, 2, 'optiona'),
(64, 13, 1, -0.66, 'optiond'),
(64, 13, 2, 2, 'optionb'),
(64, 13, 6, -0.66, 'optiona'),
(64, 13, 7, -0.66, 'optiond'),
(64, 13, 8, 2, 'optionc'),
(64, 13, 10, 2, 'optione'),
(64, 13, 11, 2, 'optiond'),
(64, 13, 12, 2, 'optiona'),
(64, 13, 13, 2, 'optiond'),
(64, 13, 16, 2, 'optionc'),
(64, 13, 22, -0.66, 'optionc'),
(64, 13, 25, 2, 'optiona'),
(64, 13, 26, -0.66, 'optionb'),
(64, 13, 28, 2, 'optionc'),
(64, 13, 30, -0.66, 'optiond'),
(64, 13, 31, 2, 'optiond'),
(64, 13, 33, 2, 'optionb'),
(64, 13, 34, 2, 'optiona'),
(64, 13, 35, -0.66, 'optiond'),
(64, 13, 36, 2, 'optionc'),
(64, 13, 37, -0.66, 'optionb'),
(64, 13, 38, 2, 'optionb'),
(64, 13, 39, 2, 'optiona'),
(64, 13, 40, 2, 'optiond'),
(64, 15, 2, 1, 'optiond'),
(64, 15, 3, -0.33, 'optiona'),
(64, 15, 6, 1, 'optiona'),
(64, 15, 7, -0.33, 'optionc'),
(64, 15, 10, -0.33, 'optionb'),
(64, 15, 11, -0.33, 'optiona'),
(64, 15, 13, 1, 'optionb'),
(64, 15, 14, 1, 'optionc'),
(64, 15, 15, 1, 'optiond'),
(64, 15, 16, 1, 'optiond'),
(64, 15, 17, 1, 'optionb'),
(64, 15, 18, 1, 'optionb'),
(64, 15, 19, 1, 'optionc'),
(64, 15, 20, 1, 'optionb'),
(64, 15, 21, 1, 'optiona'),
(64, 15, 22, 1, 'optionb'),
(64, 15, 23, 1, 'optiona'),
(64, 15, 25, -0.33, 'optionb'),
(64, 15, 26, 2, 'optiona'),
(64, 15, 27, -0.66, 'optionb'),
(64, 15, 29, 2, 'optiond'),
(64, 15, 30, -0.66, 'optiond'),
(64, 15, 31, -0.66, 'optionc'),
(64, 15, 35, 2, 'optionc'),
(64, 15, 36, 2, 'optiond'),
(64, 15, 37, -0.66, 'optionc'),
(64, 15, 40, -0.66, 'optiona'),
(64, 15, 42, 2, 'optiona'),
(64, 15, 43, 2, 'optiona'),
(64, 15, 44, 2, 'optiond'),
(64, 15, 52, 2, 'optionc'),
(64, 15, 53, -0.66, 'optiona'),
(64, 15, 56, -0.33, 'optiond'),
(64, 15, 57, -0.33, 'optiona'),
(64, 15, 58, 1, 'optiond'),
(64, 15, 59, 1, 'optiond'),
(64, 15, 64, -0.66, 'optionb'),
(64, 15, 65, 2, 'optionb'),
(64, 16, 1, 1, 'optionc'),
(64, 16, 3, -0.33, 'optionb'),
(64, 16, 4, 1, 'optiond'),
(64, 16, 7, -0.33, 'optionc'),
(64, 16, 8, -0.33, 'optionc'),
(64, 16, 9, -0.33, 'optiona'),
(64, 16, 10, 1, 'optionc'),
(64, 16, 11, 1, 'optionb'),
(64, 16, 14, 1, 'optiond'),
(64, 16, 16, 1, 'optiond'),
(64, 16, 18, 1, 'optiond'),
(64, 16, 19, -0.33, 'optionb'),
(64, 16, 20, -0.33, 'optionb'),
(64, 16, 21, 1, 'optiond'),
(64, 16, 22, 1, 'optionb'),
(64, 16, 23, -0.33, 'optiona'),
(64, 16, 25, 1, 'optionb'),
(64, 16, 27, 2, 'optionb'),
(64, 16, 28, -0.66, 'optionc'),
(64, 16, 29, -0.66, 'optionb'),
(64, 16, 30, 2, 'optiond'),
(64, 16, 31, -0.66, 'optiona'),
(64, 16, 32, -0.66, 'optiona'),
(64, 16, 35, 2, 'optionb'),
(64, 16, 37, 2, 'optionb'),
(64, 16, 40, -0.66, 'optionc'),
(64, 16, 41, -0.66, 'optionb'),
(64, 16, 43, 2, 'optiona'),
(64, 16, 44, 2, 'optiond'),
(64, 16, 45, 2, 'optiona'),
(64, 16, 48, 2, 'optiona'),
(64, 16, 50, 2, 'optiona'),
(64, 16, 59, -0.33, 'optiond'),
(64, 16, 60, 1, 'optionc'),
(64, 16, 61, -0.66, 'optiond'),
(64, 16, 62, -0.66, 'optionb'),
(64, 16, 63, -0.66, 'optionb'),
(64, 17, 1, -0.33, 'optionb'),
(64, 17, 2, 1, 'optionb'),
(64, 17, 3, 1, 'optionb'),
(64, 17, 4, -0.33, 'optionb'),
(64, 17, 5, 1, 'optionc'),
(64, 17, 6, -0.33, 'optionb'),
(64, 17, 8, 1, 'optiona'),
(64, 17, 9, 1, 'optionb'),
(64, 17, 10, -0.33, 'optiond'),
(64, 17, 13, -0.33, 'optiona'),
(64, 17, 14, 1, 'optionc'),
(64, 17, 15, -0.33, 'optiona'),
(64, 17, 21, -0.33, 'optiona'),
(64, 17, 22, 1, 'optionb'),
(64, 17, 23, 1, 'optiond'),
(64, 17, 24, -0.33, 'optionc'),
(64, 17, 25, -0.33, 'optiond'),
(64, 17, 26, 2, 'optionc'),
(64, 17, 29, -0.66, 'optionb'),
(64, 17, 30, 2, 'optiona'),
(64, 17, 32, 2, 'optiona'),
(64, 17, 33, -0.66, 'optiond'),
(64, 17, 34, 2, 'optiond'),
(64, 17, 37, -0.66, 'optiond'),
(64, 17, 38, -0.66, 'optiona'),
(64, 17, 41, -0.66, 'optionb'),
(64, 17, 46, 2, 'optionb'),
(64, 17, 47, -0.66, 'optionb'),
(64, 17, 48, -0.66, 'optionb'),
(64, 17, 49, 2, 'optionb'),
(64, 17, 52, 2, 'optiond'),
(64, 17, 53, -0.66, 'optionc'),
(64, 17, 54, -0.66, 'optionc'),
(64, 17, 55, -0.66, 'optionc'),
(64, 17, 57, 1, 'optionb'),
(64, 17, 58, -0.33, 'optionb'),
(64, 18, 2, 1, 'optiond'),
(64, 18, 3, 1, 'optionb'),
(64, 18, 4, 1, 'optiona'),
(64, 18, 6, -0.33, 'optiona'),
(64, 18, 7, -0.33, 'optionc'),
(64, 18, 9, -0.33, 'optiona'),
(64, 18, 11, -0.33, 'optionc'),
(64, 18, 12, -0.33, 'optionb'),
(64, 18, 14, 1, 'optionc'),
(64, 18, 15, -0.33, 'optiona'),
(64, 18, 16, -0.33, 'optiona'),
(64, 18, 17, 1, 'optionb'),
(64, 18, 19, 1, 'optionc'),
(64, 18, 21, 1, 'optiond'),
(64, 18, 22, -0.33, 'optionb'),
(64, 18, 23, -0.33, 'optiona'),
(64, 18, 24, 1, 'optionc'),
(64, 18, 26, 2, 'optionb'),
(64, 18, 28, -0.66, 'optionb'),
(64, 18, 32, -0.66, 'optionc'),
(64, 18, 33, 2, 'optiond'),
(64, 18, 37, -0.66, 'optiona'),
(64, 18, 39, -0.66, 'optionb'),
(64, 18, 40, -0.66, 'optiona'),
(64, 18, 41, -0.66, 'optionb'),
(64, 18, 42, 2, 'optionb'),
(64, 18, 43, -0.66, 'optionc'),
(64, 18, 45, -0.66, 'optiond'),
(64, 18, 47, 2, 'optiond'),
(64, 18, 48, -0.66, 'optionc'),
(64, 18, 49, -0.66, 'optionb'),
(64, 18, 52, 2, 'optiona'),
(64, 18, 53, -0.66, 'optiond'),
(64, 18, 54, 2, 'optiona'),
(64, 18, 57, -0.33, 'optiond'),
(64, 18, 58, -0.33, 'optiona'),
(64, 18, 59, 1, 'optionc'),
(64, 18, 60, 1, 'optiona'),
(64, 18, 61, 2, 'optionb'),
(64, 18, 65, 2, 'optiond'),
(65, 7, 1, 1, 'optionc'),
(65, 7, 2, -0.33, 'optiona'),
(65, 7, 3, -0.33, 'optiond'),
(65, 7, 4, 1, 'optiond'),
(65, 7, 5, -0.33, 'optionc'),
(65, 7, 6, 1, 'optionb'),
(65, 7, 8, 1, 'optionb'),
(65, 7, 10, 1, 'optionc'),
(65, 7, 11, 1, 'optiona'),
(65, 7, 12, -0.33, 'optiona'),
(65, 7, 14, 1, 'optionc'),
(65, 7, 15, 1, 'optionb'),
(65, 7, 16, 1, 'optiona'),
(65, 7, 17, 1, 'optionc'),
(65, 7, 18, 1, 'optiona'),
(65, 7, 19, 1, 'optiond'),
(65, 7, 20, 1, 'optiona'),
(65, 7, 21, 1, 'optiond'),
(65, 7, 23, 1, 'optiond'),
(65, 7, 25, -0.33, 'optiond'),
(65, 7, 26, 2, 'optiona'),
(65, 7, 28, 2, 'optiona'),
(65, 7, 29, 2, 'optiond'),
(65, 7, 31, 2, 'optiona'),
(65, 7, 34, -0.66, 'optiond'),
(65, 7, 35, 2, 'optionc'),
(65, 7, 36, 2, 'optionc'),
(65, 7, 37, -0.66, 'optionc'),
(65, 7, 38, 2, 'optiona'),
(65, 7, 39, 2, 'optione'),
(65, 7, 40, -0.66, 'optiond'),
(65, 7, 41, 2, 'optionc'),
(65, 7, 42, 2, 'optionc'),
(65, 7, 43, 2, 'optionb'),
(65, 7, 44, 2, 'optionb'),
(65, 7, 45, 2, 'optiond'),
(65, 7, 47, 2, 'optionb'),
(65, 7, 48, 2, 'optionb'),
(65, 7, 49, -0.66, 'optiona'),
(65, 7, 50, 2, 'optionc'),
(65, 7, 52, 2, 'optiona'),
(65, 7, 53, 2, 'optionb'),
(65, 7, 54, 2, 'optiond'),
(65, 7, 55, 2, 'optionb'),
(65, 7, 56, -0.33, 'optiona'),
(65, 7, 57, -0.33, 'optiona'),
(65, 7, 58, -0.33, 'optiona'),
(65, 7, 59, 1, 'optiond'),
(65, 7, 60, -0.33, 'optiond'),
(65, 7, 61, 2, 'optionb'),
(65, 7, 62, 2, 'optionc'),
(65, 7, 63, 2, 'optiond'),
(65, 7, 64, 2, 'optionc'),
(65, 7, 65, 2, 'optionb'),
(65, 8, 1, 1, 'optione'),
(65, 8, 2, 1, 'optiona'),
(65, 8, 3, -0.33, 'optionc'),
(65, 8, 4, -0.33, 'optionb'),
(65, 8, 5, -0.33, 'optiona'),
(65, 8, 6, 1, 'optiond'),
(65, 8, 7, 1, 'optionb'),
(65, 8, 9, 1, 'optiond'),
(65, 8, 10, 1, 'optionc'),
(65, 8, 11, 1, 'optiond'),
(65, 8, 12, 1, 'optiona'),
(65, 8, 13, 1, 'optionb'),
(65, 8, 15, -0.33, 'optiona'),
(65, 8, 17, -0.33, 'optionb'),
(65, 8, 18, 1, 'optione'),
(65, 8, 19, 1, 'optiona'),
(65, 8, 20, -0.33, 'optionc'),
(65, 8, 21, 1, 'optiona'),
(65, 8, 22, -0.33, 'optionb'),
(65, 8, 23, 1, 'optiona'),
(65, 8, 24, 1, 'optiona'),
(65, 8, 25, 1, 'optiond'),
(65, 8, 28, -0.33, 'optiona'),
(65, 8, 30, 1, 'optionc'),
(65, 8, 31, 1, 'optionc'),
(65, 8, 32, 1, 'optionb'),
(65, 8, 33, 1, 'optiona'),
(65, 8, 34, 1, 'optiond'),
(65, 8, 35, 1, 'optionc'),
(65, 8, 36, 1, 'optionc'),
(65, 8, 37, 1, 'optiond'),
(65, 8, 38, 1, 'optionb'),
(65, 8, 39, 1, 'optiond'),
(65, 8, 40, -0.33, 'optiona'),
(65, 8, 41, 1, 'optiona'),
(65, 8, 42, 1, 'optiond'),
(65, 8, 43, -0.33, 'optiona'),
(65, 8, 44, -0.33, 'optiona'),
(65, 8, 45, -0.33, 'optiona'),
(65, 9, 1, -0.66, 'optionb'),
(65, 9, 4, 2, 'optiona'),
(65, 9, 5, 2, 'optiond'),
(65, 9, 7, 2, 'optionc'),
(65, 9, 8, -0.66, 'optionc'),
(65, 9, 10, -0.66, 'optiona'),
(65, 9, 15, 2, 'optiona'),
(65, 9, 17, 2, 'optionb'),
(65, 9, 19, 2, 'optionc'),
(65, 9, 20, -0.66, 'optiona'),
(65, 9, 21, 2, 'optionc'),
(65, 9, 43, -0.66, 'optionb'),
(65, 9, 46, 2, 'optiond'),
(65, 9, 47, 2, 'optionc'),
(65, 9, 48, 2, 'optionc'),
(65, 9, 50, 2, 'optionb'),
(65, 9, 51, -0.66, 'optionc'),
(65, 9, 52, 2, 'optionb'),
(65, 9, 53, -0.66, 'optionb'),
(65, 9, 54, 2, 'optione'),
(65, 9, 55, 2, 'optionb'),
(65, 10, 1, -0.66, 'optionc'),
(65, 10, 2, 2, 'optionb'),
(65, 10, 3, 2, 'optiond'),
(65, 10, 4, 2, 'optionc'),
(65, 10, 5, 2, 'optionb'),
(65, 10, 6, 2, 'optionb'),
(65, 10, 7, -0.66, 'optionb'),
(65, 10, 8, -0.66, 'optionb'),
(65, 10, 9, -0.66, 'optiona'),
(65, 10, 10, 2, 'optiond'),
(65, 10, 11, 2, 'optionc'),
(65, 10, 12, 2, 'optionb'),
(65, 10, 13, 2, 'optionc'),
(65, 10, 14, 2, 'optionb'),
(65, 10, 15, 2, 'optiond'),
(65, 10, 16, 2, 'optiona'),
(65, 10, 17, 2, 'optionb'),
(65, 10, 18, -0.66, 'optionb'),
(65, 10, 19, 2, 'optiona'),
(65, 10, 20, 2, 'optionc'),
(65, 10, 21, 2, 'optionb'),
(65, 10, 22, 2, 'optionb'),
(65, 10, 23, -0.66, 'optionc'),
(65, 10, 24, -0.66, 'optionc'),
(65, 11, 1, 2, 'optionb'),
(65, 11, 2, 2, 'optionc'),
(65, 11, 3, -0.66, 'optiond'),
(65, 11, 4, -0.66, 'optiona'),
(65, 11, 5, 2, 'optionb'),
(65, 11, 6, 2, 'optionb'),
(65, 11, 7, 2, 'optionb'),
(65, 11, 8, 2, 'optiona'),
(65, 11, 10, 2, 'optiona'),
(65, 11, 11, 2, 'optiona'),
(65, 11, 12, 2, 'optiona'),
(65, 11, 15, 2, 'optionc'),
(65, 11, 18, 2, 'optionb'),
(65, 11, 22, 2, 'optiona'),
(65, 11, 24, -0.66, 'optionc'),
(65, 11, 25, 2, 'optionb'),
(65, 11, 26, 2, 'optionc'),
(65, 11, 27, 2, 'optione'),
(65, 11, 28, 2, 'optiona'),
(65, 11, 29, 2, 'optiond'),
(65, 11, 30, -0.66, 'optiona'),
(65, 11, 32, -0.66, 'optione'),
(65, 11, 33, 2, 'optiond'),
(65, 11, 34, 2, 'optiond'),
(65, 11, 35, 2, 'optiond'),
(65, 11, 36, -0.66, 'optiond'),
(65, 11, 37, -0.66, 'optiond'),
(65, 11, 38, 2, 'optiona'),
(65, 11, 39, 2, 'optiona'),
(65, 11, 40, 2, 'optiond'),
(65, 11, 41, 2, 'optionc'),
(65, 11, 42, 2, 'optione'),
(65, 11, 43, -0.66, 'optionc'),
(65, 11, 44, -0.66, 'optionc'),
(65, 11, 46, 2, 'optiona'),
(65, 11, 47, -0.66, 'optiond'),
(65, 11, 48, 2, 'optiond'),
(65, 11, 49, 2, 'optiond'),
(65, 11, 50, -0.66, 'optionb'),
(65, 11, 51, 2, 'optiond'),
(65, 11, 52, 2, 'optionb'),
(65, 11, 53, 2, 'optionc'),
(65, 11, 54, -0.66, 'optione'),
(65, 11, 55, -0.66, 'optionc'),
(65, 11, 56, 2, 'optione'),
(65, 11, 57, 2, 'optionc'),
(65, 11, 58, 2, 'optione'),
(65, 12, 1, 2, 'optionc'),
(65, 12, 2, 2, 'optionc'),
(65, 12, 3, 2, 'optiond'),
(65, 12, 4, -0.66, 'optiond'),
(65, 12, 5, -0.66, 'optiond'),
(65, 12, 6, 2, 'optiond'),
(65, 12, 7, 2, 'optionb'),
(65, 12, 8, 2, 'optionb'),
(65, 12, 11, -0.66, 'optionc'),
(65, 12, 12, -0.66, 'optiona'),
(65, 12, 13, 2, 'optionb'),
(65, 12, 14, 2, 'optiona'),
(65, 12, 15, 2, 'optiond'),
(65, 12, 16, 2, 'optionc'),
(65, 12, 17, -0.66, 'optiond'),
(65, 12, 18, -0.66, 'optionb'),
(65, 12, 19, 2, 'optionb'),
(65, 12, 20, 2, 'optionb'),
(65, 12, 21, 2, 'optiona'),
(65, 12, 22, 2, 'optiond'),
(65, 12, 23, -0.66, 'optionc'),
(65, 12, 24, 2, 'optiona'),
(65, 12, 25, -0.66, 'optiona'),
(65, 12, 26, 2, 'optionb'),
(65, 12, 27, -0.66, 'optiond'),
(65, 12, 28, 2, 'optiond'),
(65, 12, 29, -0.66, 'optionb'),
(65, 12, 30, 2, 'optionb'),
(65, 12, 31, 2, 'optionc'),
(65, 12, 32, 2, 'optionc'),
(65, 12, 34, 2, 'optiond'),
(65, 12, 35, 2, 'optiond'),
(65, 12, 36, -0.66, 'optionb'),
(65, 12, 37, -0.66, 'optionb'),
(65, 12, 38, 2, 'optionc'),
(65, 12, 39, -0.66, 'optione'),
(65, 12, 40, 2, 'optiona'),
(65, 12, 45, 2, 'optiond'),
(65, 12, 46, 2, 'optiond'),
(65, 12, 47, 2, 'optionc'),
(65, 12, 48, -0.66, 'optionc'),
(65, 12, 50, 2, 'optionb'),
(65, 12, 51, 2, 'optionc'),
(65, 12, 52, 2, 'optionb'),
(65, 12, 53, 2, 'optiona'),
(65, 12, 54, 2, 'optiona'),
(65, 13, 1, -0.66, 'optiond'),
(65, 13, 3, -0.66, 'optionb'),
(65, 13, 8, 2, 'optionc'),
(65, 13, 10, 2, 'optione'),
(65, 13, 11, 2, 'optiond'),
(65, 13, 18, -0.66, 'optionb'),
(65, 13, 19, 2, 'optionb'),
(65, 13, 20, 2, 'optiona'),
(65, 13, 21, -0.66, 'optiond'),
(65, 13, 22, -0.66, 'optionc'),
(65, 13, 24, 2, 'optionc'),
(65, 13, 25, 2, 'optiona'),
(65, 13, 26, -0.66, 'optionb'),
(65, 13, 27, 2, 'optiond'),
(65, 13, 28, 2, 'optionc'),
(65, 13, 29, -0.66, 'optiond'),
(65, 13, 30, 2, 'optiona'),
(65, 13, 31, 2, 'optiond'),
(65, 13, 32, 2, 'optiona'),
(65, 13, 33, 2, 'optionb'),
(65, 13, 34, 2, 'optiona'),
(65, 13, 35, 2, 'optionc'),
(65, 13, 36, 2, 'optionc'),
(65, 13, 37, -0.66, 'optionb'),
(65, 13, 38, 2, 'optionb'),
(65, 13, 39, 2, 'optiona'),
(65, 13, 40, 2, 'optiond'),
(65, 15, 2, 1, 'optiond'),
(65, 15, 3, -0.33, 'optiond'),
(65, 15, 4, 1, 'optiona'),
(65, 15, 6, 1, 'optiona'),
(65, 15, 7, 1, 'optionb'),
(65, 15, 9, 1, 'optionb'),
(65, 15, 10, -0.33, 'optionb'),
(65, 15, 11, 1, 'optiond'),
(65, 15, 12, 1, 'optionc'),
(65, 15, 13, 1, 'optionb'),
(65, 15, 14, 1, 'optionc'),
(65, 15, 15, 1, 'optiond'),
(65, 15, 16, 1, 'optiond'),
(65, 15, 17, 1, 'optionb'),
(65, 15, 18, 1, 'optionb'),
(65, 15, 19, 1, 'optionc'),
(65, 15, 20, 1, 'optionb'),
(65, 15, 21, 1, 'optiona'),
(65, 15, 22, 1, 'optionb'),
(65, 15, 23, 1, 'optiona'),
(65, 15, 24, 1, 'optiona'),
(65, 15, 25, 1, 'optiond'),
(65, 15, 26, 2, 'optiona'),
(65, 15, 27, -0.66, 'optiond'),
(65, 15, 28, 2, 'optiond'),
(65, 15, 29, 2, 'optiond'),
(65, 15, 30, 2, 'optionb'),
(65, 15, 31, 2, 'optiona'),
(65, 15, 32, 2, 'optiona'),
(65, 15, 33, 2, 'optionc'),
(65, 15, 35, 2, 'optionc'),
(65, 15, 36, 2, 'optiond'),
(65, 15, 37, 2, 'optionb'),
(65, 15, 38, 2, 'optionc'),
(65, 15, 39, -0.66, 'optiond'),
(65, 15, 40, 2, 'optiond'),
(65, 15, 41, 2, 'optionc'),
(65, 15, 42, 2, 'optiona'),
(65, 15, 43, 2, 'optiona'),
(65, 15, 44, 2, 'optiond'),
(65, 15, 45, -0.66, 'optiond'),
(65, 15, 47, -0.66, 'optionc'),
(65, 15, 48, 2, 'optionc'),
(65, 15, 49, 2, 'optionc'),
(65, 15, 50, 2, 'optiond'),
(65, 15, 51, -0.66, 'optionc'),
(65, 15, 52, 2, 'optionc'),
(65, 15, 53, 2, 'optionc'),
(65, 15, 54, 2, 'optionc'),
(65, 15, 55, 2, 'optionb'),
(65, 15, 56, -0.33, 'optionb'),
(65, 15, 57, 1, 'optionb'),
(65, 15, 58, 1, 'optiond'),
(65, 15, 59, 1, 'optiond'),
(65, 15, 64, -0.66, 'optionb'),
(65, 16, 1, 1, 'optionc'),
(65, 16, 3, 1, 'optiond'),
(65, 16, 4, 1, 'optiond'),
(65, 16, 6, 1, 'optionb'),
(65, 16, 8, 1, 'optiona'),
(65, 16, 9, 1, 'optionc'),
(65, 16, 10, 1, 'optionc'),
(65, 16, 12, -0.33, 'optionc'),
(65, 16, 14, -0.33, 'optiona'),
(65, 16, 15, 1, 'optionc'),
(65, 16, 16, 1, 'optiond'),
(65, 16, 17, -0.33, 'optiond'),
(65, 16, 18, 1, 'optiond'),
(65, 16, 19, 1, 'optiond'),
(65, 16, 20, -0.33, 'optionc'),
(65, 16, 21, 1, 'optiond'),
(65, 16, 22, 1, 'optionb'),
(65, 16, 23, -0.33, 'optiona'),
(65, 16, 25, 1, 'optionb'),
(65, 16, 26, 2, 'optiona'),
(65, 16, 27, -0.66, 'optionc'),
(65, 16, 29, -0.66, 'optionb'),
(65, 16, 30, 2, 'optiond'),
(65, 16, 33, 2, 'optiond'),
(65, 16, 34, 2, 'optiona'),
(65, 16, 35, 2, 'optionb'),
(65, 16, 36, 2, 'optionc'),
(65, 16, 37, 2, 'optionb'),
(65, 16, 38, 2, 'optionb'),
(65, 16, 41, -0.66, 'optiona'),
(65, 16, 43, 2, 'optiona'),
(65, 16, 44, 2, 'optiond'),
(65, 16, 45, 2, 'optiona'),
(65, 16, 46, -0.66, 'optiond'),
(65, 16, 47, 2, 'optionc'),
(65, 16, 48, 2, 'optiona'),
(65, 16, 49, 2, 'optionc'),
(65, 16, 50, 2, 'optiona'),
(65, 16, 51, -0.66, 'optionb'),
(65, 16, 52, 2, 'optiona'),
(65, 16, 59, 1, 'optionc'),
(65, 16, 60, -0.33, 'optionb'),
(65, 16, 61, 2, 'optionb'),
(65, 16, 62, 2, 'optiond'),
(65, 17, 1, 1, 'optiona'),
(65, 17, 2, 1, 'optionb'),
(65, 17, 3, 1, 'optionb'),
(65, 17, 4, -0.33, 'optionb'),
(65, 17, 5, 1, 'optionc'),
(65, 17, 6, 1, 'optiona'),
(65, 17, 7, 1, 'optionc'),
(65, 17, 8, 1, 'optiona'),
(65, 17, 9, 1, 'optionb'),
(65, 17, 10, -0.33, 'optiond'),
(65, 17, 11, -0.33, 'optionc'),
(65, 17, 13, 1, 'optionb'),
(65, 17, 14, 1, 'optionc'),
(65, 17, 16, 1, 'optionb'),
(65, 17, 19, 1, 'optionb'),
(65, 17, 21, 1, 'optionc'),
(65, 17, 22, 1, 'optionb'),
(65, 17, 23, 1, 'optiond'),
(65, 17, 24, 1, 'optionb'),
(65, 17, 25, 1, 'optionb'),
(65, 17, 26, 2, 'optionc'),
(65, 17, 28, 2, 'optiond'),
(65, 17, 29, -0.66, 'optionb'),
(65, 17, 30, 2, 'optiona'),
(65, 17, 31, -0.66, 'optionb'),
(65, 17, 32, 2, 'optiona'),
(65, 17, 33, -0.66, 'optiond'),
(65, 17, 34, 2, 'optiond'),
(65, 17, 35, 2, 'optionb'),
(65, 17, 36, 2, 'optiond'),
(65, 17, 37, 2, 'optionc'),
(65, 17, 38, 2, 'optionc'),
(65, 17, 41, 2, 'optionc'),
(65, 17, 44, 2, 'optionb'),
(65, 17, 45, 2, 'optionb'),
(65, 17, 46, 2, 'optionb'),
(65, 17, 47, -0.66, 'optionb'),
(65, 17, 48, 2, 'optiond'),
(65, 17, 50, 2, 'optiond'),
(65, 17, 51, 2, 'optionc'),
(65, 17, 52, 2, 'optiond'),
(65, 17, 53, 2, 'optiona'),
(65, 17, 54, 2, 'optiond'),
(65, 17, 55, 2, 'optiona'),
(65, 17, 56, -0.33, 'optiond'),
(65, 17, 57, -0.33, 'optionc'),
(65, 17, 58, 1, 'optionc'),
(65, 17, 59, 1, 'optiond'),
(65, 17, 61, 2, 'optionb'),
(65, 17, 63, 2, 'optiona'),
(65, 17, 65, 2, 'optiond'),
(65, 18, 1, 1, 'optiona'),
(65, 18, 2, 1, 'optiond'),
(65, 18, 3, 1, 'optionb'),
(65, 18, 4, 1, 'optiona'),
(65, 18, 6, 1, 'optionc'),
(65, 18, 7, 1, 'optionb'),
(65, 18, 8, 1, 'optionb'),
(65, 18, 9, -0.33, 'optiona'),
(65, 18, 11, -0.33, 'optionc'),
(65, 18, 12, 1, 'optiona'),
(65, 18, 13, 1, 'optiond'),
(65, 18, 14, 1, 'optionc'),
(65, 18, 15, 1, 'optionc'),
(65, 18, 16, 1, 'optionc'),
(65, 18, 17, 1, 'optionb'),
(65, 18, 18, 1, 'optiona'),
(65, 18, 19, -0.33, 'optiond'),
(65, 18, 20, 1, 'optionb'),
(65, 18, 21, -0.33, 'optionc'),
(65, 18, 22, 1, 'optiond'),
(65, 18, 23, -0.33, 'optionb'),
(65, 18, 24, 1, 'optionc'),
(65, 18, 25, 1, 'optionc'),
(65, 18, 26, 2, 'optionb'),
(65, 18, 29, 2, 'optiond'),
(65, 18, 30, 2, 'optionc'),
(65, 18, 31, 2, 'optiona'),
(65, 18, 32, 2, 'optionb'),
(65, 18, 33, 2, 'optiond'),
(65, 18, 34, 2, 'optiona'),
(65, 18, 35, -0.66, 'optionc'),
(65, 18, 36, 2, 'optiona'),
(65, 18, 37, 2, 'optionc'),
(65, 18, 38, 2, 'optionb'),
(65, 18, 39, -0.66, 'optionc'),
(65, 18, 40, -0.66, 'optiond'),
(65, 18, 42, 2, 'optionb'),
(65, 18, 43, 2, 'optionb'),
(65, 18, 44, 2, 'optionc'),
(65, 18, 45, -0.66, 'optionc'),
(65, 18, 47, 2, 'optiond'),
(65, 18, 48, 2, 'optionb'),
(65, 18, 49, 2, 'optionc'),
(65, 18, 50, 2, 'optionc'),
(65, 18, 51, -0.66, 'optionb'),
(65, 18, 52, -0.66, 'optiond'),
(65, 18, 53, -0.66, 'optionc'),
(65, 18, 54, 2, 'optiona'),
(65, 18, 55, -0.66, 'optiona'),
(65, 18, 56, 1, 'optione'),
(65, 18, 58, 1, 'optionc'),
(65, 18, 59, 1, 'optionc'),
(65, 18, 60, 1, 'optiona'),
(65, 18, 61, 2, 'optionb'),
(65, 18, 62, -0.66, 'optiona'),
(65, 18, 64, 2, 'optionb'),
(65, 18, 65, 2, 'optiond'),
(66, 7, 1, 1, 'optionc'),
(66, 7, 3, -0.33, 'optiona'),
(66, 7, 4, 1, 'optiond'),
(66, 7, 5, 1, 'optionb'),
(66, 7, 6, -0.33, 'optiona'),
(66, 7, 7, -0.33, 'optionc'),
(66, 7, 8, 1, 'optionb'),
(66, 7, 9, 1, 'optiona'),
(66, 7, 10, 1, 'optionc'),
(66, 7, 12, -0.33, 'optionc'),
(66, 7, 13, 1, 'optionc'),
(66, 7, 14, 1, 'optionc'),
(66, 7, 15, 1, 'optionb'),
(66, 7, 16, 1, 'optiona'),
(66, 7, 17, 1, 'optionc'),
(66, 7, 18, 1, 'optiona'),
(66, 7, 19, 1, 'optiond'),
(66, 7, 20, 1, 'optiona'),
(66, 7, 21, 1, 'optiond'),
(66, 7, 22, -0.33, 'optionb'),
(66, 7, 23, 1, 'optiond'),
(66, 7, 24, 1, 'optiona'),
(66, 7, 26, 2, 'optiona'),
(66, 7, 28, 2, 'optiona'),
(66, 7, 29, 2, 'optiond'),
(66, 7, 30, 2, 'optionc'),
(66, 7, 31, 2, 'optiona'),
(66, 7, 34, -0.66, 'optiond'),
(66, 7, 35, 2, 'optionc'),
(66, 7, 36, 2, 'optionc'),
(66, 7, 38, -0.66, 'optionb'),
(66, 7, 39, -0.66, 'optiona'),
(66, 7, 40, 2, 'optionb'),
(66, 7, 41, 2, 'optionc'),
(66, 7, 42, 2, 'optionc'),
(66, 7, 43, 2, 'optionb'),
(66, 7, 44, -0.66, 'optiona'),
(66, 7, 45, 2, 'optiond'),
(66, 7, 47, -0.66, 'optiond'),
(66, 7, 50, 2, 'optionc'),
(66, 7, 51, 2, 'optionb'),
(66, 7, 52, 2, 'optiona'),
(66, 7, 53, 2, 'optionb'),
(66, 7, 54, 2, 'optiond'),
(66, 7, 55, -0.66, 'optiond'),
(66, 7, 56, 1, 'optiona'),
(66, 7, 59, -0.33, 'optionb'),
(66, 7, 61, -0.66, 'optiond'),
(66, 7, 62, 2, 'optionc'),
(66, 7, 63, 2, 'optiond'),
(66, 7, 64, -0.66, 'optiona'),
(66, 8, 1, -0.33, 'optionb'),
(66, 8, 2, 1, 'optiona'),
(66, 8, 3, -0.33, 'optionc'),
(66, 8, 4, 1, 'optiond'),
(66, 8, 5, -0.33, 'optiona'),
(66, 8, 6, 1, 'optiond'),
(66, 8, 7, 1, 'optionb'),
(66, 8, 8, -0.33, 'optionc'),
(66, 8, 9, -0.33, 'optiona'),
(66, 8, 11, 1, 'optiond'),
(66, 8, 12, 1, 'optiona'),
(66, 8, 13, 1, 'optionb'),
(66, 8, 14, 1, 'optiona'),
(66, 8, 15, 1, 'optionc'),
(66, 8, 16, 1, 'optionc'),
(66, 8, 17, -0.33, 'optionb'),
(66, 8, 18, 1, 'optione'),
(66, 8, 19, 1, 'optiona'),
(66, 8, 25, 1, 'optiond'),
(66, 8, 26, 1, 'optiond'),
(66, 8, 27, 1, 'optiond'),
(66, 8, 30, 1, 'optionc'),
(66, 8, 31, 1, 'optionc'),
(66, 8, 32, 1, 'optionb'),
(66, 8, 33, 1, 'optiona'),
(66, 8, 34, 1, 'optiond'),
(66, 8, 35, 1, 'optionc'),
(66, 8, 36, 1, 'optionc'),
(66, 8, 37, -0.33, 'optionb'),
(66, 8, 38, -0.33, 'optionc'),
(66, 8, 39, 1, 'optiond'),
(66, 8, 40, 1, 'optionc'),
(66, 8, 41, 1, 'optiona'),
(66, 8, 42, 1, 'optiond'),
(66, 8, 43, 1, 'optionb'),
(66, 8, 44, -0.33, 'optiona'),
(66, 8, 45, -0.33, 'optiona'),
(66, 9, 1, 2, 'optionc'),
(66, 9, 2, -0.66, 'optiond'),
(66, 9, 4, 2, 'optiona'),
(66, 9, 5, 2, 'optiond'),
(66, 9, 6, 2, 'optiond'),
(66, 9, 7, 2, 'optionc'),
(66, 9, 9, 2, 'optionb'),
(66, 9, 11, 2, 'optiona'),
(66, 9, 16, 2, 'optionc'),
(66, 9, 17, 2, 'optionb'),
(66, 9, 19, 2, 'optionc'),
(66, 9, 21, -0.66, 'optiona'),
(66, 9, 25, 2, 'optiond'),
(66, 9, 26, 2, 'optionc'),
(66, 9, 30, 2, 'optionb'),
(66, 9, 31, 2, 'optione'),
(66, 9, 32, 2, 'optionb'),
(66, 9, 34, 2, 'optiond'),
(66, 9, 35, 2, 'optionb'),
(66, 9, 37, 2, 'optionb'),
(66, 9, 41, -0.66, 'optiona'),
(66, 9, 44, 2, 'optionc'),
(66, 9, 46, 2, 'optiond'),
(66, 9, 47, -0.66, 'optiond'),
(66, 9, 49, -0.66, 'optiona'),
(66, 9, 50, 2, 'optionb'),
(66, 9, 52, 2, 'optionb'),
(66, 9, 53, 2, 'optionc'),
(66, 10, 1, 2, 'optione'),
(66, 10, 2, 2, 'optionb'),
(66, 10, 3, 2, 'optiond'),
(66, 10, 5, 2, 'optionb'),
(66, 10, 6, 2, 'optionb'),
(66, 10, 9, 2, 'optionc'),
(66, 10, 11, 2, 'optionc'),
(66, 10, 12, 2, 'optionb'),
(66, 10, 13, 2, 'optionc'),
(66, 10, 14, 2, 'optionb'),
(66, 10, 15, 2, 'optiond'),
(66, 10, 16, 2, 'optiona'),
(66, 10, 17, -0.66, 'optiond'),
(66, 10, 19, 2, 'optiona'),
(66, 10, 21, 2, 'optionb'),
(66, 10, 23, -0.66, 'optionc'),
(66, 11, 1, 2, 'optionb'),
(66, 11, 2, 2, 'optionc'),
(66, 11, 3, -0.66, 'optionc'),
(66, 11, 4, 2, 'optiond'),
(66, 11, 5, 2, 'optionb'),
(66, 11, 6, 2, 'optionb'),
(66, 11, 7, 2, 'optionb'),
(66, 11, 8, 2, 'optiona'),
(66, 11, 9, 2, 'optionc'),
(66, 11, 11, 2, 'optiona'),
(66, 11, 12, 2, 'optiona'),
(66, 11, 15, 2, 'optionc'),
(66, 11, 17, 2, 'optiona'),
(66, 11, 18, 2, 'optionb'),
(66, 11, 19, 2, 'optionb'),
(66, 11, 20, 2, 'optiona'),
(66, 11, 21, -0.66, 'optiond'),
(66, 11, 22, 2, 'optiona'),
(66, 11, 23, 2, 'optionc'),
(66, 11, 25, 2, 'optionb'),
(66, 11, 26, -0.66, 'optiona'),
(66, 11, 27, 2, 'optione'),
(66, 11, 28, 2, 'optiona'),
(66, 11, 29, 2, 'optiond'),
(66, 11, 30, 2, 'optiond'),
(66, 11, 31, 2, 'optione'),
(66, 11, 32, 2, 'optionc'),
(66, 11, 33, -0.66, 'optione'),
(66, 11, 34, 2, 'optiond'),
(66, 11, 35, 2, 'optiond'),
(66, 11, 36, 2, 'optione'),
(66, 11, 37, 2, 'optionb'),
(66, 11, 38, -0.66, 'optione'),
(66, 11, 39, 2, 'optiona'),
(66, 11, 40, 2, 'optiond'),
(66, 11, 41, -0.66, 'optionb'),
(66, 11, 42, 2, 'optione'),
(66, 11, 43, 2, 'optiond'),
(66, 11, 45, 2, 'optiona'),
(66, 11, 46, -0.66, 'optionb'),
(66, 11, 47, -0.66, 'optiona'),
(66, 11, 48, 2, 'optiond'),
(66, 11, 49, 2, 'optiond'),
(66, 11, 50, -0.66, 'optione'),
(66, 11, 51, -0.66, 'optionc'),
(66, 11, 52, 2, 'optionb'),
(66, 11, 53, 2, 'optionc'),
(66, 11, 54, 2, 'optionb'),
(66, 11, 55, -0.66, 'optionc'),
(66, 11, 56, 2, 'optione'),
(66, 11, 57, 2, 'optionc'),
(66, 11, 58, 2, 'optione'),
(66, 11, 60, 2, 'optiond'),
(66, 12, 1, 2, 'optionc'),
(66, 12, 2, 2, 'optionc'),
(66, 12, 6, -0.66, 'optiona'),
(66, 12, 7, 2, 'optionb'),
(66, 12, 10, 2, 'optiond'),
(66, 12, 12, 2, 'optionb'),
(66, 12, 14, -0.66, 'optiond'),
(66, 12, 15, 2, 'optiond'),
(66, 12, 16, 2, 'optionc'),
(66, 12, 17, 2, 'optionc'),
(66, 12, 18, 2, 'optiond'),
(66, 12, 19, 2, 'optionb'),
(66, 12, 20, -0.66, 'optionc'),
(66, 12, 21, 2, 'optiona'),
(66, 12, 22, 2, 'optiond'),
(66, 12, 24, 2, 'optiona'),
(66, 12, 25, 2, 'optionc'),
(66, 12, 26, 2, 'optionb'),
(66, 12, 27, -0.66, 'optiond'),
(66, 12, 30, 2, 'optionb'),
(66, 12, 31, 2, 'optionc'),
(66, 12, 32, 2, 'optionc'),
(66, 12, 35, -0.66, 'optionc'),
(66, 12, 37, 2, 'optiona'),
(66, 12, 38, 2, 'optionc'),
(66, 12, 40, 2, 'optiona'),
(66, 12, 41, 2, 'optionb'),
(66, 12, 42, 2, 'optiona'),
(66, 12, 43, -0.66, 'optionc'),
(66, 12, 44, -0.66, 'optiona'),
(66, 12, 45, 2, 'optiond'),
(66, 12, 46, 2, 'optiond'),
(66, 12, 47, 2, 'optionc'),
(66, 12, 48, 2, 'optiona'),
(66, 12, 50, 2, 'optionb'),
(66, 12, 51, 2, 'optionc'),
(66, 12, 52, 2, 'optionb'),
(66, 12, 53, 2, 'optiona'),
(66, 13, 1, -0.66, 'optiond'),
(66, 13, 2, 2, 'optionb'),
(66, 13, 3, -0.66, 'optionb'),
(66, 13, 5, -0.66, 'optiond'),
(66, 13, 6, -0.66, 'optiona'),
(66, 13, 8, 2, 'optionc'),
(66, 13, 10, 2, 'optione'),
(66, 13, 11, 2, 'optiond'),
(66, 13, 12, -0.66, 'optiond'),
(66, 13, 13, 2, 'optiond'),
(66, 13, 14, 2, 'optionb'),
(66, 13, 22, 2, 'optiona'),
(66, 13, 24, -0.66, 'optiond'),
(66, 13, 27, 2, 'optiond'),
(66, 13, 28, 2, 'optionc'),
(66, 13, 30, 2, 'optiona'),
(66, 13, 32, 2, 'optiona'),
(66, 13, 35, 2, 'optionc'),
(66, 13, 36, 2, 'optionc'),
(66, 13, 38, 2, 'optionb'),
(66, 13, 39, 2, 'optiona'),
(66, 13, 40, 2, 'optiond'),
(67, 4, 1, 1, 'optiona'),
(67, 4, 2, 1, 'optiond'),
(67, 4, 3, 1, 'optionc'),
(67, 4, 4, 1, 'optionc'),
(67, 4, 5, 1, 'optionb'),
(67, 4, 6, 1, 'optiond'),
(67, 4, 7, 1, 'optiond'),
(67, 4, 8, 1, 'optionb'),
(67, 4, 9, 1, 'optionb'),
(67, 4, 10, 1, 'optionc'),
(67, 4, 11, 1, 'optiona'),
(67, 4, 12, 1, 'optionc'),
(67, 4, 13, -0.33, 'optiona'),
(67, 7, 1, -0.33, 'optionc'),
(67, 7, 3, -0.33, 'optiond'),
(67, 7, 4, 1, 'optiond'),
(67, 7, 5, -0.33, 'optiona'),
(67, 7, 7, 1, 'optionb'),
(67, 7, 8, 1, 'optionb'),
(67, 7, 9, 1, 'optiona'),
(67, 7, 10, 1, 'optionc'),
(67, 7, 11, 1, 'optiona'),
(67, 7, 12, -0.33, 'optionc'),
(67, 7, 13, 1, 'optionc'),
(67, 7, 14, 1, 'optionc'),
(67, 7, 15, 1, 'optionb'),
(67, 7, 16, 1, 'optiona'),
(67, 7, 17, -0.33, 'optiona'),
(67, 7, 18, 1, 'optiona'),
(67, 7, 19, 1, 'optiond'),
(67, 7, 20, 1, 'optiona'),
(67, 7, 22, -0.33, 'optiona'),
(67, 7, 24, 1, 'optiona'),
(67, 7, 25, 1, 'optionc'),
(67, 7, 26, 2, 'optiona'),
(67, 7, 27, -0.66, 'optiond'),
(67, 7, 29, 2, 'optiond'),
(67, 7, 31, 2, 'optiona'),
(67, 7, 33, 2, 'optiond'),
(67, 7, 35, -0.66, 'optione'),
(67, 7, 36, 2, 'optionc'),
(67, 7, 39, 2, 'optione'),
(67, 7, 40, 2, 'optionb'),
(67, 7, 41, 2, 'optionc'),
(67, 7, 42, 2, 'optionc'),
(67, 7, 43, 2, 'optionb'),
(67, 7, 44, 2, 'optionb'),
(67, 7, 45, 2, 'optiond'),
(67, 7, 47, 2, 'optionb'),
(67, 7, 48, 2, 'optionb'),
(67, 7, 49, -0.66, 'optiona'),
(67, 7, 50, 2, 'optionc'),
(67, 7, 51, 2, 'optionb'),
(67, 7, 52, 2, 'optiona'),
(67, 7, 53, -0.66, 'optiona'),
(67, 7, 54, 2, 'optiond'),
(67, 7, 55, -0.66, 'optionb'),
(67, 7, 56, -0.33, 'optiona'),
(67, 7, 58, -0.33, 'optionc'),
(67, 7, 59, 1, 'optiond'),
(67, 7, 60, 1, 'optionc'),
(67, 7, 61, -0.66, 'optiond'),
(67, 7, 62, 2, 'optionc'),
(67, 7, 63, 2, 'optiond'),
(67, 7, 64, 2, 'optionc'),
(67, 7, 65, 2, 'optionb'),
(67, 8, 1, 1, 'optione'),
(67, 8, 2, -0.33, 'optiond'),
(67, 8, 3, 1, 'optionb'),
(67, 8, 4, 1, 'optiond'),
(67, 8, 5, -0.33, 'optiona'),
(67, 8, 6, 1, 'optiond'),
(67, 8, 7, 1, 'optionb'),
(67, 8, 8, 1, 'optionb'),
(67, 8, 9, 1, 'optiond'),
(67, 8, 10, 1, 'optionc'),
(67, 8, 11, 1, 'optiond'),
(67, 8, 12, 1, 'optiona'),
(67, 8, 13, 1, 'optionb'),
(67, 8, 14, 1, 'optiona'),
(67, 8, 15, 1, 'optionc'),
(67, 8, 16, 1, 'optionc'),
(67, 8, 17, -0.33, 'optionb'),
(67, 8, 19, 1, 'optiona'),
(67, 8, 20, 1, 'optione'),
(67, 8, 22, -0.33, 'optiond'),
(67, 8, 25, 1, 'optiond'),
(67, 8, 26, 1, 'optiond'),
(67, 8, 27, 1, 'optiond'),
(67, 8, 28, 1, 'optionc'),
(67, 8, 29, 1, 'optionb'),
(67, 8, 30, 1, 'optionc'),
(67, 8, 31, 1, 'optionc'),
(67, 8, 32, 1, 'optionb'),
(67, 8, 33, 1, 'optiona'),
(67, 8, 34, 1, 'optiond'),
(67, 8, 35, 1, 'optionc'),
(67, 8, 36, 1, 'optionc'),
(67, 8, 37, 1, 'optiond'),
(67, 8, 38, -0.33, 'optionc'),
(67, 8, 39, 1, 'optiond'),
(67, 8, 40, 1, 'optionc'),
(67, 8, 41, 1, 'optiona'),
(67, 8, 42, 1, 'optiond'),
(67, 8, 43, 1, 'optionb'),
(67, 8, 44, -0.33, 'optiona'),
(67, 8, 45, 1, 'optiond'),
(67, 9, 4, 2, 'optiona'),
(67, 9, 5, 2, 'optiond'),
(67, 9, 6, 2, 'optiond'),
(67, 9, 7, -0.66, 'optiona'),
(67, 9, 9, 2, 'optionb'),
(67, 9, 10, 2, 'optionc'),
(67, 9, 12, 2, 'optiona'),
(67, 9, 14, -0.66, 'optiond'),
(67, 9, 15, 2, 'optiona'),
(67, 9, 17, 2, 'optionb'),
(67, 9, 24, -0.66, 'optiona'),
(67, 9, 25, 2, 'optiond'),
(67, 9, 26, 2, 'optionc'),
(67, 9, 27, -0.66, 'optionb'),
(67, 9, 28, 2, 'optionb'),
(67, 9, 29, 2, 'optionc'),
(67, 9, 30, 2, 'optionb'),
(67, 9, 31, -0.66, 'optiond'),
(67, 9, 32, -0.66, 'optiond'),
(67, 9, 33, -0.66, 'optiona'),
(67, 9, 34, -0.66, 'optiona'),
(67, 9, 35, 2, 'optionb'),
(67, 9, 36, -0.66, 'optionb'),
(67, 9, 37, 2, 'optionb'),
(67, 9, 38, -0.66, 'optiond'),
(67, 9, 39, 2, 'optiond'),
(67, 9, 42, 2, 'optionb'),
(67, 9, 43, -0.66, 'optiona'),
(67, 10, 1, 2, 'optione'),
(67, 10, 2, 2, 'optionb'),
(67, 10, 3, -0.66, 'optionc'),
(67, 10, 4, -0.66, 'optione'),
(67, 10, 5, 2, 'optionb'),
(67, 10, 6, 2, 'optionb'),
(67, 10, 7, -0.66, 'optionb'),
(67, 10, 9, -0.66, 'optiona'),
(67, 10, 10, 2, 'optiond'),
(67, 10, 11, 2, 'optionc'),
(67, 10, 12, 2, 'optionb'),
(67, 10, 13, 2, 'optionc'),
(67, 10, 14, 2, 'optionb'),
(67, 10, 15, 2, 'optiond'),
(67, 10, 16, 2, 'optiona'),
(67, 10, 17, -0.66, 'optiond'),
(67, 10, 18, 2, 'optiona'),
(67, 10, 19, 2, 'optiona'),
(67, 10, 20, 2, 'optionc'),
(67, 10, 21, 2, 'optionb'),
(67, 10, 22, 2, 'optionb'),
(67, 10, 23, -0.66, 'optionc'),
(67, 11, 1, -0.66, 'optiond'),
(67, 11, 2, 2, 'optionc'),
(67, 11, 3, -0.66, 'optiond'),
(67, 11, 4, 2, 'optiond'),
(67, 11, 5, 2, 'optionb'),
(67, 11, 6, 2, 'optionb'),
(67, 11, 7, 2, 'optionb'),
(67, 11, 8, 2, 'optiona'),
(67, 11, 9, 2, 'optionc'),
(67, 11, 10, 2, 'optiona'),
(67, 11, 11, 2, 'optiona'),
(67, 11, 12, 2, 'optiona'),
(67, 11, 13, -0.66, 'optiona'),
(67, 11, 14, 2, 'optionc'),
(67, 11, 15, 2, 'optionc'),
(67, 11, 16, 2, 'optionb'),
(67, 11, 17, 2, 'optiona'),
(67, 11, 18, 2, 'optionb'),
(67, 11, 19, 2, 'optionb'),
(67, 11, 20, 2, 'optiona'),
(67, 11, 21, -0.66, 'optionb'),
(67, 11, 22, 2, 'optiona'),
(67, 11, 23, -0.66, 'optiona'),
(67, 11, 24, 2, 'optiona'),
(67, 11, 25, -0.66, 'optiona'),
(67, 11, 26, 2, 'optionc'),
(67, 11, 27, 2, 'optione'),
(67, 11, 28, 2, 'optiona'),
(67, 11, 29, 2, 'optiond'),
(67, 11, 30, -0.66, 'optiona'),
(67, 11, 31, 2, 'optione'),
(67, 11, 32, -0.66, 'optione'),
(67, 11, 33, 2, 'optiond'),
(67, 11, 34, -0.66, 'optione'),
(67, 11, 35, 2, 'optiond'),
(67, 11, 36, 2, 'optione'),
(67, 11, 37, 2, 'optionb'),
(67, 11, 38, 2, 'optiona'),
(67, 11, 39, 2, 'optiona'),
(67, 11, 40, 2, 'optiond'),
(67, 11, 41, 2, 'optionc'),
(67, 11, 42, -0.66, 'optionc'),
(67, 11, 43, 2, 'optiond'),
(67, 11, 44, 2, 'optionb'),
(67, 11, 45, 2, 'optiona'),
(67, 11, 46, 2, 'optiona'),
(67, 11, 48, 2, 'optiond'),
(67, 11, 49, 2, 'optiond'),
(67, 11, 50, 2, 'optionc'),
(67, 11, 51, 2, 'optiond'),
(67, 11, 52, 2, 'optionb'),
(67, 11, 53, 2, 'optionc'),
(67, 11, 54, -0.66, 'optione'),
(67, 11, 55, -0.66, 'optionc'),
(67, 11, 56, 2, 'optione'),
(67, 11, 57, 2, 'optionc'),
(67, 11, 58, 2, 'optione'),
(67, 11, 59, 2, 'optiona'),
(67, 11, 60, 2, 'optiond'),
(67, 12, 1, 2, 'optionc'),
(67, 12, 2, 2, 'optionc'),
(67, 12, 4, 2, 'optionc'),
(67, 12, 6, -0.66, 'optiona'),
(67, 12, 7, 2, 'optionb'),
(67, 12, 8, -0.66, 'optiona'),
(67, 12, 9, 2, 'optiona'),
(67, 12, 10, 2, 'optiond'),
(67, 12, 11, 2, 'optionb'),
(67, 12, 12, 2, 'optionb'),
(67, 12, 13, 2, 'optionb'),
(67, 12, 14, 2, 'optiona'),
(67, 12, 15, 2, 'optiond'),
(67, 12, 16, 2, 'optionc'),
(67, 12, 17, 2, 'optionc'),
(67, 12, 18, 2, 'optiond'),
(67, 12, 19, 2, 'optionb'),
(67, 12, 20, 2, 'optionb'),
(67, 12, 21, 2, 'optiona'),
(67, 12, 22, 2, 'optiond'),
(67, 12, 23, -0.66, 'optiond'),
(67, 12, 24, 2, 'optiona'),
(67, 12, 25, -0.66, 'optiona'),
(67, 12, 26, 2, 'optionb'),
(67, 12, 28, 2, 'optiond'),
(67, 12, 29, 2, 'optiona'),
(67, 12, 30, 2, 'optionb'),
(67, 12, 31, 2, 'optionc'),
(67, 12, 32, 2, 'optionc'),
(67, 12, 33, -0.66, 'optionb'),
(67, 12, 34, 2, 'optiond'),
(67, 12, 35, 2, 'optiond'),
(67, 12, 36, 2, 'optionc'),
(67, 12, 38, 2, 'optionc'),
(67, 12, 39, 2, 'optiona'),
(67, 12, 40, 2, 'optiona'),
(67, 12, 41, 2, 'optionb'),
(67, 12, 42, 2, 'optiona'),
(67, 12, 43, -0.66, 'optionc'),
(67, 12, 44, 2, 'optionb'),
(67, 12, 45, 2, 'optiond'),
(67, 12, 46, 2, 'optiond'),
(67, 12, 47, -0.66, 'optionb'),
(67, 12, 48, -0.66, 'optionc'),
(67, 12, 49, 2, 'optionc'),
(67, 12, 50, 2, 'optionb'),
(67, 12, 51, 2, 'optionc'),
(67, 12, 52, 2, 'optionb'),
(67, 12, 53, 2, 'optiona'),
(67, 12, 54, 2, 'optiona'),
(67, 13, 1, -0.66, 'optiond'),
(67, 13, 2, 2, 'optionb'),
(67, 13, 3, -0.66, 'optionb'),
(67, 13, 4, -0.66, 'optiona'),
(67, 13, 6, -0.66, 'optiona'),
(67, 13, 7, 2, 'optionb'),
(67, 13, 8, 2, 'optionc'),
(67, 13, 9, 2, 'optione'),
(67, 13, 10, 2, 'optione'),
(67, 13, 11, 2, 'optiond'),
(67, 13, 12, 2, 'optiona'),
(67, 13, 13, 2, 'optiond'),
(67, 13, 15, -0.66, 'optionb'),
(67, 13, 18, -0.66, 'optionc'),
(67, 13, 20, 2, 'optiona'),
(67, 13, 21, 2, 'optiona'),
(67, 13, 22, -0.66, 'optionc'),
(67, 13, 23, 2, 'optiona'),
(67, 13, 24, -0.66, 'optiond'),
(67, 13, 25, 2, 'optiona'),
(67, 13, 26, -0.66, 'optionb'),
(67, 13, 27, 2, 'optiond'),
(67, 13, 28, 2, 'optionc'),
(67, 13, 29, -0.66, 'optiona'),
(67, 13, 30, 2, 'optiona'),
(67, 13, 31, 2, 'optiond'),
(67, 13, 32, 2, 'optiona'),
(67, 13, 33, 2, 'optionb'),
(67, 13, 34, 2, 'optiona'),
(67, 13, 35, 2, 'optionc'),
(67, 13, 36, 2, 'optionc'),
(67, 13, 38, 2, 'optionb'),
(67, 13, 39, 2, 'optiona'),
(67, 13, 40, 2, 'optiond'),
(67, 15, 1, 1, 'optionc'),
(67, 15, 2, 1, 'optiond'),
(67, 15, 3, 1, 'optionc'),
(67, 15, 4, 1, 'optiona'),
(67, 15, 5, 1, 'optionb'),
(67, 15, 6, 1, 'optiona'),
(67, 15, 7, -0.33, 'optiond'),
(67, 15, 8, 1, 'optiona'),
(67, 15, 9, -0.33, 'optiona'),
(67, 15, 10, 1, 'optiona'),
(67, 15, 11, 1, 'optiond'),
(67, 15, 12, 1, 'optionc'),
(67, 15, 13, 1, 'optionb'),
(67, 15, 14, 1, 'optionc'),
(67, 15, 15, 1, 'optiond'),
(67, 15, 16, -0.33, 'optiona'),
(67, 15, 18, 1, 'optionb'),
(67, 15, 19, 1, 'optionc'),
(67, 15, 20, 1, 'optionb'),
(67, 15, 21, 1, 'optiona'),
(67, 15, 22, 1, 'optionb'),
(67, 15, 23, 1, 'optiona'),
(67, 15, 24, 1, 'optiona'),
(67, 15, 25, 1, 'optiond'),
(67, 15, 26, 2, 'optiona'),
(67, 15, 27, -0.66, 'optionb'),
(67, 15, 28, 2, 'optiond'),
(67, 15, 29, -0.66, 'optiona'),
(67, 15, 30, 2, 'optionb'),
(67, 15, 31, 2, 'optiona'),
(67, 15, 32, 2, 'optiona'),
(67, 15, 33, -0.66, 'optionb'),
(67, 15, 34, 2, 'optionb'),
(67, 15, 35, 2, 'optionc'),
(67, 15, 36, 2, 'optiond'),
(67, 15, 37, -0.66, 'optionc'),
(67, 15, 38, -0.66, 'optiona'),
(67, 15, 39, 2, 'optionb'),
(67, 15, 40, 2, 'optiond'),
(67, 15, 41, 2, 'optionc'),
(67, 15, 42, 2, 'optiona'),
(67, 15, 43, 2, 'optiona'),
(67, 15, 44, 2, 'optiond'),
(67, 15, 45, 2, 'optiona'),
(67, 15, 46, -0.66, 'optionc'),
(67, 15, 47, 2, 'optiond'),
(67, 15, 48, 2, 'optionc'),
(67, 15, 49, 2, 'optionc'),
(67, 15, 50, 2, 'optiond'),
(67, 15, 51, -0.66, 'optiona'),
(67, 15, 52, 2, 'optionc'),
(67, 15, 53, 2, 'optionc'),
(67, 15, 54, 2, 'optionc'),
(67, 15, 55, -0.66, 'optionc'),
(67, 15, 56, -0.33, 'optionb'),
(67, 15, 58, 1, 'optiond'),
(67, 15, 59, 1, 'optiond'),
(67, 15, 61, 2, 'optionc'),
(67, 15, 62, -0.66, 'optionc'),
(67, 15, 63, 2, 'optiond'),
(67, 15, 64, -0.66, 'optiona'),
(67, 16, 1, 1, 'optionc'),
(67, 16, 3, 1, 'optiond'),
(67, 16, 4, 1, 'optiond'),
(67, 16, 6, 1, 'optionb'),
(67, 16, 8, 1, 'optiona'),
(67, 16, 9, 1, 'optionc'),
(67, 16, 10, 1, 'optionc'),
(67, 16, 12, -0.33, 'optionc'),
(67, 16, 13, -0.33, 'optionc'),
(67, 16, 14, 1, 'optiond'),
(67, 16, 16, 1, 'optiond'),
(67, 16, 17, 1, 'optiona'),
(67, 16, 18, 1, 'optiond'),
(67, 16, 19, 1, 'optiond'),
(67, 16, 20, 1, 'optiona'),
(67, 16, 21, 1, 'optiond'),
(67, 16, 22, 1, 'optionb'),
(67, 16, 24, 1, 'optiona'),
(67, 16, 25, 1, 'optionb'),
(67, 16, 26, -0.66, 'optionb'),
(67, 16, 27, 2, 'optionb'),
(67, 16, 28, 2, 'optiond'),
(67, 16, 29, 2, 'optiond'),
(67, 16, 30, 2, 'optiond'),
(67, 16, 31, -0.66, 'optionc'),
(67, 16, 32, -0.66, 'optionb'),
(67, 16, 33, 2, 'optiond'),
(67, 16, 35, -0.66, 'optionc'),
(67, 16, 36, -0.66, 'optiona'),
(67, 16, 37, 2, 'optionb'),
(67, 16, 38, 2, 'optionb'),
(67, 16, 40, 2, 'optiona'),
(67, 16, 42, -0.66, 'optiond'),
(67, 16, 43, 2, 'optiona'),
(67, 16, 44, 2, 'optiond'),
(67, 16, 45, -0.66, 'optionb'),
(67, 16, 46, -0.66, 'optionb'),
(67, 16, 47, 2, 'optionc'),
(67, 16, 48, 2, 'optiona'),
(67, 16, 49, 2, 'optionc'),
(67, 16, 50, 2, 'optiona'),
(67, 16, 51, -0.66, 'optionb'),
(67, 16, 52, 2, 'optiona'),
(67, 16, 53, -0.66, 'optiona'),
(67, 16, 57, 1, 'optionc'),
(67, 16, 60, 1, 'optionc'),
(67, 16, 61, 2, 'optionb'),
(67, 16, 62, 2, 'optiond'),
(67, 16, 64, 2, 'optionb'),
(67, 17, 1, 1, 'optiona'),
(67, 17, 2, 1, 'optionb'),
(67, 17, 3, 1, 'optionb'),
(67, 17, 5, 1, 'optionc'),
(67, 17, 6, 1, 'optiona'),
(67, 17, 7, -0.33, 'optionb'),
(67, 17, 8, 1, 'optiona'),
(67, 17, 9, -0.33, 'optiona'),
(67, 17, 10, -0.33, 'optionc'),
(67, 17, 11, 1, 'optiond'),
(67, 17, 12, -0.33, 'optionc'),
(67, 17, 13, -0.33, 'optiona'),
(67, 17, 14, 1, 'optionc'),
(67, 17, 17, 1, 'optiona'),
(67, 17, 18, -0.33, 'optiona'),
(67, 17, 19, 1, 'optionb'),
(67, 17, 20, -0.33, 'optionb'),
(67, 17, 21, -0.33, 'optiona'),
(67, 17, 22, 1, 'optionb'),
(67, 17, 23, 1, 'optiond'),
(67, 17, 25, 1, 'optionb'),
(67, 17, 26, 2, 'optionc'),
(67, 17, 27, -0.66, 'optiond'),
(67, 17, 28, -0.66, 'optionb'),
(67, 17, 29, -0.66, 'optiona'),
(67, 17, 30, 2, 'optiona'),
(67, 17, 31, 2, 'optiond'),
(67, 17, 32, 2, 'optiona'),
(67, 17, 33, 2, 'optiona'),
(67, 17, 34, 2, 'optiond'),
(67, 17, 35, -0.66, 'optionc'),
(67, 17, 36, 2, 'optiond'),
(67, 17, 37, 2, 'optionc'),
(67, 17, 38, 2, 'optionc'),
(67, 17, 39, 2, 'optionb'),
(67, 17, 40, -0.66, 'optiond'),
(67, 17, 41, 2, 'optionc'),
(67, 17, 42, 2, 'optionb'),
(67, 17, 45, 2, 'optionb'),
(67, 17, 46, 2, 'optionb'),
(67, 17, 47, -0.66, 'optionb'),
(67, 17, 48, -0.66, 'optionc'),
(67, 17, 49, -0.66, 'optiond'),
(67, 17, 50, 2, 'optiond'),
(67, 17, 51, 2, 'optionc'),
(67, 17, 54, 2, 'optiond'),
(67, 17, 55, 2, 'optiona'),
(67, 17, 58, 1, 'optionc'),
(67, 17, 60, 1, 'optiond'),
(67, 17, 61, 2, 'optionb'),
(67, 17, 62, 2, 'optionc'),
(67, 17, 63, -0.66, 'optiond'),
(67, 17, 64, 2, 'optionb'),
(67, 17, 65, 2, 'optiond'),
(67, 18, 1, -0.33, 'optiond'),
(67, 18, 2, 1, 'optiond'),
(67, 18, 3, 1, 'optionb'),
(67, 18, 4, 1, 'optiona'),
(67, 18, 6, 1, 'optionc'),
(67, 18, 8, 1, 'optionb'),
(67, 18, 11, 1, 'optionb'),
(67, 18, 12, 1, 'optiona'),
(67, 18, 13, 1, 'optiond'),
(67, 18, 14, 1, 'optionc'),
(67, 18, 15, 1, 'optionc'),
(67, 18, 16, 1, 'optionc'),
(67, 18, 17, 1, 'optionb'),
(67, 18, 18, 1, 'optiona'),
(67, 18, 19, 1, 'optionc'),
(67, 18, 20, 1, 'optionb'),
(67, 18, 21, 1, 'optiond'),
(67, 18, 22, 1, 'optiond'),
(67, 18, 24, 1, 'optionc'),
(67, 18, 25, 1, 'optionc'),
(67, 18, 26, 2, 'optionb'),
(67, 18, 27, 2, 'optiond'),
(67, 18, 29, 2, 'optiond'),
(67, 18, 30, 2, 'optionc'),
(67, 18, 31, 2, 'optiona'),
(67, 18, 32, 2, 'optionb'),
(67, 18, 33, 2, 'optiond'),
(67, 18, 34, 2, 'optiona'),
(67, 18, 35, -0.66, 'optionb'),
(67, 18, 36, -0.66, 'optionb'),
(67, 18, 37, -0.66, 'optionb'),
(67, 18, 38, 2, 'optionb'),
(67, 18, 39, -0.66, 'optionc'),
(67, 18, 42, 2, 'optionb'),
(67, 18, 43, 2, 'optionb'),
(67, 18, 44, 2, 'optionc'),
(67, 18, 45, -0.66, 'optionc'),
(67, 18, 46, 2, 'optionc'),
(67, 18, 47, 2, 'optiond'),
(67, 18, 48, 2, 'optionb'),
(67, 18, 49, 2, 'optionc'),
(67, 18, 50, 2, 'optionc'),
(67, 18, 51, -0.66, 'optionb'),
(67, 18, 52, 2, 'optiona'),
(67, 18, 53, -0.66, 'optiond'),
(67, 18, 54, 2, 'optiona'),
(67, 18, 58, 1, 'optionc'),
(67, 18, 60, 1, 'optiona'),
(67, 18, 61, 2, 'optionb'),
(67, 18, 62, 2, 'optiond'),
(67, 18, 64, 2, 'optionb'),
(67, 18, 65, 2, 'optiond'),
(68, 7, 1, -0.33, 'optiond'),
(68, 7, 2, 1, 'optiond'),
(68, 7, 3, 1, 'optionb'),
(68, 7, 4, 1, 'optiond'),
(68, 7, 5, -0.33, 'optionc'),
(68, 7, 6, 1, 'optionb'),
(68, 7, 7, 1, 'optionb'),
(68, 7, 8, 1, 'optionb'),
(68, 7, 9, 1, 'optiona'),
(68, 7, 10, 1, 'optionc'),
(68, 7, 11, 1, 'optiona'),
(68, 7, 12, 1, 'optionb'),
(68, 7, 13, 1, 'optionc'),
(68, 7, 14, 1, 'optionc'),
(68, 7, 15, -0.33, 'optiond'),
(68, 7, 16, 1, 'optiona'),
(68, 7, 17, 1, 'optionc'),
(68, 7, 19, 1, 'optiond'),
(68, 7, 20, 1, 'optiona'),
(68, 7, 21, 1, 'optiond'),
(68, 7, 22, -0.33, 'optiona'),
(68, 7, 23, 1, 'optiond'),
(68, 7, 24, 1, 'optiona'),
(68, 7, 25, -0.33, 'optionb'),
(68, 7, 26, -0.66, 'optiond'),
(68, 7, 28, 2, 'optiona'),
(68, 7, 29, 2, 'optiond'),
(68, 7, 31, 2, 'optiona'),
(68, 7, 32, 2, 'optiona'),
(68, 7, 34, -0.66, 'optiond'),
(68, 7, 35, 2, 'optionc'),
(68, 7, 36, 2, 'optionc'),
(68, 7, 38, -0.66, 'optionb'),
(68, 7, 39, -0.66, 'optiond'),
(68, 7, 40, 2, 'optionb'),
(68, 7, 41, 2, 'optionc'),
(68, 7, 42, 2, 'optionc'),
(68, 7, 44, 2, 'optionb'),
(68, 7, 45, 2, 'optiond'),
(68, 7, 47, -0.66, 'optiona'),
(68, 7, 48, 2, 'optionb'),
(68, 7, 52, 2, 'optiona'),
(68, 7, 53, 2, 'optionb'),
(68, 7, 54, 2, 'optiond'),
(68, 7, 55, 2, 'optionb'),
(68, 7, 57, 1, 'optionc'),
(68, 7, 58, -0.33, 'optionc'),
(68, 7, 59, -0.33, 'optionb'),
(68, 7, 60, -0.33, 'optiond'),
(68, 7, 61, -0.66, 'optiond'),
(68, 7, 63, 2, 'optiond'),
(68, 7, 65, 2, 'optionb'),
(68, 8, 1, 1, 'optione'),
(68, 8, 2, -0.33, 'optiond'),
(68, 8, 3, -0.33, 'optionc'),
(68, 8, 4, -0.33, 'optionb'),
(68, 8, 5, 1, 'optionc'),
(68, 8, 6, 1, 'optiond'),
(68, 8, 8, 1, 'optionb'),
(68, 8, 9, 1, 'optiond'),
(68, 8, 10, 1, 'optionc'),
(68, 8, 11, 1, 'optiond'),
(68, 8, 12, 1, 'optiona'),
(68, 8, 13, 1, 'optionb'),
(68, 8, 14, 1, 'optiona'),
(68, 8, 15, 1, 'optionc'),
(68, 8, 17, 1, 'optione'),
(68, 8, 18, -0.33, 'optiond'),
(68, 8, 19, 1, 'optiona'),
(68, 8, 20, -0.33, 'optiona'),
(68, 8, 25, 1, 'optiond'),
(68, 8, 26, 1, 'optiond'),
(68, 8, 27, 1, 'optiond'),
(68, 8, 30, 1, 'optionc'),
(68, 8, 31, 1, 'optionc'),
(68, 8, 32, 1, 'optionb'),
(68, 8, 33, 1, 'optiona'),
(68, 8, 34, 1, 'optiond'),
(68, 8, 35, 1, 'optionc'),
(68, 8, 36, 1, 'optionc'),
(68, 8, 37, 1, 'optiond'),
(68, 8, 38, 1, 'optionb'),
(68, 8, 39, -0.33, 'optionb'),
(68, 8, 40, -0.33, 'optiona'),
(68, 8, 41, 1, 'optiona'),
(68, 8, 42, 1, 'optiond'),
(68, 8, 43, 1, 'optionb'),
(68, 8, 44, 1, 'optionb'),
(68, 8, 45, 1, 'optiond'),
(68, 10, 1, 2, 'optione'),
(68, 10, 2, 2, 'optionb'),
(68, 10, 3, -0.66, 'optione'),
(68, 10, 4, -0.66, 'optiona'),
(68, 10, 5, 2, 'optionb'),
(68, 10, 6, 2, 'optionb'),
(68, 10, 8, -0.66, 'optiona'),
(68, 10, 9, 2, 'optionc'),
(68, 10, 10, 2, 'optiond'),
(68, 10, 11, 2, 'optionc'),
(68, 10, 12, 2, 'optionb'),
(68, 10, 13, 2, 'optionc'),
(68, 10, 14, 2, 'optionb'),
(68, 10, 15, 2, 'optiond'),
(68, 10, 16, 2, 'optiona'),
(68, 10, 17, 2, 'optionb'),
(68, 10, 18, -0.66, 'optiond'),
(68, 10, 19, 2, 'optiona'),
(68, 10, 20, -0.66, 'optiond'),
(68, 10, 21, 2, 'optionb'),
(68, 10, 22, 2, 'optionb'),
(68, 10, 23, 2, 'optiond'),
(68, 10, 24, -0.66, 'optionc'),
(68, 11, 1, 2, 'optionb'),
(68, 11, 2, -0.66, 'optiond'),
(68, 11, 4, 2, 'optiond'),
(68, 11, 5, 2, 'optionb'),
(68, 11, 6, 2, 'optionb'),
(68, 11, 7, 2, 'optionb'),
(68, 11, 8, 2, 'optiona'),
(68, 11, 9, 2, 'optionc'),
(68, 11, 10, 2, 'optiona'),
(68, 11, 11, 2, 'optiona'),
(68, 11, 12, 2, 'optiona'),
(68, 11, 15, -0.66, 'optiona'),
(68, 11, 17, 2, 'optiona'),
(68, 11, 18, 2, 'optionb'),
(68, 11, 19, 2, 'optionb'),
(68, 11, 21, 2, 'optionc'),
(68, 11, 24, 2, 'optiona'),
(68, 11, 25, 2, 'optionb'),
(68, 11, 26, -0.66, 'optiond'),
(68, 11, 27, 2, 'optione'),
(68, 11, 28, 2, 'optiona'),
(68, 11, 29, 2, 'optiond'),
(68, 11, 30, -0.66, 'optiona'),
(68, 11, 31, 2, 'optione'),
(68, 11, 32, -0.66, 'optione'),
(68, 11, 34, 2, 'optiond'),
(68, 11, 35, 2, 'optiond'),
(68, 11, 36, 2, 'optione'),
(68, 11, 37, 2, 'optionb'),
(68, 11, 38, 2, 'optiona'),
(68, 11, 39, 2, 'optiona'),
(68, 11, 40, 2, 'optiond'),
(68, 11, 41, -0.66, 'optiond'),
(68, 11, 42, -0.66, 'optionc'),
(68, 11, 43, 2, 'optiond'),
(68, 11, 44, -0.66, 'optionc'),
(68, 11, 45, 2, 'optiona'),
(68, 11, 46, 2, 'optiona'),
(68, 11, 48, 2, 'optiond'),
(68, 11, 49, 2, 'optiond'),
(68, 11, 51, 2, 'optiond'),
(68, 11, 52, 2, 'optionb'),
(68, 11, 53, -0.66, 'optione'),
(68, 11, 54, 2, 'optionb'),
(68, 11, 55, -0.66, 'optionc'),
(68, 11, 56, 2, 'optione'),
(68, 11, 57, 2, 'optionc'),
(68, 11, 58, -0.66, 'optiona'),
(68, 11, 60, 2, 'optiond'),
(68, 12, 1, 2, 'optionc'),
(68, 12, 2, -0.66, 'optiond'),
(68, 12, 3, 2, 'optiond'),
(68, 12, 5, 2, 'optiona'),
(68, 12, 6, -0.66, 'optiona'),
(68, 12, 7, 2, 'optionb'),
(68, 12, 8, -0.66, 'optiona'),
(68, 12, 9, 2, 'optiona'),
(68, 12, 10, 2, 'optiond'),
(68, 12, 11, -0.66, 'optionc'),
(68, 12, 12, 2, 'optionb'),
(68, 12, 13, 2, 'optionb'),
(68, 12, 14, 2, 'optiona'),
(68, 12, 15, 2, 'optiond'),
(68, 12, 16, 2, 'optionc'),
(68, 12, 17, 2, 'optionc'),
(68, 12, 18, 2, 'optiond'),
(68, 12, 19, 2, 'optionb'),
(68, 12, 20, 2, 'optionb'),
(68, 12, 21, 2, 'optiona'),
(68, 12, 22, 2, 'optiond'),
(68, 12, 23, -0.66, 'optiona'),
(68, 12, 24, 2, 'optiona'),
(68, 12, 25, 2, 'optionc'),
(68, 12, 26, 2, 'optionb'),
(68, 12, 27, -0.66, 'optionb'),
(68, 12, 28, 2, 'optiond'),
(68, 12, 29, 2, 'optiona'),
(68, 12, 30, -0.66, 'optiona'),
(68, 12, 31, 2, 'optionc'),
(68, 12, 32, 2, 'optionc'),
(68, 12, 34, 2, 'optiond'),
(68, 12, 35, 2, 'optiond'),
(68, 12, 36, 2, 'optionc'),
(68, 12, 37, -0.66, 'optiond'),
(68, 12, 38, 2, 'optionc'),
(68, 12, 39, -0.66, 'optiond'),
(68, 12, 40, -0.66, 'optiond'),
(68, 12, 41, 2, 'optionb'),
(68, 12, 42, -0.66, 'optiond'),
(68, 12, 43, 2, 'optiond'),
(68, 12, 45, 2, 'optiond'),
(68, 12, 46, 2, 'optiond'),
(68, 12, 47, 2, 'optionc'),
(68, 12, 48, -0.66, 'optionc'),
(68, 12, 50, 2, 'optionb'),
(68, 12, 51, 2, 'optionc'),
(68, 12, 52, 2, 'optionb'),
(68, 12, 53, 2, 'optiona'),
(68, 12, 54, 2, 'optiona'),
(68, 13, 1, -0.66, 'optiond'),
(68, 13, 2, 2, 'optionb'),
(68, 13, 3, -0.66, 'optionb'),
(68, 13, 4, -0.66, 'optionc'),
(68, 13, 5, -0.66, 'optiond'),
(68, 13, 6, -0.66, 'optiona'),
(68, 13, 7, 2, 'optionb'),
(68, 13, 8, 2, 'optionc'),
(68, 13, 9, 2, 'optione'),
(68, 13, 10, 2, 'optione'),
(68, 13, 11, -0.66, 'optione'),
(68, 13, 12, 2, 'optiona'),
(68, 13, 13, 2, 'optiond'),
(68, 13, 14, 2, 'optionb'),
(68, 13, 15, 2, 'optionc'),
(68, 13, 20, 2, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(68, 13, 21, -0.66, 'optiond'),
(68, 13, 22, 2, 'optiona'),
(68, 13, 24, 2, 'optionc'),
(68, 13, 25, 2, 'optiona'),
(68, 13, 26, 2, 'optiond'),
(68, 13, 27, 2, 'optiond'),
(68, 13, 28, 2, 'optionc'),
(68, 13, 29, -0.66, 'optiond'),
(68, 13, 30, 2, 'optiona'),
(68, 13, 31, 2, 'optiond'),
(68, 13, 32, 2, 'optiona'),
(68, 13, 33, 2, 'optionb'),
(68, 13, 34, 2, 'optiona'),
(68, 13, 35, 2, 'optionc'),
(68, 13, 36, 2, 'optionc'),
(68, 13, 38, 2, 'optionb'),
(68, 13, 39, 2, 'optiona'),
(68, 13, 40, 2, 'optiond'),
(68, 15, 1, 1, 'optionc'),
(68, 15, 2, 1, 'optiond'),
(68, 15, 3, 1, 'optionc'),
(68, 15, 4, 1, 'optiona'),
(68, 15, 5, 1, 'optionb'),
(68, 15, 6, 1, 'optiona'),
(68, 15, 8, 1, 'optiona'),
(68, 15, 9, 1, 'optionb'),
(68, 15, 10, 1, 'optiona'),
(68, 15, 11, 1, 'optiond'),
(68, 15, 12, -0.33, 'optiond'),
(68, 15, 13, 1, 'optionb'),
(68, 15, 14, 1, 'optionc'),
(68, 15, 15, 1, 'optiond'),
(68, 15, 16, 1, 'optiond'),
(68, 15, 17, 1, 'optionb'),
(68, 15, 18, 1, 'optionb'),
(68, 15, 19, 1, 'optionc'),
(68, 15, 20, 1, 'optionb'),
(68, 15, 21, 1, 'optiona'),
(68, 15, 22, 1, 'optionb'),
(68, 15, 23, 1, 'optiona'),
(68, 15, 24, 1, 'optiona'),
(68, 15, 25, 1, 'optiond'),
(68, 15, 26, 2, 'optiona'),
(68, 15, 27, 2, 'optiona'),
(68, 15, 28, 2, 'optiond'),
(68, 15, 29, 2, 'optiond'),
(68, 15, 30, 2, 'optionb'),
(68, 15, 31, 2, 'optiona'),
(68, 15, 32, 2, 'optiona'),
(68, 15, 33, 2, 'optionc'),
(68, 15, 34, 2, 'optionb'),
(68, 15, 35, 2, 'optionc'),
(68, 15, 36, 2, 'optiond'),
(68, 15, 37, 2, 'optionb'),
(68, 15, 38, 2, 'optionc'),
(68, 15, 39, 2, 'optionb'),
(68, 15, 40, 2, 'optiond'),
(68, 15, 41, 2, 'optionc'),
(68, 15, 42, 2, 'optiona'),
(68, 15, 43, 2, 'optiona'),
(68, 15, 44, 2, 'optiond'),
(68, 15, 45, 2, 'optiona'),
(68, 15, 46, 2, 'optionb'),
(68, 15, 47, 2, 'optiond'),
(68, 15, 48, -0.66, 'optiond'),
(68, 15, 49, -0.66, 'optionb'),
(68, 15, 50, 2, 'optiond'),
(68, 15, 51, -0.66, 'optionc'),
(68, 15, 52, 2, 'optionc'),
(68, 15, 53, 2, 'optionc'),
(68, 15, 54, 2, 'optionc'),
(68, 15, 55, 2, 'optionb'),
(68, 15, 57, -0.33, 'optiona'),
(68, 15, 58, 1, 'optiond'),
(68, 15, 59, 1, 'optiond'),
(68, 15, 60, 1, 'optiona'),
(68, 15, 62, 2, 'optionb'),
(68, 15, 63, 2, 'optiond'),
(68, 15, 64, -0.66, 'optiona'),
(68, 16, 1, 1, 'optionc'),
(68, 16, 5, -0.33, 'optionb'),
(68, 16, 6, 1, 'optionb'),
(68, 16, 8, 1, 'optiona'),
(68, 16, 9, 1, 'optionc'),
(68, 16, 10, 1, 'optionc'),
(68, 16, 12, -0.33, 'optionc'),
(68, 16, 13, 1, 'optionb'),
(68, 16, 15, 1, 'optionc'),
(68, 16, 16, 1, 'optiond'),
(68, 16, 19, 1, 'optiond'),
(68, 16, 20, 1, 'optiona'),
(68, 16, 21, 1, 'optiond'),
(68, 16, 22, 1, 'optionb'),
(68, 16, 25, 1, 'optionb'),
(68, 16, 26, 2, 'optiona'),
(68, 16, 27, -0.66, 'optiona'),
(68, 16, 28, 2, 'optiond'),
(68, 16, 30, -0.66, 'optionc'),
(68, 16, 31, -0.66, 'optiona'),
(68, 16, 33, 2, 'optiond'),
(68, 16, 35, -0.66, 'optiona'),
(68, 16, 39, 2, 'optionb'),
(68, 16, 40, 2, 'optiona'),
(68, 16, 43, 2, 'optiona'),
(68, 16, 44, 2, 'optiond'),
(68, 16, 45, 2, 'optiona'),
(68, 16, 46, -0.66, 'optionb'),
(68, 16, 47, 2, 'optionc'),
(68, 16, 48, 2, 'optiona'),
(68, 16, 50, 2, 'optiona'),
(68, 16, 52, 2, 'optiona'),
(68, 16, 53, 2, 'optionb'),
(68, 16, 56, 1, 'optiond'),
(68, 16, 58, -0.33, 'optionb'),
(68, 16, 61, 2, 'optionb'),
(68, 16, 62, -0.66, 'optiona'),
(68, 17, 1, 1, 'optiona'),
(68, 17, 2, 1, 'optionb'),
(68, 17, 3, 1, 'optionb'),
(68, 17, 4, -0.33, 'optionb'),
(68, 17, 5, 1, 'optionc'),
(68, 17, 6, 1, 'optiona'),
(68, 17, 7, 1, 'optionc'),
(68, 17, 8, -0.33, 'optionc'),
(68, 17, 9, 1, 'optionb'),
(68, 17, 10, 1, 'optiona'),
(68, 17, 11, -0.33, 'optionc'),
(68, 17, 12, 1, 'optiona'),
(68, 17, 13, 1, 'optionb'),
(68, 17, 14, 1, 'optionc'),
(68, 17, 17, 1, 'optiona'),
(68, 17, 19, 1, 'optionb'),
(68, 17, 20, -0.33, 'optionb'),
(68, 17, 22, 1, 'optionb'),
(68, 17, 23, 1, 'optiond'),
(68, 17, 25, 1, 'optionb'),
(68, 17, 26, 2, 'optionc'),
(68, 17, 27, -0.66, 'optiond'),
(68, 17, 28, 2, 'optiond'),
(68, 17, 30, 2, 'optiona'),
(68, 17, 31, -0.66, 'optionc'),
(68, 17, 32, 2, 'optiona'),
(68, 17, 33, 2, 'optiona'),
(68, 17, 34, 2, 'optiond'),
(68, 17, 35, 2, 'optionb'),
(68, 17, 37, 2, 'optionc'),
(68, 17, 38, -0.66, 'optionb'),
(68, 17, 41, 2, 'optionc'),
(68, 17, 42, 2, 'optionb'),
(68, 17, 44, 2, 'optionb'),
(68, 17, 45, 2, 'optionb'),
(68, 17, 46, 2, 'optionb'),
(68, 17, 47, -0.66, 'optiond'),
(68, 17, 48, 2, 'optiond'),
(68, 17, 50, 2, 'optiond'),
(68, 17, 51, 2, 'optionc'),
(68, 17, 52, 2, 'optiond'),
(68, 17, 53, 2, 'optiona'),
(68, 17, 54, 2, 'optiond'),
(68, 17, 55, 2, 'optiona'),
(68, 17, 57, 1, 'optionb'),
(68, 17, 58, 1, 'optionc'),
(68, 17, 59, 1, 'optiond'),
(68, 17, 61, 2, 'optionb'),
(68, 17, 62, 2, 'optionc'),
(68, 17, 63, -0.66, 'optionb'),
(68, 17, 65, 2, 'optiond'),
(68, 18, 1, 1, 'optiona'),
(68, 18, 2, 1, 'optiond'),
(68, 18, 3, 1, 'optionb'),
(68, 18, 4, 1, 'optiona'),
(68, 18, 5, 1, 'optiond'),
(68, 18, 6, 1, 'optionc'),
(68, 18, 8, 1, 'optionb'),
(68, 18, 9, 1, 'optiond'),
(68, 18, 10, -0.33, 'optiond'),
(68, 18, 11, 1, 'optionb'),
(68, 18, 12, 1, 'optiona'),
(68, 18, 14, 1, 'optionc'),
(68, 18, 15, 1, 'optionc'),
(68, 18, 16, 1, 'optionc'),
(68, 18, 17, 1, 'optionb'),
(68, 18, 18, 1, 'optiona'),
(68, 18, 19, 1, 'optionc'),
(68, 18, 20, 1, 'optionb'),
(68, 18, 21, 1, 'optiond'),
(68, 18, 22, 1, 'optiond'),
(68, 18, 23, -0.33, 'optionb'),
(68, 18, 24, 1, 'optionc'),
(68, 18, 25, 1, 'optionc'),
(68, 18, 26, 2, 'optionb'),
(68, 18, 27, 2, 'optiond'),
(68, 18, 28, 2, 'optiona'),
(68, 18, 29, 2, 'optiond'),
(68, 18, 30, 2, 'optionc'),
(68, 18, 31, 2, 'optiona'),
(68, 18, 32, 2, 'optionb'),
(68, 18, 33, 2, 'optiond'),
(68, 18, 34, 2, 'optiona'),
(68, 18, 35, -0.66, 'optionc'),
(68, 18, 36, 2, 'optiona'),
(68, 18, 37, 2, 'optionc'),
(68, 18, 38, 2, 'optionb'),
(68, 18, 42, 2, 'optionb'),
(68, 18, 43, -0.66, 'optionc'),
(68, 18, 45, -0.66, 'optionc'),
(68, 18, 47, 2, 'optiond'),
(68, 18, 48, 2, 'optionb'),
(68, 18, 49, 2, 'optionc'),
(68, 18, 54, 2, 'optiona'),
(68, 18, 56, 1, 'optione'),
(68, 18, 57, -0.33, 'optiond'),
(68, 18, 58, 1, 'optionc'),
(68, 18, 59, -0.33, 'optiona'),
(68, 18, 60, 1, 'optiona'),
(68, 18, 61, 2, 'optionb'),
(68, 18, 62, 2, 'optiond'),
(68, 18, 63, -0.66, 'optionb'),
(68, 18, 64, 2, 'optionb'),
(68, 18, 65, 2, 'optiond'),
(69, 7, 1, 1, 'optionc'),
(69, 7, 3, -0.33, 'optiond'),
(69, 7, 4, -0.33, 'optionb'),
(69, 7, 5, 1, 'optionb'),
(69, 7, 6, 1, 'optionb'),
(69, 7, 8, -0.33, 'optiona'),
(69, 7, 9, 1, 'optiona'),
(69, 7, 10, 1, 'optionc'),
(69, 7, 11, 1, 'optiona'),
(69, 7, 14, 1, 'optionc'),
(69, 7, 15, 1, 'optionb'),
(69, 7, 16, 1, 'optiona'),
(69, 7, 17, 1, 'optionc'),
(69, 7, 18, -0.33, 'optionb'),
(69, 7, 19, 1, 'optiond'),
(69, 7, 21, 1, 'optiond'),
(69, 7, 23, -0.33, 'optionb'),
(69, 7, 24, 1, 'optiona'),
(69, 7, 25, -0.33, 'optionb'),
(69, 7, 26, -0.66, 'optiond'),
(69, 7, 29, -0.66, 'optiona'),
(69, 7, 30, -0.66, 'optiond'),
(69, 7, 31, 2, 'optiona'),
(69, 7, 34, -0.66, 'optiond'),
(69, 7, 35, 2, 'optionc'),
(69, 7, 36, 2, 'optionc'),
(69, 7, 38, -0.66, 'optiond'),
(69, 7, 41, 2, 'optionc'),
(69, 7, 42, -0.66, 'optiond'),
(69, 7, 43, 2, 'optionb'),
(69, 7, 44, -0.66, 'optiona'),
(69, 7, 45, 2, 'optiond'),
(69, 7, 46, -0.66, 'optionb'),
(69, 7, 47, 2, 'optionb'),
(69, 7, 48, 2, 'optionb'),
(69, 7, 49, -0.66, 'optiona'),
(69, 7, 50, 2, 'optionc'),
(69, 7, 51, -0.66, 'optiona'),
(69, 7, 52, 2, 'optiona'),
(69, 7, 53, -0.66, 'optionc'),
(69, 7, 54, 2, 'optiond'),
(69, 7, 58, -0.33, 'optiona'),
(69, 7, 59, -0.33, 'optionb'),
(69, 7, 62, -0.66, 'optionb'),
(69, 7, 63, 2, 'optiond'),
(69, 7, 65, -0.66, 'optiond'),
(69, 8, 1, 1, 'optione'),
(69, 8, 2, -0.33, 'optionb'),
(69, 8, 3, 1, 'optionb'),
(69, 8, 4, -0.33, 'optionb'),
(69, 8, 5, 1, 'optionc'),
(69, 8, 6, 1, 'optiond'),
(69, 8, 7, -0.33, 'optionc'),
(69, 8, 8, 1, 'optionb'),
(69, 8, 9, 1, 'optiond'),
(69, 8, 10, 1, 'optionc'),
(69, 8, 11, 1, 'optiond'),
(69, 8, 13, -0.33, 'optiond'),
(69, 8, 14, 1, 'optiona'),
(69, 8, 15, -0.33, 'optiona'),
(69, 8, 17, -0.33, 'optiond'),
(69, 8, 18, 1, 'optione'),
(69, 8, 19, 1, 'optiona'),
(69, 8, 25, -0.33, 'optione'),
(69, 8, 26, 1, 'optiond'),
(69, 8, 27, 1, 'optiond'),
(69, 8, 30, 1, 'optionc'),
(69, 8, 31, 1, 'optionc'),
(69, 8, 32, 1, 'optionb'),
(69, 8, 33, 1, 'optiona'),
(69, 8, 34, 1, 'optiond'),
(69, 8, 35, 1, 'optionc'),
(69, 8, 36, 1, 'optionc'),
(69, 8, 37, 1, 'optiond'),
(69, 8, 38, 1, 'optionb'),
(69, 8, 39, 1, 'optiond'),
(69, 8, 40, -0.33, 'optiona'),
(69, 8, 41, 1, 'optiona'),
(69, 8, 42, 1, 'optiond'),
(69, 8, 43, 1, 'optionb'),
(69, 8, 44, 1, 'optionb'),
(69, 8, 45, 1, 'optiond'),
(69, 9, 1, 2, 'optionc'),
(69, 9, 2, 2, 'optionb'),
(69, 9, 4, 2, 'optiona'),
(69, 9, 7, -0.66, 'optionb'),
(69, 9, 8, 2, 'optionb'),
(69, 9, 9, -0.66, 'optionc'),
(69, 9, 25, -0.66, 'optionb'),
(69, 9, 26, 2, 'optionc'),
(69, 9, 29, 2, 'optionc'),
(69, 9, 30, 2, 'optionb'),
(69, 9, 31, -0.66, 'optiond'),
(69, 9, 32, 2, 'optionb'),
(69, 9, 33, -0.66, 'optiona'),
(69, 9, 34, 2, 'optiond'),
(69, 9, 35, 2, 'optionb'),
(69, 9, 36, -0.66, 'optiona'),
(69, 9, 37, -0.66, 'optiond'),
(69, 9, 39, 2, 'optiond'),
(69, 9, 40, 2, 'optionc'),
(69, 9, 46, 2, 'optiond'),
(69, 9, 48, -0.66, 'optiond'),
(69, 9, 50, 2, 'optionb'),
(69, 9, 51, 2, 'optionb'),
(69, 9, 52, 2, 'optionb'),
(69, 9, 53, -0.66, 'optionb'),
(69, 9, 54, 2, 'optione'),
(69, 9, 55, 2, 'optionb'),
(69, 11, 1, 2, 'optionb'),
(69, 11, 2, 2, 'optionc'),
(69, 11, 3, -0.66, 'optionc'),
(69, 11, 4, -0.66, 'optionb'),
(69, 11, 5, 2, 'optionb'),
(69, 11, 6, 2, 'optionb'),
(69, 11, 7, 2, 'optionb'),
(69, 11, 8, 2, 'optiona'),
(69, 11, 9, 2, 'optionc'),
(69, 11, 10, -0.66, 'optionc'),
(69, 11, 11, 2, 'optiona'),
(69, 11, 12, 2, 'optiona'),
(69, 11, 15, 2, 'optionc'),
(69, 11, 17, 2, 'optiona'),
(69, 11, 18, 2, 'optionb'),
(69, 11, 19, -0.66, 'optiona'),
(69, 11, 20, -0.66, 'optionc'),
(69, 11, 21, -0.66, 'optiond'),
(69, 11, 22, 2, 'optiona'),
(69, 11, 24, -0.66, 'optionc'),
(69, 11, 25, -0.66, 'optiona'),
(69, 11, 26, 2, 'optionc'),
(69, 11, 27, 2, 'optione'),
(69, 11, 28, -0.66, 'optionc'),
(69, 11, 29, 2, 'optiond'),
(69, 11, 30, -0.66, 'optionb'),
(69, 11, 32, 2, 'optionc'),
(69, 11, 33, -0.66, 'optione'),
(69, 11, 34, 2, 'optiond'),
(69, 11, 35, 2, 'optiond'),
(69, 11, 36, 2, 'optione'),
(69, 11, 37, -0.66, 'optiond'),
(69, 11, 38, 2, 'optiona'),
(69, 11, 40, -0.66, 'optionb'),
(69, 11, 41, 2, 'optionc'),
(69, 11, 42, -0.66, 'optiona'),
(69, 11, 43, -0.66, 'optionc'),
(69, 11, 46, 2, 'optiona'),
(69, 11, 47, -0.66, 'optionb'),
(69, 11, 48, -0.66, 'optiona'),
(69, 11, 49, 2, 'optiond'),
(69, 11, 51, -0.66, 'optionb'),
(69, 11, 52, -0.66, 'optionc'),
(69, 11, 53, 2, 'optionc'),
(69, 11, 55, -0.66, 'optionc'),
(69, 11, 56, 2, 'optione'),
(69, 11, 57, -0.66, 'optiond'),
(69, 11, 58, 2, 'optione'),
(69, 11, 60, -0.66, 'optione'),
(69, 12, 1, -0.66, 'optiona'),
(69, 12, 2, -0.66, 'optionb'),
(69, 12, 4, 2, 'optionc'),
(69, 12, 5, 2, 'optiona'),
(69, 12, 7, 2, 'optionb'),
(69, 12, 8, 2, 'optionb'),
(69, 12, 9, 2, 'optiona'),
(69, 12, 10, 2, 'optiond'),
(69, 12, 11, -0.66, 'optiona'),
(69, 12, 12, 2, 'optionb'),
(69, 12, 13, 2, 'optionb'),
(69, 12, 15, 2, 'optiond'),
(69, 12, 16, 2, 'optionc'),
(69, 12, 17, 2, 'optionc'),
(69, 12, 18, 2, 'optiond'),
(69, 12, 19, 2, 'optionb'),
(69, 12, 20, 2, 'optionb'),
(69, 12, 21, 2, 'optiona'),
(69, 12, 22, 2, 'optiond'),
(69, 12, 23, -0.66, 'optiond'),
(69, 12, 24, 2, 'optiona'),
(69, 12, 25, 2, 'optionc'),
(69, 12, 26, 2, 'optionb'),
(69, 12, 28, 2, 'optiond'),
(69, 12, 29, 2, 'optiona'),
(69, 12, 30, 2, 'optionb'),
(69, 12, 31, -0.66, 'optionb'),
(69, 12, 32, 2, 'optionc'),
(69, 12, 34, -0.66, 'optionb'),
(69, 12, 37, -0.66, 'optionb'),
(69, 12, 38, 2, 'optionc'),
(69, 12, 40, 2, 'optiona'),
(69, 12, 42, -0.66, 'optionc'),
(69, 12, 43, -0.66, 'optionc'),
(69, 12, 44, -0.66, 'optionc'),
(69, 12, 45, 2, 'optiond'),
(69, 12, 46, 2, 'optiond'),
(69, 12, 47, 2, 'optionc'),
(69, 12, 48, 2, 'optiona'),
(69, 12, 50, 2, 'optionb'),
(69, 12, 51, 2, 'optionc'),
(69, 12, 52, 2, 'optionb'),
(69, 12, 53, 2, 'optiona'),
(69, 13, 1, -0.66, 'optiond'),
(69, 13, 2, 2, 'optionb'),
(69, 13, 6, -0.66, 'optiona'),
(69, 13, 7, -0.66, 'optiond'),
(69, 13, 8, 2, 'optionc'),
(69, 13, 10, 2, 'optione'),
(69, 13, 11, 2, 'optiond'),
(69, 13, 12, 2, 'optiona'),
(69, 13, 16, 2, 'optionc'),
(69, 13, 22, -0.66, 'optionc'),
(69, 13, 23, 2, 'optiona'),
(69, 13, 25, 2, 'optiona'),
(69, 13, 26, -0.66, 'optionb'),
(69, 13, 28, 2, 'optionc'),
(69, 13, 30, -0.66, 'optionb'),
(69, 13, 31, 2, 'optiond'),
(69, 13, 32, 2, 'optiona'),
(69, 13, 33, 2, 'optionb'),
(69, 13, 34, 2, 'optiona'),
(69, 13, 35, -0.66, 'optiond'),
(69, 13, 36, 2, 'optionc'),
(69, 13, 38, 2, 'optionb'),
(69, 13, 39, 2, 'optiona'),
(69, 13, 40, 2, 'optiond'),
(70, 7, 1, 1, 'optionc'),
(70, 7, 2, 1, 'optiond'),
(70, 7, 3, -0.33, 'optiond'),
(70, 7, 5, -0.33, 'optionc'),
(70, 7, 6, 1, 'optionb'),
(70, 7, 7, 1, 'optionb'),
(70, 7, 8, -0.33, 'optiona'),
(70, 7, 10, 1, 'optionc'),
(70, 7, 11, 1, 'optiona'),
(70, 7, 12, -0.33, 'optiond'),
(70, 7, 14, 1, 'optionc'),
(70, 7, 15, 1, 'optionb'),
(70, 7, 16, 1, 'optiona'),
(70, 7, 17, 1, 'optionc'),
(70, 7, 19, 1, 'optiond'),
(70, 7, 21, 1, 'optiond'),
(70, 7, 23, -0.33, 'optionb'),
(70, 7, 24, 1, 'optiona'),
(70, 7, 26, 2, 'optiona'),
(70, 7, 27, -0.66, 'optiona'),
(70, 7, 29, 2, 'optiond'),
(70, 7, 30, 2, 'optionc'),
(70, 7, 31, 2, 'optiona'),
(70, 7, 34, -0.66, 'optiond'),
(70, 7, 35, 2, 'optionc'),
(70, 7, 36, 2, 'optionc'),
(70, 7, 40, -0.66, 'optionc'),
(70, 7, 42, 2, 'optionc'),
(70, 7, 44, 2, 'optionb'),
(70, 7, 45, 2, 'optiond'),
(70, 7, 47, 2, 'optionb'),
(70, 7, 52, -0.66, 'optionb'),
(70, 7, 53, -0.66, 'optiona'),
(70, 7, 54, 2, 'optiond'),
(70, 7, 55, 2, 'optionb'),
(70, 7, 57, -0.33, 'optiona'),
(70, 7, 63, 2, 'optiond'),
(70, 8, 1, -0.33, 'optiona'),
(70, 8, 3, -0.33, 'optionc'),
(70, 8, 4, -0.33, 'optionb'),
(70, 8, 5, -0.33, 'optiona'),
(70, 8, 6, 1, 'optiond'),
(70, 8, 9, 1, 'optiond'),
(70, 8, 10, 1, 'optionc'),
(70, 8, 11, 1, 'optiond'),
(70, 8, 12, 1, 'optiona'),
(70, 8, 13, 1, 'optionb'),
(70, 8, 15, 1, 'optionc'),
(70, 8, 16, 1, 'optionc'),
(70, 8, 17, -0.33, 'optionb'),
(70, 8, 18, 1, 'optione'),
(70, 8, 19, 1, 'optiona'),
(70, 8, 25, -0.33, 'optiona'),
(70, 8, 26, 1, 'optiond'),
(70, 8, 28, -0.33, 'optiona'),
(70, 8, 30, 1, 'optionc'),
(70, 8, 31, 1, 'optionc'),
(70, 8, 32, 1, 'optionb'),
(70, 8, 33, 1, 'optiona'),
(70, 8, 34, 1, 'optiond'),
(70, 8, 35, 1, 'optionc'),
(70, 8, 36, 1, 'optionc'),
(70, 8, 37, 1, 'optiond'),
(70, 8, 38, 1, 'optionb'),
(70, 8, 39, 1, 'optiond'),
(70, 8, 40, 1, 'optionc'),
(70, 8, 41, 1, 'optiona'),
(70, 8, 42, 1, 'optiond'),
(70, 8, 43, 1, 'optionb'),
(70, 8, 44, -0.33, 'optiona'),
(70, 8, 45, 1, 'optiond'),
(70, 9, 1, -0.66, 'optiona'),
(70, 9, 2, 2, 'optionb'),
(70, 9, 3, 2, 'optiona'),
(70, 9, 4, 2, 'optiona'),
(70, 9, 5, 2, 'optiond'),
(70, 9, 6, 2, 'optiond'),
(70, 9, 7, -0.66, 'optionb'),
(70, 9, 18, -0.66, 'optiond'),
(70, 9, 22, -0.66, 'optiond'),
(70, 9, 25, -0.66, 'optionb'),
(70, 9, 26, 2, 'optionc'),
(70, 9, 28, -0.66, 'optionc'),
(70, 9, 29, 2, 'optionc'),
(70, 9, 30, 2, 'optionb'),
(70, 9, 31, -0.66, 'optiond'),
(70, 9, 32, -0.66, 'optiona'),
(70, 9, 34, -0.66, 'optionc'),
(70, 9, 35, 2, 'optionb'),
(70, 9, 36, -0.66, 'optiond'),
(70, 9, 37, 2, 'optionb'),
(70, 9, 39, -0.66, 'optionb'),
(70, 9, 46, 2, 'optiond'),
(70, 9, 47, -0.66, 'optiond'),
(70, 9, 50, 2, 'optionb'),
(70, 10, 1, -0.66, 'optionc'),
(70, 10, 2, -0.66, 'optiond'),
(70, 10, 3, -0.66, 'optionb'),
(70, 10, 5, 2, 'optionb'),
(70, 10, 6, 2, 'optionb'),
(70, 10, 8, -0.66, 'optiond'),
(70, 10, 9, -0.66, 'optiond'),
(70, 10, 10, -0.66, 'optiona'),
(70, 10, 12, -0.66, 'optione'),
(70, 10, 13, 2, 'optionc'),
(70, 10, 14, 2, 'optionb'),
(70, 10, 15, -0.66, 'optiona'),
(70, 10, 16, 2, 'optiona'),
(70, 10, 17, 2, 'optionb'),
(70, 10, 18, -0.66, 'optionb'),
(70, 10, 19, 2, 'optiona'),
(70, 10, 21, 2, 'optionb'),
(70, 10, 23, -0.66, 'optionc'),
(70, 11, 1, 2, 'optionb'),
(70, 11, 2, 2, 'optionc'),
(70, 11, 4, -0.66, 'optionb'),
(70, 11, 5, 2, 'optionb'),
(70, 11, 6, 2, 'optionb'),
(70, 11, 7, 2, 'optionb'),
(70, 11, 8, 2, 'optiona'),
(70, 11, 9, 2, 'optionc'),
(70, 11, 10, -0.66, 'optionc'),
(70, 11, 11, 2, 'optiona'),
(70, 11, 12, 2, 'optiona'),
(70, 11, 15, 2, 'optionc'),
(70, 11, 17, 2, 'optiona'),
(70, 11, 18, -0.66, 'optionc'),
(70, 11, 19, 2, 'optionb'),
(70, 11, 20, -0.66, 'optionb'),
(70, 11, 21, -0.66, 'optiond'),
(70, 11, 22, -0.66, 'optiond'),
(70, 11, 24, -0.66, 'optionc'),
(70, 11, 25, 2, 'optionb'),
(70, 11, 26, 2, 'optionc'),
(70, 11, 27, 2, 'optione'),
(70, 11, 29, 2, 'optiond'),
(70, 11, 30, -0.66, 'optionb'),
(70, 11, 32, 2, 'optionc'),
(70, 11, 33, -0.66, 'optione'),
(70, 11, 35, 2, 'optiond'),
(70, 11, 36, 2, 'optione'),
(70, 11, 37, -0.66, 'optiona'),
(70, 11, 38, 2, 'optiona'),
(70, 11, 41, 2, 'optionc'),
(70, 11, 42, 2, 'optione'),
(70, 11, 43, 2, 'optiond'),
(70, 11, 44, -0.66, 'optiond'),
(70, 11, 45, 2, 'optiona'),
(70, 11, 46, 2, 'optiona'),
(70, 11, 48, -0.66, 'optionc'),
(70, 11, 49, -0.66, 'optione'),
(70, 11, 51, 2, 'optiond'),
(70, 11, 52, -0.66, 'optionc'),
(70, 11, 53, 2, 'optionc'),
(70, 11, 54, -0.66, 'optione'),
(70, 11, 55, -0.66, 'optionc'),
(70, 11, 57, 2, 'optionc'),
(70, 11, 58, 2, 'optione'),
(70, 11, 60, -0.66, 'optione'),
(70, 12, 2, -0.66, 'optionb'),
(70, 12, 3, 2, 'optiond'),
(70, 12, 4, 2, 'optionc'),
(70, 12, 5, 2, 'optiona'),
(70, 12, 6, -0.66, 'optiona'),
(70, 12, 7, -0.66, 'optiond'),
(70, 12, 8, 2, 'optionb'),
(70, 12, 12, -0.66, 'optiona'),
(70, 12, 26, 2, 'optionb'),
(70, 12, 27, 2, 'optionc'),
(70, 12, 29, -0.66, 'optiond'),
(70, 12, 30, -0.66, 'optiona'),
(70, 12, 31, 2, 'optionc'),
(70, 12, 32, 2, 'optionc'),
(70, 12, 34, -0.66, 'optionb'),
(70, 12, 35, 2, 'optiond'),
(70, 12, 36, 2, 'optionc'),
(70, 12, 37, -0.66, 'optiond'),
(70, 12, 38, 2, 'optionc'),
(70, 12, 40, 2, 'optiona'),
(70, 12, 41, 2, 'optionb'),
(70, 12, 43, -0.66, 'optionc'),
(70, 12, 45, 2, 'optiond'),
(70, 12, 46, 2, 'optiond'),
(70, 12, 47, 2, 'optionc'),
(70, 12, 48, -0.66, 'optionc'),
(70, 12, 50, 2, 'optionb'),
(70, 12, 51, 2, 'optionc'),
(70, 12, 52, 2, 'optionb'),
(70, 12, 54, 2, 'optiona'),
(70, 13, 1, -0.66, 'optiond'),
(70, 13, 2, -0.66, 'optiond'),
(70, 13, 3, -0.66, 'optiond'),
(70, 13, 5, -0.66, 'optionb'),
(70, 13, 6, -0.66, 'optiona'),
(70, 13, 8, 2, 'optionc'),
(70, 13, 10, 2, 'optione'),
(70, 13, 11, -0.66, 'optione'),
(70, 13, 12, 2, 'optiona'),
(70, 13, 13, 2, 'optiond'),
(70, 13, 14, 2, 'optionb'),
(70, 13, 19, -0.66, 'optiona'),
(70, 13, 22, 2, 'optiona'),
(70, 13, 24, 2, 'optionc'),
(70, 13, 25, 2, 'optiona'),
(70, 13, 26, -0.66, 'optionb'),
(70, 13, 27, 2, 'optiond'),
(70, 13, 28, 2, 'optionc'),
(70, 13, 29, -0.66, 'optiond'),
(70, 13, 30, 2, 'optiona'),
(70, 13, 31, 2, 'optiond'),
(70, 13, 32, 2, 'optiona'),
(70, 13, 33, -0.66, 'optiond'),
(70, 13, 35, 2, 'optionc'),
(70, 13, 36, 2, 'optionc'),
(70, 13, 39, 2, 'optiona'),
(70, 13, 40, 2, 'optiond'),
(70, 15, 2, 1, 'optiond'),
(70, 15, 3, -0.33, 'optiond'),
(70, 15, 6, 1, 'optiona'),
(70, 15, 9, 1, 'optionb'),
(70, 15, 11, 1, 'optiond'),
(70, 15, 13, 1, 'optionb'),
(70, 15, 14, 1, 'optionc'),
(70, 15, 15, 1, 'optiond'),
(70, 15, 16, 1, 'optiond'),
(70, 15, 17, 1, 'optionb'),
(70, 15, 18, 1, 'optionb'),
(70, 15, 19, 1, 'optionc'),
(70, 15, 20, 1, 'optionb'),
(70, 15, 21, 1, 'optiona'),
(70, 15, 22, 1, 'optionb'),
(70, 15, 24, 1, 'optiona'),
(70, 15, 25, 1, 'optiond'),
(70, 15, 26, 2, 'optiona'),
(70, 15, 28, 2, 'optiond'),
(70, 15, 29, 2, 'optiond'),
(70, 15, 30, 2, 'optionb'),
(70, 15, 31, -0.66, 'optionb'),
(70, 15, 32, 2, 'optiona'),
(70, 15, 33, 2, 'optionc'),
(70, 15, 35, 2, 'optionc'),
(70, 15, 36, 2, 'optiond'),
(70, 15, 37, 2, 'optionb'),
(70, 15, 38, -0.66, 'optiona'),
(70, 15, 39, 2, 'optionb'),
(70, 15, 40, -0.66, 'optiona'),
(70, 15, 43, -0.66, 'optionb'),
(70, 15, 44, -0.66, 'optionc'),
(70, 15, 45, 2, 'optiona'),
(70, 15, 47, -0.66, 'optionc'),
(70, 15, 52, 2, 'optionc'),
(70, 15, 53, 2, 'optionc'),
(70, 15, 54, 2, 'optionc'),
(70, 15, 55, -0.66, 'optiona'),
(70, 15, 57, -0.33, 'optiona'),
(70, 15, 61, 2, 'optionc'),
(70, 16, 3, -0.33, 'optionb'),
(70, 16, 6, 1, 'optionb'),
(70, 16, 7, 1, 'optiond'),
(70, 16, 8, 1, 'optiona'),
(70, 16, 10, -0.33, 'optionb'),
(70, 16, 13, -0.33, 'optionc'),
(70, 16, 16, 1, 'optiond'),
(70, 16, 20, -0.33, 'optionb'),
(70, 16, 22, 1, 'optionb'),
(70, 16, 25, 1, 'optionb'),
(70, 16, 27, 2, 'optionb'),
(70, 16, 29, -0.66, 'optionb'),
(70, 16, 30, 2, 'optiond'),
(70, 16, 32, -0.66, 'optiona'),
(70, 16, 35, 2, 'optionb'),
(70, 16, 36, 2, 'optionc'),
(70, 16, 37, 2, 'optionb'),
(70, 16, 41, -0.66, 'optiona'),
(70, 16, 43, 2, 'optiona'),
(70, 16, 44, -0.66, 'optiona'),
(70, 16, 45, -0.66, 'optiond'),
(70, 16, 47, -0.66, 'optiona'),
(70, 16, 50, 2, 'optiona'),
(70, 16, 51, 2, 'optiona'),
(70, 17, 2, 1, 'optionb'),
(70, 17, 3, 1, 'optionb'),
(70, 17, 4, 1, 'optionc'),
(70, 17, 5, 1, 'optionc'),
(70, 17, 6, 1, 'optiona'),
(70, 17, 7, -0.33, 'optiond'),
(70, 17, 8, 1, 'optiona'),
(70, 17, 9, -0.33, 'optiona'),
(70, 17, 11, 1, 'optiond'),
(70, 17, 12, 1, 'optiona'),
(70, 17, 13, 1, 'optionb'),
(70, 17, 19, -0.33, 'optionc'),
(70, 17, 20, -0.33, 'optionb'),
(70, 17, 22, 1, 'optionb'),
(70, 17, 23, 1, 'optiond'),
(70, 17, 24, 1, 'optionb'),
(70, 17, 25, -0.33, 'optiond'),
(70, 17, 26, 2, 'optionc'),
(70, 17, 28, -0.66, 'optionc'),
(70, 17, 30, 2, 'optiona'),
(70, 17, 32, 2, 'optiona'),
(70, 17, 33, 2, 'optiona'),
(70, 17, 35, 2, 'optionb'),
(70, 17, 37, 2, 'optionc'),
(70, 17, 38, -0.66, 'optiona'),
(70, 17, 39, 2, 'optionb'),
(70, 17, 41, 2, 'optionc'),
(70, 17, 42, 2, 'optionb'),
(70, 17, 46, 2, 'optionb'),
(70, 17, 47, -0.66, 'optionb'),
(70, 17, 48, -0.66, 'optionc'),
(70, 17, 50, -0.66, 'optionc'),
(70, 17, 51, 2, 'optionc'),
(70, 17, 52, 2, 'optiond'),
(70, 17, 53, -0.66, 'optiond'),
(70, 17, 54, 2, 'optiond'),
(70, 17, 55, 2, 'optiona'),
(70, 17, 65, -0.66, 'optiona'),
(70, 18, 2, 1, 'optiond'),
(70, 18, 3, 1, 'optionb'),
(70, 18, 4, 1, 'optiona'),
(70, 18, 6, 1, 'optionc'),
(70, 18, 8, -0.33, 'optiona'),
(70, 18, 11, -0.33, 'optiond'),
(70, 18, 12, -0.33, 'optionb'),
(70, 18, 13, 1, 'optiond'),
(70, 18, 14, -0.33, 'optiona'),
(70, 18, 15, 1, 'optionc'),
(70, 18, 17, 1, 'optionb'),
(70, 18, 19, 1, 'optionc'),
(70, 18, 20, 1, 'optionb'),
(70, 18, 21, 1, 'optiond'),
(70, 18, 22, 1, 'optiond'),
(70, 18, 23, -0.33, 'optiona'),
(70, 18, 24, 1, 'optionc'),
(70, 18, 25, 1, 'optionc'),
(70, 18, 26, 2, 'optionb'),
(70, 18, 29, 2, 'optiond'),
(70, 18, 32, -0.66, 'optionc'),
(70, 18, 33, 2, 'optiond'),
(70, 18, 34, 2, 'optiona'),
(70, 18, 38, 2, 'optionb'),
(70, 18, 42, 2, 'optionb'),
(70, 18, 43, -0.66, 'optionc'),
(70, 18, 45, -0.66, 'optionc'),
(70, 18, 47, 2, 'optiond'),
(70, 18, 48, 2, 'optionb'),
(70, 18, 49, 2, 'optionc'),
(70, 18, 50, 2, 'optionc'),
(70, 18, 51, -0.66, 'optionb'),
(70, 18, 54, 2, 'optiona'),
(70, 18, 57, 1, 'optionb'),
(70, 18, 61, -0.66, 'optiona'),
(70, 18, 65, 2, 'optiond'),
(72, 7, 1, 1, 'optionc'),
(72, 7, 3, -0.33, 'optiona'),
(72, 7, 4, 1, 'optiond'),
(72, 7, 5, 1, 'optionb'),
(72, 7, 6, -0.33, 'optiona'),
(72, 7, 8, -0.33, 'optionc'),
(72, 7, 9, 1, 'optiona'),
(72, 7, 10, 1, 'optionc'),
(72, 7, 12, -0.33, 'optiona'),
(72, 7, 14, 1, 'optionc'),
(72, 7, 15, 1, 'optionb'),
(72, 7, 16, 1, 'optiona'),
(72, 7, 17, 1, 'optionc'),
(72, 7, 18, -0.33, 'optionb'),
(72, 7, 19, 1, 'optiond'),
(72, 7, 20, -0.33, 'optionb'),
(72, 7, 21, -0.33, 'optionc'),
(72, 7, 22, -0.33, 'optionb'),
(72, 7, 23, 1, 'optiond'),
(72, 7, 24, 1, 'optiona'),
(72, 7, 31, 2, 'optiona'),
(72, 7, 35, 2, 'optionc'),
(72, 7, 36, 2, 'optionc'),
(72, 7, 40, 2, 'optionb'),
(72, 7, 41, 2, 'optionc'),
(72, 7, 42, 2, 'optionc'),
(72, 7, 43, 2, 'optionb'),
(72, 7, 44, -0.66, 'optiona'),
(72, 7, 45, 2, 'optiond'),
(72, 7, 46, -0.66, 'optionb'),
(72, 7, 47, 2, 'optionb'),
(72, 7, 50, 2, 'optionc'),
(72, 7, 51, 2, 'optionb'),
(72, 7, 52, 2, 'optiona'),
(72, 7, 53, 2, 'optionb'),
(72, 7, 54, 2, 'optiond'),
(72, 7, 55, -0.66, 'optiond'),
(72, 7, 57, 1, 'optionc'),
(72, 7, 58, 1, 'optionb'),
(72, 7, 59, 1, 'optiond'),
(72, 7, 61, 2, 'optionb'),
(72, 7, 63, 2, 'optiond'),
(72, 7, 64, 2, 'optionc'),
(72, 7, 65, 2, 'optionb'),
(72, 8, 1, 1, 'optione'),
(72, 8, 2, -0.33, 'optiond'),
(72, 8, 3, -0.33, 'optionc'),
(72, 8, 4, 1, 'optiond'),
(72, 8, 5, -0.33, 'optiona'),
(72, 8, 6, 1, 'optiond'),
(72, 8, 9, 1, 'optiond'),
(72, 8, 11, 1, 'optiond'),
(72, 8, 12, 1, 'optiona'),
(72, 8, 13, 1, 'optionb'),
(72, 8, 14, 1, 'optiona'),
(72, 8, 15, 1, 'optionc'),
(72, 8, 17, -0.33, 'optionb'),
(72, 8, 18, 1, 'optione'),
(72, 8, 19, 1, 'optiona'),
(72, 8, 20, -0.33, 'optionb'),
(72, 8, 26, -0.33, 'optione'),
(72, 8, 27, 1, 'optiond'),
(72, 8, 29, 1, 'optionb'),
(72, 8, 30, 1, 'optionc'),
(72, 8, 31, 1, 'optionc'),
(72, 8, 32, 1, 'optionb'),
(72, 8, 33, 1, 'optiona'),
(72, 8, 34, 1, 'optiond'),
(72, 8, 35, -0.33, 'optionb'),
(72, 8, 36, 1, 'optionc'),
(72, 8, 37, 1, 'optiond'),
(72, 8, 38, -0.33, 'optionc'),
(72, 8, 39, 1, 'optiond'),
(72, 8, 40, -0.33, 'optiona'),
(72, 8, 41, 1, 'optiona'),
(72, 8, 42, 1, 'optiond'),
(72, 8, 43, 1, 'optionb'),
(72, 8, 44, -0.33, 'optiona'),
(72, 8, 45, 1, 'optiond'),
(72, 9, 4, 2, 'optiona'),
(72, 9, 5, 2, 'optiond'),
(72, 9, 7, 2, 'optionc'),
(72, 9, 8, 2, 'optionb'),
(72, 9, 12, 2, 'optiona'),
(72, 9, 25, 2, 'optiond'),
(72, 9, 26, 2, 'optionc'),
(72, 9, 28, 2, 'optionb'),
(72, 9, 29, 2, 'optionc'),
(72, 9, 30, 2, 'optionb'),
(72, 9, 32, 2, 'optionb'),
(72, 9, 33, 2, 'optionc'),
(72, 9, 34, 2, 'optiond'),
(72, 9, 35, 2, 'optionb'),
(72, 9, 37, 2, 'optionb'),
(72, 9, 39, 2, 'optiond'),
(72, 9, 43, -0.66, 'optiona'),
(72, 10, 1, -0.66, 'optionc'),
(72, 10, 2, 2, 'optionb'),
(72, 10, 3, 2, 'optiond'),
(72, 10, 4, -0.66, 'optiona'),
(72, 10, 5, 2, 'optionb'),
(72, 10, 6, 2, 'optionb'),
(72, 10, 7, -0.66, 'optionc'),
(72, 10, 8, -0.66, 'optiond'),
(72, 10, 9, 2, 'optionc'),
(72, 10, 10, -0.66, 'optionc'),
(72, 10, 11, 2, 'optionc'),
(72, 10, 12, 2, 'optionb'),
(72, 10, 13, -0.66, 'optiona'),
(72, 10, 14, -0.66, 'optiona'),
(72, 10, 15, 2, 'optiond'),
(72, 10, 16, 2, 'optiona'),
(72, 10, 17, -0.66, 'optionc'),
(72, 10, 18, -0.66, 'optionc'),
(72, 10, 19, 2, 'optiona'),
(72, 10, 21, 2, 'optionb'),
(72, 10, 22, -0.66, 'optiond'),
(72, 10, 23, -0.66, 'optionc'),
(72, 11, 1, 2, 'optionb'),
(72, 11, 2, 2, 'optionc'),
(72, 11, 3, 2, 'optiona'),
(72, 11, 4, 2, 'optiond'),
(72, 11, 5, 2, 'optionb'),
(72, 11, 6, 2, 'optionb'),
(72, 11, 7, 2, 'optionb'),
(72, 11, 8, 2, 'optiona'),
(72, 11, 9, 2, 'optionc'),
(72, 11, 11, 2, 'optiona'),
(72, 11, 12, 2, 'optiona'),
(72, 11, 13, -0.66, 'optiona'),
(72, 11, 15, 2, 'optionc'),
(72, 11, 17, 2, 'optiona'),
(72, 11, 18, 2, 'optionb'),
(72, 11, 19, 2, 'optionb'),
(72, 11, 20, -0.66, 'optionc'),
(72, 11, 21, -0.66, 'optionb'),
(72, 11, 22, 2, 'optiona'),
(72, 11, 24, 2, 'optiona'),
(72, 11, 25, 2, 'optionb'),
(72, 11, 26, 2, 'optionc'),
(72, 11, 27, 2, 'optione'),
(72, 11, 28, 2, 'optiona'),
(72, 11, 29, 2, 'optiond'),
(72, 11, 31, 2, 'optione'),
(72, 11, 32, 2, 'optionc'),
(72, 11, 33, -0.66, 'optione'),
(72, 11, 34, 2, 'optiond'),
(72, 11, 35, 2, 'optiond'),
(72, 11, 36, 2, 'optione'),
(72, 11, 37, 2, 'optionb'),
(72, 11, 38, 2, 'optiona'),
(72, 11, 39, 2, 'optiona'),
(72, 11, 40, 2, 'optiond'),
(72, 11, 41, 2, 'optionc'),
(72, 11, 42, 2, 'optione'),
(72, 11, 43, -0.66, 'optionc'),
(72, 11, 44, 2, 'optionb'),
(72, 11, 45, 2, 'optiona'),
(72, 11, 46, 2, 'optiona'),
(72, 11, 47, 2, 'optione'),
(72, 11, 48, 2, 'optiond'),
(72, 11, 49, 2, 'optiond'),
(72, 11, 50, 2, 'optionc'),
(72, 11, 51, 2, 'optiond'),
(72, 11, 52, -0.66, 'optiona'),
(72, 11, 53, 2, 'optionc'),
(72, 11, 54, -0.66, 'optione'),
(72, 11, 55, 2, 'optionb'),
(72, 11, 56, 2, 'optione'),
(72, 11, 57, 2, 'optionc'),
(72, 11, 58, 2, 'optione'),
(72, 11, 59, -0.66, 'optiond'),
(72, 11, 60, 2, 'optiond'),
(72, 12, 1, 2, 'optionc'),
(72, 12, 2, 2, 'optionc'),
(72, 12, 3, 2, 'optiond'),
(72, 12, 4, 2, 'optionc'),
(72, 12, 5, -0.66, 'optiond'),
(72, 12, 7, 2, 'optionb'),
(72, 12, 8, 2, 'optionb'),
(72, 12, 9, 2, 'optiona'),
(72, 12, 10, 2, 'optiond'),
(72, 12, 11, 2, 'optionb'),
(72, 12, 14, 2, 'optiona'),
(72, 12, 15, 2, 'optiond'),
(72, 12, 16, 2, 'optionc'),
(72, 12, 17, 2, 'optionc'),
(72, 12, 18, 2, 'optiond'),
(72, 12, 19, 2, 'optionb'),
(72, 12, 20, 2, 'optionb'),
(72, 12, 21, 2, 'optiona'),
(72, 12, 22, 2, 'optiond'),
(72, 12, 23, 2, 'optionb'),
(72, 12, 24, 2, 'optiona'),
(72, 12, 25, 2, 'optionc'),
(72, 12, 26, 2, 'optionb'),
(72, 12, 27, 2, 'optionc'),
(72, 12, 28, 2, 'optiond'),
(72, 12, 29, 2, 'optiona'),
(72, 12, 30, 2, 'optionb'),
(72, 12, 31, 2, 'optionc'),
(72, 12, 32, 2, 'optionc'),
(72, 12, 34, -0.66, 'optionb'),
(72, 12, 35, 2, 'optiond'),
(72, 12, 36, 2, 'optionc'),
(72, 12, 37, 2, 'optiona'),
(72, 12, 38, 2, 'optionc'),
(72, 12, 40, 2, 'optiona'),
(72, 12, 41, 2, 'optionb'),
(72, 12, 43, -0.66, 'optionc'),
(72, 12, 44, 2, 'optionb'),
(72, 12, 45, 2, 'optiond'),
(72, 12, 46, -0.66, 'optionb'),
(72, 12, 47, 2, 'optionc'),
(72, 12, 50, -0.66, 'optiona'),
(72, 12, 51, 2, 'optionc'),
(72, 12, 52, -0.66, 'optiond'),
(72, 12, 53, 2, 'optiona'),
(72, 12, 54, 2, 'optiona'),
(72, 13, 6, -0.66, 'optiona'),
(72, 13, 7, 2, 'optionb'),
(72, 13, 8, 2, 'optionc'),
(72, 13, 9, 2, 'optione'),
(72, 13, 10, 2, 'optione'),
(72, 13, 11, 2, 'optiond'),
(72, 13, 14, 2, 'optionb'),
(72, 13, 15, -0.66, 'optione'),
(72, 13, 20, -0.66, 'optiond'),
(72, 13, 22, 2, 'optiona'),
(72, 13, 23, -0.66, 'optionc'),
(72, 13, 24, -0.66, 'optiond'),
(72, 13, 25, 2, 'optiona'),
(72, 13, 26, -0.66, 'optionc'),
(72, 13, 27, 2, 'optiond'),
(72, 13, 28, 2, 'optionc'),
(72, 13, 30, -0.66, 'optiond'),
(72, 13, 32, 2, 'optiona'),
(72, 13, 34, 2, 'optiona'),
(72, 13, 36, 2, 'optionc'),
(72, 13, 39, 2, 'optiona'),
(72, 13, 40, 2, 'optiond'),
(73, 7, 1, 1, 'optionc'),
(73, 7, 2, -0.33, 'optiona'),
(73, 7, 3, -0.33, 'optiond'),
(73, 7, 4, 1, 'optiond'),
(73, 7, 5, -0.33, 'optionc'),
(73, 7, 6, -0.33, 'optiona'),
(73, 7, 7, 1, 'optionb'),
(73, 7, 8, -0.33, 'optiona'),
(73, 7, 9, 1, 'optiona'),
(73, 7, 10, 1, 'optionc'),
(73, 7, 11, 1, 'optiona'),
(73, 7, 12, -0.33, 'optiona'),
(73, 7, 14, 1, 'optionc'),
(73, 7, 15, 1, 'optionb'),
(73, 7, 16, 1, 'optiona'),
(73, 7, 17, 1, 'optionc'),
(73, 7, 18, 1, 'optiona'),
(73, 7, 19, 1, 'optiond'),
(73, 7, 20, 1, 'optiona'),
(73, 7, 21, 1, 'optiond'),
(73, 7, 23, -0.33, 'optionb'),
(73, 7, 24, 1, 'optiona'),
(73, 7, 25, 1, 'optionc'),
(73, 7, 26, -0.66, 'optiond'),
(73, 7, 27, -0.66, 'optiond'),
(73, 7, 29, -0.66, 'optiona'),
(73, 7, 30, 2, 'optionc'),
(73, 7, 31, 2, 'optiona'),
(73, 7, 33, 2, 'optiond'),
(73, 7, 34, -0.66, 'optionb'),
(73, 7, 35, 2, 'optionc'),
(73, 7, 36, 2, 'optionc'),
(73, 7, 37, -0.66, 'optionc'),
(73, 7, 38, -0.66, 'optionb'),
(73, 7, 39, -0.66, 'optiona'),
(73, 7, 40, 2, 'optionb'),
(73, 7, 41, 2, 'optionc'),
(73, 7, 42, 2, 'optionc'),
(73, 7, 43, 2, 'optionb'),
(73, 7, 44, 2, 'optionb'),
(73, 7, 45, 2, 'optiond'),
(73, 7, 46, 2, 'optiond'),
(73, 7, 47, -0.66, 'optiona'),
(73, 7, 50, 2, 'optionc'),
(73, 7, 51, 2, 'optionb'),
(73, 7, 52, 2, 'optiona'),
(73, 7, 53, 2, 'optionb'),
(73, 7, 54, 2, 'optiond'),
(73, 7, 55, -0.66, 'optiond'),
(73, 7, 56, -0.33, 'optiona'),
(73, 7, 57, 1, 'optionc'),
(73, 7, 58, 1, 'optionb'),
(73, 7, 59, 1, 'optiond'),
(73, 7, 60, 1, 'optionc'),
(73, 7, 61, -0.66, 'optiond'),
(73, 7, 62, 2, 'optionc'),
(73, 7, 63, 2, 'optiond'),
(73, 7, 64, -0.66, 'optiona'),
(73, 7, 65, 2, 'optionb'),
(73, 8, 1, 1, 'optione'),
(73, 8, 2, 1, 'optiona'),
(73, 8, 3, 1, 'optionb'),
(73, 8, 4, -0.33, 'optionc'),
(73, 8, 5, -0.33, 'optiona'),
(73, 8, 6, 1, 'optiond'),
(73, 8, 9, 1, 'optiond'),
(73, 8, 10, 1, 'optionc'),
(73, 8, 11, 1, 'optiond'),
(73, 8, 12, 1, 'optiona'),
(73, 8, 13, 1, 'optionb'),
(73, 8, 14, 1, 'optiona'),
(73, 8, 15, 1, 'optionc'),
(73, 8, 17, -0.33, 'optiond'),
(73, 8, 18, 1, 'optione'),
(73, 8, 19, 1, 'optiona'),
(73, 8, 21, -0.33, 'optiond'),
(73, 8, 22, 1, 'optiona'),
(73, 8, 23, 1, 'optiona'),
(73, 8, 24, 1, 'optiona'),
(73, 8, 26, 1, 'optiond'),
(73, 8, 27, 1, 'optiond'),
(73, 8, 30, 1, 'optionc'),
(73, 8, 32, 1, 'optionb'),
(73, 8, 33, 1, 'optiona'),
(73, 8, 34, 1, 'optiond'),
(73, 8, 35, 1, 'optionc'),
(73, 8, 36, 1, 'optionc'),
(73, 8, 37, 1, 'optiond'),
(73, 8, 38, -0.33, 'optionc'),
(73, 8, 39, 1, 'optiond'),
(73, 8, 40, -0.33, 'optiona'),
(73, 8, 41, 1, 'optiona'),
(73, 8, 42, 1, 'optiond'),
(73, 8, 43, 1, 'optionb'),
(73, 8, 44, -0.33, 'optiona'),
(73, 8, 45, 1, 'optiond'),
(73, 9, 1, 2, 'optionc'),
(73, 9, 2, 2, 'optionb'),
(73, 9, 4, 2, 'optiona'),
(73, 9, 5, 2, 'optiond'),
(73, 9, 6, 2, 'optiond'),
(73, 9, 9, 2, 'optionb'),
(73, 9, 11, 2, 'optiona'),
(73, 9, 12, 2, 'optiona'),
(73, 9, 15, -0.66, 'optionb'),
(73, 9, 16, -0.66, 'optiond'),
(73, 9, 18, -0.66, 'optiona'),
(73, 9, 24, 2, 'optionc'),
(73, 9, 26, 2, 'optionc'),
(73, 9, 27, -0.66, 'optionb'),
(73, 9, 28, 2, 'optionb'),
(73, 9, 29, 2, 'optionc'),
(73, 9, 30, 2, 'optionb'),
(73, 9, 31, -0.66, 'optiond'),
(73, 9, 32, 2, 'optionb'),
(73, 9, 34, -0.66, 'optiona'),
(73, 9, 35, 2, 'optionb'),
(73, 9, 37, 2, 'optionb'),
(73, 9, 39, 2, 'optiond'),
(73, 9, 46, 2, 'optiond'),
(73, 9, 47, -0.66, 'optiond'),
(73, 9, 49, 2, 'optionb'),
(73, 9, 50, -0.66, 'optiona'),
(73, 9, 52, 2, 'optionb'),
(73, 9, 53, 2, 'optionc'),
(73, 9, 54, 2, 'optione'),
(73, 10, 1, 2, 'optione'),
(73, 10, 2, 2, 'optionb'),
(73, 10, 3, 2, 'optiond'),
(73, 10, 4, 2, 'optionc'),
(73, 10, 5, 2, 'optionb'),
(73, 10, 6, 2, 'optionb'),
(73, 10, 7, 2, 'optiona'),
(73, 10, 8, -0.66, 'optiona'),
(73, 10, 9, 2, 'optionc'),
(73, 10, 10, 2, 'optiond'),
(73, 10, 11, 2, 'optionc'),
(73, 10, 12, 2, 'optionb'),
(73, 10, 13, 2, 'optionc'),
(73, 10, 14, 2, 'optionb'),
(73, 10, 15, 2, 'optiond'),
(73, 10, 16, 2, 'optiona'),
(73, 10, 17, 2, 'optionb'),
(73, 10, 19, 2, 'optiona'),
(73, 10, 20, 2, 'optionc'),
(73, 10, 21, 2, 'optionb'),
(73, 10, 22, 2, 'optionb'),
(73, 10, 23, 2, 'optiond'),
(73, 10, 24, -0.66, 'optionc'),
(73, 11, 1, 2, 'optionb'),
(73, 11, 2, 2, 'optionc'),
(73, 11, 3, 2, 'optiona'),
(73, 11, 4, 2, 'optiond'),
(73, 11, 5, 2, 'optionb'),
(73, 11, 6, 2, 'optionb'),
(73, 11, 7, 2, 'optionb'),
(73, 11, 8, 2, 'optiona'),
(73, 11, 9, 2, 'optionc'),
(73, 11, 10, 2, 'optiona'),
(73, 11, 11, 2, 'optiona'),
(73, 11, 12, 2, 'optiona'),
(73, 11, 13, -0.66, 'optiona'),
(73, 11, 14, 2, 'optionc'),
(73, 11, 15, -0.66, 'optiona'),
(73, 11, 17, 2, 'optiona'),
(73, 11, 18, 2, 'optionb'),
(73, 11, 19, 2, 'optionb'),
(73, 11, 20, -0.66, 'optionc'),
(73, 11, 21, 2, 'optionc'),
(73, 11, 22, 2, 'optiona'),
(73, 11, 24, 2, 'optiona'),
(73, 11, 25, 2, 'optionb'),
(73, 11, 26, 2, 'optionc'),
(73, 11, 27, 2, 'optione'),
(73, 11, 28, 2, 'optiona'),
(73, 11, 29, 2, 'optiond'),
(73, 11, 31, 2, 'optione'),
(73, 11, 32, 2, 'optionc'),
(73, 11, 33, 2, 'optiond'),
(73, 11, 34, 2, 'optiond'),
(73, 11, 35, 2, 'optiond'),
(73, 11, 36, 2, 'optione'),
(73, 11, 37, 2, 'optionb'),
(73, 11, 38, 2, 'optiona'),
(73, 11, 39, -0.66, 'optionb'),
(73, 11, 40, 2, 'optiond'),
(73, 11, 41, 2, 'optionc'),
(73, 11, 42, 2, 'optione'),
(73, 11, 43, 2, 'optiond'),
(73, 11, 44, 2, 'optionb'),
(73, 11, 45, 2, 'optiona'),
(73, 11, 46, 2, 'optiona'),
(73, 11, 48, 2, 'optiond'),
(73, 11, 49, 2, 'optiond'),
(73, 11, 50, -0.66, 'optione'),
(73, 11, 51, 2, 'optiond'),
(73, 11, 52, 2, 'optionb'),
(73, 11, 53, 2, 'optionc'),
(73, 11, 54, -0.66, 'optione'),
(73, 11, 55, -0.66, 'optionc'),
(73, 11, 56, 2, 'optione'),
(73, 11, 57, 2, 'optionc'),
(73, 11, 58, 2, 'optione'),
(73, 11, 60, 2, 'optiond'),
(73, 12, 1, -0.66, 'optiona'),
(73, 12, 2, -0.66, 'optionb'),
(73, 12, 4, 2, 'optionc'),
(73, 12, 5, 2, 'optiona'),
(73, 12, 6, -0.66, 'optiona'),
(73, 12, 7, 2, 'optionb'),
(73, 12, 8, 2, 'optionb'),
(73, 12, 9, 2, 'optiona'),
(73, 12, 10, 2, 'optiond'),
(73, 12, 11, -0.66, 'optiona'),
(73, 12, 12, -0.66, 'optiona'),
(73, 12, 13, 2, 'optionb'),
(73, 12, 14, 2, 'optiona'),
(73, 12, 15, 2, 'optiond'),
(73, 12, 16, 2, 'optionc'),
(73, 12, 17, -0.66, 'optionb'),
(73, 12, 19, 2, 'optionb'),
(73, 12, 20, 2, 'optionb'),
(73, 12, 21, 2, 'optiona'),
(73, 12, 22, 2, 'optiond'),
(73, 12, 23, 2, 'optionb'),
(73, 12, 24, 2, 'optiona'),
(73, 12, 25, 2, 'optionc'),
(73, 12, 26, 2, 'optionb'),
(73, 12, 27, -0.66, 'optiond'),
(73, 12, 28, 2, 'optiond'),
(73, 12, 29, -0.66, 'optiond'),
(73, 12, 30, 2, 'optionb'),
(73, 12, 31, 2, 'optionc'),
(73, 12, 32, 2, 'optionc'),
(73, 12, 34, 2, 'optiond'),
(73, 12, 35, -0.66, 'optionc'),
(73, 12, 36, 2, 'optionc'),
(73, 12, 38, 2, 'optionc'),
(73, 12, 40, 2, 'optiona'),
(73, 12, 41, 2, 'optionb'),
(73, 12, 42, 2, 'optiona'),
(73, 12, 43, -0.66, 'optionc'),
(73, 12, 45, 2, 'optiond'),
(73, 12, 46, 2, 'optiond'),
(73, 12, 47, 2, 'optionc'),
(73, 12, 48, -0.66, 'optionc'),
(73, 12, 50, 2, 'optionb'),
(73, 12, 51, 2, 'optionc'),
(73, 12, 52, 2, 'optionb'),
(73, 12, 53, 2, 'optiona'),
(73, 12, 54, 2, 'optiona'),
(73, 13, 1, -0.66, 'optiond'),
(73, 13, 2, -0.66, 'optionc'),
(73, 13, 7, -0.66, 'optiond'),
(73, 13, 8, 2, 'optionc'),
(73, 13, 9, 2, 'optione'),
(73, 13, 10, 2, 'optione'),
(73, 13, 11, 2, 'optiond'),
(73, 13, 12, 2, 'optiona'),
(73, 13, 13, 2, 'optiond'),
(73, 13, 18, 2, 'optiona'),
(73, 13, 20, 2, 'optiona'),
(73, 13, 23, 2, 'optiona'),
(73, 13, 24, 2, 'optionc'),
(73, 13, 25, 2, 'optiona'),
(73, 13, 26, 2, 'optiond'),
(73, 13, 28, 2, 'optionc'),
(73, 13, 30, 2, 'optiona'),
(73, 13, 32, 2, 'optiona'),
(73, 13, 33, 2, 'optionb'),
(73, 13, 35, 2, 'optionc'),
(73, 13, 36, 2, 'optionc'),
(73, 13, 37, 2, 'optiona'),
(73, 13, 38, 2, 'optionb'),
(73, 13, 39, 2, 'optiona'),
(73, 13, 40, 2, 'optiond'),
(73, 15, 2, 1, 'optiond'),
(73, 15, 3, 1, 'optionc'),
(73, 15, 4, 1, 'optiona'),
(73, 15, 5, 1, 'optionb'),
(73, 15, 6, 1, 'optiona'),
(73, 15, 7, -0.33, 'optiond'),
(73, 15, 8, 1, 'optiona'),
(73, 15, 9, 1, 'optionb'),
(73, 15, 10, 1, 'optiona'),
(73, 15, 11, 1, 'optiond'),
(73, 15, 12, 1, 'optionc'),
(73, 15, 13, 1, 'optionb'),
(73, 15, 14, 1, 'optionc'),
(73, 15, 15, 1, 'optiond'),
(73, 15, 16, 1, 'optiond'),
(73, 15, 17, 1, 'optionb'),
(73, 15, 18, 1, 'optionb'),
(73, 15, 19, 1, 'optionc'),
(73, 15, 20, 1, 'optionb'),
(73, 15, 21, 1, 'optiona'),
(73, 15, 22, 1, 'optionb'),
(73, 15, 23, 1, 'optiona'),
(73, 15, 24, 1, 'optiona'),
(73, 15, 25, 1, 'optiond'),
(73, 15, 26, 2, 'optiona'),
(73, 15, 27, 2, 'optiona'),
(73, 15, 29, 2, 'optiond'),
(73, 15, 30, 2, 'optionb'),
(73, 15, 31, 2, 'optiona'),
(73, 15, 32, 2, 'optiona'),
(73, 15, 33, 2, 'optionc'),
(73, 15, 35, 2, 'optionc'),
(73, 15, 36, -0.66, 'optionb'),
(73, 15, 37, 2, 'optionb'),
(73, 15, 38, 2, 'optionc'),
(73, 15, 39, 2, 'optionb'),
(73, 15, 40, 2, 'optiond'),
(73, 15, 41, 2, 'optionc'),
(73, 15, 42, 2, 'optiona'),
(73, 15, 43, 2, 'optiona'),
(73, 15, 44, 2, 'optiond'),
(73, 15, 45, 2, 'optiona'),
(73, 15, 47, -0.66, 'optionc'),
(73, 15, 48, 2, 'optionc'),
(73, 15, 49, 2, 'optionc'),
(73, 15, 50, 2, 'optiond'),
(73, 15, 51, -0.66, 'optionc'),
(73, 15, 52, 2, 'optionc'),
(73, 15, 53, 2, 'optionc'),
(73, 15, 54, 2, 'optionc'),
(73, 15, 55, -0.66, 'optionc'),
(73, 15, 56, -0.33, 'optionb'),
(73, 15, 57, 1, 'optionb'),
(73, 15, 58, 1, 'optiond'),
(73, 15, 59, 1, 'optiond'),
(73, 15, 60, 1, 'optiona'),
(73, 15, 61, 2, 'optionc'),
(73, 15, 62, 2, 'optionb'),
(73, 15, 63, 2, 'optiond'),
(73, 15, 64, 2, 'optiond'),
(73, 15, 65, -0.66, 'optiond'),
(73, 16, 1, 1, 'optionc'),
(73, 16, 3, 1, 'optiond'),
(73, 16, 4, 1, 'optiond'),
(73, 16, 6, 1, 'optionb'),
(73, 16, 8, 1, 'optiona'),
(73, 16, 9, 1, 'optionc'),
(73, 16, 10, 1, 'optionc'),
(73, 16, 11, -0.33, 'optiona'),
(73, 16, 12, -0.33, 'optionc'),
(73, 16, 13, -0.33, 'optionc'),
(73, 16, 14, 1, 'optiond'),
(73, 16, 15, -0.33, 'optiond'),
(73, 16, 16, 1, 'optiond'),
(73, 16, 18, -0.33, 'optionb'),
(73, 16, 19, 1, 'optiond'),
(73, 16, 20, 1, 'optiona'),
(73, 16, 21, -0.33, 'optiona'),
(73, 16, 22, 1, 'optionb'),
(73, 16, 23, -0.33, 'optionb'),
(73, 16, 25, -0.33, 'optiond'),
(73, 16, 26, 2, 'optiona'),
(73, 16, 27, 2, 'optionb'),
(73, 16, 29, 2, 'optiond'),
(73, 16, 30, 2, 'optiond'),
(73, 16, 32, -0.66, 'optionb'),
(73, 16, 35, 2, 'optionb'),
(73, 16, 36, -0.66, 'optiona'),
(73, 16, 37, 2, 'optionb'),
(73, 16, 41, -0.66, 'optionb'),
(73, 16, 43, 2, 'optiona'),
(73, 16, 44, 2, 'optiond'),
(73, 16, 45, 2, 'optiona'),
(73, 16, 46, -0.66, 'optiond'),
(73, 16, 47, 2, 'optionc'),
(73, 16, 48, 2, 'optiona'),
(73, 16, 49, 2, 'optionc'),
(73, 16, 50, 2, 'optiona'),
(73, 16, 53, 2, 'optionb'),
(73, 16, 54, -0.66, 'optiond'),
(73, 16, 56, 1, 'optiond'),
(73, 16, 57, 1, 'optionc'),
(73, 16, 60, -0.33, 'optionc'),
(73, 16, 61, -0.66, 'optiond'),
(73, 17, 1, 1, 'optiona'),
(73, 17, 2, 1, 'optionb'),
(73, 17, 3, 1, 'optionb'),
(73, 17, 4, -0.33, 'optiond'),
(73, 17, 5, 1, 'optionc'),
(73, 17, 6, 1, 'optiona'),
(73, 17, 7, 1, 'optionc'),
(73, 17, 8, 1, 'optiona'),
(73, 17, 9, 1, 'optionb'),
(73, 17, 10, 1, 'optiona'),
(73, 17, 11, 1, 'optiond'),
(73, 17, 12, 1, 'optiona'),
(73, 17, 13, 1, 'optionb'),
(73, 17, 14, 1, 'optionc'),
(73, 17, 17, 1, 'optiona'),
(73, 17, 18, 1, 'optionb'),
(73, 17, 19, 1, 'optionb'),
(73, 17, 20, -0.33, 'optionb'),
(73, 17, 21, 1, 'optionc'),
(73, 17, 22, 1, 'optionb'),
(73, 17, 23, 1, 'optiond'),
(73, 17, 24, 1, 'optionb'),
(73, 17, 25, 1, 'optionb'),
(73, 17, 26, 2, 'optionc'),
(73, 17, 28, -0.66, 'optionb'),
(73, 17, 29, 2, 'optiond'),
(73, 17, 30, 2, 'optiona'),
(73, 17, 31, 2, 'optiond'),
(73, 17, 32, 2, 'optiona'),
(73, 17, 33, 2, 'optiona'),
(73, 17, 34, -0.66, 'optionc'),
(73, 17, 35, 2, 'optionb'),
(73, 17, 37, 2, 'optionc'),
(73, 17, 38, -0.66, 'optiona'),
(73, 17, 39, 2, 'optionb'),
(73, 17, 41, -0.66, 'optionb'),
(73, 17, 42, 2, 'optionb'),
(73, 17, 44, 2, 'optionb'),
(73, 17, 45, 2, 'optionb'),
(73, 17, 47, 2, 'optiona'),
(73, 17, 48, 2, 'optiond'),
(73, 17, 50, 2, 'optiond'),
(73, 17, 52, 2, 'optiond'),
(73, 17, 53, 2, 'optiona'),
(73, 17, 54, 2, 'optiond'),
(73, 17, 55, 2, 'optiona'),
(73, 17, 58, 1, 'optionc'),
(73, 17, 59, 1, 'optiond'),
(73, 17, 60, 1, 'optiond'),
(73, 17, 61, 2, 'optionb'),
(73, 17, 63, 2, 'optiona'),
(73, 17, 65, 2, 'optiond'),
(73, 18, 2, 1, 'optiond'),
(73, 18, 3, 1, 'optionb'),
(73, 18, 4, 1, 'optiona'),
(73, 18, 6, 1, 'optionc'),
(73, 18, 7, 1, 'optionb'),
(73, 18, 8, 1, 'optionb'),
(73, 18, 9, 1, 'optiond'),
(73, 18, 10, 1, 'optionb'),
(73, 18, 11, 1, 'optionb'),
(73, 18, 12, 1, 'optiona'),
(73, 18, 13, 1, 'optiond'),
(73, 18, 14, 1, 'optionc'),
(73, 18, 18, 1, 'optiona'),
(73, 18, 19, 1, 'optionc'),
(73, 18, 20, 1, 'optionb'),
(73, 18, 21, 1, 'optiond'),
(73, 18, 22, 1, 'optiond'),
(73, 18, 23, -0.33, 'optiona'),
(73, 18, 24, 1, 'optionc'),
(73, 18, 25, 1, 'optionc'),
(73, 18, 26, 2, 'optionb'),
(73, 18, 27, -0.66, 'optionb'),
(73, 18, 28, 2, 'optiona'),
(73, 18, 29, 2, 'optiond'),
(73, 18, 30, 2, 'optionc'),
(73, 18, 31, 2, 'optiona'),
(73, 18, 32, -0.66, 'optionc'),
(73, 18, 33, 2, 'optiond'),
(73, 18, 34, 2, 'optiona'),
(73, 18, 35, 2, 'optiond'),
(73, 18, 36, 2, 'optiona'),
(73, 18, 38, 2, 'optionb'),
(73, 18, 39, -0.66, 'optionc'),
(73, 18, 42, 2, 'optionb'),
(73, 18, 43, 2, 'optionb'),
(73, 18, 45, -0.66, 'optionc'),
(73, 18, 47, 2, 'optiond'),
(73, 18, 48, 2, 'optionb'),
(73, 18, 49, 2, 'optionc'),
(73, 18, 50, -0.66, 'optiond'),
(73, 18, 51, -0.66, 'optiond'),
(73, 18, 52, -0.66, 'optionb'),
(73, 18, 53, 2, 'optiona'),
(73, 18, 54, 2, 'optiona'),
(73, 18, 56, 1, 'optione'),
(73, 18, 57, -0.33, 'optionc'),
(73, 18, 58, 1, 'optionc'),
(73, 18, 59, 1, 'optionc'),
(73, 18, 60, 1, 'optiona'),
(73, 18, 61, 2, 'optionb'),
(73, 18, 62, 2, 'optiond'),
(73, 18, 64, 2, 'optionb'),
(73, 18, 65, 2, 'optiond'),
(74, 7, 1, 1, 'optionc'),
(74, 7, 3, -0.33, 'optiond'),
(74, 7, 4, 1, 'optiond'),
(74, 7, 5, -0.33, 'optionc'),
(74, 7, 6, -0.33, 'optiona'),
(74, 7, 7, -0.33, 'optionc'),
(74, 7, 8, 1, 'optionb'),
(74, 7, 9, 1, 'optiona'),
(74, 7, 10, 1, 'optionc'),
(74, 7, 11, 1, 'optiona'),
(74, 7, 12, -0.33, 'optiona'),
(74, 7, 13, 1, 'optionc'),
(74, 7, 14, 1, 'optionc'),
(74, 7, 15, -0.33, 'optionc'),
(74, 7, 16, -0.33, 'optionb'),
(74, 7, 17, 1, 'optionc'),
(74, 7, 19, 1, 'optiond'),
(74, 7, 20, 1, 'optiona'),
(74, 7, 21, -0.33, 'optionc'),
(74, 7, 22, -0.33, 'optionb'),
(74, 7, 23, -0.33, 'optionb'),
(74, 7, 24, 1, 'optiona'),
(74, 7, 26, -0.66, 'optiond'),
(74, 7, 29, 2, 'optiond'),
(74, 7, 31, 2, 'optiona'),
(74, 7, 32, -0.66, 'optiond'),
(74, 7, 33, 2, 'optiond'),
(74, 7, 35, 2, 'optionc'),
(74, 7, 36, 2, 'optionc'),
(74, 7, 42, -0.66, 'optionb'),
(74, 7, 43, 2, 'optionb'),
(74, 7, 44, 2, 'optionb'),
(74, 7, 45, 2, 'optiond'),
(74, 7, 47, 2, 'optionb'),
(74, 7, 48, 2, 'optionb'),
(74, 7, 54, 2, 'optiond'),
(74, 7, 55, -0.66, 'optiond'),
(74, 7, 56, 1, 'optiona'),
(74, 7, 57, 1, 'optionc'),
(74, 7, 58, 1, 'optionb'),
(74, 7, 59, -0.33, 'optionb'),
(74, 7, 60, 1, 'optionc'),
(74, 7, 61, -0.66, 'optiond'),
(74, 7, 62, -0.66, 'optiona'),
(74, 7, 63, 2, 'optiond'),
(74, 7, 64, 2, 'optionc'),
(74, 7, 65, -0.66, 'optiona'),
(74, 8, 1, 1, 'optione'),
(74, 8, 2, -0.33, 'optionc'),
(74, 8, 4, 1, 'optiond'),
(74, 8, 5, 1, 'optionc'),
(74, 8, 6, 1, 'optiond'),
(74, 8, 9, -0.33, 'optiona'),
(74, 8, 11, 1, 'optiond'),
(74, 8, 12, 1, 'optiona'),
(74, 8, 13, 1, 'optionb'),
(74, 8, 14, -0.33, 'optiond'),
(74, 8, 15, 1, 'optionc'),
(74, 8, 16, 1, 'optionc'),
(74, 8, 17, -0.33, 'optionb'),
(74, 8, 18, -0.33, 'optionb'),
(74, 8, 19, -0.33, 'optionb'),
(74, 8, 20, -0.33, 'optionb'),
(74, 8, 25, -0.33, 'optione'),
(74, 8, 26, 1, 'optiond'),
(74, 8, 27, 1, 'optiond'),
(74, 8, 28, 1, 'optionc'),
(74, 8, 29, 1, 'optionb'),
(74, 8, 30, 1, 'optionc'),
(74, 8, 31, 1, 'optionc'),
(74, 8, 32, 1, 'optionb'),
(74, 8, 33, 1, 'optiona'),
(74, 8, 34, 1, 'optiond'),
(74, 8, 35, 1, 'optionc'),
(74, 8, 36, 1, 'optionc'),
(74, 8, 37, 1, 'optiond'),
(74, 8, 38, -0.33, 'optiona'),
(74, 8, 39, -0.33, 'optionc'),
(74, 8, 40, -0.33, 'optiona'),
(74, 8, 41, 1, 'optiona'),
(74, 8, 42, 1, 'optiond'),
(74, 8, 43, 1, 'optionb'),
(74, 8, 44, 1, 'optionb'),
(74, 8, 45, -0.33, 'optionb'),
(74, 9, 2, -0.66, 'optiona'),
(74, 9, 9, 2, 'optionb'),
(74, 9, 10, 2, 'optionc'),
(74, 9, 11, 2, 'optiona'),
(74, 9, 12, 2, 'optiona'),
(74, 9, 25, 2, 'optiond'),
(74, 9, 26, 2, 'optionc'),
(74, 9, 27, -0.66, 'optiona'),
(74, 9, 28, 2, 'optionb'),
(74, 9, 29, 2, 'optionc'),
(74, 9, 30, 2, 'optionb'),
(74, 9, 31, 2, 'optione'),
(74, 9, 32, -0.66, 'optiond'),
(74, 9, 33, -0.66, 'optiona'),
(74, 9, 34, -0.66, 'optiona'),
(74, 9, 35, 2, 'optionb'),
(74, 9, 37, 2, 'optionb'),
(74, 9, 39, 2, 'optiond'),
(74, 9, 46, 2, 'optiond'),
(74, 10, 1, 2, 'optione'),
(74, 10, 2, -0.66, 'optionc'),
(74, 10, 3, -0.66, 'optione'),
(74, 10, 5, -0.66, 'optiona'),
(74, 10, 6, 2, 'optionb'),
(74, 10, 8, -0.66, 'optionb'),
(74, 10, 9, 2, 'optionc'),
(74, 10, 10, 2, 'optiond'),
(74, 10, 11, 2, 'optionc'),
(74, 10, 12, 2, 'optionb'),
(74, 10, 13, -0.66, 'optione'),
(74, 10, 14, 2, 'optionb'),
(74, 10, 15, 2, 'optiond'),
(74, 10, 16, 2, 'optiona'),
(74, 10, 17, -0.66, 'optionc'),
(74, 10, 18, 2, 'optiona'),
(74, 10, 21, -0.66, 'optiona'),
(74, 10, 23, 2, 'optiond'),
(74, 11, 1, 2, 'optionb'),
(74, 11, 2, -0.66, 'optiond'),
(74, 11, 4, 2, 'optiond'),
(74, 11, 5, 2, 'optionb'),
(74, 11, 6, 2, 'optionb'),
(74, 11, 7, 2, 'optionb'),
(74, 11, 8, 2, 'optiona'),
(74, 11, 9, 2, 'optionc'),
(74, 11, 10, 2, 'optiona'),
(74, 11, 11, 2, 'optiona'),
(74, 11, 12, -0.66, 'optionb'),
(74, 11, 13, -0.66, 'optiona'),
(74, 11, 14, 2, 'optionc'),
(74, 11, 15, 2, 'optionc'),
(74, 11, 17, -0.66, 'optionb'),
(74, 11, 18, -0.66, 'optiond'),
(74, 11, 20, 2, 'optiona'),
(74, 11, 22, -0.66, 'optionc'),
(74, 11, 24, 2, 'optiona'),
(74, 11, 25, 2, 'optionb'),
(74, 11, 27, 2, 'optione'),
(74, 11, 29, 2, 'optiond'),
(74, 11, 30, 2, 'optiond'),
(74, 11, 31, 2, 'optione'),
(74, 11, 32, 2, 'optionc'),
(74, 11, 34, 2, 'optiond'),
(74, 11, 35, 2, 'optiond'),
(74, 11, 36, 2, 'optione'),
(74, 11, 37, -0.66, 'optiond'),
(74, 11, 38, 2, 'optiona'),
(74, 11, 40, 2, 'optiond'),
(74, 11, 41, -0.66, 'optiond'),
(74, 11, 42, -0.66, 'optionb'),
(74, 11, 51, -0.66, 'optionb'),
(74, 11, 53, 2, 'optionc'),
(74, 11, 55, -0.66, 'optionc'),
(74, 11, 60, 2, 'optiond'),
(74, 12, 1, -0.66, 'optiona'),
(74, 12, 2, 2, 'optionc'),
(74, 12, 3, 2, 'optiond'),
(74, 12, 4, -0.66, 'optionb'),
(74, 12, 5, -0.66, 'optiond'),
(74, 12, 6, -0.66, 'optionb'),
(74, 12, 7, -0.66, 'optiond'),
(74, 12, 8, 2, 'optionb'),
(74, 12, 9, -0.66, 'optionc'),
(74, 12, 12, -0.66, 'optiona'),
(74, 12, 14, 2, 'optiona'),
(74, 12, 16, -0.66, 'optiond'),
(74, 12, 17, 2, 'optionc'),
(74, 12, 18, 2, 'optiond'),
(74, 12, 20, 2, 'optionb'),
(74, 12, 21, 2, 'optiona'),
(74, 12, 22, 2, 'optiond'),
(74, 12, 26, -0.66, 'optiona'),
(74, 12, 27, -0.66, 'optiona'),
(74, 12, 28, -0.66, 'optionb'),
(74, 12, 29, 2, 'optiona'),
(74, 12, 30, 2, 'optionb'),
(74, 12, 31, 2, 'optionc'),
(74, 12, 32, 2, 'optionc'),
(74, 12, 34, 2, 'optiond'),
(74, 12, 35, 2, 'optiond'),
(74, 12, 36, 2, 'optionc'),
(74, 12, 37, -0.66, 'optionb'),
(74, 12, 38, 2, 'optionc'),
(74, 12, 40, -0.66, 'optionc'),
(74, 12, 41, -0.66, 'optiona'),
(74, 12, 42, 2, 'optiona'),
(74, 12, 43, -0.66, 'optionc'),
(74, 12, 44, -0.66, 'optiona'),
(74, 12, 45, 2, 'optiond'),
(74, 12, 46, 2, 'optiond'),
(74, 12, 47, 2, 'optionc'),
(74, 12, 48, -0.66, 'optionc'),
(74, 12, 50, 2, 'optionb'),
(74, 12, 51, 2, 'optionc'),
(74, 12, 52, -0.66, 'optiond'),
(74, 12, 53, 2, 'optiona'),
(74, 12, 54, 2, 'optiona'),
(74, 13, 1, -0.66, 'optiond'),
(74, 13, 2, -0.66, 'optionc'),
(74, 13, 3, -0.66, 'optionb'),
(74, 13, 4, -0.66, 'optiona'),
(74, 13, 5, 2, 'optionc'),
(74, 13, 6, -0.66, 'optiona'),
(74, 13, 8, 2, 'optionc'),
(74, 13, 10, -0.66, 'optionc'),
(74, 13, 11, 2, 'optiond'),
(74, 13, 12, 2, 'optiona'),
(74, 13, 13, 2, 'optiond'),
(74, 13, 14, 2, 'optionb'),
(74, 13, 20, -0.66, 'optionb'),
(74, 13, 21, 2, 'optiona'),
(74, 13, 22, 2, 'optiona'),
(74, 13, 24, -0.66, 'optiond'),
(74, 13, 27, 2, 'optiond'),
(74, 13, 29, 2, 'optionc'),
(74, 13, 30, 2, 'optiona'),
(74, 13, 33, 2, 'optionb'),
(74, 13, 35, 2, 'optionc'),
(74, 15, 1, 1, 'optionc'),
(74, 15, 2, 1, 'optiond'),
(74, 15, 3, 1, 'optionc'),
(74, 15, 5, -0.33, 'optiond'),
(74, 15, 6, 1, 'optiona'),
(74, 15, 7, 1, 'optionb'),
(74, 15, 9, 1, 'optionb'),
(74, 15, 10, -0.33, 'optionb'),
(74, 15, 12, 1, 'optionc'),
(74, 15, 13, 1, 'optionb'),
(74, 15, 14, 1, 'optionc'),
(74, 15, 15, 1, 'optiond'),
(74, 15, 16, -0.33, 'optionc'),
(74, 15, 17, -0.33, 'optiona'),
(74, 15, 18, 1, 'optionb'),
(74, 15, 19, 1, 'optionc'),
(74, 15, 20, -0.33, 'optionc'),
(74, 15, 21, -0.33, 'optionb'),
(74, 15, 22, -0.33, 'optiond'),
(74, 15, 23, -0.33, 'optionc'),
(74, 15, 24, 1, 'optiona'),
(74, 15, 25, 1, 'optiond'),
(74, 15, 26, 2, 'optiona'),
(74, 15, 30, 2, 'optionb'),
(74, 15, 31, 2, 'optiona'),
(74, 15, 33, -0.66, 'optionb'),
(74, 15, 35, 2, 'optionc'),
(74, 15, 37, 2, 'optionb'),
(74, 15, 39, 2, 'optionb'),
(74, 15, 40, -0.66, 'optiona'),
(74, 15, 41, 2, 'optionc'),
(74, 15, 42, 2, 'optiona'),
(74, 15, 43, 2, 'optiona'),
(74, 15, 44, -0.66, 'optionc'),
(74, 15, 45, 2, 'optiona'),
(74, 15, 56, -0.33, 'optiond'),
(74, 15, 57, -0.33, 'optiona'),
(74, 15, 58, 1, 'optiond'),
(74, 15, 59, 1, 'optiond'),
(74, 15, 60, -0.33, 'optionc'),
(74, 15, 61, 2, 'optionc'),
(74, 15, 62, -0.66, 'optionc'),
(74, 16, 1, 1, 'optionc'),
(74, 16, 3, 1, 'optiond'),
(74, 16, 6, 1, 'optionb'),
(74, 16, 7, -0.33, 'optionb'),
(74, 16, 9, 1, 'optionc'),
(74, 16, 10, 1, 'optionc'),
(74, 16, 11, 1, 'optionb'),
(74, 16, 12, -0.33, 'optionc'),
(74, 16, 13, -0.33, 'optiona'),
(74, 16, 16, 1, 'optiond'),
(74, 16, 17, -0.33, 'optiond'),
(74, 16, 22, 1, 'optionb'),
(74, 16, 26, -0.66, 'optionb'),
(74, 16, 29, -0.66, 'optionb'),
(74, 16, 30, 2, 'optiond'),
(74, 16, 35, -0.66, 'optiond'),
(74, 16, 36, 2, 'optionc'),
(74, 16, 37, 2, 'optionb'),
(74, 16, 38, -0.66, 'optiona'),
(74, 16, 40, -0.66, 'optionb'),
(74, 16, 43, 2, 'optiona'),
(74, 16, 44, -0.66, 'optionb'),
(74, 16, 45, 2, 'optiona'),
(74, 16, 46, -0.66, 'optiond'),
(74, 16, 47, 2, 'optionc'),
(74, 16, 48, 2, 'optiona'),
(74, 16, 49, 2, 'optionc'),
(74, 16, 56, -0.33, 'optionb'),
(74, 16, 61, -0.66, 'optiond'),
(74, 16, 62, 2, 'optiond'),
(74, 17, 1, -0.33, 'optionb'),
(74, 17, 2, 1, 'optionb'),
(74, 17, 3, 1, 'optionb'),
(74, 17, 5, 1, 'optionc'),
(74, 17, 6, 1, 'optiona'),
(74, 17, 8, 1, 'optiona'),
(74, 17, 9, 1, 'optionb'),
(74, 17, 10, 1, 'optiona'),
(74, 17, 13, 1, 'optionb'),
(74, 17, 15, -0.33, 'optiond'),
(74, 17, 16, -0.33, 'optionc'),
(74, 17, 19, -0.33, 'optionc'),
(74, 17, 21, -0.33, 'optiona'),
(74, 17, 22, 1, 'optionb'),
(74, 17, 23, 1, 'optiond'),
(74, 17, 25, 1, 'optionb'),
(74, 17, 26, 2, 'optionc'),
(74, 17, 27, -0.66, 'optiond'),
(74, 17, 29, 2, 'optiond'),
(74, 17, 30, -0.66, 'optiond'),
(74, 17, 31, 2, 'optiond'),
(74, 17, 32, 2, 'optiona'),
(74, 17, 33, -0.66, 'optiond'),
(74, 17, 34, 2, 'optiond'),
(74, 17, 35, 2, 'optionb'),
(74, 17, 37, -0.66, 'optionb'),
(74, 17, 38, -0.66, 'optiona'),
(74, 17, 42, 2, 'optionb'),
(74, 17, 46, 2, 'optionb'),
(74, 17, 47, -0.66, 'optiond'),
(74, 17, 48, -0.66, 'optionc'),
(74, 17, 49, -0.66, 'optiond'),
(74, 17, 50, -0.66, 'optionc'),
(74, 17, 52, 2, 'optiond'),
(74, 17, 53, 2, 'optiona'),
(74, 17, 54, 2, 'optiond'),
(74, 17, 55, 2, 'optiona'),
(74, 17, 58, 1, 'optionc'),
(74, 17, 60, -0.33, 'optiona'),
(74, 17, 61, 2, 'optionb'),
(74, 17, 63, 2, 'optiona'),
(74, 17, 65, -0.66, 'optiona'),
(74, 18, 1, 1, 'optiona'),
(74, 18, 2, 1, 'optiond'),
(74, 18, 3, 1, 'optionb'),
(74, 18, 4, 1, 'optiona'),
(74, 18, 6, -0.33, 'optionb'),
(74, 18, 8, -0.33, 'optiona'),
(74, 18, 10, -0.33, 'optiond'),
(74, 18, 11, -0.33, 'optiond'),
(74, 18, 12, -0.33, 'optionb'),
(74, 18, 13, 1, 'optiond'),
(74, 18, 14, -0.33, 'optionb'),
(74, 18, 16, 1, 'optionc'),
(74, 18, 18, 1, 'optiona'),
(74, 18, 19, 1, 'optionc');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(74, 18, 20, -0.33, 'optiona'),
(74, 18, 21, -0.33, 'optionc'),
(74, 18, 22, 1, 'optiond'),
(74, 18, 23, -0.33, 'optiona'),
(74, 18, 24, 1, 'optionc'),
(74, 18, 25, 1, 'optionc'),
(74, 18, 26, 2, 'optionb'),
(74, 18, 27, 2, 'optiond'),
(74, 18, 30, 2, 'optionc'),
(74, 18, 31, 2, 'optiona'),
(74, 18, 33, 2, 'optiond'),
(74, 18, 34, 2, 'optiona'),
(74, 18, 38, 2, 'optionb'),
(74, 18, 39, 2, 'optiona'),
(74, 18, 41, 2, 'optiond'),
(74, 18, 42, 2, 'optionb'),
(74, 18, 45, -0.66, 'optionc'),
(74, 18, 47, -0.66, 'optionb'),
(74, 18, 48, 2, 'optionb'),
(74, 18, 49, 2, 'optionc'),
(74, 18, 54, 2, 'optiona'),
(74, 18, 55, 2, 'optiond'),
(74, 18, 56, 1, 'optione'),
(74, 18, 60, 1, 'optiona'),
(74, 18, 61, 2, 'optionb'),
(74, 18, 62, 2, 'optiond'),
(74, 18, 63, -0.66, 'optionb'),
(74, 18, 64, -0.66, 'optionc'),
(74, 18, 65, 2, 'optiond'),
(75, 7, 1, 1, 'optionc'),
(75, 7, 3, -0.33, 'optiond'),
(75, 7, 4, 1, 'optiond'),
(75, 7, 5, -0.33, 'optionc'),
(75, 7, 6, -0.33, 'optiona'),
(75, 7, 10, 1, 'optionc'),
(75, 7, 11, 1, 'optiona'),
(75, 7, 14, 1, 'optionc'),
(75, 7, 15, -0.33, 'optiona'),
(75, 7, 16, 1, 'optiona'),
(75, 7, 17, 1, 'optionc'),
(75, 7, 19, -0.33, 'optiona'),
(75, 7, 20, 1, 'optiona'),
(75, 7, 23, 1, 'optiond'),
(75, 7, 24, 1, 'optiona'),
(75, 7, 29, -0.66, 'optiona'),
(75, 7, 31, 2, 'optiona'),
(75, 7, 34, 2, 'optione'),
(75, 7, 35, 2, 'optionc'),
(75, 7, 36, -0.66, 'optionb'),
(75, 7, 38, -0.66, 'optionb'),
(75, 7, 39, -0.66, 'optionb'),
(75, 7, 40, 2, 'optionb'),
(75, 7, 41, 2, 'optionc'),
(75, 7, 42, 2, 'optionc'),
(75, 7, 44, 2, 'optionb'),
(75, 7, 45, 2, 'optiond'),
(75, 7, 47, 2, 'optionb'),
(75, 7, 50, 2, 'optionc'),
(75, 7, 51, 2, 'optionb'),
(75, 7, 52, 2, 'optiona'),
(75, 7, 53, -0.66, 'optiona'),
(75, 7, 54, 2, 'optiond'),
(75, 7, 56, 1, 'optiona'),
(75, 7, 59, -0.33, 'optionb'),
(75, 7, 62, 2, 'optionc'),
(75, 7, 63, 2, 'optiond'),
(75, 7, 65, 2, 'optionb'),
(75, 8, 1, 1, 'optione'),
(75, 8, 2, 1, 'optiona'),
(75, 8, 3, -0.33, 'optionc'),
(75, 8, 4, -0.33, 'optionb'),
(75, 8, 6, 1, 'optiond'),
(75, 8, 8, 1, 'optionb'),
(75, 8, 9, -0.33, 'optiona'),
(75, 8, 10, -0.33, 'optiond'),
(75, 8, 11, 1, 'optiond'),
(75, 8, 12, 1, 'optiona'),
(75, 8, 14, -0.33, 'optiond'),
(75, 8, 15, 1, 'optionc'),
(75, 8, 16, 1, 'optionc'),
(75, 8, 17, -0.33, 'optionb'),
(75, 8, 18, -0.33, 'optionc'),
(75, 8, 19, 1, 'optiona'),
(75, 8, 20, 1, 'optione'),
(75, 8, 22, -0.33, 'optionc'),
(75, 8, 23, 1, 'optiona'),
(75, 8, 24, 1, 'optiona'),
(75, 8, 26, 1, 'optiond'),
(75, 8, 27, 1, 'optiond'),
(75, 8, 29, -0.33, 'optiond'),
(75, 8, 30, 1, 'optionc'),
(75, 8, 31, 1, 'optionc'),
(75, 8, 32, 1, 'optionb'),
(75, 8, 33, 1, 'optiona'),
(75, 8, 34, -0.33, 'optiona'),
(75, 8, 35, 1, 'optionc'),
(75, 8, 36, 1, 'optionc'),
(75, 8, 37, -0.33, 'optionb'),
(75, 8, 38, 1, 'optionb'),
(75, 8, 39, 1, 'optiond'),
(75, 8, 40, -0.33, 'optiona'),
(75, 8, 41, 1, 'optiona'),
(75, 8, 42, 1, 'optiond'),
(75, 8, 43, -0.33, 'optiond'),
(75, 9, 1, -0.66, 'optionb'),
(75, 9, 4, 2, 'optiona'),
(75, 9, 5, 2, 'optiond'),
(75, 9, 7, -0.66, 'optionb'),
(75, 9, 8, 2, 'optionb'),
(75, 9, 10, 2, 'optionc'),
(75, 9, 12, 2, 'optiona'),
(75, 9, 14, 2, 'optionb'),
(75, 9, 17, -0.66, 'optiond'),
(75, 9, 21, -0.66, 'optiond'),
(75, 9, 22, -0.66, 'optiond'),
(75, 9, 25, 2, 'optiond'),
(75, 9, 26, 2, 'optionc'),
(75, 9, 28, -0.66, 'optionc'),
(75, 9, 29, 2, 'optionc'),
(75, 9, 31, -0.66, 'optiond'),
(75, 9, 32, -0.66, 'optionc'),
(75, 9, 34, -0.66, 'optiona'),
(75, 9, 35, 2, 'optionb'),
(75, 9, 37, 2, 'optionb'),
(75, 9, 43, -0.66, 'optiona'),
(75, 9, 46, 2, 'optiond'),
(75, 9, 48, -0.66, 'optiond'),
(75, 9, 50, 2, 'optionb'),
(75, 10, 2, 2, 'optionb'),
(75, 10, 3, 2, 'optiond'),
(75, 10, 5, -0.66, 'optionc'),
(75, 10, 7, -0.66, 'optionc'),
(75, 10, 9, -0.66, 'optiona'),
(75, 10, 10, -0.66, 'optiona'),
(75, 10, 11, 2, 'optionc'),
(75, 10, 12, -0.66, 'optiona'),
(75, 10, 13, 2, 'optionc'),
(75, 10, 14, 2, 'optionb'),
(75, 10, 15, 2, 'optiond'),
(75, 10, 16, 2, 'optiona'),
(75, 10, 17, -0.66, 'optiond'),
(75, 10, 18, 2, 'optiona'),
(75, 10, 19, 2, 'optiona'),
(75, 10, 21, -0.66, 'optiona'),
(75, 10, 22, -0.66, 'optionc'),
(75, 10, 23, -0.66, 'optionc'),
(75, 11, 1, 2, 'optionb'),
(75, 11, 3, -0.66, 'optionc'),
(75, 11, 5, 2, 'optionb'),
(75, 11, 6, 2, 'optionb'),
(75, 11, 7, -0.66, 'optiona'),
(75, 11, 8, 2, 'optiona'),
(75, 11, 9, 2, 'optionc'),
(75, 11, 10, 2, 'optiona'),
(75, 11, 11, 2, 'optiona'),
(75, 11, 12, 2, 'optiona'),
(75, 11, 15, 2, 'optionc'),
(75, 11, 17, 2, 'optiona'),
(75, 11, 18, 2, 'optionb'),
(75, 11, 20, 2, 'optiona'),
(75, 11, 21, 2, 'optionc'),
(75, 11, 22, -0.66, 'optionc'),
(75, 11, 23, -0.66, 'optiona'),
(75, 11, 25, 2, 'optionb'),
(75, 11, 26, -0.66, 'optiond'),
(75, 11, 27, 2, 'optione'),
(75, 11, 30, -0.66, 'optionb'),
(75, 11, 31, 2, 'optione'),
(75, 11, 32, 2, 'optionc'),
(75, 11, 33, -0.66, 'optione'),
(75, 11, 34, -0.66, 'optiona'),
(75, 11, 35, 2, 'optiond'),
(75, 11, 36, 2, 'optione'),
(75, 11, 37, -0.66, 'optiond'),
(75, 11, 38, -0.66, 'optione'),
(75, 11, 39, -0.66, 'optiond'),
(75, 11, 41, 2, 'optionc'),
(75, 11, 42, -0.66, 'optionc'),
(75, 11, 43, -0.66, 'optionb'),
(75, 11, 44, -0.66, 'optiona'),
(75, 11, 45, 2, 'optiona'),
(75, 11, 46, 2, 'optiona'),
(75, 11, 48, -0.66, 'optiona'),
(75, 11, 49, 2, 'optiond'),
(75, 11, 51, -0.66, 'optionc'),
(75, 11, 52, -0.66, 'optionc'),
(75, 11, 53, -0.66, 'optione'),
(75, 11, 54, -0.66, 'optiona'),
(75, 11, 55, -0.66, 'optionc'),
(75, 11, 56, 2, 'optione'),
(75, 11, 58, 2, 'optione'),
(75, 11, 60, -0.66, 'optione'),
(75, 12, 1, 2, 'optionc'),
(75, 12, 2, 2, 'optionc'),
(75, 12, 3, 2, 'optiond'),
(75, 12, 5, -0.66, 'optionb'),
(75, 12, 6, -0.66, 'optionb'),
(75, 12, 7, 2, 'optionb'),
(75, 12, 8, -0.66, 'optiona'),
(75, 12, 9, 2, 'optiona'),
(75, 12, 10, 2, 'optiond'),
(75, 12, 12, -0.66, 'optiona'),
(75, 12, 13, 2, 'optionb'),
(75, 12, 14, 2, 'optiona'),
(75, 12, 15, 2, 'optiond'),
(75, 12, 16, 2, 'optionc'),
(75, 12, 17, 2, 'optionc'),
(75, 12, 18, 2, 'optiond'),
(75, 12, 20, 2, 'optionb'),
(75, 12, 21, 2, 'optiona'),
(75, 12, 22, 2, 'optiond'),
(75, 12, 23, 2, 'optionb'),
(75, 12, 25, -0.66, 'optiona'),
(75, 12, 26, 2, 'optionb'),
(75, 12, 27, -0.66, 'optiond'),
(75, 12, 28, -0.66, 'optionb'),
(75, 12, 29, -0.66, 'optiond'),
(75, 12, 30, -0.66, 'optiona'),
(75, 12, 31, 2, 'optionc'),
(75, 12, 32, 2, 'optionc'),
(75, 12, 34, -0.66, 'optionb'),
(75, 12, 38, 2, 'optionc'),
(75, 12, 40, 2, 'optiona'),
(75, 12, 42, 2, 'optiona'),
(75, 12, 43, -0.66, 'optionc'),
(75, 12, 45, 2, 'optiond'),
(75, 12, 46, 2, 'optiond'),
(75, 12, 47, 2, 'optionc'),
(75, 12, 48, 2, 'optiona'),
(75, 12, 50, 2, 'optionb'),
(75, 12, 51, 2, 'optionc'),
(75, 12, 52, 2, 'optionb'),
(75, 12, 53, -0.66, 'optiond'),
(75, 12, 54, 2, 'optiona'),
(75, 13, 1, -0.66, 'optiond'),
(75, 13, 2, -0.66, 'optiond'),
(75, 13, 3, -0.66, 'optiond'),
(75, 13, 5, -0.66, 'optiond'),
(75, 13, 7, -0.66, 'optiond'),
(75, 13, 8, 2, 'optionc'),
(75, 13, 9, -0.66, 'optiond'),
(75, 13, 10, 2, 'optione'),
(75, 13, 11, -0.66, 'optionb'),
(75, 13, 12, 2, 'optiona'),
(75, 13, 13, -0.66, 'optiona'),
(75, 13, 15, -0.66, 'optiona'),
(75, 13, 17, 2, 'optionc'),
(75, 13, 22, -0.66, 'optionc'),
(75, 13, 24, 2, 'optionc'),
(75, 13, 25, 2, 'optiona'),
(75, 13, 26, -0.66, 'optionb'),
(75, 13, 28, -0.66, 'optionb'),
(75, 13, 30, 2, 'optiona'),
(75, 13, 31, 2, 'optiond'),
(75, 13, 32, 2, 'optiona'),
(75, 13, 34, 2, 'optiona'),
(75, 13, 35, -0.66, 'optionb'),
(75, 13, 36, 2, 'optionc'),
(75, 13, 38, 2, 'optionb'),
(75, 13, 39, 2, 'optiona'),
(75, 13, 40, 2, 'optiond'),
(75, 15, 2, 1, 'optiond'),
(75, 15, 3, -0.33, 'optiona'),
(75, 15, 5, 1, 'optionb'),
(75, 15, 6, 1, 'optiona'),
(75, 15, 9, 1, 'optionb'),
(75, 15, 10, 1, 'optiona'),
(75, 15, 11, 1, 'optiond'),
(75, 15, 13, 1, 'optionb'),
(75, 15, 14, 1, 'optionc'),
(75, 15, 15, 1, 'optiond'),
(75, 15, 16, -0.33, 'optiona'),
(75, 15, 17, 1, 'optionb'),
(75, 15, 18, 1, 'optionb'),
(75, 15, 19, 1, 'optionc'),
(75, 15, 20, 1, 'optionb'),
(75, 15, 21, 1, 'optiona'),
(75, 15, 22, 1, 'optionb'),
(75, 15, 23, 1, 'optiona'),
(75, 15, 24, 1, 'optiona'),
(75, 15, 25, 1, 'optiond'),
(75, 15, 26, 2, 'optiona'),
(75, 15, 27, 2, 'optiona'),
(75, 15, 29, 2, 'optiond'),
(75, 15, 30, -0.66, 'optiond'),
(75, 15, 31, 2, 'optiona'),
(75, 15, 33, 2, 'optionc'),
(75, 15, 35, 2, 'optionc'),
(75, 15, 36, 2, 'optiond'),
(75, 15, 37, -0.66, 'optiona'),
(75, 15, 39, -0.66, 'optionc'),
(75, 15, 40, -0.66, 'optionc'),
(75, 15, 41, -0.66, 'optiond'),
(75, 15, 42, 2, 'optiona'),
(75, 15, 43, 2, 'optiona'),
(75, 15, 45, 2, 'optiona'),
(75, 15, 47, 2, 'optiond'),
(75, 15, 50, -0.66, 'optionb'),
(75, 15, 51, -0.66, 'optionc'),
(75, 15, 52, 2, 'optionc'),
(75, 15, 59, 1, 'optiond'),
(75, 15, 62, -0.66, 'optionc'),
(75, 15, 63, 2, 'optiond'),
(75, 15, 65, -0.66, 'optiona'),
(75, 16, 1, 1, 'optionc'),
(75, 16, 3, 1, 'optiond'),
(75, 16, 4, 1, 'optiond'),
(75, 16, 6, 1, 'optionb'),
(75, 16, 7, 1, 'optiond'),
(75, 16, 8, 1, 'optiona'),
(75, 16, 9, -0.33, 'optiona'),
(75, 16, 10, 1, 'optionc'),
(75, 16, 13, -0.33, 'optionc'),
(75, 16, 14, -0.33, 'optionb'),
(75, 16, 15, 1, 'optionc'),
(75, 16, 16, 1, 'optiond'),
(75, 16, 18, -0.33, 'optionc'),
(75, 16, 20, 1, 'optiona'),
(75, 16, 22, -0.33, 'optiona'),
(75, 16, 25, -0.33, 'optionc'),
(75, 16, 26, -0.66, 'optiond'),
(75, 16, 28, -0.66, 'optiona'),
(75, 16, 29, -0.66, 'optiona'),
(75, 16, 30, 2, 'optiond'),
(75, 16, 32, -0.66, 'optionb'),
(75, 16, 35, -0.66, 'optiond'),
(75, 16, 36, -0.66, 'optiona'),
(75, 16, 43, -0.66, 'optionb'),
(75, 16, 44, 2, 'optiond'),
(75, 16, 45, 2, 'optiona'),
(75, 16, 46, -0.66, 'optionb'),
(75, 16, 47, 2, 'optionc'),
(75, 16, 50, 2, 'optiona'),
(75, 16, 51, -0.66, 'optionb'),
(75, 16, 52, 2, 'optiona'),
(75, 16, 60, 1, 'optionc'),
(75, 16, 64, 2, 'optionb'),
(75, 17, 1, 1, 'optiona'),
(75, 17, 2, 1, 'optionb'),
(75, 17, 3, 1, 'optionb'),
(75, 17, 5, 1, 'optionc'),
(75, 17, 6, -0.33, 'optiond'),
(75, 17, 8, 1, 'optiona'),
(75, 17, 9, -0.33, 'optiona'),
(75, 17, 10, -0.33, 'optionb'),
(75, 17, 11, -0.33, 'optionb'),
(75, 17, 12, -0.33, 'optionc'),
(75, 17, 13, -0.33, 'optionc'),
(75, 17, 14, 1, 'optionc'),
(75, 17, 18, -0.33, 'optiona'),
(75, 17, 19, 1, 'optionb'),
(75, 17, 20, -0.33, 'optiond'),
(75, 17, 22, 1, 'optionb'),
(75, 17, 23, 1, 'optiond'),
(75, 17, 24, -0.33, 'optionc'),
(75, 17, 25, -0.33, 'optiond'),
(75, 17, 26, 2, 'optionc'),
(75, 17, 27, 2, 'optionc'),
(75, 17, 28, -0.66, 'optiona'),
(75, 17, 29, 2, 'optiond'),
(75, 17, 30, 2, 'optiona'),
(75, 17, 31, 2, 'optiond'),
(75, 17, 32, 2, 'optiona'),
(75, 17, 33, 2, 'optiona'),
(75, 17, 34, 2, 'optiond'),
(75, 17, 35, -0.66, 'optiona'),
(75, 17, 37, 2, 'optionc'),
(75, 17, 38, -0.66, 'optiona'),
(75, 17, 41, 2, 'optionc'),
(75, 17, 45, 2, 'optionb'),
(75, 17, 47, -0.66, 'optionb'),
(75, 17, 48, -0.66, 'optionc'),
(75, 17, 52, 2, 'optiond'),
(75, 17, 53, 2, 'optiona'),
(75, 17, 60, 1, 'optiond'),
(75, 17, 61, 2, 'optionb'),
(75, 17, 65, -0.66, 'optiona'),
(75, 18, 1, 1, 'optiona'),
(75, 18, 2, 1, 'optiond'),
(75, 18, 3, 1, 'optionb'),
(75, 18, 4, 1, 'optiona'),
(75, 18, 6, -0.33, 'optiona'),
(75, 18, 8, 1, 'optionb'),
(75, 18, 10, -0.33, 'optiond'),
(75, 18, 11, -0.33, 'optionc'),
(75, 18, 12, 1, 'optiona'),
(75, 18, 13, 1, 'optiond'),
(75, 18, 14, 1, 'optionc'),
(75, 18, 15, 1, 'optionc'),
(75, 18, 16, -0.33, 'optiona'),
(75, 18, 18, -0.33, 'optionb'),
(75, 18, 19, 1, 'optionc'),
(75, 18, 20, 1, 'optionb'),
(75, 18, 21, -0.33, 'optiona'),
(75, 18, 22, 1, 'optiond'),
(75, 18, 24, 1, 'optionc'),
(75, 18, 25, 1, 'optionc'),
(75, 18, 26, 2, 'optionb'),
(75, 18, 27, -0.66, 'optiona'),
(75, 18, 29, 2, 'optiond'),
(75, 18, 30, 2, 'optionc'),
(75, 18, 31, 2, 'optiona'),
(75, 18, 32, -0.66, 'optiona'),
(75, 18, 33, 2, 'optiond'),
(75, 18, 35, -0.66, 'optiona'),
(75, 18, 36, 2, 'optiona'),
(75, 18, 38, -0.66, 'optiona'),
(75, 18, 39, 2, 'optiona'),
(75, 18, 42, 2, 'optionb'),
(75, 18, 43, -0.66, 'optionc'),
(75, 18, 45, -0.66, 'optiond'),
(75, 18, 47, 2, 'optiond'),
(75, 18, 48, 2, 'optionb'),
(75, 18, 49, 2, 'optionc'),
(75, 18, 52, -0.66, 'optiond'),
(75, 18, 53, -0.66, 'optiond'),
(75, 18, 54, 2, 'optiona'),
(75, 18, 60, 1, 'optiona'),
(75, 18, 61, 2, 'optionb'),
(75, 18, 63, -0.66, 'optionb'),
(75, 18, 64, -0.66, 'optionc'),
(75, 18, 65, 2, 'optiond'),
(76, 7, 1, 1, 'optionc'),
(76, 7, 2, -0.33, 'optionc'),
(76, 7, 3, -0.33, 'optiond'),
(76, 7, 4, 1, 'optiond'),
(76, 7, 5, -0.33, 'optionc'),
(76, 7, 6, 1, 'optionb'),
(76, 7, 9, 1, 'optiona'),
(76, 7, 10, -0.33, 'optionb'),
(76, 7, 12, -0.33, 'optionc'),
(76, 7, 15, -0.33, 'optionc'),
(76, 7, 16, 1, 'optiona'),
(76, 7, 17, 1, 'optionc'),
(76, 7, 19, 1, 'optiond'),
(76, 7, 20, 1, 'optiona'),
(76, 7, 21, -0.33, 'optiona'),
(76, 7, 22, 1, 'optiond'),
(76, 7, 23, -0.33, 'optionb'),
(76, 7, 24, 1, 'optiona'),
(76, 7, 26, -0.66, 'optiond'),
(76, 7, 29, -0.66, 'optiona'),
(76, 7, 31, 2, 'optiona'),
(76, 7, 35, 2, 'optionc'),
(76, 7, 36, -0.66, 'optiond'),
(76, 7, 38, -0.66, 'optiond'),
(76, 7, 41, -0.66, 'optiond'),
(76, 7, 44, -0.66, 'optionc'),
(76, 7, 46, -0.66, 'optionc'),
(76, 7, 47, 2, 'optionb'),
(76, 7, 52, 2, 'optiona'),
(76, 7, 53, 2, 'optionb'),
(76, 7, 54, 2, 'optiond'),
(76, 7, 57, 1, 'optionc'),
(76, 7, 63, 2, 'optiond'),
(76, 8, 1, 1, 'optione'),
(76, 8, 2, 1, 'optiona'),
(76, 8, 3, -0.33, 'optionc'),
(76, 8, 4, 1, 'optiond'),
(76, 8, 5, 1, 'optionc'),
(76, 8, 6, 1, 'optiond'),
(76, 8, 8, 1, 'optionb'),
(76, 8, 9, 1, 'optiond'),
(76, 8, 10, -0.33, 'optionb'),
(76, 8, 13, 1, 'optionb'),
(76, 8, 15, -0.33, 'optiona'),
(76, 8, 17, 1, 'optione'),
(76, 8, 18, -0.33, 'optiond'),
(76, 8, 19, 1, 'optiona'),
(76, 8, 20, -0.33, 'optiona'),
(76, 8, 25, 1, 'optiond'),
(76, 8, 27, 1, 'optiond'),
(76, 8, 29, -0.33, 'optiond'),
(76, 8, 30, 1, 'optionc'),
(76, 8, 31, 1, 'optionc'),
(76, 8, 32, 1, 'optionb'),
(76, 8, 33, 1, 'optiona'),
(76, 8, 34, -0.33, 'optiona'),
(76, 8, 35, 1, 'optionc'),
(76, 8, 36, 1, 'optionc'),
(76, 8, 37, -0.33, 'optionc'),
(76, 8, 38, 1, 'optionb'),
(76, 8, 39, 1, 'optiond'),
(76, 8, 40, -0.33, 'optiona'),
(76, 8, 41, 1, 'optiona'),
(76, 8, 42, 1, 'optiond'),
(76, 8, 43, 1, 'optionb'),
(76, 8, 44, 1, 'optionb'),
(76, 8, 45, 1, 'optiond'),
(76, 9, 1, -0.66, 'optiona'),
(76, 9, 2, 2, 'optionb'),
(76, 9, 4, 2, 'optiona'),
(76, 9, 7, -0.66, 'optionb'),
(76, 9, 11, 2, 'optiona'),
(76, 9, 21, 2, 'optionc'),
(76, 9, 25, -0.66, 'optionb'),
(76, 9, 26, 2, 'optionc'),
(76, 9, 30, 2, 'optionb'),
(76, 9, 31, -0.66, 'optiond'),
(76, 9, 32, -0.66, 'optiond'),
(76, 9, 35, 2, 'optionb'),
(76, 9, 39, -0.66, 'optiona'),
(76, 9, 46, 2, 'optiond'),
(76, 9, 53, 2, 'optionc'),
(76, 10, 3, 2, 'optiond'),
(76, 10, 5, 2, 'optionb'),
(76, 10, 6, 2, 'optionb'),
(76, 10, 8, -0.66, 'optionc'),
(76, 10, 10, 2, 'optiond'),
(76, 10, 11, 2, 'optionc'),
(76, 10, 12, 2, 'optionb'),
(76, 10, 13, 2, 'optionc'),
(76, 10, 14, 2, 'optionb'),
(76, 10, 15, -0.66, 'optiona'),
(76, 10, 16, 2, 'optiona'),
(76, 10, 17, -0.66, 'optiond'),
(76, 10, 19, -0.66, 'optiond'),
(76, 10, 21, 2, 'optionb'),
(76, 10, 22, -0.66, 'optionc'),
(76, 10, 23, -0.66, 'optionc'),
(76, 11, 1, 2, 'optionb'),
(76, 11, 2, -0.66, 'optiond'),
(76, 11, 4, -0.66, 'optiona'),
(76, 11, 5, 2, 'optionb'),
(76, 11, 6, 2, 'optionb'),
(76, 11, 7, 2, 'optionb'),
(76, 11, 8, 2, 'optiona'),
(76, 11, 9, 2, 'optionc'),
(76, 11, 10, -0.66, 'optionc'),
(76, 11, 11, 2, 'optiona'),
(76, 11, 12, -0.66, 'optionc'),
(76, 11, 15, -0.66, 'optiona'),
(76, 11, 17, -0.66, 'optionc'),
(76, 11, 18, 2, 'optionb'),
(76, 11, 19, 2, 'optionb'),
(76, 11, 20, 2, 'optiona'),
(76, 11, 21, 2, 'optionc'),
(76, 11, 22, 2, 'optiona'),
(76, 11, 25, -0.66, 'optiona'),
(76, 11, 26, 2, 'optionc'),
(76, 11, 27, 2, 'optione'),
(76, 11, 30, -0.66, 'optionb'),
(76, 11, 33, -0.66, 'optionb'),
(76, 11, 35, 2, 'optiond'),
(76, 11, 37, -0.66, 'optionc'),
(76, 11, 39, -0.66, 'optionb'),
(76, 11, 40, -0.66, 'optione'),
(76, 11, 41, -0.66, 'optionb'),
(76, 11, 42, 2, 'optione'),
(76, 11, 44, 2, 'optionb'),
(76, 11, 45, 2, 'optiona'),
(76, 11, 47, -0.66, 'optionc'),
(76, 11, 48, -0.66, 'optiona'),
(76, 11, 50, -0.66, 'optiona'),
(76, 11, 54, 2, 'optionb'),
(76, 11, 55, -0.66, 'optionc'),
(76, 12, 1, -0.66, 'optiona'),
(76, 12, 3, 2, 'optiond'),
(76, 12, 6, -0.66, 'optiona'),
(76, 12, 7, -0.66, 'optiond'),
(76, 12, 8, 2, 'optionb'),
(76, 12, 9, -0.66, 'optiond'),
(76, 12, 10, 2, 'optiond'),
(76, 12, 11, -0.66, 'optiona'),
(76, 12, 12, 2, 'optionb'),
(76, 12, 15, -0.66, 'optionc'),
(76, 12, 16, 2, 'optionc'),
(76, 12, 17, 2, 'optionc'),
(76, 12, 21, 2, 'optiona'),
(76, 12, 22, 2, 'optiond'),
(76, 12, 26, 2, 'optionb'),
(76, 12, 27, -0.66, 'optiond'),
(76, 12, 31, -0.66, 'optiona'),
(76, 12, 32, -0.66, 'optiona'),
(76, 12, 34, 2, 'optiond'),
(76, 12, 35, -0.66, 'optiona'),
(76, 12, 38, -0.66, 'optionb'),
(76, 12, 41, 2, 'optionb'),
(76, 12, 42, -0.66, 'optiond'),
(76, 12, 43, -0.66, 'optionc'),
(76, 12, 45, 2, 'optiond'),
(76, 12, 46, 2, 'optiond'),
(76, 12, 48, -0.66, 'optionc'),
(76, 12, 50, 2, 'optionb'),
(76, 12, 52, 2, 'optionb'),
(76, 12, 53, 2, 'optiona'),
(76, 12, 54, -0.66, 'optionb'),
(76, 13, 1, -0.66, 'optiond'),
(76, 13, 2, 2, 'optionb'),
(76, 13, 3, -0.66, 'optiond'),
(76, 13, 8, 2, 'optionc'),
(76, 13, 9, -0.66, 'optiona'),
(76, 13, 10, -0.66, 'optiond'),
(76, 13, 11, -0.66, 'optione'),
(76, 13, 24, 2, 'optionc'),
(76, 13, 28, 2, 'optionc'),
(76, 13, 30, 2, 'optiona'),
(76, 13, 32, -0.66, 'optiond'),
(76, 13, 35, -0.66, 'optiond'),
(76, 13, 36, 2, 'optionc'),
(76, 13, 39, 2, 'optiona'),
(76, 13, 40, 2, 'optiond'),
(76, 15, 2, 1, 'optiond'),
(76, 15, 6, 1, 'optiona'),
(76, 15, 7, -0.33, 'optiond'),
(76, 15, 9, 1, 'optionb'),
(76, 15, 11, -0.33, 'optionb'),
(76, 15, 13, 1, 'optionb'),
(76, 15, 14, 1, 'optionc'),
(76, 15, 15, 1, 'optiond'),
(76, 15, 18, 1, 'optionb'),
(76, 15, 19, 1, 'optionc'),
(76, 15, 20, 1, 'optionb'),
(76, 15, 21, 1, 'optiona'),
(76, 15, 22, -0.33, 'optiond'),
(76, 15, 24, 1, 'optiona'),
(76, 15, 25, 1, 'optiond'),
(76, 15, 26, 2, 'optiona'),
(76, 15, 29, 2, 'optiond'),
(76, 15, 30, 2, 'optionb'),
(76, 15, 31, 2, 'optiona'),
(76, 15, 32, 2, 'optiona'),
(76, 15, 33, -0.66, 'optiond'),
(76, 15, 35, -0.66, 'optiond'),
(76, 15, 37, 2, 'optionb'),
(76, 15, 38, 2, 'optionc'),
(76, 15, 39, -0.66, 'optiond'),
(76, 15, 40, 2, 'optiond'),
(76, 15, 43, 2, 'optiona'),
(76, 15, 44, 2, 'optiond'),
(76, 15, 48, -0.66, 'optiond'),
(76, 15, 49, -0.66, 'optiond'),
(76, 15, 52, 2, 'optionc'),
(76, 15, 58, 1, 'optiond'),
(76, 15, 59, 1, 'optiond'),
(76, 15, 64, -0.66, 'optionb'),
(76, 16, 1, 1, 'optionc'),
(76, 16, 3, -0.33, 'optionb'),
(76, 16, 4, 1, 'optiond'),
(76, 16, 6, 1, 'optionb'),
(76, 16, 7, -0.33, 'optionb'),
(76, 16, 8, -0.33, 'optionb'),
(76, 16, 9, -0.33, 'optiona'),
(76, 16, 10, -0.33, 'optiond'),
(76, 16, 12, -0.33, 'optionb'),
(76, 16, 14, 1, 'optiond'),
(76, 16, 16, 1, 'optiond'),
(76, 16, 19, -0.33, 'optionb'),
(76, 16, 20, 1, 'optiona'),
(76, 16, 22, -0.33, 'optiona'),
(76, 16, 29, -0.66, 'optionc'),
(76, 16, 35, 2, 'optionb'),
(76, 16, 37, 2, 'optionb'),
(76, 16, 40, -0.66, 'optionb'),
(76, 16, 43, -0.66, 'optionc'),
(76, 16, 45, 2, 'optiona'),
(76, 16, 48, 2, 'optiona'),
(76, 16, 51, -0.66, 'optionb'),
(76, 17, 2, 1, 'optionb'),
(76, 17, 3, 1, 'optionb'),
(76, 17, 4, -0.33, 'optiona'),
(76, 17, 5, 1, 'optionc'),
(76, 17, 6, -0.33, 'optionc'),
(76, 17, 8, 1, 'optiona'),
(76, 17, 9, -0.33, 'optiona'),
(76, 17, 10, -0.33, 'optionc'),
(76, 17, 11, -0.33, 'optionb'),
(76, 17, 13, -0.33, 'optionc'),
(76, 17, 14, 1, 'optionc'),
(76, 17, 15, 1, 'optionb'),
(76, 17, 18, 1, 'optionb'),
(76, 17, 19, 1, 'optionb'),
(76, 17, 20, -0.33, 'optionb'),
(76, 17, 21, -0.33, 'optiona'),
(76, 17, 22, 1, 'optionb'),
(76, 17, 23, 1, 'optiond'),
(76, 17, 25, 1, 'optionb'),
(76, 17, 26, 2, 'optionc'),
(76, 17, 28, 2, 'optiond'),
(76, 17, 30, 2, 'optiona'),
(76, 17, 32, 2, 'optiona'),
(76, 17, 34, 2, 'optiond'),
(76, 17, 35, 2, 'optionb'),
(76, 17, 38, -0.66, 'optiona'),
(76, 17, 40, 2, 'optionb'),
(76, 17, 41, 2, 'optionc'),
(76, 17, 42, 2, 'optionb'),
(76, 17, 45, -0.66, 'optiona'),
(76, 17, 48, -0.66, 'optionc'),
(76, 17, 50, -0.66, 'optiona'),
(76, 17, 61, 2, 'optionb'),
(76, 18, 2, 1, 'optiond'),
(76, 18, 3, 1, 'optionb'),
(76, 18, 4, 1, 'optiona'),
(76, 18, 7, 1, 'optionb'),
(76, 18, 8, -0.33, 'optiona'),
(76, 18, 11, -0.33, 'optionc'),
(76, 18, 12, 1, 'optiona'),
(76, 18, 13, -0.33, 'optionb'),
(76, 18, 14, 1, 'optionc'),
(76, 18, 17, 1, 'optionb'),
(76, 18, 18, -0.33, 'optionc'),
(76, 18, 19, 1, 'optionc'),
(76, 18, 20, -0.33, 'optionc'),
(76, 18, 21, 1, 'optiond'),
(76, 18, 22, 1, 'optiond'),
(76, 18, 23, -0.33, 'optionc'),
(76, 18, 24, 1, 'optionc'),
(76, 18, 25, 1, 'optionc'),
(76, 18, 26, 2, 'optionb'),
(76, 18, 28, 2, 'optiona'),
(76, 18, 29, 2, 'optiond'),
(76, 18, 33, 2, 'optiond'),
(76, 18, 42, 2, 'optionb'),
(76, 18, 43, -0.66, 'optionc'),
(76, 18, 45, -0.66, 'optiond'),
(76, 18, 47, 2, 'optiond'),
(76, 18, 48, -0.66, 'optionc'),
(76, 18, 49, -0.66, 'optionb'),
(76, 18, 50, 2, 'optionc'),
(76, 18, 51, -0.66, 'optiond'),
(76, 18, 54, -0.66, 'optionc'),
(76, 18, 56, 1, 'optione'),
(76, 18, 61, 2, 'optionb'),
(76, 18, 65, 2, 'optiond'),
(77, 8, 1, 1, 'optione'),
(77, 8, 2, -0.33, 'optiond'),
(77, 8, 3, -0.33, 'optionc'),
(77, 8, 4, 1, 'optiond'),
(77, 8, 5, -0.33, 'optiona'),
(77, 8, 6, 1, 'optiond'),
(77, 8, 7, 1, 'optionb'),
(77, 8, 8, -0.33, 'optionc'),
(77, 8, 9, 1, 'optiond'),
(77, 8, 10, 1, 'optionc'),
(77, 8, 11, 1, 'optiond'),
(77, 8, 12, 1, 'optiona'),
(77, 8, 13, 1, 'optionb'),
(77, 8, 14, 1, 'optiona'),
(77, 8, 16, 1, 'optionc'),
(77, 8, 17, -0.33, 'optiond'),
(77, 8, 18, -0.33, 'optionb'),
(77, 8, 19, 1, 'optiona'),
(77, 8, 26, 1, 'optiond'),
(77, 8, 27, 1, 'optiond'),
(77, 8, 30, 1, 'optionc'),
(77, 8, 31, 1, 'optionc'),
(77, 8, 32, 1, 'optionb'),
(77, 8, 33, 1, 'optiona'),
(77, 8, 35, 1, 'optionc'),
(77, 8, 36, 1, 'optionc'),
(77, 8, 37, 1, 'optiond'),
(77, 8, 38, 1, 'optionb'),
(77, 8, 39, 1, 'optiond'),
(77, 8, 40, -0.33, 'optiona'),
(77, 8, 41, 1, 'optiona'),
(77, 8, 42, 1, 'optiond'),
(77, 8, 43, 1, 'optionb'),
(77, 8, 44, -0.33, 'optiona'),
(77, 8, 45, 1, 'optiond'),
(77, 16, 1, -0.33, 'optiona'),
(77, 16, 5, -0.33, 'optionb'),
(77, 16, 9, -0.33, 'optiona'),
(77, 16, 10, 1, 'optionc'),
(77, 16, 13, 1, 'optionb'),
(77, 16, 14, 1, 'optiond'),
(77, 16, 15, -0.33, 'optiond'),
(77, 16, 16, 1, 'optiond'),
(77, 16, 17, -0.33, 'optionb'),
(77, 16, 19, -0.33, 'optionb'),
(77, 16, 21, 1, 'optiond'),
(77, 16, 22, 1, 'optionb'),
(77, 16, 23, -0.33, 'optionb'),
(77, 16, 25, -0.33, 'optiond'),
(77, 16, 28, -0.66, 'optiona'),
(77, 16, 30, 2, 'optiond'),
(77, 16, 32, -0.66, 'optionb'),
(77, 16, 33, 2, 'optiond'),
(77, 16, 34, -0.66, 'optionc'),
(77, 16, 45, 2, 'optiona'),
(77, 16, 46, 2, 'optionc'),
(77, 16, 59, 1, 'optionc'),
(77, 16, 61, -0.66, 'optionc'),
(77, 17, 1, -0.33, 'optionb'),
(77, 17, 2, 1, 'optionb'),
(77, 17, 3, 1, 'optionb'),
(77, 17, 4, -0.33, 'optionb'),
(77, 17, 5, 1, 'optionc'),
(77, 17, 6, 1, 'optiona'),
(77, 17, 7, -0.33, 'optiond'),
(77, 17, 8, 1, 'optiona'),
(77, 17, 9, -0.33, 'optiona'),
(77, 17, 14, 1, 'optionc'),
(77, 17, 15, -0.33, 'optiond'),
(77, 17, 19, 1, 'optionb'),
(77, 17, 22, -0.33, 'optiona'),
(77, 17, 23, 1, 'optiond'),
(77, 17, 25, 1, 'optionb'),
(77, 17, 26, 2, 'optionc'),
(77, 17, 30, 2, 'optiona'),
(77, 17, 31, 2, 'optiond'),
(77, 17, 32, 2, 'optiona'),
(77, 17, 33, 2, 'optiona'),
(77, 17, 34, 2, 'optiond'),
(77, 17, 35, -0.66, 'optiond'),
(77, 17, 37, 2, 'optionc'),
(77, 17, 38, -0.66, 'optiond'),
(77, 17, 41, 2, 'optionc'),
(77, 17, 42, 2, 'optionb'),
(77, 17, 45, 2, 'optionb'),
(77, 17, 47, -0.66, 'optionb'),
(77, 17, 48, -0.66, 'optionc'),
(77, 17, 50, -0.66, 'optionb'),
(77, 17, 51, 2, 'optionc'),
(77, 17, 52, 2, 'optiond'),
(77, 17, 53, 2, 'optiona'),
(77, 17, 54, 2, 'optiond'),
(77, 17, 57, 1, 'optionb'),
(77, 17, 58, 1, 'optionc'),
(77, 17, 59, 1, 'optiond'),
(77, 17, 60, 1, 'optiond'),
(77, 17, 61, 2, 'optionb'),
(77, 17, 62, 2, 'optionc'),
(77, 17, 63, -0.66, 'optionc'),
(77, 17, 64, 2, 'optionb'),
(77, 17, 65, 2, 'optiond'),
(77, 18, 1, 1, 'optiona'),
(77, 18, 2, 1, 'optiond'),
(77, 18, 3, 1, 'optionb'),
(77, 18, 4, 1, 'optiona'),
(77, 18, 6, 1, 'optionc'),
(77, 18, 7, 1, 'optionb'),
(77, 18, 8, -0.33, 'optionc'),
(77, 18, 9, -0.33, 'optiona'),
(77, 18, 10, -0.33, 'optiond'),
(77, 18, 11, -0.33, 'optiona'),
(77, 18, 12, 1, 'optiona'),
(77, 18, 15, 1, 'optionc'),
(77, 18, 16, -0.33, 'optionb'),
(77, 18, 17, 1, 'optionb'),
(77, 18, 19, -0.33, 'optionb'),
(77, 18, 20, -0.33, 'optiona'),
(77, 18, 21, 1, 'optiond'),
(77, 18, 22, 1, 'optiond'),
(77, 18, 23, 1, 'optiond'),
(77, 18, 24, 1, 'optionc'),
(77, 18, 25, 1, 'optionc'),
(77, 18, 26, 2, 'optionb'),
(77, 18, 27, -0.66, 'optionc'),
(77, 18, 31, 2, 'optiona'),
(77, 18, 32, 2, 'optionb'),
(77, 18, 34, 2, 'optiona'),
(77, 18, 37, -0.66, 'optionb'),
(77, 18, 38, 2, 'optionb'),
(77, 18, 45, -0.66, 'optionc'),
(77, 18, 47, 2, 'optiond'),
(77, 18, 48, -0.66, 'optiona'),
(77, 18, 52, 2, 'optiona'),
(77, 18, 53, -0.66, 'optiond'),
(77, 18, 56, 1, 'optione'),
(77, 18, 57, -0.33, 'optiona'),
(77, 18, 58, 1, 'optionc'),
(77, 18, 59, 1, 'optionc'),
(77, 18, 60, 1, 'optiona'),
(77, 18, 61, 2, 'optionb'),
(77, 18, 64, 2, 'optionb'),
(77, 18, 65, 2, 'optiond'),
(78, 4, 1, 1, 'optiona'),
(78, 4, 2, 1, 'optiond'),
(78, 4, 3, 1, 'optionc'),
(78, 4, 4, 1, 'optionc'),
(78, 4, 5, -0.33, 'optiond'),
(78, 4, 6, -0.33, 'optionc'),
(78, 4, 8, -0.33, 'optiona'),
(78, 4, 9, 1, 'optionb'),
(78, 4, 10, 1, 'optionc'),
(78, 4, 12, 1, 'optionc'),
(78, 4, 13, -0.33, 'optionc'),
(78, 4, 14, 1, 'optiond'),
(78, 4, 15, 1, 'optiona'),
(78, 4, 16, 1, 'optiona'),
(78, 4, 17, 1, 'optiond'),
(78, 4, 18, 1, 'optionc'),
(78, 4, 21, 2, 'optiond'),
(78, 4, 23, -0.66, 'optiona'),
(78, 4, 24, 2, 'optionc'),
(78, 4, 26, 2, 'optionc'),
(78, 4, 27, 2, 'optionc'),
(78, 4, 28, 2, 'optiond'),
(78, 4, 29, -0.66, 'optionc'),
(78, 4, 30, 2, 'optionc'),
(78, 4, 31, -0.66, 'optiond'),
(78, 4, 32, 2, 'optiond'),
(78, 4, 33, 2, 'optionc'),
(78, 4, 34, 2, 'optiona'),
(78, 4, 36, 2, 'optionc'),
(78, 4, 37, 2, 'optiond'),
(78, 4, 38, -0.66, 'optionc'),
(78, 4, 42, 4, 'optionc'),
(78, 4, 43, 4, 'optionc'),
(78, 4, 47, 4, 'optionc'),
(78, 4, 48, -1.33, 'optionc'),
(78, 4, 49, 4, 'optiona'),
(78, 4, 50, 4, 'optionc'),
(78, 7, 1, 1, 'optionc'),
(78, 7, 2, 1, 'optiond'),
(78, 7, 3, -0.33, 'optionc'),
(78, 7, 4, 1, 'optiond'),
(78, 7, 5, -0.33, 'optionc'),
(78, 7, 6, 1, 'optionb'),
(78, 7, 7, -0.33, 'optiond'),
(78, 7, 10, -0.33, 'optiona'),
(78, 7, 12, -0.33, 'optionc'),
(78, 7, 14, 1, 'optionc'),
(78, 7, 15, -0.33, 'optiona'),
(78, 7, 16, 1, 'optiona'),
(78, 7, 19, 1, 'optiond'),
(78, 7, 20, 1, 'optiona'),
(78, 7, 21, 1, 'optiond'),
(78, 7, 23, 1, 'optiond'),
(78, 7, 24, 1, 'optiona'),
(78, 7, 25, 1, 'optionc'),
(78, 7, 26, 2, 'optiona'),
(78, 7, 28, 2, 'optiona'),
(78, 7, 29, -0.66, 'optiona'),
(78, 7, 30, 2, 'optionc'),
(78, 7, 31, -0.66, 'optionc'),
(78, 7, 33, 2, 'optiond'),
(78, 7, 35, -0.66, 'optione'),
(78, 7, 36, -0.66, 'optione'),
(78, 7, 37, -0.66, 'optionc'),
(78, 7, 39, 2, 'optione'),
(78, 7, 40, 2, 'optionb'),
(78, 7, 41, -0.66, 'optiona'),
(78, 7, 42, 2, 'optionc'),
(78, 7, 43, 2, 'optionb'),
(78, 7, 44, 2, 'optionb'),
(78, 7, 47, -0.66, 'optiona'),
(78, 7, 48, 2, 'optionb'),
(78, 7, 50, 2, 'optionc'),
(78, 7, 52, 2, 'optiona'),
(78, 7, 54, 2, 'optiond'),
(78, 7, 55, -0.66, 'optiond'),
(78, 7, 56, -0.33, 'optionc'),
(78, 7, 57, -0.33, 'optiond'),
(78, 7, 58, -0.33, 'optiona'),
(78, 7, 59, 1, 'optiond'),
(78, 7, 60, 1, 'optionc'),
(78, 7, 61, 2, 'optionb'),
(78, 7, 62, -0.66, 'optiona'),
(78, 7, 63, 2, 'optiond'),
(78, 7, 65, -0.66, 'optiona'),
(78, 8, 2, -0.33, 'optionb'),
(78, 8, 3, -0.33, 'optiona'),
(78, 8, 4, 1, 'optiond'),
(78, 8, 5, 1, 'optionc'),
(78, 8, 6, 1, 'optiond'),
(78, 8, 11, 1, 'optiond'),
(78, 8, 12, 1, 'optiona'),
(78, 8, 13, -0.33, 'optiona'),
(78, 8, 14, -0.33, 'optiond'),
(78, 8, 15, -0.33, 'optiona'),
(78, 8, 16, 1, 'optionc'),
(78, 8, 17, -0.33, 'optionb'),
(78, 8, 18, -0.33, 'optiona'),
(78, 8, 19, 1, 'optiona'),
(78, 8, 27, -0.33, 'optione'),
(78, 8, 29, 1, 'optionb'),
(78, 8, 30, 1, 'optionc'),
(78, 8, 31, 1, 'optionc'),
(78, 8, 32, -0.33, 'optiona'),
(78, 8, 33, -0.33, 'optiond'),
(78, 8, 34, -0.33, 'optiona'),
(78, 8, 35, -0.33, 'optiona'),
(78, 8, 37, 1, 'optiond'),
(78, 8, 38, -0.33, 'optionc'),
(78, 8, 39, 1, 'optiond'),
(78, 8, 40, -0.33, 'optiond'),
(78, 8, 42, -0.33, 'optionb'),
(78, 8, 44, 1, 'optionb'),
(78, 8, 45, -0.33, 'optionc'),
(78, 10, 1, 2, 'optione'),
(78, 10, 2, 2, 'optionb'),
(78, 10, 3, -0.66, 'optionb'),
(78, 10, 5, -0.66, 'optiona'),
(78, 10, 6, 2, 'optionb'),
(78, 10, 8, -0.66, 'optiond'),
(78, 10, 9, 2, 'optionc'),
(78, 10, 10, -0.66, 'optiona'),
(78, 10, 12, 2, 'optionb'),
(78, 10, 13, -0.66, 'optiond'),
(78, 10, 14, 2, 'optionb'),
(78, 10, 16, -0.66, 'optionb'),
(78, 10, 17, -0.66, 'optiona'),
(78, 10, 18, -0.66, 'optionb'),
(78, 10, 21, -0.66, 'optiona'),
(78, 10, 22, 2, 'optionb'),
(78, 10, 23, 2, 'optiond'),
(78, 11, 1, -0.66, 'optiond'),
(78, 11, 2, -0.66, 'optiond'),
(78, 11, 3, -0.66, 'optionc'),
(78, 11, 4, -0.66, 'optionb'),
(78, 11, 5, -0.66, 'optiond'),
(78, 11, 7, -0.66, 'optiona'),
(78, 11, 8, 2, 'optiona'),
(78, 11, 9, 2, 'optionc'),
(78, 11, 10, -0.66, 'optionc'),
(78, 11, 11, 2, 'optiona'),
(78, 11, 12, -0.66, 'optionc'),
(78, 11, 14, -0.66, 'optionb'),
(78, 11, 15, -0.66, 'optiona'),
(78, 11, 17, -0.66, 'optiond'),
(78, 11, 18, 2, 'optionb'),
(78, 11, 19, 2, 'optionb'),
(78, 11, 20, 2, 'optiona'),
(78, 11, 24, 2, 'optiona'),
(78, 11, 26, -0.66, 'optiona'),
(78, 11, 27, 2, 'optione'),
(78, 11, 29, 2, 'optiond'),
(78, 11, 30, 2, 'optiond'),
(78, 11, 31, -0.66, 'optionc'),
(78, 11, 33, -0.66, 'optione'),
(78, 11, 34, -0.66, 'optiona'),
(78, 11, 35, 2, 'optiond'),
(78, 11, 36, 2, 'optione'),
(78, 11, 37, -0.66, 'optiond'),
(78, 11, 38, 2, 'optiona'),
(78, 11, 40, 2, 'optiond'),
(78, 11, 41, 2, 'optionc'),
(78, 11, 42, -0.66, 'optiond'),
(78, 11, 43, -0.66, 'optionb'),
(78, 11, 47, -0.66, 'optionc'),
(78, 11, 48, -0.66, 'optiona'),
(78, 11, 49, 2, 'optiond'),
(78, 11, 50, -0.66, 'optiond'),
(78, 11, 51, -0.66, 'optionc'),
(78, 11, 52, -0.66, 'optionc'),
(78, 11, 53, -0.66, 'optione'),
(78, 11, 54, 2, 'optionb'),
(78, 11, 55, -0.66, 'optiona'),
(78, 11, 56, 2, 'optione'),
(78, 11, 57, -0.66, 'optiona'),
(78, 11, 58, -0.66, 'optionb'),
(78, 11, 60, -0.66, 'optione'),
(78, 12, 1, -0.66, 'optionb'),
(78, 12, 2, 2, 'optionc'),
(78, 12, 3, -0.66, 'optiona'),
(78, 12, 6, -0.66, 'optiona'),
(78, 12, 7, -0.66, 'optiond'),
(78, 12, 8, 2, 'optionb'),
(78, 12, 9, -0.66, 'optiond'),
(78, 12, 11, 2, 'optionb'),
(78, 12, 12, -0.66, 'optiona'),
(78, 12, 13, -0.66, 'optiona'),
(78, 12, 14, -0.66, 'optiond'),
(78, 12, 15, -0.66, 'optionc'),
(78, 12, 17, 2, 'optionc'),
(78, 12, 18, 2, 'optiond'),
(78, 12, 19, -0.66, 'optionc'),
(78, 12, 20, 2, 'optionb'),
(78, 12, 23, -0.66, 'optiona'),
(78, 12, 24, -0.66, 'optiond'),
(78, 12, 26, 2, 'optionb'),
(78, 12, 27, -0.66, 'optionb'),
(78, 12, 28, 2, 'optiond'),
(78, 12, 31, -0.66, 'optione'),
(78, 12, 35, -0.66, 'optiona'),
(78, 12, 37, -0.66, 'optionb'),
(78, 12, 38, 2, 'optionc'),
(78, 12, 39, -0.66, 'optione'),
(78, 12, 40, -0.66, 'optionc'),
(78, 12, 42, -0.66, 'optionb'),
(78, 12, 43, 2, 'optiond'),
(78, 12, 45, 2, 'optiond'),
(78, 12, 46, -0.66, 'optiona'),
(78, 12, 47, -0.66, 'optiona'),
(78, 12, 50, 2, 'optionb'),
(78, 12, 51, 2, 'optionc'),
(78, 12, 52, 2, 'optionb'),
(78, 15, 2, 1, 'optiond'),
(78, 15, 3, -0.33, 'optiond'),
(78, 15, 5, 1, 'optionb'),
(78, 15, 6, 1, 'optiona'),
(78, 15, 7, -0.33, 'optiond'),
(78, 15, 9, 1, 'optionb'),
(78, 15, 11, 1, 'optiond'),
(78, 15, 13, 1, 'optionb'),
(78, 15, 14, 1, 'optionc'),
(78, 15, 15, -0.33, 'optiona'),
(78, 15, 16, -0.33, 'optionc'),
(78, 15, 17, -0.33, 'optionc'),
(78, 15, 18, 1, 'optionb'),
(78, 15, 19, 1, 'optionc'),
(78, 15, 20, 1, 'optionb'),
(78, 15, 21, 1, 'optiona'),
(78, 15, 22, 1, 'optionb'),
(78, 15, 24, 1, 'optiona'),
(78, 15, 25, 1, 'optiond'),
(78, 15, 27, 2, 'optiona'),
(78, 15, 28, 2, 'optiond'),
(78, 15, 29, 2, 'optiond'),
(78, 15, 30, -0.66, 'optionc'),
(78, 15, 31, -0.66, 'optiond'),
(78, 15, 33, -0.66, 'optionb'),
(78, 15, 35, 2, 'optionc'),
(78, 15, 37, -0.66, 'optiona'),
(78, 15, 39, 2, 'optionb'),
(78, 15, 40, -0.66, 'optiona'),
(78, 15, 41, 2, 'optionc'),
(78, 15, 42, 2, 'optiona'),
(78, 15, 43, 2, 'optiona'),
(78, 15, 44, -0.66, 'optionc'),
(78, 15, 47, -0.66, 'optionc'),
(78, 15, 48, 2, 'optionc'),
(78, 15, 52, 2, 'optionc'),
(78, 15, 53, 2, 'optionc'),
(78, 15, 54, -0.66, 'optiond'),
(78, 15, 55, -0.66, 'optiona'),
(78, 15, 56, -0.33, 'optionb'),
(78, 15, 57, -0.33, 'optionc'),
(78, 15, 58, 1, 'optiond'),
(78, 15, 59, 1, 'optiond'),
(78, 15, 60, 1, 'optiona'),
(78, 15, 61, -0.66, 'optiona'),
(78, 15, 62, 2, 'optionb'),
(78, 15, 64, 2, 'optiond'),
(78, 16, 3, -0.33, 'optionb'),
(78, 16, 4, 1, 'optiond'),
(78, 16, 9, -0.33, 'optiona'),
(78, 16, 10, -0.33, 'optionb'),
(78, 16, 12, -0.33, 'optionb'),
(78, 16, 14, 1, 'optiond'),
(78, 16, 15, -0.33, 'optiona'),
(78, 16, 16, 1, 'optiond'),
(78, 16, 18, -0.33, 'optiona'),
(78, 16, 19, -0.33, 'optionb'),
(78, 16, 20, 1, 'optiona'),
(78, 16, 21, 1, 'optiond'),
(78, 16, 22, 1, 'optionb'),
(78, 16, 26, -0.66, 'optiond'),
(78, 16, 32, -0.66, 'optionb'),
(78, 16, 33, 2, 'optiond'),
(78, 16, 35, 2, 'optionb'),
(78, 16, 37, 2, 'optionb'),
(78, 16, 40, -0.66, 'optionb'),
(78, 16, 42, -0.66, 'optionb'),
(78, 16, 43, -0.66, 'optionc'),
(78, 16, 44, -0.66, 'optionb'),
(78, 16, 45, -0.66, 'optiond'),
(78, 16, 50, 2, 'optiona'),
(78, 16, 51, -0.66, 'optionb'),
(78, 16, 56, 1, 'optiond'),
(78, 16, 57, 1, 'optionc'),
(78, 16, 58, 1, 'optiona'),
(78, 16, 59, -0.33, 'optiond'),
(78, 16, 60, -0.33, 'optionb'),
(78, 16, 61, 2, 'optionb'),
(78, 16, 63, -0.66, 'optionb'),
(78, 16, 64, 2, 'optionb'),
(78, 17, 1, 1, 'optiona'),
(78, 17, 2, 1, 'optionb'),
(78, 17, 3, -0.33, 'optiond'),
(78, 17, 5, -0.33, 'optionb'),
(78, 17, 7, 1, 'optionc'),
(78, 17, 8, 1, 'optiona'),
(78, 17, 10, 1, 'optiona'),
(78, 17, 11, -0.33, 'optionc'),
(78, 17, 12, 1, 'optiona'),
(78, 17, 13, -0.33, 'optiona'),
(78, 17, 14, 1, 'optionc'),
(78, 17, 17, -0.33, 'optionb'),
(78, 17, 18, -0.33, 'optiond'),
(78, 17, 19, -0.33, 'optionc'),
(78, 17, 20, -0.33, 'optionb'),
(78, 17, 22, 1, 'optionb'),
(78, 17, 23, 1, 'optiond'),
(78, 17, 24, -0.33, 'optiona'),
(78, 17, 25, 1, 'optionb'),
(78, 17, 26, -0.66, 'optionb'),
(78, 17, 28, -0.66, 'optiona'),
(78, 17, 29, -0.66, 'optionb'),
(78, 17, 30, -0.66, 'optiond'),
(78, 17, 31, -0.66, 'optionb'),
(78, 17, 33, 2, 'optiona'),
(78, 17, 34, 2, 'optiond'),
(78, 17, 35, 2, 'optionb'),
(78, 17, 38, -0.66, 'optiona'),
(78, 17, 41, 2, 'optionc'),
(78, 17, 45, 2, 'optionb'),
(78, 17, 46, -0.66, 'optiond'),
(78, 17, 47, -0.66, 'optionc'),
(78, 17, 50, 2, 'optiond'),
(78, 17, 51, -0.66, 'optiona'),
(78, 17, 52, 2, 'optiond'),
(78, 17, 53, 2, 'optiona'),
(78, 17, 54, -0.66, 'optiona'),
(78, 17, 56, 1, 'optiona'),
(78, 17, 57, -0.33, 'optionc'),
(78, 17, 58, -0.33, 'optionb'),
(78, 17, 59, -0.33, 'optiona'),
(78, 17, 60, 1, 'optiond'),
(78, 17, 61, -0.66, 'optionc'),
(78, 17, 63, -0.66, 'optionb'),
(78, 17, 65, 2, 'optiond'),
(78, 18, 2, -0.33, 'optionc'),
(78, 18, 3, 1, 'optionb'),
(78, 18, 4, 1, 'optiona'),
(78, 18, 6, 1, 'optionc'),
(78, 18, 7, 1, 'optionb'),
(78, 18, 8, 1, 'optionb'),
(78, 18, 9, -0.33, 'optiona'),
(78, 18, 10, -0.33, 'optionc'),
(78, 18, 11, 1, 'optionb'),
(78, 18, 12, 1, 'optiona'),
(78, 18, 13, 1, 'optiond'),
(78, 18, 14, 1, 'optionc'),
(78, 18, 15, 1, 'optionc'),
(78, 18, 16, 1, 'optionc'),
(78, 18, 17, 1, 'optionb'),
(78, 18, 18, -0.33, 'optionb'),
(78, 18, 19, -0.33, 'optiona'),
(78, 18, 21, -0.33, 'optionc'),
(78, 18, 22, 1, 'optiond'),
(78, 18, 23, -0.33, 'optiona'),
(78, 18, 24, 1, 'optionc'),
(78, 18, 25, -0.33, 'optiona'),
(78, 18, 26, -0.66, 'optiond'),
(78, 18, 27, -0.66, 'optionc'),
(78, 18, 29, -0.66, 'optiona'),
(78, 18, 31, -0.66, 'optionc'),
(78, 18, 32, -0.66, 'optionc'),
(78, 18, 34, 2, 'optiona'),
(78, 18, 35, -0.66, 'optionb'),
(78, 18, 36, 2, 'optiona'),
(78, 18, 37, -0.66, 'optiona'),
(78, 18, 38, -0.66, 'optiona'),
(78, 18, 42, 2, 'optionb'),
(78, 18, 45, -0.66, 'optionc'),
(78, 18, 49, 2, 'optionc'),
(78, 18, 51, -0.66, 'optionc'),
(78, 18, 54, 2, 'optiona'),
(78, 18, 55, 2, 'optiond'),
(78, 18, 56, -0.33, 'optiond'),
(78, 18, 57, -0.33, 'optiona'),
(78, 18, 58, 1, 'optionc'),
(78, 18, 59, 1, 'optionc'),
(78, 18, 60, 1, 'optiona'),
(78, 18, 61, 2, 'optionb'),
(78, 18, 62, 2, 'optiond'),
(78, 18, 63, -0.66, 'optionb'),
(78, 18, 64, 2, 'optionb'),
(78, 18, 65, -0.66, 'optionb'),
(79, 7, 1, 1, 'optionc'),
(79, 7, 2, 1, 'optiond'),
(79, 7, 3, -0.33, 'optiond'),
(79, 7, 4, 1, 'optiond'),
(79, 7, 5, -0.33, 'optionc'),
(79, 7, 6, 1, 'optionb'),
(79, 7, 8, 1, 'optionb'),
(79, 7, 9, -0.33, 'optiond'),
(79, 7, 10, 1, 'optionc'),
(79, 7, 11, 1, 'optiona'),
(79, 7, 14, -0.33, 'optiona'),
(79, 7, 15, -0.33, 'optiona'),
(79, 7, 16, 1, 'optiona'),
(79, 7, 17, 1, 'optionc'),
(79, 7, 18, 1, 'optiona'),
(79, 7, 19, 1, 'optiond'),
(79, 7, 20, 1, 'optiona'),
(79, 7, 21, -0.33, 'optionc'),
(79, 7, 22, -0.33, 'optiona'),
(79, 7, 24, 1, 'optiona'),
(79, 7, 25, -0.33, 'optionb'),
(79, 7, 26, 2, 'optiona'),
(79, 7, 29, 2, 'optiond'),
(79, 7, 31, 2, 'optiona'),
(79, 7, 34, -0.66, 'optiond'),
(79, 7, 35, 2, 'optionc'),
(79, 7, 36, 2, 'optionc'),
(79, 7, 39, -0.66, 'optionb'),
(79, 7, 41, 2, 'optionc'),
(79, 7, 42, 2, 'optionc'),
(79, 7, 43, 2, 'optionb'),
(79, 7, 44, 2, 'optionb'),
(79, 7, 45, 2, 'optiond'),
(79, 7, 47, 2, 'optionb'),
(79, 7, 48, -0.66, 'optiond'),
(79, 7, 52, 2, 'optiona'),
(79, 7, 53, 2, 'optionb'),
(79, 7, 54, 2, 'optiond'),
(79, 7, 55, 2, 'optionb'),
(79, 7, 63, 2, 'optiond'),
(79, 8, 1, 1, 'optione'),
(79, 8, 2, -0.33, 'optionb'),
(79, 8, 3, 1, 'optionb'),
(79, 8, 4, 1, 'optiond'),
(79, 8, 5, -0.33, 'optiona'),
(79, 8, 6, 1, 'optiond'),
(79, 8, 7, -0.33, 'optiona'),
(79, 8, 8, 1, 'optionb'),
(79, 8, 9, -0.33, 'optionc'),
(79, 8, 10, 1, 'optionc'),
(79, 8, 11, 1, 'optiond'),
(79, 8, 12, -0.33, 'optionb'),
(79, 8, 13, 1, 'optionb'),
(79, 8, 14, 1, 'optiona'),
(79, 8, 15, 1, 'optionc'),
(79, 8, 16, 1, 'optionc'),
(79, 8, 17, -0.33, 'optiond'),
(79, 8, 18, 1, 'optione'),
(79, 8, 19, -0.33, 'optionc'),
(79, 8, 25, 1, 'optiond'),
(79, 8, 27, -0.33, 'optionc'),
(79, 8, 29, 1, 'optionb'),
(79, 8, 30, 1, 'optionc'),
(79, 8, 31, -0.33, 'optiond'),
(79, 8, 32, 1, 'optionb'),
(79, 8, 33, -0.33, 'optiond'),
(79, 8, 34, 1, 'optiond'),
(79, 8, 35, 1, 'optionc'),
(79, 8, 36, 1, 'optionc'),
(79, 8, 37, -0.33, 'optionb'),
(79, 8, 38, 1, 'optionb'),
(79, 8, 39, -0.33, 'optionc'),
(79, 8, 40, -0.33, 'optiona'),
(79, 8, 41, 1, 'optiona'),
(79, 8, 42, 1, 'optiond'),
(79, 8, 43, 1, 'optionb'),
(79, 8, 44, -0.33, 'optiona'),
(79, 8, 45, -0.33, 'optiona'),
(79, 9, 1, -0.66, 'optiona'),
(79, 9, 2, 2, 'optionb'),
(79, 9, 3, -0.66, 'optionb'),
(79, 9, 4, 2, 'optiona'),
(79, 9, 5, -0.66, 'optionc'),
(79, 9, 6, -0.66, 'optiona'),
(79, 9, 7, -0.66, 'optiona'),
(79, 9, 8, 2, 'optionb'),
(79, 9, 9, -0.66, 'optiona'),
(79, 9, 10, -0.66, 'optiona'),
(79, 9, 17, -0.66, 'optiona'),
(79, 9, 19, 2, 'optionc'),
(79, 9, 21, -0.66, 'optiona'),
(79, 9, 25, -0.66, 'optiona'),
(79, 9, 26, 2, 'optionc'),
(79, 9, 28, 2, 'optionb'),
(79, 9, 29, 2, 'optionc'),
(79, 9, 30, 2, 'optionb'),
(79, 9, 31, -0.66, 'optiond'),
(79, 9, 32, 2, 'optionb'),
(79, 9, 34, 2, 'optiond'),
(79, 9, 35, 2, 'optionb'),
(79, 9, 36, -0.66, 'optiond'),
(79, 9, 37, 2, 'optionb'),
(79, 9, 39, 2, 'optiond'),
(79, 9, 50, 2, 'optionb'),
(79, 9, 51, -0.66, 'optiona'),
(79, 10, 1, 2, 'optione'),
(79, 10, 2, 2, 'optionb'),
(79, 10, 3, -0.66, 'optiona'),
(79, 10, 4, 2, 'optionc'),
(79, 10, 5, 2, 'optionb'),
(79, 10, 8, -0.66, 'optiond'),
(79, 10, 9, 2, 'optionc'),
(79, 10, 11, 2, 'optionc'),
(79, 10, 12, 2, 'optionb'),
(79, 10, 13, 2, 'optionc'),
(79, 10, 15, -0.66, 'optiona'),
(79, 10, 16, 2, 'optiona'),
(79, 10, 17, 2, 'optionb'),
(79, 10, 19, -0.66, 'optiond'),
(79, 10, 20, 2, 'optionc'),
(79, 10, 21, 2, 'optionb'),
(79, 10, 22, 2, 'optionb'),
(79, 10, 23, 2, 'optiond'),
(79, 11, 2, 2, 'optionc'),
(79, 11, 3, -0.66, 'optionb'),
(79, 11, 4, 2, 'optiond'),
(79, 11, 5, 2, 'optionb'),
(79, 11, 6, 2, 'optionb'),
(79, 11, 7, 2, 'optionb'),
(79, 11, 8, 2, 'optiona'),
(79, 11, 9, 2, 'optionc'),
(79, 11, 10, 2, 'optiona'),
(79, 11, 13, 2, 'optionb'),
(79, 11, 14, 2, 'optionc'),
(79, 11, 15, 2, 'optionc'),
(79, 11, 17, 2, 'optiona'),
(79, 11, 18, 2, 'optionb'),
(79, 11, 20, 2, 'optiona'),
(79, 11, 21, -0.66, 'optiond'),
(79, 11, 22, 2, 'optiona'),
(79, 11, 23, 2, 'optionc'),
(79, 11, 24, 2, 'optiona'),
(79, 11, 25, 2, 'optionb'),
(79, 11, 27, 2, 'optione'),
(79, 11, 28, -0.66, 'optiond'),
(79, 11, 29, 2, 'optiond'),
(79, 11, 30, 2, 'optiond'),
(79, 11, 32, -0.66, 'optionb'),
(79, 11, 33, 2, 'optiond'),
(79, 11, 35, 2, 'optiond'),
(79, 11, 36, 2, 'optione'),
(79, 11, 38, 2, 'optiona'),
(79, 11, 39, 2, 'optiona'),
(79, 11, 42, 2, 'optione'),
(79, 11, 46, 2, 'optiona'),
(79, 11, 49, 2, 'optiond'),
(79, 11, 51, 2, 'optiond'),
(79, 11, 52, -0.66, 'optionc'),
(79, 11, 53, 2, 'optionc'),
(79, 11, 55, -0.66, 'optione'),
(79, 11, 56, 2, 'optione'),
(79, 11, 58, 2, 'optione'),
(79, 12, 1, 2, 'optionc'),
(79, 12, 2, 2, 'optionc'),
(79, 12, 3, -0.66, 'optiona'),
(79, 12, 5, 2, 'optiona'),
(79, 12, 6, -0.66, 'optionb'),
(79, 12, 7, 2, 'optionb'),
(79, 12, 12, -0.66, 'optiona'),
(79, 12, 13, -0.66, 'optionc'),
(79, 12, 14, 2, 'optiona'),
(79, 12, 15, 2, 'optiond'),
(79, 12, 26, 2, 'optionb'),
(79, 12, 27, -0.66, 'optiond'),
(79, 12, 28, 2, 'optiond'),
(79, 12, 29, 2, 'optiona'),
(79, 12, 31, -0.66, 'optiond'),
(79, 12, 32, 2, 'optionc'),
(79, 12, 33, 2, 'optiond'),
(79, 12, 34, 2, 'optiond'),
(79, 12, 35, -0.66, 'optionc'),
(79, 12, 38, 2, 'optionc'),
(79, 12, 40, 2, 'optiona'),
(79, 12, 41, 2, 'optionb'),
(79, 12, 42, 2, 'optiona'),
(79, 12, 43, -0.66, 'optionc'),
(79, 12, 44, -0.66, 'optionc'),
(79, 12, 45, 2, 'optiond'),
(79, 12, 46, 2, 'optiond'),
(79, 12, 47, 2, 'optionc'),
(79, 12, 48, 2, 'optiona'),
(79, 12, 50, 2, 'optionb'),
(79, 12, 51, 2, 'optionc'),
(79, 12, 52, 2, 'optionb'),
(79, 12, 53, 2, 'optiona'),
(79, 12, 54, 2, 'optiona'),
(79, 13, 1, -0.66, 'optiond'),
(79, 13, 2, 2, 'optionb'),
(79, 13, 3, -0.66, 'optiond'),
(79, 13, 7, 2, 'optionb'),
(79, 13, 8, 2, 'optionc'),
(79, 13, 9, -0.66, 'optiona'),
(79, 13, 10, 2, 'optione'),
(79, 13, 11, 2, 'optiond'),
(79, 13, 12, 2, 'optiona'),
(79, 13, 13, -0.66, 'optionc'),
(79, 13, 14, 2, 'optionb'),
(79, 13, 17, 2, 'optionc'),
(79, 13, 22, 2, 'optiona'),
(79, 13, 24, 2, 'optionc'),
(79, 13, 25, 2, 'optiona'),
(79, 13, 26, -0.66, 'optionb'),
(79, 13, 27, 2, 'optiond'),
(79, 13, 28, 2, 'optionc'),
(79, 13, 30, 2, 'optiona'),
(79, 13, 32, 2, 'optiona'),
(79, 13, 34, 2, 'optiona'),
(79, 13, 35, 2, 'optionc'),
(79, 13, 36, 2, 'optionc'),
(79, 13, 39, 2, 'optiona'),
(79, 13, 40, 2, 'optiond'),
(79, 15, 2, 1, 'optiond'),
(79, 15, 4, 1, 'optiona'),
(79, 15, 6, 1, 'optiona'),
(79, 15, 7, -0.33, 'optiond'),
(79, 15, 8, 1, 'optiona'),
(79, 15, 9, 1, 'optionb'),
(79, 15, 11, 1, 'optiond'),
(79, 15, 12, -0.33, 'optiona'),
(79, 15, 13, 1, 'optionb'),
(79, 15, 14, 1, 'optionc'),
(79, 15, 15, 1, 'optiond'),
(79, 15, 16, -0.33, 'optionb'),
(79, 15, 17, 1, 'optionb'),
(79, 15, 18, 1, 'optionb'),
(79, 15, 19, 1, 'optionc'),
(79, 15, 20, 1, 'optionb'),
(79, 15, 21, 1, 'optiona'),
(79, 15, 22, 1, 'optionb'),
(79, 15, 23, 1, 'optiona'),
(79, 15, 24, 1, 'optiona'),
(79, 15, 25, 1, 'optiond'),
(79, 15, 26, 2, 'optiona'),
(79, 15, 27, 2, 'optiona'),
(79, 15, 28, -0.66, 'optionc'),
(79, 15, 29, 2, 'optiond'),
(79, 15, 30, 2, 'optionb'),
(79, 15, 31, 2, 'optiona'),
(79, 15, 32, 2, 'optiona'),
(79, 15, 33, 2, 'optionc'),
(79, 15, 35, 2, 'optionc'),
(79, 15, 37, -0.66, 'optiona'),
(79, 15, 39, -0.66, 'optionc'),
(79, 15, 40, 2, 'optiond'),
(79, 15, 41, 2, 'optionc'),
(79, 15, 42, 2, 'optiona'),
(79, 15, 43, 2, 'optiona'),
(79, 15, 45, 2, 'optiona'),
(79, 15, 47, -0.66, 'optionc'),
(79, 15, 48, 2, 'optionc'),
(79, 15, 52, 2, 'optionc'),
(79, 15, 53, 2, 'optionc'),
(79, 15, 54, -0.66, 'optiond'),
(79, 15, 59, 1, 'optiond'),
(79, 15, 61, -0.66, 'optiona'),
(79, 16, 1, 1, 'optionc'),
(79, 16, 3, 1, 'optiond'),
(79, 16, 6, 1, 'optionb'),
(79, 16, 8, 1, 'optiona'),
(79, 16, 9, -0.33, 'optiona'),
(79, 16, 10, 1, 'optionc'),
(79, 16, 13, -0.33, 'optiona'),
(79, 16, 14, 1, 'optiond'),
(79, 16, 15, -0.33, 'optionb'),
(79, 16, 16, 1, 'optiond'),
(79, 16, 17, 1, 'optiona'),
(79, 16, 19, -0.33, 'optionb'),
(79, 16, 20, 1, 'optiona'),
(79, 16, 22, 1, 'optionb'),
(79, 16, 25, 1, 'optionb'),
(79, 16, 28, -0.66, 'optiona'),
(79, 16, 29, -0.66, 'optionb'),
(79, 16, 30, 2, 'optiond'),
(79, 16, 31, -0.66, 'optionb'),
(79, 16, 32, -0.66, 'optionb'),
(79, 16, 35, -0.66, 'optiona'),
(79, 16, 37, 2, 'optionb'),
(79, 16, 39, -0.66, 'optionc'),
(79, 16, 41, 2, 'optionc'),
(79, 16, 45, -0.66, 'optiond'),
(79, 16, 46, -0.66, 'optiond'),
(79, 16, 47, 2, 'optionc'),
(79, 16, 48, 2, 'optiona'),
(79, 16, 49, 2, 'optionc'),
(79, 16, 50, 2, 'optiona'),
(79, 16, 51, -0.66, 'optionb'),
(79, 17, 1, -0.33, 'optionb'),
(79, 17, 2, 1, 'optionb'),
(79, 17, 3, 1, 'optionb'),
(79, 17, 4, -0.33, 'optiond'),
(79, 17, 5, 1, 'optionc'),
(79, 17, 6, 1, 'optiona'),
(79, 17, 8, 1, 'optiona'),
(79, 17, 9, -0.33, 'optiona'),
(79, 17, 10, 1, 'optiona'),
(79, 17, 11, -0.33, 'optionb'),
(79, 17, 12, -0.33, 'optionc'),
(79, 17, 13, -0.33, 'optiond'),
(79, 17, 16, -0.33, 'optionc'),
(79, 17, 17, 1, 'optiona'),
(79, 17, 19, 1, 'optionb'),
(79, 17, 20, -0.33, 'optionb'),
(79, 17, 21, -0.33, 'optiona'),
(79, 17, 22, 1, 'optionb'),
(79, 17, 23, 1, 'optiond'),
(79, 17, 24, -0.33, 'optiona'),
(79, 17, 25, -0.33, 'optiond'),
(79, 17, 26, 2, 'optionc'),
(79, 17, 28, -0.66, 'optionb'),
(79, 17, 29, 2, 'optiond'),
(79, 17, 30, -0.66, 'optiond'),
(79, 17, 32, 2, 'optiona'),
(79, 17, 33, 2, 'optiona'),
(79, 17, 35, 2, 'optionb'),
(79, 17, 37, 2, 'optionc'),
(79, 17, 38, -0.66, 'optiond'),
(79, 17, 41, 2, 'optionc'),
(79, 17, 45, -0.66, 'optiond'),
(79, 17, 46, 2, 'optionb'),
(79, 17, 47, -0.66, 'optionb'),
(79, 17, 48, 2, 'optiond'),
(79, 17, 50, -0.66, 'optiona'),
(79, 17, 51, 2, 'optionc'),
(79, 17, 52, 2, 'optiond'),
(79, 17, 53, 2, 'optiona'),
(79, 17, 54, 2, 'optiond'),
(79, 17, 55, 2, 'optiona'),
(79, 17, 65, -0.66, 'optiona'),
(79, 18, 1, -0.33, 'optionc'),
(79, 18, 2, 1, 'optiond'),
(79, 18, 3, 1, 'optionb'),
(79, 18, 4, 1, 'optiona'),
(79, 18, 6, 1, 'optionc'),
(79, 18, 7, 1, 'optionb'),
(79, 18, 8, 1, 'optionb'),
(79, 18, 9, 1, 'optiond'),
(79, 18, 11, 1, 'optionb'),
(79, 18, 12, 1, 'optiona'),
(79, 18, 14, 1, 'optionc'),
(79, 18, 16, 1, 'optionc'),
(79, 18, 17, 1, 'optionb'),
(79, 18, 18, -0.33, 'optionb'),
(79, 18, 19, 1, 'optionc'),
(79, 18, 20, 1, 'optionb'),
(79, 18, 21, 1, 'optiond'),
(79, 18, 22, 1, 'optiond'),
(79, 18, 23, -0.33, 'optionb'),
(79, 18, 24, 1, 'optionc'),
(79, 18, 25, 1, 'optionc'),
(79, 18, 26, 2, 'optionb'),
(79, 18, 27, -0.66, 'optionc'),
(79, 18, 29, 2, 'optiond'),
(79, 18, 31, 2, 'optiona'),
(79, 18, 32, -0.66, 'optiona'),
(79, 18, 35, -0.66, 'optionb'),
(79, 18, 36, -0.66, 'optionb'),
(79, 18, 38, -0.66, 'optiona'),
(79, 18, 39, -0.66, 'optionc'),
(79, 18, 42, 2, 'optionb'),
(79, 18, 43, -0.66, 'optionc'),
(79, 18, 45, -0.66, 'optionc'),
(79, 18, 47, 2, 'optiond'),
(79, 18, 49, 2, 'optionc'),
(79, 18, 50, 2, 'optionc'),
(79, 18, 51, -0.66, 'optiond'),
(79, 18, 54, 2, 'optiona'),
(79, 18, 61, 2, 'optionb'),
(79, 18, 65, 2, 'optiond'),
(80, 8, 1, 1, 'optione'),
(80, 8, 2, 1, 'optiona'),
(80, 8, 3, -0.33, 'optionc'),
(80, 8, 4, -0.33, 'optionb'),
(80, 8, 5, -0.33, 'optiona'),
(80, 8, 6, 1, 'optiond'),
(80, 8, 7, 1, 'optionb'),
(80, 8, 8, 1, 'optionb'),
(80, 8, 9, 1, 'optiond'),
(80, 8, 10, 1, 'optionc'),
(80, 8, 11, 1, 'optiond'),
(80, 8, 12, 1, 'optiona'),
(80, 8, 13, 1, 'optionb'),
(80, 8, 14, -0.33, 'optiond'),
(80, 8, 15, 1, 'optionc'),
(80, 8, 17, -0.33, 'optionb'),
(80, 8, 18, 1, 'optione'),
(80, 8, 19, 1, 'optiona'),
(80, 8, 20, -0.33, 'optionc'),
(80, 8, 21, -0.33, 'optiond'),
(80, 8, 22, -0.33, 'optiond'),
(80, 8, 23, 1, 'optiona'),
(80, 8, 24, 1, 'optiona'),
(80, 8, 26, 1, 'optiond'),
(80, 8, 27, 1, 'optiond'),
(80, 8, 28, 1, 'optionc'),
(80, 8, 29, -0.33, 'optiona'),
(80, 8, 30, 1, 'optionc'),
(80, 8, 31, 1, 'optionc'),
(80, 8, 32, 1, 'optionb'),
(80, 8, 33, 1, 'optiona'),
(80, 8, 34, 1, 'optiond'),
(80, 8, 35, 1, 'optionc'),
(80, 8, 36, 1, 'optionc'),
(80, 8, 37, 1, 'optiond'),
(80, 8, 38, -0.33, 'optionc'),
(80, 8, 39, 1, 'optiond'),
(80, 8, 40, -0.33, 'optiona'),
(80, 8, 41, 1, 'optiona'),
(80, 8, 42, 1, 'optiond'),
(80, 8, 43, 1, 'optionb'),
(80, 8, 44, -0.33, 'optiona'),
(80, 8, 45, 1, 'optiond'),
(80, 15, 1, 1, 'optionc'),
(80, 15, 2, 1, 'optiond'),
(80, 15, 5, 1, 'optionb'),
(80, 15, 6, 1, 'optiona'),
(80, 15, 10, 1, 'optiona'),
(80, 15, 11, 1, 'optiond'),
(80, 15, 12, -0.33, 'optiond'),
(80, 15, 13, 1, 'optionb'),
(80, 15, 14, 1, 'optionc'),
(80, 15, 15, 1, 'optiond'),
(80, 15, 16, 1, 'optiond'),
(80, 15, 17, 1, 'optionb'),
(80, 15, 18, -0.33, 'optiond'),
(80, 15, 19, 1, 'optionc'),
(80, 15, 20, 1, 'optionb'),
(80, 15, 22, 1, 'optionb'),
(80, 15, 23, 1, 'optiona'),
(80, 15, 24, 1, 'optiona'),
(80, 15, 25, 1, 'optiond'),
(80, 15, 26, 2, 'optiona'),
(80, 15, 28, -0.66, 'optionb'),
(80, 15, 29, 2, 'optiond'),
(80, 15, 30, 2, 'optionb'),
(80, 15, 33, 2, 'optionc'),
(80, 15, 36, 2, 'optiond'),
(80, 15, 37, 2, 'optionb'),
(80, 15, 38, 2, 'optionc'),
(80, 15, 39, 2, 'optionb'),
(80, 15, 40, 2, 'optiond'),
(80, 15, 44, 2, 'optiond'),
(80, 15, 45, 2, 'optiona'),
(80, 15, 46, 2, 'optionb'),
(80, 15, 47, 2, 'optiond'),
(80, 15, 48, -0.66, 'optiond'),
(80, 15, 49, -0.66, 'optiond'),
(80, 15, 50, 2, 'optiond'),
(80, 15, 51, 2, 'optionb'),
(80, 15, 52, 2, 'optionc'),
(80, 15, 53, -0.66, 'optionb'),
(80, 15, 54, 2, 'optionc'),
(80, 15, 55, 2, 'optionb'),
(80, 15, 58, -0.33, 'optionb'),
(80, 15, 59, 1, 'optiond'),
(80, 15, 62, 2, 'optionb'),
(80, 16, 1, 1, 'optionc'),
(80, 16, 3, 1, 'optiond'),
(80, 16, 6, 1, 'optionb'),
(80, 16, 9, -0.33, 'optiond'),
(80, 16, 10, 1, 'optionc'),
(80, 16, 11, -0.33, 'optiond'),
(80, 16, 16, 1, 'optiond'),
(80, 16, 17, -0.33, 'optionc'),
(80, 16, 19, 1, 'optiond'),
(80, 16, 22, 1, 'optionb'),
(80, 16, 23, 1, 'optionc'),
(80, 16, 26, -0.66, 'optionc'),
(80, 16, 28, 2, 'optiond'),
(80, 16, 29, -0.66, 'optionb'),
(80, 16, 30, 2, 'optiond'),
(80, 16, 32, 2, 'optiond'),
(80, 16, 36, 2, 'optionc'),
(80, 16, 37, 2, 'optionb'),
(80, 16, 43, 2, 'optiona'),
(80, 16, 44, 2, 'optiond'),
(80, 16, 45, 2, 'optiona'),
(80, 16, 46, 2, 'optionc'),
(80, 16, 48, 2, 'optiona'),
(80, 16, 49, 2, 'optionc'),
(80, 16, 52, 2, 'optiona'),
(80, 16, 56, 1, 'optiond'),
(80, 16, 59, 1, 'optionc'),
(80, 16, 60, 1, 'optionc'),
(80, 16, 63, 2, 'optionc'),
(80, 17, 2, 1, 'optionb'),
(80, 17, 3, 1, 'optionb'),
(80, 17, 5, 1, 'optionc'),
(80, 17, 6, 1, 'optiona'),
(80, 17, 8, 1, 'optiona'),
(80, 17, 9, -0.33, 'optiona'),
(80, 17, 10, 1, 'optiona'),
(80, 17, 18, -0.33, 'optiond'),
(80, 17, 19, 1, 'optionb'),
(80, 17, 22, 1, 'optionb'),
(80, 17, 23, 1, 'optiond'),
(80, 17, 25, 1, 'optionb'),
(80, 17, 26, 2, 'optionc'),
(80, 17, 29, -0.66, 'optionb'),
(80, 17, 31, 2, 'optiond'),
(80, 17, 32, 2, 'optiona'),
(80, 17, 33, 2, 'optiona'),
(80, 17, 34, 2, 'optiond'),
(80, 17, 37, -0.66, 'optionb'),
(80, 17, 38, -0.66, 'optiona'),
(80, 17, 42, 2, 'optionb'),
(80, 17, 45, -0.66, 'optiond'),
(80, 17, 48, 2, 'optiond'),
(80, 17, 49, -0.66, 'optionc'),
(80, 17, 50, 2, 'optiond'),
(80, 17, 51, 2, 'optionc'),
(80, 17, 52, 2, 'optiond'),
(80, 17, 53, 2, 'optiona'),
(80, 17, 54, 2, 'optiond'),
(80, 17, 56, -0.33, 'optiond'),
(80, 17, 59, -0.33, 'optionb'),
(80, 17, 63, -0.66, 'optiond'),
(80, 18, 2, 1, 'optiond'),
(80, 18, 3, 1, 'optionb'),
(80, 18, 4, 1, 'optiona'),
(80, 18, 6, 1, 'optionc'),
(80, 18, 7, 1, 'optionb'),
(80, 18, 8, -0.33, 'optiona'),
(80, 18, 9, 1, 'optiond'),
(80, 18, 10, -0.33, 'optiond'),
(80, 18, 11, 1, 'optionb'),
(80, 18, 12, 1, 'optiona'),
(80, 18, 15, 1, 'optionc'),
(80, 18, 16, 1, 'optionc'),
(80, 18, 17, 1, 'optionb'),
(80, 18, 19, 1, 'optionc'),
(80, 18, 20, -0.33, 'optiona'),
(80, 18, 21, 1, 'optiond'),
(80, 18, 22, 1, 'optiond'),
(80, 18, 23, -0.33, 'optionc'),
(80, 18, 24, 1, 'optionc'),
(80, 18, 25, 1, 'optionc'),
(80, 18, 26, 2, 'optionb'),
(80, 18, 30, -0.66, 'optionb'),
(80, 18, 31, 2, 'optiona'),
(80, 18, 32, -0.66, 'optiona'),
(80, 18, 37, -0.66, 'optiona'),
(80, 18, 38, 2, 'optionb'),
(80, 18, 39, -0.66, 'optionc'),
(80, 18, 42, 2, 'optionb'),
(80, 18, 45, -0.66, 'optionc'),
(80, 18, 46, 2, 'optionc'),
(80, 18, 47, 2, 'optiond'),
(80, 18, 48, 2, 'optionb'),
(80, 18, 49, 2, 'optionc'),
(80, 18, 50, 2, 'optionc'),
(80, 18, 51, -0.66, 'optiond'),
(80, 18, 54, 2, 'optiona'),
(80, 18, 56, 1, 'optione'),
(80, 18, 57, 1, 'optionb'),
(80, 18, 58, 1, 'optionc'),
(80, 18, 60, 1, 'optiona'),
(80, 18, 61, 2, 'optionb'),
(80, 18, 62, 2, 'optiond'),
(80, 18, 65, 2, 'optiond'),
(81, 4, 1, 1, 'optiona'),
(81, 4, 2, 1, 'optiond'),
(81, 4, 3, 1, 'optionc'),
(81, 4, 4, 1, 'optionc'),
(81, 4, 5, 1, 'optionb'),
(81, 4, 6, 1, 'optiond'),
(81, 4, 7, -0.33, 'optionb'),
(81, 4, 8, 1, 'optionb'),
(81, 4, 10, 1, 'optionc'),
(81, 4, 11, 1, 'optiona'),
(81, 4, 12, 1, 'optionc'),
(81, 4, 13, 1, 'optionb'),
(81, 4, 14, -0.33, 'optionb'),
(81, 4, 15, 1, 'optiona'),
(81, 4, 16, 1, 'optiona'),
(81, 4, 17, 1, 'optiond'),
(81, 4, 18, 1, 'optionc'),
(81, 4, 19, 1, 'optionb'),
(81, 4, 20, 1, 'optiona'),
(81, 4, 21, 2, 'optiond'),
(81, 4, 22, -0.66, 'optiona'),
(81, 4, 23, 2, 'optionb'),
(81, 4, 24, 2, 'optionc'),
(81, 4, 25, 2, 'optiona'),
(81, 4, 26, -0.66, 'optionb'),
(81, 4, 27, 2, 'optionc'),
(81, 4, 28, 2, 'optiond'),
(81, 4, 29, -0.66, 'optiond');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(81, 4, 30, 2, 'optionc'),
(81, 4, 31, 2, 'optionc'),
(81, 4, 32, -0.66, 'optionc'),
(81, 4, 33, 2, 'optionc'),
(81, 4, 34, 2, 'optiona'),
(81, 4, 35, 2, 'optionc'),
(81, 4, 36, 2, 'optionc'),
(81, 4, 37, 2, 'optiond'),
(81, 4, 38, 2, 'optiond'),
(81, 4, 39, 2, 'optionb'),
(81, 4, 40, 2, 'optiona'),
(81, 4, 41, -1.33, 'optionb'),
(81, 4, 42, 4, 'optionc'),
(81, 4, 43, -1.33, 'optiond'),
(81, 4, 44, 4, 'optionb'),
(81, 4, 45, -1.33, 'optionb'),
(81, 4, 46, -1.33, 'optiond'),
(81, 4, 47, 4, 'optionc'),
(81, 4, 48, -1.33, 'optionc'),
(81, 4, 49, -1.33, 'optionb'),
(81, 4, 50, -1.33, 'optionb'),
(81, 7, 1, 1, 'optionc'),
(81, 7, 2, 1, 'optiond'),
(81, 7, 3, -0.33, 'optiond'),
(81, 7, 4, 1, 'optiond'),
(81, 7, 5, -0.33, 'optionc'),
(81, 7, 6, 1, 'optionb'),
(81, 7, 8, 1, 'optionb'),
(81, 7, 9, 1, 'optiona'),
(81, 7, 10, -0.33, 'optionb'),
(81, 7, 11, 1, 'optiona'),
(81, 7, 12, -0.33, 'optionc'),
(81, 7, 14, 1, 'optionc'),
(81, 7, 15, 1, 'optionb'),
(81, 7, 16, 1, 'optiona'),
(81, 7, 17, 1, 'optionc'),
(81, 7, 18, 1, 'optiona'),
(81, 7, 19, 1, 'optiond'),
(81, 7, 20, 1, 'optiona'),
(81, 7, 21, 1, 'optiond'),
(81, 7, 22, 1, 'optiond'),
(81, 7, 23, 1, 'optiond'),
(81, 7, 24, 1, 'optiona'),
(81, 7, 26, 2, 'optiona'),
(81, 7, 27, -0.66, 'optiond'),
(81, 7, 28, 2, 'optiona'),
(81, 7, 29, -0.66, 'optiona'),
(81, 7, 30, 2, 'optionc'),
(81, 7, 31, 2, 'optiona'),
(81, 7, 34, -0.66, 'optiond'),
(81, 7, 35, 2, 'optionc'),
(81, 7, 36, 2, 'optionc'),
(81, 7, 37, -0.66, 'optiond'),
(81, 7, 38, 2, 'optiona'),
(81, 7, 39, 2, 'optione'),
(81, 7, 40, 2, 'optionb'),
(81, 7, 41, 2, 'optionc'),
(81, 7, 42, 2, 'optionc'),
(81, 7, 43, 2, 'optionb'),
(81, 7, 44, 2, 'optionb'),
(81, 7, 45, 2, 'optiond'),
(81, 7, 47, 2, 'optionb'),
(81, 7, 48, -0.66, 'optiond'),
(81, 7, 50, 2, 'optionc'),
(81, 7, 51, 2, 'optionb'),
(81, 7, 52, 2, 'optiona'),
(81, 7, 53, 2, 'optionb'),
(81, 7, 54, 2, 'optiond'),
(81, 7, 55, -0.66, 'optiond'),
(81, 7, 56, 1, 'optiona'),
(81, 7, 57, 1, 'optionc'),
(81, 7, 58, 1, 'optionb'),
(81, 7, 59, 1, 'optiond'),
(81, 7, 60, -0.33, 'optionb'),
(81, 7, 61, 2, 'optionb'),
(81, 7, 62, 2, 'optionc'),
(81, 7, 63, 2, 'optiond'),
(81, 7, 64, 2, 'optionc'),
(81, 7, 65, 2, 'optionb'),
(81, 8, 1, 1, 'optione'),
(81, 8, 2, 1, 'optiona'),
(81, 8, 3, 1, 'optionb'),
(81, 8, 4, -0.33, 'optionb'),
(81, 8, 5, 1, 'optionc'),
(81, 8, 6, 1, 'optiond'),
(81, 8, 7, 1, 'optionb'),
(81, 8, 8, 1, 'optionb'),
(81, 8, 9, 1, 'optiond'),
(81, 8, 10, 1, 'optionc'),
(81, 8, 11, 1, 'optiond'),
(81, 8, 12, 1, 'optiona'),
(81, 8, 13, 1, 'optionb'),
(81, 8, 14, -0.33, 'optiond'),
(81, 8, 15, 1, 'optionc'),
(81, 8, 16, 1, 'optionc'),
(81, 8, 17, -0.33, 'optiona'),
(81, 8, 18, 1, 'optione'),
(81, 8, 19, 1, 'optiona'),
(81, 8, 21, 1, 'optiona'),
(81, 8, 22, -0.33, 'optionb'),
(81, 8, 23, 1, 'optiona'),
(81, 8, 24, -0.33, 'optionb'),
(81, 8, 25, 1, 'optiond'),
(81, 8, 26, 1, 'optiond'),
(81, 8, 27, 1, 'optiond'),
(81, 8, 28, 1, 'optionc'),
(81, 8, 29, 1, 'optionb'),
(81, 8, 30, 1, 'optionc'),
(81, 8, 31, 1, 'optionc'),
(81, 8, 32, 1, 'optionb'),
(81, 8, 33, 1, 'optiona'),
(81, 8, 34, 1, 'optiond'),
(81, 8, 35, 1, 'optionc'),
(81, 8, 36, 1, 'optionc'),
(81, 8, 37, 1, 'optiond'),
(81, 8, 38, 1, 'optionb'),
(81, 8, 39, 1, 'optiond'),
(81, 8, 40, 1, 'optionc'),
(81, 8, 41, 1, 'optiona'),
(81, 8, 42, 1, 'optiond'),
(81, 8, 43, 1, 'optionb'),
(81, 8, 44, 1, 'optionb'),
(81, 8, 45, -0.33, 'optionb'),
(81, 9, 1, 2, 'optionc'),
(81, 9, 2, 2, 'optionb'),
(81, 9, 3, 2, 'optiona'),
(81, 9, 4, 2, 'optiona'),
(81, 9, 5, 2, 'optiond'),
(81, 9, 6, 2, 'optiond'),
(81, 9, 7, 2, 'optionc'),
(81, 9, 8, 2, 'optionb'),
(81, 9, 9, 2, 'optionb'),
(81, 9, 10, 2, 'optionc'),
(81, 9, 11, 2, 'optiona'),
(81, 9, 12, 2, 'optiona'),
(81, 9, 13, 2, 'optiond'),
(81, 9, 15, 2, 'optiona'),
(81, 9, 17, 2, 'optionb'),
(81, 9, 18, 2, 'optionb'),
(81, 9, 19, 2, 'optionc'),
(81, 9, 21, 2, 'optionc'),
(81, 9, 22, 2, 'optiona'),
(81, 9, 23, 2, 'optionc'),
(81, 9, 24, 2, 'optionc'),
(81, 9, 25, -0.66, 'optiona'),
(81, 9, 26, 2, 'optionc'),
(81, 9, 28, 2, 'optionb'),
(81, 9, 30, 2, 'optionb'),
(81, 9, 31, 2, 'optione'),
(81, 9, 32, 2, 'optionb'),
(81, 9, 34, 2, 'optiond'),
(81, 9, 35, 2, 'optionb'),
(81, 9, 36, 2, 'optionc'),
(81, 9, 37, 2, 'optionb'),
(81, 9, 39, 2, 'optiond'),
(81, 9, 40, 2, 'optionc'),
(81, 9, 41, 2, 'optionb'),
(81, 9, 42, 2, 'optionb'),
(81, 9, 43, 2, 'optionc'),
(81, 9, 45, 2, 'optionc'),
(81, 9, 46, 2, 'optiond'),
(81, 9, 47, 2, 'optionc'),
(81, 9, 49, 2, 'optionb'),
(81, 9, 50, 2, 'optionb'),
(81, 9, 51, 2, 'optionb'),
(81, 9, 53, 2, 'optionc'),
(81, 9, 54, -0.66, 'optionc'),
(81, 10, 2, 2, 'optionb'),
(81, 10, 3, 2, 'optiond'),
(81, 10, 5, 2, 'optionb'),
(81, 10, 6, 2, 'optionb'),
(81, 10, 9, 2, 'optionc'),
(81, 10, 11, 2, 'optionc'),
(81, 10, 12, 2, 'optionb'),
(81, 10, 13, -0.66, 'optione'),
(81, 10, 14, 2, 'optionb'),
(81, 10, 15, 2, 'optiond'),
(81, 10, 16, 2, 'optiona'),
(81, 10, 17, -0.66, 'optiona'),
(81, 10, 18, -0.66, 'optiond'),
(81, 10, 19, 2, 'optiona'),
(81, 10, 20, -0.66, 'optionb'),
(81, 10, 21, 2, 'optionb'),
(81, 10, 22, 2, 'optionb'),
(81, 10, 23, -0.66, 'optionc'),
(81, 10, 24, -0.66, 'optionc'),
(81, 11, 1, 2, 'optionb'),
(81, 11, 2, 2, 'optionc'),
(81, 11, 3, -0.66, 'optionc'),
(81, 11, 4, 2, 'optiond'),
(81, 11, 5, 2, 'optionb'),
(81, 11, 6, 2, 'optionb'),
(81, 11, 7, 2, 'optionb'),
(81, 11, 8, 2, 'optiona'),
(81, 11, 9, 2, 'optionc'),
(81, 11, 10, 2, 'optiona'),
(81, 11, 11, 2, 'optiona'),
(81, 11, 12, 2, 'optiona'),
(81, 11, 13, -0.66, 'optiona'),
(81, 11, 14, -0.66, 'optiond'),
(81, 11, 15, -0.66, 'optiona'),
(81, 11, 17, 2, 'optiona'),
(81, 11, 18, 2, 'optionb'),
(81, 11, 19, 2, 'optionb'),
(81, 11, 20, -0.66, 'optionb'),
(81, 11, 21, 2, 'optionc'),
(81, 11, 22, 2, 'optiona'),
(81, 11, 24, -0.66, 'optionc'),
(81, 11, 25, 2, 'optionb'),
(81, 11, 26, 2, 'optionc'),
(81, 11, 27, 2, 'optione'),
(81, 11, 28, 2, 'optiona'),
(81, 11, 29, 2, 'optiond'),
(81, 11, 30, -0.66, 'optiona'),
(81, 11, 31, 2, 'optione'),
(81, 11, 32, -0.66, 'optione'),
(81, 11, 34, 2, 'optiond'),
(81, 11, 35, 2, 'optiond'),
(81, 11, 36, 2, 'optione'),
(81, 11, 37, -0.66, 'optiond'),
(81, 11, 38, 2, 'optiona'),
(81, 11, 39, 2, 'optiona'),
(81, 11, 40, 2, 'optiond'),
(81, 11, 41, -0.66, 'optionb'),
(81, 11, 42, 2, 'optione'),
(81, 11, 43, 2, 'optiond'),
(81, 11, 44, 2, 'optionb'),
(81, 11, 46, 2, 'optiona'),
(81, 11, 47, 2, 'optione'),
(81, 11, 48, -0.66, 'optionc'),
(81, 11, 49, 2, 'optiond'),
(81, 11, 51, 2, 'optiond'),
(81, 11, 52, -0.66, 'optionc'),
(81, 11, 53, 2, 'optionc'),
(81, 11, 54, -0.66, 'optiona'),
(81, 11, 55, -0.66, 'optionc'),
(81, 11, 56, 2, 'optione'),
(81, 11, 57, 2, 'optionc'),
(81, 11, 58, 2, 'optione'),
(81, 11, 59, 2, 'optiona'),
(81, 11, 60, -0.66, 'optione'),
(81, 12, 1, 2, 'optionc'),
(81, 12, 2, 2, 'optionc'),
(81, 12, 3, 2, 'optiond'),
(81, 12, 4, 2, 'optionc'),
(81, 12, 5, 2, 'optiona'),
(81, 12, 6, 2, 'optiond'),
(81, 12, 7, 2, 'optionb'),
(81, 12, 8, 2, 'optionb'),
(81, 12, 9, 2, 'optiona'),
(81, 12, 10, 2, 'optiond'),
(81, 12, 11, 2, 'optionb'),
(81, 12, 12, 2, 'optionb'),
(81, 12, 13, 2, 'optionb'),
(81, 12, 14, 2, 'optiona'),
(81, 12, 15, 2, 'optiond'),
(81, 12, 16, 2, 'optionc'),
(81, 12, 17, -0.66, 'optiond'),
(81, 12, 18, 2, 'optiond'),
(81, 12, 19, 2, 'optionb'),
(81, 12, 20, 2, 'optionb'),
(81, 12, 21, 2, 'optiona'),
(81, 12, 22, 2, 'optiond'),
(81, 12, 23, 2, 'optionb'),
(81, 12, 24, 2, 'optiona'),
(81, 12, 25, 2, 'optionc'),
(81, 12, 26, 2, 'optionb'),
(81, 12, 27, 2, 'optionc'),
(81, 12, 28, -0.66, 'optionc'),
(81, 12, 29, 2, 'optiona'),
(81, 12, 30, 2, 'optionb'),
(81, 12, 31, 2, 'optionc'),
(81, 12, 32, 2, 'optionc'),
(81, 12, 34, 2, 'optiond'),
(81, 12, 35, 2, 'optiond'),
(81, 12, 36, 2, 'optionc'),
(81, 12, 38, 2, 'optionc'),
(81, 12, 39, -0.66, 'optionc'),
(81, 12, 40, 2, 'optiona'),
(81, 12, 42, 2, 'optiona'),
(81, 12, 43, -0.66, 'optionc'),
(81, 12, 45, 2, 'optiond'),
(81, 12, 46, 2, 'optiond'),
(81, 12, 48, 2, 'optiona'),
(81, 12, 49, 2, 'optionc'),
(81, 12, 50, 2, 'optionb'),
(81, 12, 51, 2, 'optionc'),
(81, 12, 52, 2, 'optionb'),
(81, 12, 53, 2, 'optiona'),
(81, 12, 54, 2, 'optiona'),
(81, 13, 6, -0.66, 'optiona'),
(81, 13, 7, 2, 'optionb'),
(81, 13, 8, 2, 'optionc'),
(81, 13, 9, 2, 'optione'),
(81, 13, 10, 2, 'optione'),
(81, 13, 11, -0.66, 'optione'),
(81, 13, 12, -0.66, 'optionb'),
(81, 13, 13, -0.66, 'optiona'),
(81, 13, 14, -0.66, 'optionc'),
(81, 13, 15, 2, 'optionc'),
(81, 13, 18, -0.66, 'optionb'),
(81, 13, 19, -0.66, 'optiond'),
(81, 13, 20, -0.66, 'optiond'),
(81, 13, 21, 2, 'optiona'),
(81, 13, 22, 2, 'optiona'),
(81, 13, 23, -0.66, 'optionc'),
(81, 13, 24, 2, 'optionc'),
(81, 13, 25, 2, 'optiona'),
(81, 13, 26, -0.66, 'optionb'),
(81, 13, 27, 2, 'optiond'),
(81, 13, 28, 2, 'optionc'),
(81, 13, 29, -0.66, 'optiond'),
(81, 13, 30, 2, 'optiona'),
(81, 13, 32, 2, 'optiona'),
(81, 13, 33, 2, 'optionb'),
(81, 13, 34, 2, 'optiona'),
(81, 13, 35, 2, 'optionc'),
(81, 13, 36, 2, 'optionc'),
(81, 13, 37, -0.66, 'optionb'),
(81, 13, 38, 2, 'optionb'),
(81, 13, 39, 2, 'optiona'),
(81, 13, 40, 2, 'optiond'),
(81, 15, 1, 1, 'optionc'),
(81, 15, 2, 1, 'optiond'),
(81, 15, 3, 1, 'optionc'),
(81, 15, 4, 1, 'optiona'),
(81, 15, 5, 1, 'optionb'),
(81, 15, 6, 1, 'optiona'),
(81, 15, 7, 1, 'optionb'),
(81, 15, 8, 1, 'optiona'),
(81, 15, 9, 1, 'optionb'),
(81, 15, 10, -0.33, 'optionb'),
(81, 15, 11, 1, 'optiond'),
(81, 15, 12, 1, 'optionc'),
(81, 15, 13, 1, 'optionb'),
(81, 15, 14, 1, 'optionc'),
(81, 15, 15, 1, 'optiond'),
(81, 15, 16, 1, 'optiond'),
(81, 15, 17, 1, 'optionb'),
(81, 15, 18, 1, 'optionb'),
(81, 15, 19, 1, 'optionc'),
(81, 15, 20, 1, 'optionb'),
(81, 15, 21, 1, 'optiona'),
(81, 15, 22, 1, 'optionb'),
(81, 15, 23, 1, 'optiona'),
(81, 15, 24, 1, 'optiona'),
(81, 15, 25, 1, 'optiond'),
(81, 15, 26, 2, 'optiona'),
(81, 15, 27, 2, 'optiona'),
(81, 15, 28, 2, 'optiond'),
(81, 15, 29, 2, 'optiond'),
(81, 15, 30, 2, 'optionb'),
(81, 15, 31, 2, 'optiona'),
(81, 15, 32, 2, 'optiona'),
(81, 15, 33, 2, 'optionc'),
(81, 15, 34, 2, 'optionb'),
(81, 15, 35, 2, 'optionc'),
(81, 15, 36, 2, 'optiond'),
(81, 15, 37, 2, 'optionb'),
(81, 15, 38, 2, 'optionc'),
(81, 15, 39, 2, 'optionb'),
(81, 15, 40, 2, 'optiond'),
(81, 15, 41, 2, 'optionc'),
(81, 15, 42, 2, 'optiona'),
(81, 15, 43, 2, 'optiona'),
(81, 15, 44, 2, 'optiond'),
(81, 15, 45, 2, 'optiona'),
(81, 15, 46, 2, 'optionb'),
(81, 15, 47, 2, 'optiond'),
(81, 15, 48, 2, 'optionc'),
(81, 15, 49, 2, 'optionc'),
(81, 15, 50, -0.66, 'optionb'),
(81, 15, 51, 2, 'optionb'),
(81, 15, 52, 2, 'optionc'),
(81, 15, 53, 2, 'optionc'),
(81, 15, 54, 2, 'optionc'),
(81, 15, 55, 2, 'optionb'),
(81, 15, 56, 1, 'optionc'),
(81, 15, 57, 1, 'optionb'),
(81, 15, 58, 1, 'optiond'),
(81, 15, 59, 1, 'optiond'),
(81, 15, 60, 1, 'optiona'),
(81, 15, 61, 2, 'optionc'),
(81, 15, 62, 2, 'optionb'),
(81, 15, 63, 2, 'optiond'),
(81, 15, 65, 2, 'optionb'),
(81, 16, 1, 1, 'optionc'),
(81, 16, 2, 1, 'optionb'),
(81, 16, 3, 1, 'optiond'),
(81, 16, 4, 1, 'optiond'),
(81, 16, 5, 1, 'optiond'),
(81, 16, 6, 1, 'optionb'),
(81, 16, 7, 1, 'optiond'),
(81, 16, 8, 1, 'optiona'),
(81, 16, 9, 1, 'optionc'),
(81, 16, 10, 1, 'optionc'),
(81, 16, 12, 1, 'optiond'),
(81, 16, 13, 1, 'optionb'),
(81, 16, 14, 1, 'optiond'),
(81, 16, 15, 1, 'optionc'),
(81, 16, 16, 1, 'optiond'),
(81, 16, 17, 1, 'optiona'),
(81, 16, 18, 1, 'optiond'),
(81, 16, 20, 1, 'optiona'),
(81, 16, 21, 1, 'optiond'),
(81, 16, 22, 1, 'optionb'),
(81, 16, 23, 1, 'optionc'),
(81, 16, 24, 1, 'optiona'),
(81, 16, 25, 1, 'optionb'),
(81, 16, 26, 2, 'optiona'),
(81, 16, 27, 2, 'optionb'),
(81, 16, 28, 2, 'optiond'),
(81, 16, 30, 2, 'optiond'),
(81, 16, 32, 2, 'optiond'),
(81, 16, 33, 2, 'optiond'),
(81, 16, 34, 2, 'optiona'),
(81, 16, 35, 2, 'optionb'),
(81, 16, 36, 2, 'optionc'),
(81, 16, 37, 2, 'optionb'),
(81, 16, 38, -0.66, 'optiona'),
(81, 16, 39, -0.66, 'optiona'),
(81, 16, 40, 2, 'optiona'),
(81, 16, 41, 2, 'optionc'),
(81, 16, 42, 2, 'optiona'),
(81, 16, 43, 2, 'optiona'),
(81, 16, 44, 2, 'optiond'),
(81, 16, 45, 2, 'optiona'),
(81, 16, 46, 2, 'optionc'),
(81, 16, 47, -0.66, 'optiona'),
(81, 16, 48, 2, 'optiona'),
(81, 16, 49, 2, 'optionc'),
(81, 16, 50, 2, 'optiona'),
(81, 16, 51, 2, 'optiona'),
(81, 16, 52, 2, 'optiona'),
(81, 16, 53, 2, 'optionb'),
(81, 16, 56, -0.33, 'optionc'),
(81, 16, 57, 1, 'optionc'),
(81, 16, 59, -0.33, 'optiona'),
(81, 16, 60, 1, 'optionc'),
(81, 16, 61, 2, 'optionb'),
(81, 16, 62, -0.66, 'optionb'),
(81, 16, 64, -0.66, 'optiona'),
(81, 17, 1, 1, 'optiona'),
(81, 17, 2, 1, 'optionb'),
(81, 17, 3, 1, 'optionb'),
(81, 17, 4, 1, 'optionc'),
(81, 17, 5, 1, 'optionc'),
(81, 17, 6, 1, 'optiona'),
(81, 17, 7, 1, 'optionc'),
(81, 17, 8, 1, 'optiona'),
(81, 17, 9, 1, 'optionb'),
(81, 17, 10, 1, 'optiona'),
(81, 17, 11, 1, 'optiond'),
(81, 17, 12, 1, 'optiona'),
(81, 17, 13, 1, 'optionb'),
(81, 17, 14, 1, 'optionc'),
(81, 17, 15, 1, 'optionb'),
(81, 17, 16, 1, 'optionb'),
(81, 17, 17, 1, 'optiona'),
(81, 17, 18, 1, 'optionb'),
(81, 17, 19, 1, 'optionb'),
(81, 17, 20, 1, 'optiona'),
(81, 17, 21, -0.33, 'optiond'),
(81, 17, 22, 1, 'optionb'),
(81, 17, 23, 1, 'optiond'),
(81, 17, 24, 1, 'optionb'),
(81, 17, 25, 1, 'optionb'),
(81, 17, 26, 2, 'optionc'),
(81, 17, 27, 2, 'optionc'),
(81, 17, 28, 2, 'optiond'),
(81, 17, 29, 2, 'optiond'),
(81, 17, 30, 2, 'optiona'),
(81, 17, 31, 2, 'optiond'),
(81, 17, 32, 2, 'optiona'),
(81, 17, 33, 2, 'optiona'),
(81, 17, 34, 2, 'optiond'),
(81, 17, 35, 2, 'optionb'),
(81, 17, 36, 2, 'optiond'),
(81, 17, 37, 2, 'optionc'),
(81, 17, 38, -0.66, 'optiona'),
(81, 17, 39, 2, 'optionb'),
(81, 17, 40, -0.66, 'optiond'),
(81, 17, 41, 2, 'optionc'),
(81, 17, 42, 2, 'optionb'),
(81, 17, 43, 2, 'optiond'),
(81, 17, 44, 2, 'optionb'),
(81, 17, 45, 2, 'optionb'),
(81, 17, 46, 2, 'optionb'),
(81, 17, 47, -0.66, 'optionb'),
(81, 17, 48, 2, 'optiond'),
(81, 17, 49, -0.66, 'optiond'),
(81, 17, 50, 2, 'optiond'),
(81, 17, 51, 2, 'optionc'),
(81, 17, 52, 2, 'optiond'),
(81, 17, 53, 2, 'optiona'),
(81, 17, 54, 2, 'optiond'),
(81, 17, 55, 2, 'optiona'),
(81, 17, 56, 1, 'optiona'),
(81, 17, 57, 1, 'optionb'),
(81, 17, 58, 1, 'optionc'),
(81, 17, 60, 1, 'optiond'),
(81, 17, 61, 2, 'optionb'),
(81, 17, 62, 2, 'optionc'),
(81, 17, 63, 2, 'optiona'),
(81, 17, 64, 2, 'optionb'),
(81, 17, 65, 2, 'optiond'),
(81, 18, 1, 1, 'optiona'),
(81, 18, 2, 1, 'optiond'),
(81, 18, 3, 1, 'optionb'),
(81, 18, 4, 1, 'optiona'),
(81, 18, 5, 1, 'optiond'),
(81, 18, 6, 1, 'optionc'),
(81, 18, 7, 1, 'optionb'),
(81, 18, 8, 1, 'optionb'),
(81, 18, 9, 1, 'optiond'),
(81, 18, 10, 1, 'optionb'),
(81, 18, 11, 1, 'optionb'),
(81, 18, 12, -0.33, 'optionb'),
(81, 18, 13, 1, 'optiond'),
(81, 18, 14, 1, 'optionc'),
(81, 18, 15, 1, 'optionc'),
(81, 18, 16, 1, 'optionc'),
(81, 18, 17, 1, 'optionb'),
(81, 18, 18, 1, 'optiona'),
(81, 18, 19, 1, 'optionc'),
(81, 18, 20, 1, 'optionb'),
(81, 18, 21, 1, 'optiond'),
(81, 18, 22, 1, 'optiond'),
(81, 18, 23, 1, 'optiond'),
(81, 18, 24, 1, 'optionc'),
(81, 18, 25, 1, 'optionc'),
(81, 18, 26, 2, 'optionb'),
(81, 18, 27, 2, 'optiond'),
(81, 18, 28, 2, 'optiona'),
(81, 18, 29, 2, 'optiond'),
(81, 18, 30, 2, 'optionc'),
(81, 18, 31, 2, 'optiona'),
(81, 18, 32, 2, 'optionb'),
(81, 18, 33, 2, 'optiond'),
(81, 18, 34, 2, 'optiona'),
(81, 18, 35, 2, 'optiond'),
(81, 18, 36, 2, 'optiona'),
(81, 18, 37, 2, 'optionc'),
(81, 18, 38, 2, 'optionb'),
(81, 18, 39, 2, 'optiona'),
(81, 18, 40, 2, 'optionb'),
(81, 18, 41, 2, 'optiond'),
(81, 18, 42, 2, 'optionb'),
(81, 18, 43, -0.66, 'optionc'),
(81, 18, 44, 2, 'optionc'),
(81, 18, 45, -0.66, 'optionc'),
(81, 18, 46, 2, 'optionc'),
(81, 18, 47, -0.66, 'optionb'),
(81, 18, 48, -0.66, 'optiona'),
(81, 18, 49, -0.66, 'optionb'),
(81, 18, 50, 2, 'optionc'),
(81, 18, 51, -0.66, 'optionb'),
(81, 18, 52, 2, 'optiona'),
(81, 18, 53, -0.66, 'optionc'),
(81, 18, 54, 2, 'optiona'),
(81, 18, 55, 2, 'optiond'),
(81, 18, 56, 1, 'optione'),
(81, 18, 57, 1, 'optionb'),
(81, 18, 58, 1, 'optionc'),
(81, 18, 59, 1, 'optionc'),
(81, 18, 60, 1, 'optiona'),
(81, 18, 61, 2, 'optionb'),
(81, 18, 64, 2, 'optionb'),
(81, 18, 65, 2, 'optiond'),
(82, 4, 1, -0.33, 'optionc'),
(82, 4, 2, 1, 'optiond'),
(82, 4, 3, -0.33, 'optionb'),
(82, 4, 4, 1, 'optionc'),
(82, 4, 5, 1, 'optionb'),
(82, 4, 6, -0.33, 'optionc'),
(82, 4, 7, -0.33, 'optionb'),
(82, 4, 8, 1, 'optionb'),
(82, 4, 10, 1, 'optionc'),
(82, 4, 11, -0.33, 'optionb'),
(82, 4, 12, 1, 'optionc'),
(82, 4, 13, -0.33, 'optionc'),
(82, 4, 14, 1, 'optiond'),
(82, 4, 15, 1, 'optiona'),
(82, 4, 16, 1, 'optiona'),
(82, 4, 17, -0.33, 'optionc'),
(82, 4, 18, 1, 'optionc'),
(82, 4, 19, -0.33, 'optiond'),
(82, 4, 20, -0.33, 'optionc'),
(82, 4, 21, 2, 'optiond'),
(82, 4, 22, -0.66, ''),
(82, 4, 23, -0.66, 'optiond'),
(82, 4, 24, -0.66, 'optionb'),
(82, 4, 25, 2, 'optiona'),
(82, 4, 26, 2, 'optionc'),
(82, 4, 27, -0.66, 'optiona'),
(82, 4, 28, 2, 'optiond'),
(82, 4, 30, 2, 'optionc'),
(82, 4, 31, -0.66, 'optiond'),
(82, 4, 32, 2, 'optiond'),
(82, 4, 33, -0.66, 'optionb'),
(82, 4, 34, 2, 'optiona'),
(82, 4, 35, -0.66, 'optionb'),
(82, 4, 36, -0.66, 'optionb'),
(82, 4, 37, -0.66, 'optionc'),
(82, 4, 38, -0.66, 'optionc'),
(82, 4, 39, 2, 'optionb'),
(82, 4, 40, -0.66, 'optionc'),
(82, 4, 41, 4, 'optionc'),
(82, 4, 42, 4, 'optionc'),
(82, 4, 43, 4, 'optionc'),
(82, 4, 44, -1.33, 'optionc'),
(82, 4, 45, -1.33, 'optionb'),
(82, 4, 46, 4, ''),
(82, 4, 48, -1.33, 'optionc'),
(82, 4, 49, 4, 'optiona'),
(82, 4, 50, 4, 'optionc'),
(82, 7, 1, 1, 'optionc'),
(82, 7, 2, 1, 'optiond'),
(82, 7, 3, -0.33, 'optiond'),
(82, 7, 4, 1, 'optiond'),
(82, 7, 5, -0.33, 'optionc'),
(82, 7, 6, 1, 'optionb'),
(82, 7, 7, -0.33, 'optionc'),
(82, 7, 8, -0.33, 'optionc'),
(82, 7, 10, 1, 'optionc'),
(82, 7, 11, 1, 'optiona'),
(82, 7, 12, -0.33, 'optionc'),
(82, 7, 13, 1, 'optionc'),
(82, 7, 14, 1, 'optionc'),
(82, 7, 15, -0.33, 'optiona'),
(82, 7, 16, 1, 'optiona'),
(82, 7, 17, 1, 'optionc'),
(82, 7, 18, -0.33, 'optionb'),
(82, 7, 19, 1, 'optiond'),
(82, 7, 21, -0.33, 'optionc'),
(82, 7, 22, -0.33, 'optionb'),
(82, 7, 23, 1, 'optiond'),
(82, 7, 24, 1, 'optiona'),
(82, 7, 25, -0.33, 'optionb'),
(82, 7, 26, 2, 'optiona'),
(82, 7, 27, -0.66, 'optiond'),
(82, 7, 28, 2, 'optiona'),
(82, 7, 31, 2, 'optiona'),
(82, 7, 33, 2, 'optiond'),
(82, 7, 34, -0.66, 'optiond'),
(82, 7, 35, 2, 'optionc'),
(82, 7, 36, 2, 'optionc'),
(82, 7, 38, 2, 'optiona'),
(82, 7, 39, -0.66, 'optiona'),
(82, 7, 40, 2, 'optionb'),
(82, 7, 41, 2, 'optionc'),
(82, 7, 42, 2, 'optionc'),
(82, 7, 43, 2, 'optionb'),
(82, 7, 44, -0.66, 'optionc'),
(82, 7, 45, 2, 'optiond'),
(82, 7, 47, -0.66, 'optiona'),
(82, 7, 52, 2, 'optiona'),
(82, 7, 53, 2, 'optionb'),
(82, 7, 54, 2, 'optiond'),
(82, 7, 55, -0.66, 'optiond'),
(82, 7, 56, 1, 'optiona'),
(82, 7, 57, -0.33, 'optiond'),
(82, 7, 58, 1, 'optionb'),
(82, 7, 60, -0.33, 'optiond'),
(82, 7, 62, 2, 'optionc'),
(82, 7, 63, 2, 'optiond'),
(82, 7, 65, -0.66, 'optionc'),
(82, 8, 1, 1, 'optione'),
(82, 8, 2, -0.33, 'optionc'),
(82, 8, 3, 1, 'optionb'),
(82, 8, 4, 1, 'optiond'),
(82, 8, 5, 1, 'optionc'),
(82, 8, 6, 1, 'optiond'),
(82, 8, 7, 1, 'optionb'),
(82, 8, 8, 1, 'optionb'),
(82, 8, 9, -0.33, 'optionb'),
(82, 8, 10, 1, 'optionc'),
(82, 8, 11, 1, 'optiond'),
(82, 8, 12, 1, 'optiona'),
(82, 8, 13, 1, 'optionb'),
(82, 8, 14, 1, 'optiona'),
(82, 8, 15, 1, 'optionc'),
(82, 8, 17, -0.33, 'optiond'),
(82, 8, 18, -0.33, 'optionb'),
(82, 8, 19, 1, 'optiona'),
(82, 8, 20, -0.33, 'optionc'),
(82, 8, 22, -0.33, 'optiond'),
(82, 8, 23, 1, 'optiona'),
(82, 8, 24, -0.33, 'optionc'),
(82, 8, 25, 1, 'optiond'),
(82, 8, 26, 1, 'optiond'),
(82, 8, 27, 1, 'optiond'),
(82, 8, 28, -0.33, 'optiona'),
(82, 8, 29, -0.33, 'optiona'),
(82, 8, 30, 1, 'optionc'),
(82, 8, 31, 1, 'optionc'),
(82, 8, 32, 1, 'optionb'),
(82, 8, 33, 1, 'optiona'),
(82, 8, 34, 1, 'optiond'),
(82, 8, 35, 1, 'optionc'),
(82, 8, 36, 1, 'optionc'),
(82, 8, 37, 1, 'optiond'),
(82, 8, 38, 1, 'optionb'),
(82, 8, 39, 1, 'optiond'),
(82, 8, 40, 1, 'optionc'),
(82, 8, 41, 1, 'optiona'),
(82, 8, 42, 1, 'optiond'),
(82, 8, 43, 1, 'optionb'),
(82, 8, 44, 1, 'optionb'),
(82, 8, 45, 1, 'optiond'),
(82, 9, 1, 2, 'optionc'),
(82, 9, 2, -0.66, 'optionc'),
(82, 9, 4, 2, 'optiona'),
(82, 9, 5, -0.66, 'optionc'),
(82, 9, 6, 2, 'optiond'),
(82, 9, 7, 2, 'optionc'),
(82, 9, 8, 2, 'optionb'),
(82, 9, 9, 2, 'optionb'),
(82, 9, 12, 2, 'optiona'),
(82, 9, 15, -0.66, 'optiond'),
(82, 9, 16, 2, 'optionc'),
(82, 9, 19, 2, 'optionc'),
(82, 9, 21, 2, 'optionc'),
(82, 9, 24, -0.66, 'optionb'),
(82, 9, 25, -0.66, 'optionc'),
(82, 9, 26, 2, 'optionc'),
(82, 9, 27, -0.66, 'optiona'),
(82, 9, 29, 2, 'optionc'),
(82, 9, 30, -0.66, 'optiona'),
(82, 9, 31, -0.66, 'optionc'),
(82, 9, 32, -0.66, 'optiona'),
(82, 9, 34, -0.66, 'optiona'),
(82, 9, 35, 2, 'optionb'),
(82, 9, 37, 2, 'optionb'),
(82, 9, 39, -0.66, 'optiona'),
(82, 9, 40, -0.66, 'optionb'),
(82, 9, 42, -0.66, 'optiona'),
(82, 9, 43, -0.66, 'optiona'),
(82, 9, 45, -0.66, 'optiond'),
(82, 9, 46, 2, 'optiond'),
(82, 9, 47, -0.66, 'optionb'),
(82, 9, 48, -0.66, 'optiona'),
(82, 9, 49, 2, 'optionb'),
(82, 9, 50, 2, 'optionb'),
(82, 9, 51, -0.66, 'optionc'),
(82, 9, 52, 2, 'optionb'),
(82, 9, 53, 2, 'optionc'),
(82, 9, 55, -0.66, 'optiond'),
(82, 11, 1, 2, 'optionb'),
(82, 11, 2, -0.66, 'optiond'),
(82, 11, 4, 2, 'optiond'),
(82, 11, 5, 2, 'optionb'),
(82, 11, 6, 2, 'optionb'),
(82, 11, 7, 2, 'optionb'),
(82, 11, 8, 2, 'optiona'),
(82, 11, 9, 2, 'optionc'),
(82, 11, 10, 2, 'optiona'),
(82, 11, 11, 2, 'optiona'),
(82, 11, 12, 2, 'optiona'),
(82, 11, 13, 2, 'optionb'),
(82, 11, 14, -0.66, 'optiond'),
(82, 11, 15, 2, 'optionc'),
(82, 11, 17, 2, 'optiona'),
(82, 11, 18, 2, 'optionb'),
(82, 11, 19, 2, 'optionb'),
(82, 11, 20, -0.66, 'optionb'),
(82, 11, 21, 2, 'optionc'),
(82, 11, 22, 2, 'optiona'),
(82, 11, 23, 2, 'optionc'),
(82, 11, 24, 2, 'optiona'),
(82, 11, 25, 2, 'optionb'),
(82, 11, 26, 2, 'optionc'),
(82, 11, 27, 2, 'optione'),
(82, 11, 29, 2, 'optiond'),
(82, 11, 30, -0.66, 'optionb'),
(82, 11, 31, 2, 'optione'),
(82, 11, 32, 2, 'optionc'),
(82, 11, 33, -0.66, 'optione'),
(82, 11, 34, 2, 'optiond'),
(82, 11, 35, -0.66, 'optionc'),
(82, 11, 36, 2, 'optione'),
(82, 11, 37, -0.66, 'optiond'),
(82, 11, 38, 2, 'optiona'),
(82, 11, 39, 2, 'optiona'),
(82, 11, 40, 2, 'optiond'),
(82, 11, 41, 2, 'optionc'),
(82, 11, 42, 2, 'optione'),
(82, 11, 43, -0.66, 'optionc'),
(82, 11, 45, -0.66, 'optionc'),
(82, 11, 46, 2, 'optiona'),
(82, 11, 48, -0.66, 'optionc'),
(82, 11, 49, -0.66, 'optione'),
(82, 11, 51, -0.66, 'optionc'),
(82, 11, 52, -0.66, 'optionc'),
(82, 11, 53, 2, 'optionc'),
(82, 11, 54, 2, 'optionb'),
(82, 11, 55, -0.66, 'optionc'),
(82, 11, 56, 2, 'optione'),
(82, 11, 57, -0.66, 'optionb'),
(82, 11, 58, -0.66, 'optionb'),
(82, 11, 60, 2, 'optiond'),
(82, 12, 1, 2, 'optionc'),
(82, 12, 2, 2, 'optionc'),
(82, 12, 3, -0.66, 'optionc'),
(82, 12, 4, -0.66, 'optionb'),
(82, 12, 5, 2, 'optiona'),
(82, 12, 6, -0.66, 'optionb'),
(82, 12, 7, -0.66, 'optiond'),
(82, 12, 14, -0.66, 'optionc'),
(82, 12, 15, 2, 'optiond'),
(82, 12, 16, 2, 'optionc'),
(82, 12, 19, 2, 'optionb'),
(82, 12, 20, 2, 'optionb'),
(82, 12, 21, 2, 'optiona'),
(82, 12, 24, 2, 'optiona'),
(82, 12, 25, 2, 'optionc'),
(82, 12, 26, 2, 'optionb'),
(82, 12, 27, -0.66, 'optiond'),
(82, 12, 30, -0.66, 'optionc'),
(82, 12, 31, 2, 'optionc'),
(82, 12, 32, 2, 'optionc'),
(82, 12, 33, 2, 'optiond'),
(82, 12, 34, 2, 'optiond'),
(82, 12, 35, -0.66, 'optiona'),
(82, 12, 36, -0.66, 'optiona'),
(82, 12, 38, -0.66, 'optiona'),
(82, 12, 39, 2, 'optiona'),
(82, 12, 40, -0.66, 'optionc'),
(82, 12, 41, -0.66, 'optiond'),
(82, 12, 42, 2, 'optiona'),
(82, 12, 43, 2, 'optiond'),
(82, 12, 45, 2, 'optiond'),
(82, 12, 46, 2, 'optiond'),
(82, 12, 47, 2, 'optionc'),
(82, 12, 48, -0.66, 'optionc'),
(82, 12, 50, 2, 'optionb'),
(82, 12, 52, 2, 'optionb'),
(82, 12, 53, 2, 'optiona'),
(82, 12, 54, 2, 'optiona'),
(82, 13, 1, -0.66, 'optiond'),
(82, 13, 3, -0.66, 'optiond'),
(82, 13, 6, -0.66, 'optiona'),
(82, 13, 7, -0.66, 'optionc'),
(82, 13, 8, 2, 'optionc'),
(82, 13, 10, -0.66, 'optionb'),
(82, 13, 11, 2, 'optiond'),
(82, 13, 12, 2, 'optiona'),
(82, 13, 13, 2, 'optiond'),
(82, 13, 14, 2, 'optionb'),
(82, 13, 15, -0.66, 'optiona'),
(82, 13, 19, 2, 'optionb'),
(82, 13, 22, 2, 'optiona'),
(82, 13, 24, 2, 'optionc'),
(82, 13, 25, 2, 'optiona'),
(82, 13, 26, 2, 'optiond'),
(82, 13, 27, 2, 'optiond'),
(82, 13, 28, 2, 'optionc'),
(82, 13, 30, -0.66, 'optiond'),
(82, 13, 32, 2, 'optiona'),
(82, 13, 34, 2, 'optiona'),
(82, 13, 36, 2, 'optionc'),
(82, 13, 39, 2, 'optiona'),
(82, 13, 40, 2, 'optiond'),
(82, 15, 1, 1, 'optionc'),
(82, 15, 2, 1, 'optiond'),
(82, 15, 3, 1, 'optionc'),
(82, 15, 4, -0.33, 'optionb'),
(82, 15, 5, 1, 'optionb'),
(82, 15, 6, 1, 'optiona'),
(82, 15, 7, 1, 'optionb'),
(82, 15, 9, 1, 'optionb'),
(82, 15, 11, 1, 'optiond'),
(82, 15, 12, -0.33, 'optiond'),
(82, 15, 13, 1, 'optionb'),
(82, 15, 14, 1, 'optionc'),
(82, 15, 15, 1, 'optiond'),
(82, 15, 16, 1, 'optiond'),
(82, 15, 17, -0.33, 'optiond'),
(82, 15, 18, 1, 'optionb'),
(82, 15, 19, 1, 'optionc'),
(82, 15, 20, 1, 'optionb'),
(82, 15, 21, 1, 'optiona'),
(82, 15, 22, 1, 'optionb'),
(82, 15, 23, 1, 'optiona'),
(82, 15, 24, 1, 'optiona'),
(82, 15, 25, -0.33, 'optionb'),
(82, 15, 26, 2, 'optiona'),
(82, 15, 27, -0.66, 'optionb'),
(82, 15, 28, 2, 'optiond'),
(82, 15, 29, 2, 'optiond'),
(82, 15, 30, -0.66, 'optiond'),
(82, 15, 31, 2, 'optiona'),
(82, 15, 32, 2, 'optiona'),
(82, 15, 33, 2, 'optionc'),
(82, 15, 35, 2, 'optionc'),
(82, 15, 36, 2, 'optiond'),
(82, 15, 37, 2, 'optionb'),
(82, 15, 38, -0.66, 'optiona'),
(82, 15, 39, -0.66, 'optionc'),
(82, 15, 40, 2, 'optiond'),
(82, 15, 41, 2, 'optionc'),
(82, 15, 43, 2, 'optiona'),
(82, 15, 44, 2, 'optiond'),
(82, 15, 45, -0.66, 'optionc'),
(82, 15, 46, -0.66, 'optionc'),
(82, 15, 47, 2, 'optiond'),
(82, 15, 48, 2, 'optionc'),
(82, 15, 49, -0.66, 'optiona'),
(82, 15, 50, 2, 'optiond'),
(82, 15, 51, -0.66, 'optionc'),
(82, 15, 52, 2, 'optionc'),
(82, 15, 54, 2, 'optionc'),
(82, 15, 55, -0.66, 'optionc'),
(82, 15, 56, 1, 'optionc'),
(82, 15, 58, -0.33, 'optionb'),
(82, 15, 59, 1, 'optiond'),
(82, 15, 60, 1, 'optiona'),
(82, 15, 61, 2, 'optionc'),
(82, 15, 62, 2, 'optionb'),
(82, 15, 63, 2, 'optiond'),
(82, 15, 64, -0.66, 'optionc'),
(82, 15, 65, -0.66, 'optiond'),
(82, 16, 1, 1, 'optionc'),
(82, 16, 3, 1, 'optiond'),
(82, 16, 4, 1, 'optiond'),
(82, 16, 6, 1, 'optionb'),
(82, 16, 7, -0.33, 'optionc'),
(82, 16, 9, 1, 'optionc'),
(82, 16, 11, -0.33, 'optionc'),
(82, 16, 12, 1, 'optiond'),
(82, 16, 14, 1, 'optiond'),
(82, 16, 15, 1, 'optionc'),
(82, 16, 16, -0.33, 'optionb'),
(82, 16, 18, 1, 'optiond'),
(82, 16, 19, -0.33, 'optionb'),
(82, 16, 20, -0.33, 'optionb'),
(82, 16, 21, -0.33, 'optiona'),
(82, 16, 22, 1, 'optionb'),
(82, 16, 23, 1, 'optionc'),
(82, 16, 25, -0.33, 'optiond'),
(82, 16, 26, -0.66, 'optiond'),
(82, 16, 28, -0.66, 'optiona'),
(82, 16, 29, -0.66, 'optionb'),
(82, 16, 30, 2, 'optiond'),
(82, 16, 31, -0.66, 'optionc'),
(82, 16, 32, -0.66, 'optionb'),
(82, 16, 33, 2, 'optiond'),
(82, 16, 34, -0.66, 'optionb'),
(82, 16, 35, -0.66, 'optiona'),
(82, 16, 36, -0.66, 'optionb'),
(82, 16, 37, 2, 'optionb'),
(82, 16, 39, -0.66, 'optiond'),
(82, 16, 40, 2, 'optiona'),
(82, 16, 41, -0.66, 'optiona'),
(82, 16, 43, 2, 'optiona'),
(82, 16, 44, 2, 'optiond'),
(82, 16, 45, 2, 'optiona'),
(82, 16, 46, -0.66, 'optionb'),
(82, 16, 48, 2, 'optiona'),
(82, 16, 49, 2, 'optionc'),
(82, 16, 50, 2, 'optiona'),
(82, 16, 51, -0.66, 'optiond'),
(82, 16, 53, -0.66, 'optionc'),
(82, 16, 60, -0.33, 'optiond'),
(82, 16, 61, 2, 'optionb'),
(82, 16, 62, 2, 'optiond'),
(82, 16, 64, 2, 'optionb'),
(82, 17, 1, -0.33, 'optionb'),
(82, 17, 2, 1, 'optionb'),
(82, 17, 3, -0.33, 'optionc'),
(82, 17, 5, 1, 'optionc'),
(82, 17, 6, 1, 'optiona'),
(82, 17, 7, -0.33, 'optiona'),
(82, 17, 8, -0.33, 'optionc'),
(82, 17, 9, -0.33, 'optiona'),
(82, 17, 10, -0.33, 'optionc'),
(82, 17, 11, -0.33, 'optionb'),
(82, 17, 12, 1, 'optiona'),
(82, 17, 13, -0.33, 'optiona'),
(82, 17, 14, -0.33, 'optionb'),
(82, 17, 18, -0.33, 'optiond'),
(82, 17, 19, -0.33, 'optiona'),
(82, 17, 20, -0.33, 'optionb'),
(82, 17, 21, 1, 'optionc'),
(82, 17, 22, 1, 'optionb'),
(82, 17, 23, 1, 'optiond'),
(82, 17, 24, 1, 'optionb'),
(82, 17, 25, -0.33, 'optiond'),
(82, 17, 26, 2, 'optionc'),
(82, 17, 27, -0.66, 'optiona'),
(82, 17, 28, -0.66, 'optionb'),
(82, 17, 29, -0.66, 'optiona'),
(82, 17, 30, 2, 'optiona'),
(82, 17, 31, 2, 'optiond'),
(82, 17, 32, 2, 'optiona'),
(82, 17, 33, 2, 'optiona'),
(82, 17, 34, 2, 'optiond'),
(82, 17, 35, -0.66, 'optionc'),
(82, 17, 36, -0.66, 'optionc'),
(82, 17, 37, 2, 'optionc'),
(82, 17, 38, 2, 'optionc'),
(82, 17, 39, 2, 'optionb'),
(82, 17, 41, -0.66, 'optionb'),
(82, 17, 42, 2, 'optionb'),
(82, 17, 44, -0.66, 'optiona'),
(82, 17, 45, 2, 'optionb'),
(82, 17, 46, -0.66, 'optiond'),
(82, 17, 47, -0.66, 'optionb'),
(82, 17, 48, -0.66, 'optionc'),
(82, 17, 50, -0.66, 'optiona'),
(82, 17, 51, 2, 'optionc'),
(82, 17, 52, 2, 'optiond'),
(82, 17, 53, 2, 'optiona'),
(82, 17, 54, 2, 'optiond'),
(82, 17, 58, 1, 'optionc'),
(82, 17, 60, 1, 'optiond'),
(82, 17, 61, -0.66, 'optiond'),
(82, 17, 62, 2, 'optionc'),
(82, 17, 63, -0.66, 'optionb'),
(82, 17, 65, -0.66, 'optiona'),
(82, 18, 1, -0.33, 'optionc'),
(82, 18, 2, 1, 'optiond'),
(82, 18, 3, 1, 'optionb'),
(82, 18, 4, 1, 'optiona'),
(82, 18, 5, 1, 'optiond'),
(82, 18, 6, -0.33, 'optiona'),
(82, 18, 7, -0.33, 'optiond'),
(82, 18, 8, 1, 'optionb'),
(82, 18, 9, 1, 'optiond'),
(82, 18, 11, 1, 'optionb'),
(82, 18, 12, 1, 'optiona'),
(82, 18, 13, -0.33, 'optionb'),
(82, 18, 14, -0.33, 'optiona'),
(82, 18, 15, 1, 'optionc'),
(82, 18, 16, 1, 'optionc'),
(82, 18, 17, -0.33, 'optionc'),
(82, 18, 18, 1, 'optiona'),
(82, 18, 19, 1, 'optionc'),
(82, 18, 20, 1, 'optionb'),
(82, 18, 21, 1, 'optiond'),
(82, 18, 22, 1, 'optiond'),
(82, 18, 24, -0.33, 'optiond'),
(82, 18, 25, 1, 'optionc'),
(82, 18, 26, 2, 'optionb'),
(82, 18, 27, -0.66, 'optiona'),
(82, 18, 28, 2, 'optiona'),
(82, 18, 30, 2, 'optionc'),
(82, 18, 31, 2, 'optiona'),
(82, 18, 32, 2, 'optionb'),
(82, 18, 33, 2, 'optiond'),
(82, 18, 34, 2, 'optiona'),
(82, 18, 36, 2, 'optiona'),
(82, 18, 37, -0.66, 'optiona'),
(82, 18, 38, 2, 'optionb'),
(82, 18, 39, -0.66, 'optionc'),
(82, 18, 42, 2, 'optionb'),
(82, 18, 43, -0.66, 'optionc'),
(82, 18, 44, 2, 'optionc'),
(82, 18, 45, -0.66, 'optionc'),
(82, 18, 47, 2, 'optiond'),
(82, 18, 48, 2, 'optionb'),
(82, 18, 49, 2, 'optionc'),
(82, 18, 50, -0.66, 'optiond'),
(82, 18, 51, -0.66, 'optionb'),
(82, 18, 52, -0.66, 'optionc'),
(82, 18, 53, -0.66, 'optiond'),
(82, 18, 54, 2, 'optiona'),
(82, 18, 56, 1, 'optione'),
(82, 18, 58, -0.33, 'optionb'),
(82, 18, 60, 1, 'optiona'),
(82, 18, 61, 2, 'optionb'),
(82, 18, 62, 2, 'optiond'),
(82, 18, 63, -0.66, 'optionc'),
(82, 18, 64, -0.66, 'optionc'),
(82, 18, 65, 2, 'optiond'),
(83, 7, 1, 1, 'optionc'),
(83, 7, 4, 1, 'optiond'),
(83, 7, 5, -0.33, 'optiona'),
(83, 7, 6, -0.33, 'optiona'),
(83, 7, 8, 1, 'optionb'),
(83, 7, 9, 1, 'optiona'),
(83, 7, 10, 1, 'optionc'),
(83, 7, 11, 1, 'optiona'),
(83, 7, 14, 1, 'optionc'),
(83, 7, 15, 1, 'optionb'),
(83, 7, 16, 1, 'optiona'),
(83, 7, 17, 1, 'optionc'),
(83, 7, 18, 1, 'optiona'),
(83, 7, 19, 1, 'optiond'),
(83, 7, 21, 1, 'optiond'),
(83, 7, 22, 1, 'optiond'),
(83, 7, 24, 1, 'optiona'),
(83, 7, 25, 1, 'optionc'),
(83, 7, 27, -0.66, 'optiond'),
(83, 7, 31, 2, 'optiona'),
(83, 7, 34, -0.66, 'optiond'),
(83, 7, 35, 2, 'optionc'),
(83, 7, 36, 2, 'optionc'),
(83, 7, 38, 2, 'optiona'),
(83, 7, 40, 2, 'optionb'),
(83, 7, 41, 2, 'optionc'),
(83, 7, 42, 2, 'optionc'),
(83, 7, 43, 2, 'optionb'),
(83, 7, 44, 2, 'optionb'),
(83, 7, 45, 2, 'optiond'),
(83, 7, 46, 2, 'optiond'),
(83, 7, 47, 2, 'optionb'),
(83, 7, 50, 2, 'optionc'),
(83, 7, 51, 2, 'optionb'),
(83, 7, 52, 2, 'optiona'),
(83, 7, 54, 2, 'optiond'),
(83, 7, 55, -0.66, 'optiond'),
(83, 7, 56, 1, 'optiona'),
(83, 7, 59, -0.33, 'optionb'),
(83, 7, 60, 1, 'optionc'),
(83, 7, 61, -0.66, 'optionc'),
(83, 7, 63, 2, 'optiond'),
(83, 7, 65, 2, 'optionb'),
(83, 8, 2, -0.33, 'optiond'),
(83, 8, 3, -0.33, 'optionc'),
(83, 8, 4, 1, 'optiond'),
(83, 8, 5, -0.33, 'optiona'),
(83, 8, 6, 1, 'optiond'),
(83, 8, 7, 1, 'optionb'),
(83, 8, 8, -0.33, 'optiona'),
(83, 8, 9, -0.33, 'optionb'),
(83, 8, 10, 1, 'optionc'),
(83, 8, 11, 1, 'optiond'),
(83, 8, 12, 1, 'optiona'),
(83, 8, 13, -0.33, 'optiona'),
(83, 8, 15, 1, 'optionc'),
(83, 8, 18, -0.33, 'optionb'),
(83, 8, 19, 1, 'optiona'),
(83, 8, 20, 1, 'optione'),
(83, 8, 21, -0.33, 'optiond'),
(83, 8, 22, -0.33, 'optionb'),
(83, 8, 26, 1, 'optiond'),
(83, 8, 27, 1, 'optiond'),
(83, 8, 29, 1, 'optionb'),
(83, 8, 30, 1, 'optionc'),
(83, 8, 31, 1, 'optionc'),
(83, 8, 32, 1, 'optionb'),
(83, 8, 33, 1, 'optiona'),
(83, 8, 34, 1, 'optiond'),
(83, 8, 35, 1, 'optionc'),
(83, 8, 36, 1, 'optionc'),
(83, 8, 37, 1, 'optiond'),
(83, 8, 38, 1, 'optionb'),
(83, 8, 39, 1, 'optiond'),
(83, 8, 40, -0.33, 'optiona'),
(83, 8, 41, 1, 'optiona'),
(83, 8, 42, 1, 'optiond'),
(83, 8, 43, 1, 'optionb'),
(83, 8, 44, -0.33, 'optiona'),
(83, 8, 45, 1, 'optiond'),
(83, 9, 1, 2, 'optionc'),
(83, 9, 2, 2, 'optionb'),
(83, 9, 4, 2, 'optiona'),
(83, 9, 5, 2, 'optiond'),
(83, 9, 6, 2, 'optiond'),
(83, 9, 7, -0.66, 'optiona'),
(83, 9, 8, -0.66, 'optionc'),
(83, 9, 9, -0.66, 'optiona'),
(83, 9, 10, 2, 'optionc'),
(83, 9, 12, 2, 'optiona'),
(83, 9, 17, -0.66, 'optiond'),
(83, 9, 18, 2, 'optionb'),
(83, 9, 21, 2, 'optionc'),
(83, 9, 24, 2, 'optionc'),
(83, 9, 25, 2, 'optiond'),
(83, 9, 26, 2, 'optionc'),
(83, 9, 29, 2, 'optionc'),
(83, 9, 30, 2, 'optionb'),
(83, 9, 31, -0.66, 'optiond'),
(83, 9, 32, -0.66, 'optiond'),
(83, 9, 34, 2, 'optiond'),
(83, 9, 35, 2, 'optionb'),
(83, 9, 36, 2, 'optionc'),
(83, 9, 37, 2, 'optionb'),
(83, 9, 39, 2, 'optiond'),
(83, 9, 43, -0.66, 'optiona'),
(83, 9, 50, 2, 'optionb'),
(83, 10, 1, -0.66, 'optionc'),
(83, 10, 2, 2, 'optionb'),
(83, 10, 3, -0.66, 'optione'),
(83, 10, 4, -0.66, 'optionb'),
(83, 10, 5, 2, 'optionb'),
(83, 10, 6, 2, 'optionb'),
(83, 10, 7, -0.66, 'optionc'),
(83, 10, 8, -0.66, 'optionb'),
(83, 10, 9, 2, 'optionc'),
(83, 10, 10, 2, 'optiond'),
(83, 10, 11, 2, 'optionc'),
(83, 10, 12, 2, 'optionb'),
(83, 10, 14, 2, 'optionb'),
(83, 10, 15, 2, 'optiond'),
(83, 10, 16, 2, 'optiona'),
(83, 10, 17, 2, 'optionb'),
(83, 10, 18, -0.66, 'optionb'),
(83, 10, 19, 2, 'optiona'),
(83, 10, 21, 2, 'optionb'),
(83, 10, 22, 2, 'optionb'),
(83, 10, 23, -0.66, 'optionc'),
(83, 10, 24, -0.66, 'optionc'),
(83, 11, 1, 2, 'optionb'),
(83, 11, 3, -0.66, 'optionc'),
(83, 11, 4, 2, 'optiond'),
(83, 11, 5, 2, 'optionb'),
(83, 11, 6, 2, 'optionb'),
(83, 11, 7, -0.66, 'optiona'),
(83, 11, 8, 2, 'optiona'),
(83, 11, 9, 2, 'optionc'),
(83, 11, 10, 2, 'optiona'),
(83, 11, 11, 2, 'optiona'),
(83, 11, 12, 2, 'optiona'),
(83, 11, 13, 2, 'optionb'),
(83, 11, 15, 2, 'optionc'),
(83, 11, 17, 2, 'optiona'),
(83, 11, 18, 2, 'optionb'),
(83, 11, 19, 2, 'optionb'),
(83, 11, 20, -0.66, 'optionb'),
(83, 11, 21, 2, 'optionc'),
(83, 11, 22, 2, 'optiona'),
(83, 11, 23, 2, 'optionc'),
(83, 11, 24, -0.66, 'optionc'),
(83, 11, 25, 2, 'optionb'),
(83, 11, 26, 2, 'optionc'),
(83, 11, 27, 2, 'optione'),
(83, 11, 29, 2, 'optiond'),
(83, 11, 30, -0.66, 'optionb'),
(83, 11, 31, -0.66, 'optiond'),
(83, 11, 32, 2, 'optionc'),
(83, 11, 33, -0.66, 'optione'),
(83, 11, 34, -0.66, 'optionb'),
(83, 11, 35, 2, 'optiond'),
(83, 11, 36, -0.66, 'optiond'),
(83, 11, 37, -0.66, 'optiond'),
(83, 11, 38, 2, 'optiona'),
(83, 11, 39, 2, 'optiona'),
(83, 11, 40, 2, 'optiond'),
(83, 11, 41, 2, 'optionc'),
(83, 11, 42, 2, 'optione'),
(83, 11, 43, -0.66, 'optionb'),
(83, 11, 46, 2, 'optiona'),
(83, 11, 48, -0.66, 'optionc'),
(83, 11, 49, 2, 'optiond'),
(83, 11, 51, -0.66, 'optionc'),
(83, 11, 52, 2, 'optionb'),
(83, 11, 53, 2, 'optionc'),
(83, 11, 54, 2, 'optionb'),
(83, 11, 55, -0.66, 'optionc'),
(83, 11, 56, 2, 'optione'),
(83, 11, 58, -0.66, 'optionb'),
(83, 11, 59, 2, 'optiona'),
(83, 11, 60, 2, 'optiond'),
(83, 12, 1, 2, 'optionc'),
(83, 12, 2, 2, 'optionc'),
(83, 12, 3, 2, 'optiond'),
(83, 12, 4, -0.66, 'optiona'),
(83, 12, 5, 2, 'optiona'),
(83, 12, 6, 2, 'optiond'),
(83, 12, 7, 2, 'optionb'),
(83, 12, 8, -0.66, 'optionc'),
(83, 12, 9, 2, 'optiona'),
(83, 12, 10, -0.66, 'optionc'),
(83, 12, 11, -0.66, 'optiona'),
(83, 12, 12, -0.66, 'optiona'),
(83, 12, 13, 2, 'optionb'),
(83, 12, 14, 2, 'optiona'),
(83, 12, 15, 2, 'optiond'),
(83, 12, 16, 2, 'optionc'),
(83, 12, 17, -0.66, 'optiona'),
(83, 12, 18, 2, 'optiond'),
(83, 12, 19, 2, 'optionb'),
(83, 12, 20, 2, 'optionb'),
(83, 12, 21, 2, 'optiona'),
(83, 12, 22, 2, 'optiond'),
(83, 12, 23, 2, 'optionb'),
(83, 12, 26, 2, 'optionb'),
(83, 12, 27, -0.66, 'optionb'),
(83, 12, 28, 2, 'optiond'),
(83, 12, 29, 2, 'optiona'),
(83, 12, 30, -0.66, 'optiona'),
(83, 12, 31, 2, 'optionc'),
(83, 12, 32, 2, 'optionc'),
(83, 12, 34, 2, 'optiond'),
(83, 12, 35, -0.66, 'optionc'),
(83, 12, 36, -0.66, 'optionb'),
(83, 12, 38, 2, 'optionc'),
(83, 12, 40, 2, 'optiona'),
(83, 12, 41, 2, 'optionb'),
(83, 12, 42, 2, 'optiona'),
(83, 12, 43, -0.66, 'optionc'),
(83, 12, 44, 2, 'optionb'),
(83, 12, 45, 2, 'optiond'),
(83, 12, 46, 2, 'optiond'),
(83, 12, 47, 2, 'optionc'),
(83, 12, 48, -0.66, 'optionc'),
(83, 12, 50, -0.66, 'optionc'),
(83, 12, 51, 2, 'optionc'),
(83, 12, 52, 2, 'optionb'),
(83, 12, 53, 2, 'optiona'),
(83, 12, 54, 2, 'optiona'),
(83, 13, 1, -0.66, 'optiond'),
(83, 13, 2, -0.66, 'optiond'),
(83, 13, 6, -0.66, 'optiona'),
(83, 13, 7, -0.66, 'optiond'),
(83, 13, 8, 2, 'optionc'),
(83, 13, 10, -0.66, 'optionb'),
(83, 13, 11, 2, 'optiond'),
(83, 13, 12, 2, 'optiona'),
(83, 13, 22, 2, 'optiona'),
(83, 13, 24, 2, 'optionc'),
(83, 13, 25, 2, 'optiona'),
(83, 13, 28, 2, 'optionc'),
(83, 13, 30, 2, 'optiona'),
(83, 13, 32, 2, 'optiona'),
(83, 13, 33, 2, 'optionb'),
(83, 13, 34, 2, 'optiona'),
(83, 13, 35, 2, 'optionc'),
(83, 13, 36, 2, 'optionc'),
(83, 13, 38, 2, 'optionb'),
(83, 13, 39, 2, 'optiona'),
(83, 13, 40, 2, 'optiond'),
(83, 15, 1, 1, 'optionc'),
(83, 15, 2, 1, 'optiond'),
(83, 15, 4, -0.33, 'optiond'),
(83, 15, 6, 1, 'optiona'),
(83, 15, 8, 1, 'optiona'),
(83, 15, 9, 1, 'optionb'),
(83, 15, 10, 1, 'optiona'),
(83, 15, 11, 1, 'optiond'),
(83, 15, 12, 1, 'optionc'),
(83, 15, 13, 1, 'optionb'),
(83, 15, 14, 1, 'optionc'),
(83, 15, 15, 1, 'optiond'),
(83, 15, 16, 1, 'optiond'),
(83, 15, 17, 1, 'optionb'),
(83, 15, 18, 1, 'optionb'),
(83, 15, 19, 1, 'optionc'),
(83, 15, 20, 1, 'optionb'),
(83, 15, 21, 1, 'optiona'),
(83, 15, 22, 1, 'optionb'),
(83, 15, 23, -0.33, 'optionb'),
(83, 15, 24, 1, 'optiona'),
(83, 15, 25, 1, 'optiond'),
(83, 15, 26, 2, 'optiona'),
(83, 15, 27, 2, 'optiona'),
(83, 15, 29, 2, 'optiond'),
(83, 15, 30, 2, 'optionb'),
(83, 15, 31, 2, 'optiona'),
(83, 15, 32, 2, 'optiona'),
(83, 15, 33, -0.66, 'optionb'),
(83, 15, 35, 2, 'optionc'),
(83, 15, 36, 2, 'optiond'),
(83, 15, 37, 2, 'optionb'),
(83, 15, 38, 2, 'optionc'),
(83, 15, 39, 2, 'optionb'),
(83, 15, 40, 2, 'optiond'),
(83, 15, 41, -0.66, 'optiond'),
(83, 15, 42, 2, 'optiona'),
(83, 15, 43, 2, 'optiona'),
(83, 15, 44, 2, 'optiond'),
(83, 15, 45, 2, 'optiona'),
(83, 15, 47, 2, 'optiond'),
(83, 15, 48, 2, 'optionc'),
(83, 15, 50, 2, 'optiond'),
(83, 15, 51, 2, 'optionb'),
(83, 15, 52, 2, 'optionc'),
(83, 15, 54, 2, 'optionc'),
(83, 15, 55, 2, 'optionb'),
(83, 15, 56, 1, 'optionc'),
(83, 15, 57, -0.33, 'optionc'),
(83, 15, 58, 1, 'optiond'),
(83, 15, 59, 1, 'optiond'),
(83, 15, 61, -0.66, 'optiona'),
(83, 15, 62, 2, 'optionb'),
(83, 15, 63, -0.66, 'optionb'),
(83, 15, 64, 2, 'optiond'),
(83, 16, 1, 1, 'optionc'),
(83, 16, 3, 1, 'optiond'),
(83, 16, 6, 1, 'optionb'),
(83, 16, 8, -0.33, 'optiond'),
(83, 16, 9, 1, 'optionc'),
(83, 16, 11, -0.33, 'optiona'),
(83, 16, 12, -0.33, 'optionc'),
(83, 16, 13, 1, 'optionb'),
(83, 16, 14, -0.33, 'optionc'),
(83, 16, 15, 1, 'optionc'),
(83, 16, 16, -0.33, 'optionc'),
(83, 16, 17, -0.33, 'optionb'),
(83, 16, 18, -0.33, 'optionc'),
(83, 16, 20, -0.33, 'optionc'),
(83, 16, 21, -0.33, 'optiona'),
(83, 16, 22, 1, 'optionb'),
(83, 16, 25, -0.33, 'optionc'),
(83, 16, 28, -0.66, 'optiona'),
(83, 16, 29, -0.66, 'optiona'),
(83, 16, 30, 2, 'optiond'),
(83, 16, 32, -0.66, 'optionb'),
(83, 16, 34, -0.66, 'optionc'),
(83, 16, 35, -0.66, 'optiond'),
(83, 16, 37, 2, 'optionb'),
(83, 16, 38, 2, 'optionb'),
(83, 16, 40, 2, 'optiona'),
(83, 16, 41, 2, 'optionc'),
(83, 16, 43, 2, 'optiona'),
(83, 16, 44, 2, 'optiond'),
(83, 16, 45, 2, 'optiona'),
(83, 16, 46, -0.66, 'optiond'),
(83, 16, 48, 2, 'optiona'),
(83, 16, 49, 2, 'optionc'),
(83, 16, 50, 2, 'optiona'),
(83, 16, 51, -0.66, 'optionb'),
(83, 16, 57, 1, 'optionc'),
(83, 16, 59, 1, 'optionc'),
(83, 16, 60, -0.33, 'optionb'),
(83, 16, 61, -0.66, 'optiond'),
(83, 17, 1, -0.33, 'optionb'),
(83, 17, 2, 1, 'optionb'),
(83, 17, 3, 1, 'optionb'),
(83, 17, 4, -0.33, 'optionb'),
(83, 17, 5, 1, 'optionc'),
(83, 17, 6, 1, 'optiona'),
(83, 17, 7, 1, 'optionc'),
(83, 17, 8, 1, 'optiona'),
(83, 17, 9, 1, 'optionb'),
(83, 17, 10, -0.33, 'optionc'),
(83, 17, 11, -0.33, 'optionb'),
(83, 17, 12, 1, 'optiona'),
(83, 17, 13, 1, 'optionb'),
(83, 17, 14, 1, 'optionc'),
(83, 17, 18, 1, 'optionb'),
(83, 17, 19, 1, 'optionb'),
(83, 17, 20, -0.33, 'optionb'),
(83, 17, 21, 1, 'optionc'),
(83, 17, 22, 1, 'optionb'),
(83, 17, 23, 1, 'optiond'),
(83, 17, 25, 1, 'optionb'),
(83, 17, 26, 2, 'optionc'),
(83, 17, 28, 2, 'optiond'),
(83, 17, 29, -0.66, 'optionb'),
(83, 17, 30, 2, 'optiona'),
(83, 17, 31, 2, 'optiond'),
(83, 17, 32, 2, 'optiona'),
(83, 17, 33, 2, 'optiona'),
(83, 17, 34, 2, 'optiond'),
(83, 17, 35, 2, 'optionb'),
(83, 17, 37, 2, 'optionc'),
(83, 17, 38, -0.66, 'optiona'),
(83, 17, 39, 2, 'optionb'),
(83, 17, 41, 2, 'optionc'),
(83, 17, 42, 2, 'optionb'),
(83, 17, 44, -0.66, 'optionc'),
(83, 17, 45, 2, 'optionb'),
(83, 17, 46, -0.66, 'optionc'),
(83, 17, 47, -0.66, 'optionb'),
(83, 17, 48, -0.66, 'optionb'),
(83, 17, 50, -0.66, 'optionb'),
(83, 17, 51, 2, 'optionc'),
(83, 17, 52, 2, 'optiond'),
(83, 17, 53, -0.66, 'optionb'),
(83, 17, 54, 2, 'optiond'),
(83, 17, 55, 2, 'optiona'),
(83, 17, 57, -0.33, 'optiona'),
(83, 17, 58, 1, 'optionc'),
(83, 17, 59, -0.33, 'optionc'),
(83, 17, 60, 1, 'optiond'),
(83, 17, 61, -0.66, 'optiona'),
(83, 17, 63, 2, 'optiona'),
(83, 17, 64, 2, 'optionb'),
(83, 17, 65, -0.66, 'optionb'),
(83, 18, 1, -0.33, 'optionb'),
(83, 18, 2, 1, 'optiond'),
(83, 18, 3, 1, 'optionb'),
(83, 18, 4, 1, 'optiona'),
(83, 18, 5, -0.33, 'optionc'),
(83, 18, 6, 1, 'optionc'),
(83, 18, 7, 1, 'optionb'),
(83, 18, 8, 1, 'optionb'),
(83, 18, 9, 1, 'optiond'),
(83, 18, 11, 1, 'optionb'),
(83, 18, 12, 1, 'optiona'),
(83, 18, 13, 1, 'optiond'),
(83, 18, 14, 1, 'optionc'),
(83, 18, 15, 1, 'optionc'),
(83, 18, 16, -0.33, 'optionb'),
(83, 18, 17, 1, 'optionb'),
(83, 18, 18, 1, 'optiona'),
(83, 18, 19, 1, 'optionc'),
(83, 18, 20, 1, 'optionb'),
(83, 18, 21, 1, 'optiond'),
(83, 18, 22, 1, 'optiond'),
(83, 18, 23, -0.33, 'optiona'),
(83, 18, 24, 1, 'optionc'),
(83, 18, 25, 1, 'optionc'),
(83, 18, 26, 2, 'optionb'),
(83, 18, 27, 2, 'optiond'),
(83, 18, 28, 2, 'optiona'),
(83, 18, 29, -0.66, 'optionc'),
(83, 18, 30, 2, 'optionc'),
(83, 18, 31, 2, 'optiona'),
(83, 18, 32, 2, 'optionb'),
(83, 18, 33, 2, 'optiond'),
(83, 18, 36, -0.66, 'optionb'),
(83, 18, 37, 2, 'optionc'),
(83, 18, 38, -0.66, 'optiond'),
(83, 18, 39, 2, 'optiona'),
(83, 18, 42, 2, 'optionb'),
(83, 18, 45, -0.66, 'optionc'),
(83, 18, 47, 2, 'optiond'),
(83, 18, 48, 2, 'optionb'),
(83, 18, 49, 2, 'optionc'),
(83, 18, 50, 2, 'optionc'),
(83, 18, 51, -0.66, 'optionc'),
(83, 18, 52, 2, 'optiona'),
(83, 18, 54, 2, 'optiona'),
(83, 18, 56, 1, 'optione'),
(83, 18, 57, 1, 'optionb'),
(83, 18, 58, 1, 'optionc'),
(83, 18, 59, 1, 'optionc'),
(83, 18, 60, 1, 'optiona'),
(83, 18, 61, 2, 'optionb'),
(83, 18, 62, 2, 'optiond'),
(83, 18, 65, 2, 'optiond'),
(84, 8, 1, 1, 'optione'),
(84, 8, 2, 1, 'optiona'),
(84, 8, 3, -0.33, 'optionc'),
(84, 8, 4, -0.33, 'optionb'),
(84, 8, 5, -0.33, 'optiona'),
(84, 8, 6, 1, 'optiond'),
(84, 8, 7, 1, 'optionb'),
(84, 8, 8, 1, 'optionb'),
(84, 8, 9, -0.33, 'optionb'),
(84, 8, 10, 1, 'optionc'),
(84, 8, 11, 1, 'optiond'),
(84, 8, 12, 1, 'optiona'),
(84, 8, 13, 1, 'optionb'),
(84, 8, 14, -0.33, 'optiond'),
(84, 8, 15, 1, 'optionc'),
(84, 8, 17, -0.33, 'optionb'),
(84, 8, 18, -0.33, 'optiond'),
(84, 8, 19, 1, 'optiona'),
(84, 8, 25, -0.33, 'optione'),
(84, 8, 26, 1, 'optiond'),
(84, 8, 27, 1, 'optiond'),
(84, 8, 30, 1, 'optionc'),
(84, 8, 31, 1, 'optionc'),
(84, 8, 32, 1, 'optionb'),
(84, 8, 33, 1, 'optiona'),
(84, 8, 34, 1, 'optiond'),
(84, 8, 35, 1, 'optionc'),
(84, 8, 36, 1, 'optionc'),
(84, 8, 37, -0.33, 'optionb'),
(84, 8, 38, -0.33, 'optionc'),
(84, 8, 39, 1, 'optiond'),
(84, 8, 40, -0.33, 'optiona'),
(84, 8, 41, 1, 'optiona'),
(84, 8, 42, 1, 'optiond'),
(84, 8, 43, -0.33, 'optiona'),
(84, 8, 44, -0.33, 'optiona'),
(84, 8, 45, 1, 'optiond'),
(84, 15, 2, 1, 'optiond'),
(84, 15, 3, 1, 'optionc'),
(84, 15, 4, 1, 'optiona'),
(84, 15, 5, 1, 'optionb'),
(84, 15, 10, 1, 'optiona'),
(84, 15, 11, 1, 'optiond'),
(84, 15, 12, -0.33, 'optionb'),
(84, 15, 13, 1, 'optionb'),
(84, 15, 14, 1, 'optionc'),
(84, 15, 15, 1, 'optiond'),
(84, 15, 16, 1, 'optiond'),
(84, 15, 17, 1, 'optionb'),
(84, 15, 18, 1, 'optionb'),
(84, 15, 19, 1, 'optionc'),
(84, 15, 20, 1, 'optionb'),
(84, 15, 21, 1, 'optiona'),
(84, 15, 22, 1, 'optionb'),
(84, 15, 23, 1, 'optiona'),
(84, 15, 25, 1, 'optiond'),
(84, 15, 26, -0.66, 'optionb'),
(84, 15, 29, 2, 'optiond'),
(84, 15, 30, 2, 'optionb'),
(84, 15, 37, 2, 'optionb'),
(84, 15, 38, 2, 'optionc'),
(84, 15, 39, 2, 'optionb'),
(84, 15, 40, 2, 'optiond'),
(84, 15, 41, 2, 'optionc'),
(84, 15, 43, 2, 'optiona'),
(84, 15, 44, 2, 'optiond'),
(84, 15, 45, -0.66, 'optionc'),
(84, 15, 47, -0.66, 'optiona'),
(84, 15, 50, 2, 'optiond'),
(84, 15, 51, 2, 'optionb'),
(84, 15, 52, 2, 'optionc'),
(84, 15, 53, -0.66, 'optiona'),
(84, 15, 54, 2, 'optionc'),
(84, 15, 55, 2, 'optionb'),
(84, 15, 56, 1, 'optionc'),
(84, 15, 57, 1, 'optionb'),
(84, 15, 58, 1, 'optiond'),
(84, 15, 59, 1, 'optiond'),
(84, 15, 60, -0.33, 'optionc'),
(84, 15, 64, -0.66, 'optionc'),
(84, 17, 1, 1, 'optiona'),
(84, 17, 2, 1, 'optionb'),
(84, 17, 3, 1, 'optionb'),
(84, 17, 4, 1, 'optionc'),
(84, 17, 5, -0.33, 'optionb'),
(84, 17, 10, -0.33, 'optionb'),
(84, 17, 11, -0.33, 'optionb'),
(84, 17, 15, 1, 'optionb'),
(84, 17, 18, 1, 'optionb'),
(84, 17, 19, -0.33, 'optiond'),
(84, 17, 20, -0.33, 'optionc'),
(84, 17, 22, 1, 'optionb'),
(84, 17, 23, 1, 'optiond'),
(84, 17, 25, 1, 'optionb'),
(84, 17, 26, -0.66, 'optiona'),
(84, 17, 28, -0.66, 'optionb'),
(84, 17, 33, 2, 'optiona'),
(84, 17, 34, 2, 'optiond'),
(84, 17, 42, 2, 'optionb'),
(84, 17, 44, 2, 'optionb'),
(84, 17, 45, -0.66, 'optiond'),
(84, 17, 46, 2, 'optionb'),
(84, 17, 47, 2, 'optiona'),
(84, 17, 50, 2, 'optiond'),
(84, 17, 52, 2, 'optiond'),
(84, 17, 53, 2, 'optiona'),
(84, 17, 61, -0.66, 'optionc'),
(84, 17, 65, -0.66, 'optiona'),
(84, 18, 1, -0.33, 'optiond'),
(84, 18, 2, 1, 'optiond'),
(84, 18, 3, 1, 'optionb'),
(84, 18, 4, 1, 'optiona'),
(84, 18, 6, 1, 'optionc'),
(84, 18, 8, -0.33, 'optionc'),
(84, 18, 9, -0.33, 'optiona'),
(84, 18, 11, -0.33, 'optionc'),
(84, 18, 12, 1, 'optiona'),
(84, 18, 14, 1, 'optionc'),
(84, 18, 15, 1, 'optionc'),
(84, 18, 16, -0.33, 'optionb'),
(84, 18, 19, 1, 'optionc'),
(84, 18, 20, 1, 'optionb'),
(84, 18, 21, -0.33, 'optiona'),
(84, 18, 24, 1, 'optionc'),
(84, 18, 25, 1, 'optionc'),
(84, 18, 26, -0.66, 'optiond'),
(84, 18, 29, 2, 'optiond'),
(84, 18, 32, -0.66, 'optiona'),
(84, 18, 33, 2, 'optiond'),
(84, 18, 34, -0.66, 'optiond'),
(84, 18, 36, -0.66, 'optionb'),
(84, 18, 37, 2, 'optionc'),
(84, 18, 39, -0.66, 'optionc'),
(84, 18, 41, -0.66, 'optiona'),
(84, 18, 42, 2, 'optionb'),
(84, 18, 47, 2, 'optiond'),
(84, 18, 48, -0.66, 'optionc'),
(84, 18, 49, -0.66, 'optionb'),
(84, 18, 52, -0.66, 'optionb'),
(84, 18, 53, -0.66, 'optionc'),
(84, 18, 56, 1, 'optione'),
(84, 18, 57, -0.33, 'optionc'),
(84, 18, 58, -0.33, 'optionb'),
(84, 18, 60, 1, 'optiona'),
(84, 18, 61, 2, 'optionb'),
(84, 18, 62, 2, 'optiond'),
(84, 18, 65, 2, 'optiond'),
(85, 7, 1, 1, 'optionc'),
(85, 7, 2, 1, 'optiond'),
(85, 7, 3, -0.33, 'optiond'),
(85, 7, 4, -0.33, 'optionb'),
(85, 7, 5, -0.33, 'optionc'),
(85, 7, 6, 1, 'optionb'),
(85, 7, 7, 1, 'optionb'),
(85, 7, 8, -0.33, 'optiond'),
(85, 7, 9, -0.33, 'optionc'),
(85, 7, 10, 1, 'optionc'),
(85, 7, 11, 1, 'optiona'),
(85, 7, 15, -0.33, 'optionc'),
(85, 7, 16, 1, 'optiona'),
(85, 7, 17, 1, 'optionc'),
(85, 7, 19, 1, 'optiond'),
(85, 7, 22, -0.33, 'optiona'),
(85, 7, 24, 1, 'optiona'),
(85, 7, 25, -0.33, 'optionb'),
(85, 7, 26, 2, 'optiona'),
(85, 7, 31, 2, 'optiona'),
(85, 7, 35, -0.66, 'optione'),
(85, 7, 36, 2, 'optionc'),
(85, 7, 37, -0.66, 'optiona'),
(85, 7, 39, -0.66, 'optiond'),
(85, 7, 40, 2, 'optionb'),
(85, 7, 41, 2, 'optionc'),
(85, 7, 42, 2, 'optionc'),
(85, 7, 43, 2, 'optionb'),
(85, 7, 44, 2, 'optionb'),
(85, 7, 47, 2, 'optionb'),
(85, 7, 52, -0.66, 'optionb'),
(85, 7, 53, -0.66, 'optiona'),
(85, 7, 54, 2, 'optiond'),
(85, 7, 55, -0.66, 'optiond'),
(85, 7, 56, 1, 'optiona'),
(85, 7, 62, 2, 'optionc'),
(85, 7, 64, 2, 'optionc'),
(85, 7, 65, 2, 'optionb'),
(85, 8, 2, -0.33, 'optiond'),
(85, 8, 3, 1, 'optionb'),
(85, 8, 4, 1, 'optiond'),
(85, 8, 5, -0.33, 'optiona'),
(85, 8, 6, 1, 'optiond'),
(85, 8, 7, 1, 'optionb'),
(85, 8, 8, 1, 'optionb'),
(85, 8, 9, -0.33, 'optionb'),
(85, 8, 10, 1, 'optionc'),
(85, 8, 11, -0.33, 'optionb'),
(85, 8, 12, 1, 'optiona'),
(85, 8, 13, 1, 'optionb'),
(85, 8, 14, 1, 'optiona'),
(85, 8, 15, -0.33, 'optiond'),
(85, 8, 16, 1, 'optionc'),
(85, 8, 17, -0.33, 'optiond'),
(85, 8, 18, 1, 'optione'),
(85, 8, 19, 1, 'optiona'),
(85, 8, 22, -0.33, 'optionc'),
(85, 8, 23, 1, 'optiona'),
(85, 8, 24, -0.33, 'optionb'),
(85, 8, 27, 1, 'optiond'),
(85, 8, 29, -0.33, 'optiona'),
(85, 8, 30, 1, 'optionc'),
(85, 8, 31, -0.33, 'optiond'),
(85, 8, 32, 1, 'optionb'),
(85, 8, 33, 1, 'optiona'),
(85, 8, 34, -0.33, 'optionb'),
(85, 8, 35, 1, 'optionc'),
(85, 8, 37, 1, 'optiond'),
(85, 8, 38, 1, 'optionb'),
(85, 8, 39, 1, 'optiond'),
(85, 8, 40, 1, 'optionc'),
(85, 8, 41, 1, 'optiona'),
(85, 8, 42, 1, 'optiond'),
(85, 8, 43, 1, 'optionb'),
(85, 8, 44, -0.33, 'optiona'),
(85, 8, 45, 1, 'optiond'),
(85, 9, 1, 2, 'optionc'),
(85, 9, 2, -0.66, 'optiond'),
(85, 9, 3, -0.66, 'optiond'),
(85, 9, 4, 2, 'optiona'),
(85, 9, 5, 2, 'optiond'),
(85, 9, 7, -0.66, 'optionb'),
(85, 9, 8, 2, 'optionb'),
(85, 9, 10, 2, 'optionc'),
(85, 9, 12, 2, 'optiona'),
(85, 9, 16, 2, 'optionc'),
(85, 9, 17, -0.66, 'optiond'),
(85, 9, 18, -0.66, 'optiona'),
(85, 9, 19, -0.66, 'optiond'),
(85, 9, 21, -0.66, 'optiond'),
(85, 9, 22, -0.66, 'optiond'),
(85, 9, 26, 2, 'optionc'),
(85, 9, 30, 2, 'optionb'),
(85, 9, 33, -0.66, 'optiona'),
(85, 9, 35, 2, 'optionb'),
(85, 9, 36, 2, 'optionc'),
(85, 9, 37, 2, 'optionb'),
(85, 9, 40, -0.66, 'optionb'),
(85, 9, 46, 2, 'optiond'),
(85, 9, 47, -0.66, 'optiona'),
(85, 9, 48, 2, 'optionc'),
(85, 9, 50, 2, 'optionb'),
(85, 9, 52, 2, 'optionb'),
(85, 9, 53, -0.66, 'optionb'),
(85, 9, 55, 2, 'optionb'),
(85, 10, 1, 2, 'optione'),
(85, 10, 2, 2, 'optionb'),
(85, 10, 3, 2, 'optiond'),
(85, 10, 4, -0.66, 'optione'),
(85, 10, 5, -0.66, 'optiona'),
(85, 10, 6, 2, 'optionb'),
(85, 10, 10, 2, 'optiond'),
(85, 10, 11, 2, 'optionc'),
(85, 10, 12, -0.66, 'optione'),
(85, 10, 13, 2, 'optionc'),
(85, 10, 14, 2, 'optionb'),
(85, 10, 15, 2, 'optiond'),
(85, 10, 16, 2, 'optiona'),
(85, 10, 17, 2, 'optionb'),
(85, 10, 18, 2, 'optiona'),
(85, 10, 19, 2, 'optiona'),
(85, 10, 21, 2, 'optionb'),
(85, 10, 23, -0.66, 'optionc'),
(85, 10, 24, -0.66, 'optiond'),
(85, 11, 1, 2, 'optionb'),
(85, 11, 2, 2, 'optionc'),
(85, 11, 4, -0.66, 'optionc'),
(85, 11, 6, 2, 'optionb'),
(85, 11, 7, -0.66, 'optiona'),
(85, 11, 8, 2, 'optiona'),
(85, 11, 9, 2, 'optionc'),
(85, 11, 10, 2, 'optiona'),
(85, 11, 15, -0.66, 'optiond'),
(85, 11, 21, 2, 'optionc'),
(85, 11, 22, -0.66, 'optionc'),
(85, 11, 24, 2, 'optiona'),
(85, 11, 25, 2, 'optionb'),
(85, 11, 26, -0.66, 'optionb'),
(85, 11, 27, 2, 'optione'),
(85, 11, 30, -0.66, 'optiona'),
(85, 11, 32, -0.66, 'optionb'),
(85, 11, 33, -0.66, 'optione'),
(85, 11, 34, 2, 'optiond'),
(85, 11, 35, 2, 'optiond'),
(85, 11, 36, 2, 'optione'),
(85, 11, 37, 2, 'optionb'),
(85, 11, 38, -0.66, 'optionb'),
(85, 11, 39, 2, 'optiona'),
(85, 11, 41, 2, 'optionc'),
(85, 11, 42, -0.66, 'optiona'),
(85, 11, 43, -0.66, 'optiona'),
(85, 11, 44, -0.66, 'optiona'),
(85, 11, 45, -0.66, 'optionc'),
(85, 11, 46, 2, 'optiona'),
(85, 11, 47, -0.66, 'optiona'),
(85, 11, 48, -0.66, 'optionb'),
(85, 11, 49, 2, 'optiond'),
(85, 11, 50, 2, 'optionc'),
(85, 11, 51, 2, 'optiond'),
(85, 11, 52, -0.66, 'optionc'),
(85, 11, 53, -0.66, 'optione'),
(85, 11, 55, -0.66, 'optionc'),
(85, 11, 56, 2, 'optione'),
(85, 11, 60, 2, 'optiond'),
(85, 12, 2, -0.66, 'optionb'),
(85, 12, 3, 2, 'optiond'),
(85, 12, 4, -0.66, 'optiond'),
(85, 12, 6, -0.66, 'optiona'),
(85, 12, 7, -0.66, 'optiond'),
(85, 12, 8, -0.66, 'optionc'),
(85, 12, 14, -0.66, 'optiond'),
(85, 12, 15, 2, 'optiond'),
(85, 12, 26, 2, 'optionb'),
(85, 12, 27, -0.66, 'optionb'),
(85, 12, 28, -0.66, 'optionb'),
(85, 12, 29, 2, 'optiona'),
(85, 12, 30, -0.66, 'optiona'),
(85, 12, 32, -0.66, 'optione'),
(85, 12, 34, -0.66, 'optiona'),
(85, 12, 35, -0.66, 'optionb'),
(85, 12, 37, 2, 'optiona'),
(85, 12, 40, 2, 'optiona'),
(85, 12, 41, 2, 'optionb'),
(85, 12, 43, 2, 'optiond'),
(85, 12, 45, 2, 'optiond'),
(85, 12, 46, 2, 'optiond'),
(85, 12, 47, 2, 'optionc'),
(85, 12, 48, -0.66, 'optionc'),
(85, 12, 50, 2, 'optionb'),
(85, 12, 51, 2, 'optionc'),
(85, 12, 52, 2, 'optionb'),
(85, 12, 53, 2, 'optiona'),
(85, 12, 54, 2, 'optiona'),
(85, 15, 3, -0.33, 'optiond'),
(85, 15, 6, 1, 'optiona'),
(85, 15, 8, 1, 'optiona'),
(85, 15, 10, -0.33, 'optionb'),
(85, 15, 11, -0.33, 'optionb'),
(85, 15, 13, 1, 'optionb'),
(85, 15, 14, -0.33, 'optiona'),
(85, 15, 15, 1, 'optiond'),
(85, 15, 16, 1, 'optiond'),
(85, 15, 18, -0.33, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(85, 15, 19, 1, 'optionc'),
(85, 15, 21, -0.33, 'optionb'),
(85, 15, 22, 1, 'optionb'),
(85, 15, 23, -0.33, 'optionc'),
(85, 15, 24, 1, 'optiona'),
(85, 15, 25, 1, 'optiond'),
(85, 15, 27, 2, 'optiona'),
(85, 15, 30, -0.66, 'optiond'),
(85, 15, 31, -0.66, 'optiond'),
(85, 15, 33, -0.66, 'optionb'),
(85, 15, 35, 2, 'optionc'),
(85, 15, 37, 2, 'optionb'),
(85, 15, 39, 2, 'optionb'),
(85, 15, 40, -0.66, 'optionc'),
(85, 15, 41, 2, 'optionc'),
(85, 15, 43, 2, 'optiona'),
(85, 15, 44, 2, 'optiond'),
(85, 15, 47, 2, 'optiond'),
(85, 15, 48, -0.66, 'optiond'),
(85, 15, 49, -0.66, 'optionb'),
(85, 15, 50, -0.66, 'optiona'),
(85, 15, 51, -0.66, 'optiona'),
(85, 15, 52, 2, 'optionc'),
(85, 15, 53, 2, 'optionc'),
(85, 15, 54, 2, 'optionc'),
(85, 15, 55, -0.66, 'optiona'),
(85, 15, 59, 1, 'optiond'),
(85, 15, 61, 2, 'optionc'),
(85, 15, 64, -0.66, 'optionb'),
(85, 15, 65, -0.66, 'optiond'),
(85, 18, 2, 1, 'optiond'),
(85, 18, 3, 1, 'optionb'),
(85, 18, 7, 1, 'optionb'),
(85, 18, 10, -0.33, 'optiond'),
(85, 18, 11, -0.33, 'optionc'),
(85, 18, 12, 1, 'optiona'),
(85, 18, 13, 1, 'optiond'),
(85, 18, 15, 1, 'optionc'),
(85, 18, 16, 1, 'optionc'),
(85, 18, 17, 1, 'optionb'),
(85, 18, 18, -0.33, 'optionb'),
(85, 18, 19, -0.33, 'optiond'),
(85, 18, 21, -0.33, 'optiona'),
(85, 18, 22, 1, 'optiond'),
(85, 18, 23, -0.33, 'optionb'),
(85, 18, 24, 1, 'optionc'),
(85, 18, 25, 1, 'optionc'),
(85, 18, 26, 2, 'optionb'),
(85, 18, 29, 2, 'optiond'),
(85, 18, 34, 2, 'optiona'),
(85, 18, 36, -0.66, 'optionc'),
(85, 18, 38, 2, 'optionb'),
(85, 18, 42, 2, 'optionb'),
(85, 18, 43, 2, 'optionb'),
(85, 18, 45, -0.66, 'optionc'),
(85, 18, 47, 2, 'optiond'),
(85, 18, 49, 2, 'optionc'),
(85, 18, 50, 2, 'optionc'),
(85, 18, 51, -0.66, 'optiona'),
(85, 18, 54, 2, 'optiona'),
(85, 18, 60, 1, 'optiona'),
(85, 18, 61, 2, 'optionb'),
(85, 18, 63, -0.66, 'optionb'),
(85, 18, 65, 2, 'optiond'),
(86, 8, 1, 1, 'optione'),
(86, 8, 2, 1, 'optiona'),
(86, 8, 3, 1, 'optionb'),
(86, 8, 5, -0.33, 'optiona'),
(86, 8, 6, 1, 'optiond'),
(86, 8, 7, 1, 'optionb'),
(86, 8, 9, 1, 'optiond'),
(86, 8, 10, -0.33, 'optionb'),
(86, 8, 11, 1, 'optiond'),
(86, 8, 12, 1, 'optiona'),
(86, 8, 13, 1, 'optionb'),
(86, 8, 17, -0.33, 'optionb'),
(86, 8, 18, -0.33, 'optiond'),
(86, 8, 19, 1, 'optiona'),
(86, 8, 25, -0.33, 'optionb'),
(86, 8, 26, 1, 'optiond'),
(86, 8, 27, 1, 'optiond'),
(86, 8, 28, -0.33, 'optiona'),
(86, 8, 30, 1, 'optionc'),
(86, 8, 31, 1, 'optionc'),
(86, 8, 32, 1, 'optionb'),
(86, 8, 33, 1, 'optiona'),
(86, 8, 34, 1, 'optiond'),
(86, 8, 35, -0.33, 'optionb'),
(86, 8, 36, 1, 'optionc'),
(86, 8, 37, 1, 'optiond'),
(86, 8, 38, -0.33, 'optionc'),
(86, 8, 39, 1, 'optiond'),
(86, 8, 40, -0.33, 'optiona'),
(86, 8, 41, 1, 'optiona'),
(86, 8, 42, -0.33, 'optionc'),
(86, 8, 43, 1, 'optionb'),
(86, 8, 44, -0.33, 'optiona'),
(86, 8, 45, 1, 'optiond'),
(86, 10, 1, 2, 'optione'),
(86, 10, 2, 2, 'optionb'),
(86, 10, 3, -0.66, 'optionb'),
(86, 10, 4, -0.66, 'optiona'),
(86, 10, 5, 2, 'optionb'),
(86, 10, 6, 2, 'optionb'),
(86, 10, 9, 2, 'optionc'),
(86, 10, 10, 2, 'optiond'),
(86, 10, 11, 2, 'optionc'),
(86, 10, 12, 2, 'optionb'),
(86, 10, 13, 2, 'optionc'),
(86, 10, 14, 2, 'optionb'),
(86, 10, 15, 2, 'optiond'),
(86, 10, 16, 2, 'optiona'),
(86, 10, 17, -0.66, 'optiona'),
(86, 10, 20, 2, 'optionc'),
(86, 10, 21, 2, 'optionb'),
(86, 10, 22, 2, 'optionb'),
(86, 10, 23, -0.66, 'optionc'),
(86, 11, 1, 2, 'optionb'),
(86, 11, 2, 2, 'optionc'),
(86, 11, 3, 2, 'optiona'),
(86, 11, 4, 2, 'optiond'),
(86, 11, 5, 2, 'optionb'),
(86, 11, 10, 2, 'optiona'),
(86, 11, 11, 2, 'optiona'),
(86, 11, 12, -0.66, 'optionb'),
(86, 11, 13, 2, 'optionb'),
(86, 11, 15, 2, 'optionc'),
(86, 11, 17, 2, 'optiona'),
(86, 11, 18, 2, 'optionb'),
(86, 11, 19, 2, 'optionb'),
(86, 11, 20, -0.66, 'optionb'),
(86, 11, 21, 2, 'optionc'),
(86, 11, 22, 2, 'optiona'),
(86, 11, 24, -0.66, 'optiond'),
(86, 11, 25, -0.66, 'optionc'),
(86, 11, 26, 2, 'optionc'),
(86, 11, 27, 2, 'optione'),
(86, 11, 28, 2, 'optiona'),
(86, 11, 29, 2, 'optiond'),
(86, 11, 30, -0.66, 'optiona'),
(86, 11, 31, 2, 'optione'),
(86, 11, 32, 2, 'optionc'),
(86, 11, 33, -0.66, 'optione'),
(86, 11, 34, -0.66, 'optione'),
(86, 11, 35, 2, 'optiond'),
(86, 11, 36, 2, 'optione'),
(86, 11, 37, -0.66, 'optiond'),
(86, 11, 38, 2, 'optiona'),
(86, 11, 39, 2, 'optiona'),
(86, 11, 40, 2, 'optiond'),
(86, 11, 41, 2, 'optionc'),
(86, 11, 42, 2, 'optione'),
(86, 11, 43, 2, 'optiond'),
(86, 11, 44, -0.66, 'optiond'),
(86, 11, 46, -0.66, 'optionb'),
(86, 11, 48, -0.66, 'optionc'),
(86, 11, 49, 2, 'optiond'),
(86, 11, 51, 2, 'optiond'),
(86, 11, 52, 2, 'optionb'),
(86, 11, 53, 2, 'optionc'),
(86, 11, 54, 2, 'optionb'),
(86, 11, 55, -0.66, 'optionc'),
(86, 11, 56, 2, 'optione'),
(86, 11, 57, 2, 'optionc'),
(86, 11, 58, 2, 'optione'),
(86, 11, 60, -0.66, 'optiona'),
(86, 12, 1, -0.66, 'optiona'),
(86, 12, 2, -0.66, 'optionb'),
(86, 12, 4, 2, 'optionc'),
(86, 12, 5, -0.66, 'optionc'),
(86, 12, 7, 2, 'optionb'),
(86, 12, 8, -0.66, 'optiona'),
(86, 12, 9, 2, 'optiona'),
(86, 12, 10, -0.66, 'optionc'),
(86, 12, 12, 2, 'optionb'),
(86, 12, 13, 2, 'optionb'),
(86, 12, 14, -0.66, 'optionb'),
(86, 12, 15, 2, 'optiond'),
(86, 12, 16, 2, 'optionc'),
(86, 12, 17, 2, 'optionc'),
(86, 12, 18, 2, 'optiond'),
(86, 12, 19, -0.66, 'optiona'),
(86, 12, 20, 2, 'optionb'),
(86, 12, 21, 2, 'optiona'),
(86, 12, 22, 2, 'optiond'),
(86, 12, 23, -0.66, 'optionc'),
(86, 12, 26, -0.66, 'optiona'),
(86, 12, 27, 2, 'optionc'),
(86, 12, 28, 2, 'optiond'),
(86, 12, 29, 2, 'optiona'),
(86, 12, 30, -0.66, 'optiona'),
(86, 12, 37, 2, 'optiona'),
(86, 12, 38, 2, 'optionc'),
(86, 12, 39, -0.66, 'optione'),
(86, 12, 40, 2, 'optiona'),
(86, 12, 41, 2, 'optionb'),
(86, 12, 42, 2, 'optiona'),
(86, 12, 43, 2, 'optiond'),
(86, 12, 45, 2, 'optiond'),
(86, 12, 46, 2, 'optiond'),
(86, 12, 47, -0.66, 'optiond'),
(86, 12, 48, -0.66, 'optionc'),
(86, 12, 50, 2, 'optionb'),
(86, 12, 51, 2, 'optionc'),
(86, 12, 52, 2, 'optionb'),
(86, 12, 53, 2, 'optiona'),
(86, 12, 54, -0.66, 'optionb'),
(86, 13, 1, -0.66, 'optiond'),
(86, 13, 2, 2, 'optionb'),
(86, 13, 3, -0.66, 'optiond'),
(86, 13, 6, -0.66, 'optiona'),
(86, 13, 8, 2, 'optionc'),
(86, 13, 10, 2, 'optione'),
(86, 13, 11, 2, 'optiond'),
(86, 13, 18, 2, 'optiona'),
(86, 13, 19, 2, 'optionb'),
(86, 13, 20, -0.66, 'optiond'),
(86, 13, 22, -0.66, 'optionc'),
(86, 13, 24, -0.66, 'optionb'),
(86, 13, 25, 2, 'optiona'),
(86, 13, 26, -0.66, 'optiona'),
(86, 13, 28, 2, 'optionc'),
(86, 13, 30, -0.66, 'optiond'),
(86, 13, 31, -0.66, 'optione'),
(86, 15, 2, 1, 'optiond'),
(86, 15, 5, 1, 'optionb'),
(86, 15, 6, 1, 'optiona'),
(86, 15, 7, -0.33, 'optiona'),
(86, 15, 10, 1, 'optiona'),
(86, 15, 11, 1, 'optiond'),
(86, 15, 12, 1, 'optionc'),
(86, 15, 14, 1, 'optionc'),
(86, 15, 15, 1, 'optiond'),
(86, 15, 16, -0.33, 'optiona'),
(86, 15, 18, -0.33, 'optiona'),
(86, 15, 19, 1, 'optionc'),
(86, 15, 20, -0.33, 'optionc'),
(86, 15, 21, 1, 'optiona'),
(86, 15, 22, 1, 'optionb'),
(86, 15, 24, 1, 'optiona'),
(86, 15, 25, 1, 'optiond'),
(86, 15, 26, 2, 'optiona'),
(86, 15, 27, 2, 'optiona'),
(86, 15, 29, 2, 'optiond'),
(86, 15, 30, 2, 'optionb'),
(86, 15, 37, -0.66, 'optiond'),
(86, 15, 42, 2, 'optiona'),
(86, 15, 43, 2, 'optiona'),
(86, 15, 44, -0.66, 'optionc'),
(86, 15, 47, 2, 'optiond'),
(86, 15, 48, 2, 'optionc'),
(86, 15, 49, 2, 'optionc'),
(86, 15, 56, -0.33, 'optionb'),
(86, 15, 58, -0.33, 'optionb'),
(86, 15, 59, 1, 'optiond'),
(86, 15, 60, -0.33, 'optionb'),
(86, 15, 61, 2, 'optionc'),
(86, 15, 63, 2, 'optiond'),
(86, 15, 64, 2, 'optiond'),
(86, 16, 1, 1, 'optionc'),
(86, 16, 4, 1, 'optiond'),
(86, 16, 6, 1, 'optionb'),
(86, 16, 7, -0.33, 'optionb'),
(86, 16, 8, -0.33, 'optiond'),
(86, 16, 11, -0.33, 'optiona'),
(86, 16, 12, -0.33, 'optionc'),
(86, 16, 14, 1, 'optiond'),
(86, 16, 15, -0.33, 'optiond'),
(86, 16, 16, 1, 'optiond'),
(86, 16, 18, -0.33, 'optiona'),
(86, 16, 19, -0.33, 'optionb'),
(86, 16, 20, -0.33, 'optiond'),
(86, 16, 21, -0.33, 'optiona'),
(86, 16, 22, 1, 'optionb'),
(86, 16, 25, 1, 'optionb'),
(86, 16, 26, -0.66, 'optiond'),
(86, 16, 27, 2, 'optionb'),
(86, 16, 28, 2, 'optiond'),
(86, 16, 29, -0.66, 'optiona'),
(86, 16, 30, -0.66, 'optionb'),
(86, 16, 31, -0.66, 'optionc'),
(86, 16, 33, 2, 'optiond'),
(86, 16, 35, -0.66, 'optionc'),
(86, 16, 38, 2, 'optionb'),
(86, 16, 39, -0.66, 'optiond'),
(86, 16, 40, 2, 'optiona'),
(86, 16, 42, -0.66, 'optionb'),
(86, 16, 43, 2, 'optiona'),
(86, 16, 44, 2, 'optiond'),
(86, 16, 45, -0.66, 'optiond'),
(86, 16, 50, -0.66, 'optiond'),
(86, 16, 51, 2, 'optiona'),
(86, 16, 53, 2, 'optionb'),
(86, 16, 55, -0.66, 'optionc'),
(86, 16, 56, 1, 'optiond'),
(86, 16, 57, 1, 'optionc'),
(86, 16, 58, 1, 'optiona'),
(86, 16, 59, 1, 'optionc'),
(86, 16, 61, -0.66, 'optiond'),
(86, 16, 62, 2, 'optiond'),
(86, 16, 64, 2, 'optionb'),
(86, 17, 1, -0.33, 'optiond'),
(86, 17, 2, 1, 'optionb'),
(86, 17, 3, 1, 'optionb'),
(86, 17, 8, -0.33, 'optiond'),
(86, 17, 9, 1, 'optionb'),
(86, 17, 10, 1, 'optiona'),
(86, 17, 12, 1, 'optiona'),
(86, 17, 13, -0.33, 'optiond'),
(86, 17, 14, 1, 'optionc'),
(86, 17, 15, 1, 'optionb'),
(86, 17, 18, -0.33, 'optiond'),
(86, 17, 21, 1, 'optionc'),
(86, 17, 22, -0.33, 'optiona'),
(86, 17, 23, -0.33, 'optiona'),
(86, 17, 25, 1, 'optionb'),
(86, 17, 26, 2, 'optionc'),
(86, 17, 27, -0.66, 'optiond'),
(86, 17, 28, -0.66, 'optionb'),
(86, 17, 32, 2, 'optiona'),
(86, 17, 33, 2, 'optiona'),
(86, 17, 35, 2, 'optionb'),
(86, 17, 41, -0.66, 'optionb'),
(86, 17, 42, 2, 'optionb'),
(86, 17, 47, -0.66, 'optionb'),
(86, 17, 50, -0.66, 'optionb'),
(86, 17, 51, 2, 'optionc'),
(86, 17, 52, 2, 'optiond'),
(86, 17, 53, -0.66, 'optiond'),
(86, 17, 54, 2, 'optiond'),
(86, 17, 55, 2, 'optiona'),
(86, 17, 59, 1, 'optiond'),
(86, 17, 60, 1, 'optiond'),
(86, 17, 61, 2, 'optionb'),
(86, 17, 62, 2, 'optionc'),
(86, 17, 63, -0.66, 'optionb'),
(86, 17, 65, 2, 'optiond'),
(87, 7, 1, 1, 'optionc'),
(87, 7, 2, -0.33, 'optionc'),
(87, 7, 3, -0.33, 'optiond'),
(87, 7, 4, -0.33, 'optionb'),
(87, 7, 5, -0.33, 'optionc'),
(87, 7, 6, -0.33, 'optione'),
(87, 7, 7, 1, 'optionb'),
(87, 7, 8, -0.33, 'optiona'),
(87, 7, 9, 1, 'optiona'),
(87, 7, 10, 1, 'optionc'),
(87, 7, 11, 1, 'optiona'),
(87, 7, 12, -0.33, 'optiona'),
(87, 7, 13, -0.33, 'optionb'),
(87, 7, 15, 1, 'optionb'),
(87, 7, 16, 1, 'optiona'),
(87, 7, 17, 1, 'optionc'),
(87, 7, 18, 1, 'optiona'),
(87, 7, 19, 1, 'optiond'),
(87, 7, 20, 1, 'optiona'),
(87, 7, 21, 1, 'optiond'),
(87, 7, 22, -0.33, 'optionb'),
(87, 7, 23, 1, 'optiond'),
(87, 7, 24, 1, 'optiona'),
(87, 7, 25, -0.33, 'optionb'),
(87, 7, 26, 2, 'optiona'),
(87, 7, 27, -0.66, 'optiond'),
(87, 7, 30, -0.66, 'optiond'),
(87, 7, 31, 2, 'optiona'),
(87, 7, 33, 2, 'optiond'),
(87, 7, 34, -0.66, 'optionc'),
(87, 7, 35, 2, 'optionc'),
(87, 7, 36, 2, 'optionc'),
(87, 7, 37, -0.66, 'optiona'),
(87, 7, 39, -0.66, 'optionb'),
(87, 7, 40, 2, 'optionb'),
(87, 7, 41, 2, 'optionc'),
(87, 7, 42, 2, 'optionc'),
(87, 7, 43, 2, 'optionb'),
(87, 7, 44, 2, 'optionb'),
(87, 7, 45, 2, 'optiond'),
(87, 7, 47, 2, 'optionb'),
(87, 7, 48, 2, 'optionb'),
(87, 7, 49, 2, 'optionb'),
(87, 7, 50, 2, 'optionc'),
(87, 7, 51, 2, 'optionb'),
(87, 7, 52, -0.66, 'optionb'),
(87, 7, 53, -0.66, 'optiona'),
(87, 7, 54, 2, 'optiond'),
(87, 7, 55, 2, 'optionb'),
(87, 7, 56, 1, 'optiona'),
(87, 7, 57, -0.33, 'optionb'),
(87, 7, 58, -0.33, 'optiond'),
(87, 7, 60, 1, 'optionc'),
(87, 7, 62, 2, 'optionc'),
(87, 7, 63, -0.66, 'optiona'),
(87, 7, 65, 2, 'optionb'),
(87, 8, 1, 1, 'optione'),
(87, 8, 2, -0.33, 'optiond'),
(87, 8, 3, 1, 'optionb'),
(87, 8, 4, 1, 'optiond'),
(87, 8, 5, -0.33, 'optiona'),
(87, 8, 6, 1, 'optiond'),
(87, 8, 7, 1, 'optionb'),
(87, 8, 9, -0.33, 'optionb'),
(87, 8, 10, 1, 'optionc'),
(87, 8, 11, -0.33, 'optionb'),
(87, 8, 12, 1, 'optiona'),
(87, 8, 13, 1, 'optionb'),
(87, 8, 14, 1, 'optiona'),
(87, 8, 15, -0.33, 'optiond'),
(87, 8, 16, 1, 'optionc'),
(87, 8, 17, -0.33, 'optiond'),
(87, 8, 18, 1, 'optione'),
(87, 8, 19, 1, 'optiona'),
(87, 8, 26, 1, 'optiond'),
(87, 8, 27, 1, 'optiond'),
(87, 8, 29, 1, 'optionb'),
(87, 8, 30, 1, 'optionc'),
(87, 8, 31, 1, 'optionc'),
(87, 8, 32, 1, 'optionb'),
(87, 8, 33, 1, 'optiona'),
(87, 8, 34, 1, 'optiond'),
(87, 8, 35, 1, 'optionc'),
(87, 8, 36, 1, 'optionc'),
(87, 8, 37, 1, 'optiond'),
(87, 8, 38, 1, 'optionb'),
(87, 8, 39, 1, 'optiond'),
(87, 8, 40, 1, 'optionc'),
(87, 8, 41, 1, 'optiona'),
(87, 8, 42, -0.33, 'optionc'),
(87, 8, 43, 1, 'optionb'),
(87, 8, 44, -0.33, 'optiona'),
(87, 8, 45, 1, 'optiond'),
(87, 9, 1, 2, 'optionc'),
(87, 9, 2, -0.66, 'optiond'),
(87, 9, 3, -0.66, 'optiond'),
(87, 9, 4, 2, 'optiona'),
(87, 9, 5, 2, 'optiond'),
(87, 9, 7, -0.66, 'optionb'),
(87, 9, 8, 2, 'optionb'),
(87, 9, 10, 2, 'optionc'),
(87, 9, 12, 2, 'optiona'),
(87, 9, 16, 2, 'optionc'),
(87, 9, 17, -0.66, 'optiond'),
(87, 9, 18, -0.66, 'optiona'),
(87, 9, 25, 2, 'optiond'),
(87, 9, 26, 2, 'optionc'),
(87, 9, 33, -0.66, 'optiona'),
(87, 9, 34, -0.66, 'optionc'),
(87, 9, 35, 2, 'optionb'),
(87, 9, 36, 2, 'optionc'),
(87, 9, 37, 2, 'optionb'),
(87, 9, 40, -0.66, 'optionb'),
(87, 9, 46, 2, 'optiond'),
(87, 9, 47, -0.66, 'optiona'),
(87, 9, 48, 2, 'optionc'),
(87, 9, 50, 2, 'optionb'),
(87, 9, 52, 2, 'optionb'),
(87, 9, 53, -0.66, 'optionb'),
(87, 9, 55, 2, 'optionb'),
(87, 10, 1, 2, 'optione'),
(87, 10, 2, 2, 'optionb'),
(87, 10, 3, 2, 'optiond'),
(87, 10, 4, -0.66, 'optione'),
(87, 10, 5, 2, 'optionb'),
(87, 10, 6, 2, 'optionb'),
(87, 10, 7, 2, 'optiona'),
(87, 10, 10, 2, 'optiond'),
(87, 10, 11, 2, 'optionc'),
(87, 10, 12, -0.66, 'optione'),
(87, 10, 13, 2, 'optionc'),
(87, 10, 14, 2, 'optionb'),
(87, 10, 15, 2, 'optiond'),
(87, 10, 16, 2, 'optiona'),
(87, 10, 17, -0.66, 'optiona'),
(87, 10, 18, 2, 'optiona'),
(87, 10, 19, 2, 'optiona'),
(87, 10, 20, -0.66, 'optionb'),
(87, 10, 21, 2, 'optionb'),
(87, 10, 23, 2, 'optiond'),
(87, 10, 24, 2, 'optiona'),
(87, 11, 1, 2, 'optionb'),
(87, 11, 2, -0.66, 'optiond'),
(87, 11, 3, -0.66, 'optionc'),
(87, 11, 4, 2, 'optiond'),
(87, 11, 5, 2, 'optionb'),
(87, 11, 6, 2, 'optionb'),
(87, 11, 7, -0.66, 'optiona'),
(87, 11, 8, 2, 'optiona'),
(87, 11, 9, 2, 'optionc'),
(87, 11, 10, 2, 'optiona'),
(87, 11, 11, 2, 'optiona'),
(87, 11, 12, 2, 'optiona'),
(87, 11, 15, 2, 'optionc'),
(87, 11, 17, 2, 'optiona'),
(87, 11, 18, -0.66, 'optiond'),
(87, 11, 19, 2, 'optionb'),
(87, 11, 20, 2, 'optiona'),
(87, 11, 21, 2, 'optionc'),
(87, 11, 22, -0.66, 'optionc'),
(87, 11, 24, 2, 'optiona'),
(87, 11, 25, 2, 'optionb'),
(87, 11, 26, -0.66, 'optionb'),
(87, 11, 27, 2, 'optione'),
(87, 11, 28, -0.66, 'optionb'),
(87, 11, 29, -0.66, 'optionc'),
(87, 11, 30, -0.66, 'optiona'),
(87, 11, 32, -0.66, 'optionb'),
(87, 11, 33, -0.66, 'optione'),
(87, 11, 34, 2, 'optiond'),
(87, 11, 35, 2, 'optiond'),
(87, 11, 36, 2, 'optione'),
(87, 11, 37, 2, 'optionb'),
(87, 11, 38, -0.66, 'optionb'),
(87, 11, 39, 2, 'optiona'),
(87, 11, 41, 2, 'optionc'),
(87, 11, 42, 2, 'optione'),
(87, 11, 43, -0.66, 'optionb'),
(87, 11, 44, -0.66, 'optionc'),
(87, 11, 45, 2, 'optiona'),
(87, 11, 46, -0.66, 'optione'),
(87, 11, 48, 2, 'optiond'),
(87, 11, 49, 2, 'optiond'),
(87, 11, 51, 2, 'optiond'),
(87, 11, 52, -0.66, 'optionc'),
(87, 11, 53, 2, 'optionc'),
(87, 11, 54, -0.66, 'optiona'),
(87, 11, 55, -0.66, 'optionc'),
(87, 11, 56, 2, 'optione'),
(87, 11, 57, -0.66, 'optionb'),
(87, 11, 58, -0.66, 'optionc'),
(87, 11, 60, -0.66, 'optione'),
(87, 12, 1, 2, 'optionc'),
(87, 12, 2, -0.66, 'optionb'),
(87, 12, 3, -0.66, 'optiona'),
(87, 12, 4, 2, 'optionc'),
(87, 12, 5, 2, 'optiona'),
(87, 12, 6, -0.66, 'optionc'),
(87, 12, 7, 2, 'optionb'),
(87, 12, 8, 2, 'optionb'),
(87, 12, 10, -0.66, 'optionb'),
(87, 12, 12, -0.66, 'optiona'),
(87, 12, 13, 2, 'optionb'),
(87, 12, 14, -0.66, 'optiond'),
(87, 12, 15, 2, 'optiond'),
(87, 12, 16, -0.66, 'optiond'),
(87, 12, 19, 2, 'optionb'),
(87, 12, 20, 2, 'optionb'),
(87, 12, 21, 2, 'optiona'),
(87, 12, 22, 2, 'optiond'),
(87, 12, 23, 2, 'optionb'),
(87, 12, 24, 2, 'optiona'),
(87, 12, 26, 2, 'optionb'),
(87, 12, 27, -0.66, 'optionb'),
(87, 12, 28, 2, 'optiond'),
(87, 12, 29, -0.66, 'optionb'),
(87, 12, 30, -0.66, 'optiona'),
(87, 12, 31, 2, 'optionc'),
(87, 12, 32, 2, 'optionc'),
(87, 12, 33, 2, 'optiond'),
(87, 12, 34, 2, 'optiond'),
(87, 12, 35, 2, 'optiond'),
(87, 12, 36, 2, 'optionc'),
(87, 12, 37, 2, 'optiona'),
(87, 12, 38, 2, 'optionc'),
(87, 12, 39, -0.66, 'optionb'),
(87, 12, 40, 2, 'optiona'),
(87, 12, 41, 2, 'optionb'),
(87, 12, 42, 2, 'optiona'),
(87, 12, 43, 2, 'optiond'),
(87, 12, 44, 2, 'optionb'),
(87, 12, 45, -0.66, 'optionc'),
(87, 12, 46, 2, 'optiond'),
(87, 12, 47, 2, 'optionc'),
(87, 12, 48, -0.66, 'optionc'),
(87, 12, 50, 2, 'optionb'),
(87, 12, 51, 2, 'optionc'),
(87, 12, 52, 2, 'optionb'),
(87, 12, 53, 2, 'optiona'),
(87, 12, 54, 2, 'optiona'),
(87, 13, 1, -0.66, 'optiond'),
(87, 13, 2, 2, 'optionb'),
(87, 13, 6, -0.66, 'optiona'),
(87, 13, 7, -0.66, 'optionc'),
(87, 13, 8, 2, 'optionc'),
(87, 13, 9, 2, 'optione'),
(87, 13, 10, -0.66, 'optionc'),
(87, 13, 11, -0.66, 'optione'),
(87, 13, 12, 2, 'optiona'),
(87, 13, 13, 2, 'optiond'),
(87, 13, 14, -0.66, 'optione'),
(87, 13, 17, -0.66, 'optione'),
(87, 13, 18, -0.66, 'optione'),
(87, 13, 19, -0.66, 'optiond'),
(87, 13, 22, -0.66, 'optionb'),
(87, 13, 28, 2, 'optionc'),
(87, 13, 30, -0.66, 'optionc'),
(87, 13, 32, 2, 'optiona'),
(87, 13, 33, 2, 'optionb'),
(87, 13, 34, 2, 'optiona'),
(87, 13, 35, 2, 'optionc'),
(87, 13, 36, 2, 'optionc'),
(87, 13, 38, 2, 'optionb'),
(87, 13, 39, 2, 'optiona'),
(87, 13, 40, 2, 'optiond'),
(87, 15, 1, 1, 'optionc'),
(87, 15, 2, 1, 'optiond'),
(87, 15, 3, 1, 'optionc'),
(87, 15, 4, 1, 'optiona'),
(87, 15, 5, -0.33, 'optiond'),
(87, 15, 6, 1, 'optiona'),
(87, 15, 7, -0.33, 'optiond'),
(87, 15, 8, 1, 'optiona'),
(87, 15, 9, 1, 'optionb'),
(87, 15, 10, 1, 'optiona'),
(87, 15, 11, -0.33, 'optionb'),
(87, 15, 12, 1, 'optionc'),
(87, 15, 13, 1, 'optionb'),
(87, 15, 14, 1, 'optionc'),
(87, 15, 15, 1, 'optiond'),
(87, 15, 16, -0.33, 'optiona'),
(87, 15, 17, 1, 'optionb'),
(87, 15, 18, 1, 'optionb'),
(87, 15, 19, 1, 'optionc'),
(87, 15, 20, 1, 'optionb'),
(87, 15, 21, 1, 'optiona'),
(87, 15, 22, 1, 'optionb'),
(87, 15, 23, 1, 'optiona'),
(87, 15, 24, 1, 'optiona'),
(87, 15, 25, 1, 'optiond'),
(87, 15, 26, 2, 'optiona'),
(87, 15, 27, 2, 'optiona'),
(87, 15, 28, 2, 'optiond'),
(87, 15, 29, -0.66, 'optionb'),
(87, 15, 30, 2, 'optionb'),
(87, 15, 31, -0.66, 'optiond'),
(87, 15, 32, 2, 'optiona'),
(87, 15, 33, 2, 'optionc'),
(87, 15, 35, 2, 'optionc'),
(87, 15, 36, 2, 'optiond'),
(87, 15, 37, -0.66, 'optionc'),
(87, 15, 38, 2, 'optionc'),
(87, 15, 39, -0.66, 'optionc'),
(87, 15, 40, -0.66, 'optionc'),
(87, 15, 41, 2, 'optionc'),
(87, 15, 42, 2, 'optiona'),
(87, 15, 43, 2, 'optiona'),
(87, 15, 44, 2, 'optiond'),
(87, 15, 45, 2, 'optiona'),
(87, 15, 48, 2, 'optionc'),
(87, 15, 51, 2, 'optionb'),
(87, 15, 52, 2, 'optionc'),
(87, 15, 53, 2, 'optionc'),
(87, 15, 54, -0.66, 'optionb'),
(87, 15, 55, -0.66, 'optiond'),
(87, 15, 56, 1, 'optionc'),
(87, 15, 57, -0.33, 'optiona'),
(87, 15, 58, 1, 'optiond'),
(87, 15, 59, 1, 'optiond'),
(87, 15, 60, 1, 'optiona'),
(87, 15, 62, 2, 'optionb'),
(87, 15, 63, -0.66, 'optionc'),
(87, 15, 64, 2, 'optiond'),
(87, 15, 65, 2, 'optionb'),
(87, 17, 1, 1, 'optiona'),
(87, 17, 2, 1, 'optionb'),
(87, 17, 3, 1, 'optionb'),
(87, 17, 4, -0.33, 'optiond'),
(87, 17, 5, -0.33, 'optionb'),
(87, 17, 6, 1, 'optiona'),
(87, 17, 7, 1, 'optionc'),
(87, 17, 8, 1, 'optiona'),
(87, 17, 9, -0.33, 'optiona'),
(87, 17, 10, -0.33, 'optionc'),
(87, 17, 11, -0.33, 'optionc'),
(87, 17, 12, -0.33, 'optionb'),
(87, 17, 13, 1, 'optionb'),
(87, 17, 14, 1, 'optionc'),
(87, 17, 15, 1, 'optionb'),
(87, 17, 17, 1, 'optiona'),
(87, 17, 19, 1, 'optionb'),
(87, 17, 20, -0.33, 'optionb'),
(87, 17, 21, 1, 'optionc'),
(87, 17, 22, 1, 'optionb'),
(87, 17, 23, 1, 'optiond'),
(87, 17, 25, 1, 'optionb'),
(87, 17, 26, 2, 'optionc'),
(87, 17, 27, -0.66, 'optiond'),
(87, 17, 28, 2, 'optiond'),
(87, 17, 29, 2, 'optiond'),
(87, 17, 30, 2, 'optiona'),
(87, 17, 31, 2, 'optiond'),
(87, 17, 32, 2, 'optiona'),
(87, 17, 33, 2, 'optiona'),
(87, 17, 35, -0.66, 'optionc'),
(87, 17, 36, 2, 'optiond'),
(87, 17, 37, -0.66, 'optiond'),
(87, 17, 38, 2, 'optionc'),
(87, 17, 41, 2, 'optionc'),
(87, 17, 42, 2, 'optionb'),
(87, 17, 44, 2, 'optionb'),
(87, 17, 45, 2, 'optionb'),
(87, 17, 46, -0.66, 'optionc'),
(87, 17, 47, -0.66, 'optiond'),
(87, 17, 48, 2, 'optiond'),
(87, 17, 50, 2, 'optiond'),
(87, 17, 51, 2, 'optionc'),
(87, 17, 52, 2, 'optiond'),
(87, 17, 53, 2, 'optiona'),
(87, 17, 55, 2, 'optiona'),
(87, 17, 56, 1, 'optiona'),
(87, 17, 57, -0.33, 'optiond'),
(87, 17, 58, 1, 'optionc'),
(87, 17, 61, -0.66, 'optiond'),
(87, 17, 62, 2, 'optionc'),
(87, 17, 63, 2, 'optiona'),
(87, 17, 65, 2, 'optiond'),
(87, 18, 2, -0.33, 'optionb'),
(87, 18, 3, 1, 'optionb'),
(87, 18, 4, 1, 'optiona'),
(87, 18, 5, -0.33, 'optionc'),
(87, 18, 6, -0.33, 'optiona'),
(87, 18, 7, 1, 'optionb'),
(87, 18, 8, 1, 'optionb'),
(87, 18, 9, 1, 'optiond'),
(87, 18, 10, 1, 'optionb'),
(87, 18, 11, -0.33, 'optionc'),
(87, 18, 12, 1, 'optiona'),
(87, 18, 13, -0.33, 'optionb'),
(87, 18, 14, -0.33, 'optiond'),
(87, 18, 15, 1, 'optionc'),
(87, 18, 17, 1, 'optionb'),
(87, 18, 18, 1, 'optiona'),
(87, 18, 19, -0.33, 'optiond'),
(87, 18, 20, 1, 'optionb'),
(87, 18, 21, 1, 'optiond'),
(87, 18, 24, 1, 'optionc'),
(87, 18, 25, 1, 'optionc'),
(87, 18, 26, 2, 'optionb'),
(87, 18, 27, 2, 'optiond'),
(87, 18, 29, 2, 'optiond'),
(87, 18, 31, 2, 'optiona'),
(87, 18, 32, -0.66, 'optionc'),
(87, 18, 33, 2, 'optiond'),
(87, 18, 34, 2, 'optiona'),
(87, 18, 36, -0.66, 'optionc'),
(87, 18, 37, -0.66, 'optionb'),
(87, 18, 38, 2, 'optionb'),
(87, 18, 39, -0.66, 'optiond'),
(87, 18, 42, 2, 'optionb'),
(87, 18, 43, 2, 'optionb'),
(87, 18, 45, -0.66, 'optiond'),
(87, 18, 46, 2, 'optionc'),
(87, 18, 47, 2, 'optiond'),
(87, 18, 48, -0.66, 'optionc'),
(87, 18, 50, 2, 'optionc'),
(87, 18, 51, -0.66, 'optionb'),
(87, 18, 54, 2, 'optiona'),
(87, 18, 56, 1, 'optione'),
(87, 18, 57, 1, 'optionb'),
(87, 18, 58, 1, 'optionc'),
(87, 18, 60, 1, 'optiona'),
(87, 18, 61, 2, 'optionb'),
(87, 18, 62, 2, 'optiond'),
(87, 18, 63, -0.66, 'optionb'),
(87, 18, 64, 2, 'optionb'),
(87, 18, 65, 2, 'optiond'),
(88, 7, 1, 1, 'optionc'),
(88, 7, 2, 1, 'optiond'),
(88, 7, 3, -0.33, 'optiond'),
(88, 7, 4, -0.33, 'optionb'),
(88, 7, 5, -0.33, 'optionc'),
(88, 7, 6, -0.33, 'optione'),
(88, 7, 7, 1, 'optionb'),
(88, 7, 8, -0.33, 'optiona'),
(88, 7, 9, -0.33, 'optionc'),
(88, 7, 10, 1, 'optionc'),
(88, 7, 11, 1, 'optiona'),
(88, 7, 12, -0.33, 'optiond'),
(88, 7, 13, -0.33, 'optionb'),
(88, 7, 15, 1, 'optionb'),
(88, 7, 16, 1, 'optiona'),
(88, 7, 17, 1, 'optionc'),
(88, 7, 18, 1, 'optiona'),
(88, 7, 19, 1, 'optiond'),
(88, 7, 20, 1, 'optiona'),
(88, 7, 21, 1, 'optiond'),
(88, 7, 22, -0.33, 'optionb'),
(88, 7, 23, 1, 'optiond'),
(88, 7, 24, 1, 'optiona'),
(88, 7, 25, -0.33, 'optionb'),
(88, 7, 26, 2, 'optiona'),
(88, 7, 30, -0.66, 'optiond'),
(88, 7, 31, 2, 'optiona'),
(88, 7, 34, -0.66, 'optionc'),
(88, 7, 35, 2, 'optionc'),
(88, 7, 36, 2, 'optionc'),
(88, 7, 37, -0.66, 'optiona'),
(88, 7, 39, -0.66, 'optionb'),
(88, 7, 40, 2, 'optionb'),
(88, 7, 41, 2, 'optionc'),
(88, 7, 42, 2, 'optionc'),
(88, 7, 43, 2, 'optionb'),
(88, 7, 44, 2, 'optionb'),
(88, 7, 45, 2, 'optiond'),
(88, 7, 47, 2, 'optionb'),
(88, 7, 48, -0.66, 'optiond'),
(88, 7, 50, 2, 'optionc'),
(88, 7, 51, 2, 'optionb'),
(88, 7, 52, -0.66, 'optionb'),
(88, 7, 53, -0.66, 'optiona'),
(88, 7, 54, 2, 'optiond'),
(88, 7, 55, 2, 'optionb'),
(88, 7, 56, 1, 'optiona'),
(88, 7, 57, -0.33, 'optionb'),
(88, 7, 59, 1, 'optiond'),
(88, 7, 60, -0.33, 'optiond'),
(88, 7, 62, 2, 'optionc'),
(88, 7, 65, -0.66, 'optionc'),
(88, 8, 1, 1, 'optione'),
(88, 8, 2, -0.33, 'optiond'),
(88, 8, 3, -0.33, 'optionc'),
(88, 8, 4, 1, 'optiond'),
(88, 8, 5, -0.33, 'optiona'),
(88, 8, 6, 1, 'optiond'),
(88, 8, 7, 1, 'optionb'),
(88, 8, 8, -0.33, 'optiona'),
(88, 8, 9, -0.33, 'optionb'),
(88, 8, 10, 1, 'optionc'),
(88, 8, 11, -0.33, 'optionb'),
(88, 8, 12, 1, 'optiona'),
(88, 8, 13, 1, 'optionb'),
(88, 8, 14, 1, 'optiona'),
(88, 8, 15, -0.33, 'optiond'),
(88, 8, 16, 1, 'optionc'),
(88, 8, 17, -0.33, 'optiond'),
(88, 8, 18, 1, 'optione'),
(88, 8, 19, 1, 'optiona'),
(88, 8, 26, 1, 'optiond'),
(88, 8, 27, 1, 'optiond'),
(88, 8, 29, 1, 'optionb'),
(88, 8, 30, 1, 'optionc'),
(88, 8, 31, 1, 'optionc'),
(88, 8, 32, 1, 'optionb'),
(88, 8, 33, 1, 'optiona'),
(88, 8, 34, -0.33, 'optiona'),
(88, 8, 35, 1, 'optionc'),
(88, 8, 36, 1, 'optionc'),
(88, 8, 37, 1, 'optiond'),
(88, 8, 38, 1, 'optionb'),
(88, 8, 39, 1, 'optiond'),
(88, 8, 40, 1, 'optionc'),
(88, 8, 41, 1, 'optiona'),
(88, 8, 42, 1, 'optiond'),
(88, 8, 43, 1, 'optionb'),
(88, 8, 44, -0.33, 'optiona'),
(88, 8, 45, 1, 'optiond'),
(88, 9, 1, 2, 'optionc'),
(88, 9, 2, -0.66, 'optiond'),
(88, 9, 3, -0.66, 'optiond'),
(88, 9, 4, 2, 'optiona'),
(88, 9, 5, 2, 'optiond'),
(88, 9, 6, 2, 'optiond'),
(88, 9, 7, -0.66, 'optionb'),
(88, 9, 8, 2, 'optionb'),
(88, 9, 10, 2, 'optionc'),
(88, 9, 12, 2, 'optiona'),
(88, 9, 16, 2, 'optionc'),
(88, 9, 17, -0.66, 'optiond'),
(88, 9, 18, -0.66, 'optiona'),
(88, 9, 25, 2, 'optiond'),
(88, 9, 26, 2, 'optionc'),
(88, 9, 28, -0.66, 'optiond'),
(88, 9, 29, 2, 'optionc'),
(88, 9, 30, -0.66, 'optiona'),
(88, 9, 31, -0.66, 'optiond'),
(88, 9, 33, -0.66, 'optiona'),
(88, 9, 34, -0.66, 'optionc'),
(88, 9, 35, 2, 'optionb'),
(88, 9, 36, 2, 'optionc'),
(88, 9, 37, 2, 'optionb'),
(88, 9, 40, -0.66, 'optionb'),
(88, 9, 46, 2, 'optiond'),
(88, 9, 47, -0.66, 'optiona'),
(88, 9, 48, 2, 'optionc'),
(88, 9, 50, 2, 'optionb'),
(88, 9, 52, 2, 'optionb'),
(88, 9, 53, -0.66, 'optionb'),
(88, 9, 55, 2, 'optionb'),
(88, 10, 1, 2, 'optione'),
(88, 10, 2, 2, 'optionb'),
(88, 10, 3, 2, 'optiond'),
(88, 10, 4, -0.66, 'optione'),
(88, 10, 5, 2, 'optionb'),
(88, 10, 6, 2, 'optionb'),
(88, 10, 9, 2, 'optionc'),
(88, 10, 10, 2, 'optiond'),
(88, 10, 11, 2, 'optionc'),
(88, 10, 12, -0.66, 'optione'),
(88, 10, 13, 2, 'optionc'),
(88, 10, 14, 2, 'optionb'),
(88, 10, 15, 2, 'optiond'),
(88, 10, 16, 2, 'optiona'),
(88, 10, 17, -0.66, 'optiona'),
(88, 10, 18, -0.66, 'optionc'),
(88, 10, 19, 2, 'optiona'),
(88, 10, 21, 2, 'optionb'),
(88, 10, 22, -0.66, 'optionc'),
(88, 10, 23, 2, 'optiond'),
(88, 10, 24, 2, 'optiona'),
(88, 11, 1, 2, 'optionb'),
(88, 11, 2, -0.66, 'optiond'),
(88, 11, 3, -0.66, 'optionc'),
(88, 11, 4, 2, 'optiond'),
(88, 11, 5, 2, 'optionb'),
(88, 11, 6, 2, 'optionb'),
(88, 11, 7, -0.66, 'optiona'),
(88, 11, 8, 2, 'optiona'),
(88, 11, 9, 2, 'optionc'),
(88, 11, 10, 2, 'optiona'),
(88, 11, 11, 2, 'optiona'),
(88, 11, 12, 2, 'optiona'),
(88, 11, 15, 2, 'optionc'),
(88, 11, 17, 2, 'optiona'),
(88, 11, 18, 2, 'optionb'),
(88, 11, 19, 2, 'optionb'),
(88, 11, 20, 2, 'optiona'),
(88, 11, 21, 2, 'optionc'),
(88, 11, 24, -0.66, 'optiond'),
(88, 11, 25, 2, 'optionb'),
(88, 11, 26, -0.66, 'optionb'),
(88, 11, 27, 2, 'optione'),
(88, 11, 28, -0.66, 'optionb'),
(88, 11, 29, -0.66, 'optionc'),
(88, 11, 30, -0.66, 'optiona'),
(88, 11, 32, -0.66, 'optionb'),
(88, 11, 33, -0.66, 'optione'),
(88, 11, 34, 2, 'optiond'),
(88, 11, 35, 2, 'optiond'),
(88, 11, 36, 2, 'optione'),
(88, 11, 37, 2, 'optionb'),
(88, 11, 38, 2, 'optiona'),
(88, 11, 39, 2, 'optiona'),
(88, 11, 40, 2, 'optiond'),
(88, 11, 41, 2, 'optionc'),
(88, 11, 42, 2, 'optione'),
(88, 11, 43, -0.66, 'optionb'),
(88, 11, 44, -0.66, 'optionc'),
(88, 11, 45, 2, 'optiona'),
(88, 11, 46, -0.66, 'optiond'),
(88, 11, 48, 2, 'optiond'),
(88, 11, 49, 2, 'optiond'),
(88, 11, 51, 2, 'optiond'),
(88, 11, 52, -0.66, 'optionc'),
(88, 11, 53, 2, 'optionc'),
(88, 11, 54, -0.66, 'optiona'),
(88, 11, 55, -0.66, 'optionc'),
(88, 11, 56, 2, 'optione'),
(88, 11, 57, -0.66, 'optionb'),
(88, 11, 58, -0.66, 'optionc'),
(88, 11, 60, -0.66, 'optione'),
(88, 12, 1, 2, 'optionc'),
(88, 12, 2, -0.66, 'optionb'),
(88, 12, 3, -0.66, 'optiona'),
(88, 12, 4, 2, 'optionc'),
(88, 12, 5, -0.66, 'optiond'),
(88, 12, 6, -0.66, 'optionb'),
(88, 12, 7, -0.66, 'optiond'),
(88, 12, 8, -0.66, 'optiona'),
(88, 12, 10, -0.66, 'optionb'),
(88, 12, 12, -0.66, 'optiona'),
(88, 12, 13, 2, 'optionb'),
(88, 12, 14, -0.66, 'optiond'),
(88, 12, 15, 2, 'optiond'),
(88, 12, 16, -0.66, 'optiond'),
(88, 12, 17, -0.66, 'optionb'),
(88, 12, 18, -0.66, 'optionb'),
(88, 12, 19, 2, 'optionb'),
(88, 12, 20, 2, 'optionb'),
(88, 12, 21, 2, 'optiona'),
(88, 12, 22, 2, 'optiond'),
(88, 12, 23, 2, 'optionb'),
(88, 12, 24, 2, 'optiona'),
(88, 12, 25, 2, 'optionc'),
(88, 12, 26, 2, 'optionb'),
(88, 12, 27, -0.66, 'optione'),
(88, 12, 28, 2, 'optiond'),
(88, 12, 29, -0.66, 'optiond'),
(88, 12, 30, -0.66, 'optiona'),
(88, 12, 31, 2, 'optionc'),
(88, 12, 32, 2, 'optionc'),
(88, 12, 33, 2, 'optiond'),
(88, 12, 34, 2, 'optiond'),
(88, 12, 35, -0.66, 'optionb'),
(88, 12, 36, 2, 'optionc'),
(88, 12, 37, 2, 'optiona'),
(88, 12, 38, 2, 'optionc'),
(88, 12, 40, 2, 'optiona'),
(88, 12, 41, 2, 'optionb'),
(88, 12, 42, 2, 'optiona'),
(88, 12, 45, 2, 'optiond'),
(88, 12, 46, 2, 'optiond'),
(88, 12, 47, 2, 'optionc'),
(88, 12, 48, -0.66, 'optionc'),
(88, 12, 50, 2, 'optionb'),
(88, 12, 51, 2, 'optionc'),
(88, 12, 52, 2, 'optionb'),
(88, 12, 53, 2, 'optiona'),
(88, 12, 54, 2, 'optiona'),
(88, 13, 1, -0.66, 'optiond'),
(88, 13, 2, 2, 'optionb'),
(88, 13, 3, -0.66, 'optiond'),
(88, 13, 5, 2, 'optionc'),
(88, 13, 6, -0.66, 'optiona'),
(88, 13, 8, 2, 'optionc'),
(88, 13, 9, -0.66, 'optionc'),
(88, 13, 10, -0.66, 'optionc'),
(88, 13, 11, -0.66, 'optione'),
(88, 13, 12, 2, 'optiona'),
(88, 13, 13, 2, 'optiond'),
(88, 13, 14, -0.66, 'optione'),
(88, 13, 17, -0.66, 'optione'),
(88, 13, 22, -0.66, 'optionb'),
(88, 13, 28, 2, 'optionc'),
(88, 13, 30, -0.66, 'optionc'),
(88, 13, 32, 2, 'optiona'),
(88, 13, 33, 2, 'optionb'),
(88, 13, 34, 2, 'optiona'),
(88, 13, 36, 2, 'optionc'),
(88, 13, 38, 2, 'optionb'),
(88, 13, 39, 2, 'optiona'),
(88, 13, 40, 2, 'optiond'),
(88, 15, 2, 1, 'optiond'),
(88, 15, 3, 1, 'optionc'),
(88, 15, 4, 1, 'optiona'),
(88, 15, 5, -0.33, 'optiond'),
(88, 15, 6, 1, 'optiona'),
(88, 15, 7, 1, 'optionb'),
(88, 15, 8, 1, 'optiona'),
(88, 15, 9, 1, 'optionb'),
(88, 15, 10, -0.33, 'optionc'),
(88, 15, 11, -0.33, 'optionb'),
(88, 15, 12, 1, 'optionc'),
(88, 15, 13, 1, 'optionb'),
(88, 15, 14, 1, 'optionc'),
(88, 15, 15, 1, 'optiond'),
(88, 15, 16, 1, 'optiond'),
(88, 15, 17, 1, 'optionb'),
(88, 15, 18, 1, 'optionb'),
(88, 15, 19, 1, 'optionc'),
(88, 15, 20, 1, 'optionb'),
(88, 15, 21, 1, 'optiona'),
(88, 15, 22, 1, 'optionb'),
(88, 15, 23, 1, 'optiona'),
(88, 15, 24, 1, 'optiona'),
(88, 15, 25, 1, 'optiond'),
(88, 15, 26, 2, 'optiona'),
(88, 15, 27, 2, 'optiona'),
(88, 15, 28, 2, 'optiond'),
(88, 15, 29, -0.66, 'optionb'),
(88, 15, 30, 2, 'optionb'),
(88, 15, 31, -0.66, 'optiond'),
(88, 15, 32, 2, 'optiona'),
(88, 15, 33, 2, 'optionc'),
(88, 15, 35, 2, 'optionc'),
(88, 15, 36, 2, 'optiond'),
(88, 15, 37, -0.66, 'optionc'),
(88, 15, 38, 2, 'optionc'),
(88, 15, 39, 2, 'optionb'),
(88, 15, 40, -0.66, 'optiona'),
(88, 15, 41, 2, 'optionc'),
(88, 15, 42, 2, 'optiona'),
(88, 15, 43, 2, 'optiona'),
(88, 15, 44, 2, 'optiond'),
(88, 15, 45, 2, 'optiona'),
(88, 15, 48, 2, 'optionc'),
(88, 15, 49, -0.66, 'optiona'),
(88, 15, 50, -0.66, 'optiona'),
(88, 15, 51, -0.66, 'optiona'),
(88, 15, 52, 2, 'optionc'),
(88, 15, 53, 2, 'optionc'),
(88, 15, 54, -0.66, 'optionb'),
(88, 15, 56, -0.33, 'optiona'),
(88, 15, 57, -0.33, 'optionc'),
(88, 15, 58, 1, 'optiond'),
(88, 15, 59, 1, 'optiond'),
(88, 15, 60, 1, 'optiona'),
(88, 15, 61, 2, 'optionc'),
(88, 15, 63, 2, 'optiond'),
(88, 15, 64, 2, 'optiond'),
(88, 15, 65, 2, 'optionb'),
(88, 17, 1, 1, 'optiona'),
(88, 17, 2, 1, 'optionb'),
(88, 17, 3, 1, 'optionb'),
(88, 17, 4, -0.33, 'optiond'),
(88, 17, 5, -0.33, 'optionb'),
(88, 17, 6, 1, 'optiona'),
(88, 17, 7, 1, 'optionc'),
(88, 17, 8, 1, 'optiona'),
(88, 17, 9, -0.33, 'optiona'),
(88, 17, 10, -0.33, 'optionc'),
(88, 17, 11, -0.33, 'optionb'),
(88, 17, 12, 1, 'optiona'),
(88, 17, 13, 1, 'optionb'),
(88, 17, 14, 1, 'optionc'),
(88, 17, 19, -0.33, 'optiona'),
(88, 17, 20, -0.33, 'optionb'),
(88, 17, 21, 1, 'optionc'),
(88, 17, 22, -0.33, 'optiond'),
(88, 17, 23, 1, 'optiond'),
(88, 17, 25, -0.33, 'optiond'),
(88, 17, 26, 2, 'optionc'),
(88, 17, 28, 2, 'optiond'),
(88, 17, 29, 2, 'optiond'),
(88, 17, 30, -0.66, 'optionc'),
(88, 17, 32, 2, 'optiona'),
(88, 17, 33, 2, 'optiona'),
(88, 17, 35, -0.66, 'optionc'),
(88, 17, 37, 2, 'optionc'),
(88, 17, 38, 2, 'optionc'),
(88, 17, 41, 2, 'optionc'),
(88, 17, 42, 2, 'optionb'),
(88, 17, 44, 2, 'optionb'),
(88, 17, 45, -0.66, 'optiond'),
(88, 17, 46, -0.66, 'optionc'),
(88, 17, 47, -0.66, 'optiond'),
(88, 17, 48, 2, 'optiond'),
(88, 17, 50, 2, 'optiond'),
(88, 17, 51, 2, 'optionc'),
(88, 17, 52, 2, 'optiond'),
(88, 17, 53, 2, 'optiona'),
(88, 17, 54, 2, 'optiond'),
(88, 17, 55, 2, 'optiona'),
(88, 17, 56, 1, 'optiona'),
(88, 17, 57, -0.33, 'optiond'),
(88, 17, 58, 1, 'optionc'),
(88, 17, 61, -0.66, 'optiond'),
(88, 17, 62, 2, 'optionc'),
(88, 17, 63, 2, 'optiona'),
(88, 17, 65, -0.66, 'optiona'),
(88, 18, 1, 1, 'optiona'),
(88, 18, 2, 1, 'optiond'),
(88, 18, 3, 1, 'optionb'),
(88, 18, 4, 1, 'optiona'),
(88, 18, 5, 1, 'optiond'),
(88, 18, 6, 1, 'optionc'),
(88, 18, 7, 1, 'optionb'),
(88, 18, 8, 1, 'optionb'),
(88, 18, 9, 1, 'optiond'),
(88, 18, 10, 1, 'optionb'),
(88, 18, 11, 1, 'optionb'),
(88, 18, 12, 1, 'optiona'),
(88, 18, 13, 1, 'optiond'),
(88, 18, 15, -0.33, 'optionb'),
(88, 18, 17, -0.33, 'optionc'),
(88, 18, 18, 1, 'optiona'),
(88, 18, 19, -0.33, 'optiona'),
(88, 18, 20, -0.33, 'optiona'),
(88, 18, 21, 1, 'optiond'),
(88, 18, 24, 1, 'optionc'),
(88, 18, 25, 1, 'optionc'),
(88, 18, 26, 2, 'optionb'),
(88, 18, 27, 2, 'optiond'),
(88, 18, 29, 2, 'optiond'),
(88, 18, 31, 2, 'optiona'),
(88, 18, 32, 2, 'optionb'),
(88, 18, 33, 2, 'optiond'),
(88, 18, 34, 2, 'optiona'),
(88, 18, 36, -0.66, 'optionc'),
(88, 18, 37, -0.66, 'optionb'),
(88, 18, 38, 2, 'optionb'),
(88, 18, 39, -0.66, 'optiond'),
(88, 18, 42, 2, 'optionb'),
(88, 18, 43, 2, 'optionb'),
(88, 18, 44, 2, 'optionc'),
(88, 18, 45, -0.66, 'optiond'),
(88, 18, 47, 2, 'optiond'),
(88, 18, 48, 2, 'optionb'),
(88, 18, 49, -0.66, 'optiond'),
(88, 18, 50, 2, 'optionc'),
(88, 18, 51, -0.66, 'optionb'),
(88, 18, 54, 2, 'optiona'),
(88, 18, 56, 1, 'optione'),
(88, 18, 57, 1, 'optionb'),
(88, 18, 58, 1, 'optionc'),
(88, 18, 60, 1, 'optiona'),
(88, 18, 61, 2, 'optionb'),
(88, 18, 62, 2, 'optiond'),
(88, 18, 63, -0.66, 'optionb'),
(88, 18, 65, 2, 'optiond'),
(90, 7, 1, -0.33, 'optionc'),
(90, 7, 2, 1, 'optiond'),
(90, 7, 3, -0.33, 'optiond'),
(90, 7, 4, -0.33, 'optionb'),
(90, 7, 5, 1, 'optionc'),
(90, 7, 6, -0.33, 'optiona'),
(90, 7, 7, 1, 'optionb'),
(90, 7, 8, 1, 'optionb'),
(90, 7, 9, 1, 'optiona'),
(90, 7, 10, 1, 'optionc'),
(90, 7, 11, 1, 'optiona'),
(90, 7, 12, -0.33, 'optiona'),
(90, 7, 13, 1, 'optionc'),
(90, 7, 14, 1, 'optionc'),
(90, 7, 15, 1, 'optionb'),
(90, 7, 16, 1, 'optiona'),
(90, 7, 17, -0.33, 'optionb'),
(90, 7, 18, 1, 'optiona'),
(90, 7, 19, 1, 'optiond'),
(90, 7, 20, 1, 'optiona'),
(90, 7, 21, -0.33, 'optionc'),
(90, 7, 22, 1, 'optiond'),
(90, 7, 23, -0.33, 'optiona'),
(90, 7, 24, 1, 'optiona'),
(90, 7, 25, 1, 'optionc'),
(90, 7, 26, 2, 'optiona'),
(90, 7, 27, -0.66, 'optionc'),
(90, 7, 28, 2, 'optiona'),
(90, 7, 29, -0.66, 'optiona'),
(90, 7, 30, -0.66, 'optionb'),
(90, 7, 31, 2, 'optiona'),
(90, 7, 35, 2, 'optionc'),
(90, 7, 36, 2, 'optionc'),
(90, 7, 37, -0.66, 'optiond'),
(90, 7, 38, -0.66, 'optionc'),
(90, 7, 39, 2, 'optione'),
(90, 7, 40, 2, 'optionb'),
(90, 7, 41, 2, 'optionc'),
(90, 7, 42, 2, 'optionc'),
(90, 7, 43, 2, 'optionb'),
(90, 7, 44, -0.66, 'optiona'),
(90, 7, 45, 2, 'optiond'),
(90, 7, 46, -0.66, 'optionb'),
(90, 7, 47, 2, 'optionb'),
(90, 7, 48, 2, 'optionb'),
(90, 7, 49, -0.66, 'optiona'),
(90, 7, 50, 2, 'optionc'),
(90, 7, 51, 2, 'optionb'),
(90, 7, 52, 2, 'optiona'),
(90, 7, 53, 2, 'optionb'),
(90, 7, 54, 2, 'optiond'),
(90, 7, 55, -0.66, 'optionb'),
(90, 7, 56, -0.33, 'optiona'),
(90, 7, 59, 1, 'optiond'),
(90, 7, 60, 1, 'optionc'),
(90, 7, 61, -0.66, 'optionc'),
(90, 7, 63, 2, 'optiond'),
(90, 7, 64, 2, 'optionc'),
(90, 7, 65, 2, 'optionb'),
(90, 8, 1, 1, 'optione'),
(90, 8, 2, -0.33, 'optionb'),
(90, 8, 3, 1, 'optionb'),
(90, 8, 4, 1, 'optiond'),
(90, 8, 5, -0.33, 'optiona'),
(90, 8, 6, 1, 'optiond'),
(90, 8, 7, 1, 'optionb'),
(90, 8, 8, 1, 'optionb'),
(90, 8, 9, 1, 'optiond'),
(90, 8, 10, 1, 'optionc'),
(90, 8, 11, 1, 'optiond'),
(90, 8, 12, 1, 'optiona'),
(90, 8, 13, 1, 'optionb'),
(90, 8, 14, 1, 'optiona'),
(90, 8, 15, 1, 'optionc'),
(90, 8, 16, 1, 'optionc'),
(90, 8, 17, -0.33, 'optiond'),
(90, 8, 18, 1, 'optione'),
(90, 8, 19, 1, 'optiona'),
(90, 8, 20, -0.33, 'optiond'),
(90, 8, 23, 1, 'optiona'),
(90, 8, 24, 1, 'optiona'),
(90, 8, 25, 1, 'optiond'),
(90, 8, 26, 1, 'optiond'),
(90, 8, 27, 1, 'optiond'),
(90, 8, 29, 1, 'optionb'),
(90, 8, 30, 1, 'optionc'),
(90, 8, 31, 1, 'optionc'),
(90, 8, 32, 1, 'optionb'),
(90, 8, 33, -0.33, 'optionc'),
(90, 8, 34, 1, 'optiond'),
(90, 8, 35, -0.33, 'optionb'),
(90, 8, 36, 1, 'optionc'),
(90, 8, 37, 1, 'optiond'),
(90, 8, 38, 1, 'optionb'),
(90, 8, 39, 1, 'optiond'),
(90, 8, 40, 1, 'optionc'),
(90, 8, 41, 1, 'optiona'),
(90, 8, 42, 1, 'optiond'),
(90, 8, 43, 1, 'optionb'),
(90, 8, 44, -0.33, 'optiona'),
(90, 8, 45, 1, 'optiond'),
(90, 9, 7, -0.66, 'optiona'),
(90, 9, 10, 2, 'optionc'),
(90, 9, 11, 2, 'optiona'),
(90, 9, 12, 2, 'optiona'),
(90, 9, 16, -0.66, 'optionb'),
(90, 9, 18, 2, 'optionb'),
(90, 9, 20, -0.66, 'optionb'),
(90, 9, 25, -0.66, 'optionb'),
(90, 9, 26, 2, 'optionc'),
(90, 9, 29, 2, 'optionc'),
(90, 9, 30, -0.66, 'optiona'),
(90, 9, 31, -0.66, 'optiond'),
(90, 9, 32, -0.66, 'optiona'),
(90, 9, 33, -0.66, 'optiond'),
(90, 9, 34, 2, 'optiond'),
(90, 9, 35, 2, 'optionb'),
(90, 9, 36, 2, 'optionc'),
(90, 9, 37, 2, 'optionb'),
(90, 9, 41, -0.66, 'optionc'),
(90, 9, 42, -0.66, 'optiona'),
(90, 9, 46, -0.66, 'optiona'),
(90, 9, 47, -0.66, 'optionb'),
(90, 9, 48, -0.66, 'optionb'),
(90, 9, 49, -0.66, 'optionc'),
(90, 10, 2, 2, 'optionb'),
(90, 10, 3, 2, 'optiond'),
(90, 10, 4, -0.66, 'optione'),
(90, 10, 5, 2, 'optionb'),
(90, 10, 6, 2, 'optionb'),
(90, 10, 7, 2, 'optiona'),
(90, 10, 8, -0.66, 'optiona'),
(90, 10, 9, 2, 'optionc'),
(90, 10, 10, -0.66, 'optiona'),
(90, 10, 11, 2, 'optionc'),
(90, 10, 12, 2, 'optionb'),
(90, 10, 13, -0.66, 'optiond'),
(90, 10, 14, 2, 'optionb'),
(90, 10, 15, 2, 'optiond'),
(90, 10, 16, 2, 'optiona'),
(90, 10, 17, 2, 'optionb'),
(90, 10, 18, -0.66, 'optiond'),
(90, 10, 19, 2, 'optiona'),
(90, 10, 20, -0.66, 'optionb'),
(90, 10, 21, 2, 'optionb'),
(90, 10, 22, 2, 'optionb'),
(90, 10, 23, -0.66, 'optionc'),
(90, 10, 24, -0.66, 'optionc'),
(90, 11, 1, 2, 'optionb'),
(90, 11, 2, 2, 'optionc'),
(90, 11, 3, -0.66, 'optionc'),
(90, 11, 4, 2, 'optiond'),
(90, 11, 5, 2, 'optionb'),
(90, 11, 6, 2, 'optionb'),
(90, 11, 7, -0.66, 'optiona'),
(90, 11, 8, 2, 'optiona'),
(90, 11, 9, 2, 'optionc'),
(90, 11, 10, 2, 'optiona'),
(90, 11, 11, 2, 'optiona'),
(90, 11, 12, 2, 'optiona'),
(90, 11, 13, 2, 'optionb'),
(90, 11, 14, 2, 'optionc'),
(90, 11, 15, 2, 'optionc'),
(90, 11, 16, 2, 'optionb'),
(90, 11, 17, 2, 'optiona'),
(90, 11, 18, 2, 'optionb'),
(90, 11, 19, 2, 'optionb'),
(90, 11, 20, 2, 'optiona'),
(90, 11, 21, 2, 'optionc'),
(90, 11, 22, 2, 'optiona'),
(90, 11, 23, 2, 'optionc'),
(90, 11, 24, 2, 'optiona'),
(90, 11, 25, 2, 'optionb'),
(90, 11, 26, 2, 'optionc'),
(90, 11, 27, 2, 'optione'),
(90, 11, 28, 2, 'optiona'),
(90, 11, 29, 2, 'optiond'),
(90, 11, 30, -0.66, 'optionc'),
(90, 11, 31, 2, 'optione'),
(90, 11, 32, -0.66, 'optione'),
(90, 11, 33, 2, 'optiond'),
(90, 11, 34, 2, 'optiond'),
(90, 11, 35, 2, 'optiond'),
(90, 11, 36, 2, 'optione'),
(90, 11, 37, 2, 'optionb'),
(90, 11, 38, 2, 'optiona'),
(90, 11, 39, 2, 'optiona'),
(90, 11, 40, 2, 'optiond'),
(90, 11, 41, 2, 'optionc'),
(90, 11, 42, -0.66, 'optiona'),
(90, 11, 43, 2, 'optiond'),
(90, 11, 44, 2, 'optionb'),
(90, 11, 45, 2, 'optiona'),
(90, 11, 46, 2, 'optiona'),
(90, 11, 47, 2, 'optione'),
(90, 11, 48, 2, 'optiond'),
(90, 11, 49, 2, 'optiond'),
(90, 11, 50, 2, 'optionc'),
(90, 11, 51, 2, 'optiond'),
(90, 11, 52, -0.66, 'optionc'),
(90, 11, 53, 2, 'optionc'),
(90, 11, 54, 2, 'optionb'),
(90, 11, 55, 2, 'optionb'),
(90, 11, 56, 2, 'optione'),
(90, 11, 57, 2, 'optionc'),
(90, 11, 58, 2, 'optione'),
(90, 11, 59, -0.66, 'optiond'),
(90, 11, 60, -0.66, 'optione'),
(90, 12, 1, 2, 'optionc'),
(90, 12, 2, 2, 'optionc'),
(90, 12, 3, 2, 'optiond'),
(90, 12, 4, 2, 'optionc'),
(90, 12, 5, 2, 'optiona'),
(90, 12, 6, -0.66, 'optiona'),
(90, 12, 7, 2, 'optionb'),
(90, 12, 8, 2, 'optionb'),
(90, 12, 9, 2, 'optiona'),
(90, 12, 10, 2, 'optiond'),
(90, 12, 11, 2, 'optionb'),
(90, 12, 12, 2, 'optionb'),
(90, 12, 13, 2, 'optionb'),
(90, 12, 14, 2, 'optiona'),
(90, 12, 15, 2, 'optiond'),
(90, 12, 16, 2, 'optionc'),
(90, 12, 17, 2, 'optionc'),
(90, 12, 18, 2, 'optiond'),
(90, 12, 19, 2, 'optionb'),
(90, 12, 20, 2, 'optionb'),
(90, 12, 21, 2, 'optiona'),
(90, 12, 22, 2, 'optiond'),
(90, 12, 23, 2, 'optionb'),
(90, 12, 24, 2, 'optiona'),
(90, 12, 25, 2, 'optionc'),
(90, 12, 26, 2, 'optionb'),
(90, 12, 27, 2, 'optionc'),
(90, 12, 28, 2, 'optiond'),
(90, 12, 29, 2, 'optiona'),
(90, 12, 30, 2, 'optionb'),
(90, 12, 31, 2, 'optionc'),
(90, 12, 32, 2, 'optionc'),
(90, 12, 33, 2, 'optiond'),
(90, 12, 34, 2, 'optiond'),
(90, 12, 35, 2, 'optiond'),
(90, 12, 36, -0.66, 'optiona'),
(90, 12, 37, 2, 'optiona'),
(90, 12, 38, 2, 'optionc'),
(90, 12, 40, 2, 'optiona'),
(90, 12, 41, 2, 'optionb'),
(90, 12, 42, 2, 'optiona'),
(90, 12, 43, -0.66, 'optionc'),
(90, 12, 44, 2, 'optionb'),
(90, 12, 45, 2, 'optiond'),
(90, 12, 46, 2, 'optiond'),
(90, 12, 47, 2, 'optionc'),
(90, 12, 48, 2, 'optiona'),
(90, 12, 50, 2, 'optionb'),
(90, 12, 51, 2, 'optionc'),
(90, 12, 52, 2, 'optionb'),
(90, 12, 53, 2, 'optiona'),
(90, 12, 54, 2, 'optiona'),
(90, 13, 2, -0.66, 'optionc'),
(90, 13, 7, -0.66, 'optionc'),
(90, 13, 8, 2, 'optionc'),
(90, 13, 9, -0.66, 'optionc'),
(90, 13, 10, 2, 'optione'),
(90, 13, 11, 2, 'optiond'),
(90, 13, 12, 2, 'optiona'),
(90, 13, 13, 2, 'optiond'),
(90, 13, 14, -0.66, 'optiond'),
(90, 13, 15, 2, 'optionc'),
(90, 13, 18, 2, 'optiona'),
(90, 13, 19, 2, 'optionb'),
(90, 13, 20, 2, 'optiona'),
(90, 13, 21, 2, 'optiona'),
(90, 13, 22, -0.66, 'optionb'),
(90, 13, 23, 2, 'optiona'),
(90, 13, 24, -0.66, 'optiond'),
(90, 13, 25, -0.66, 'optionc'),
(90, 13, 26, 2, 'optiond'),
(90, 13, 27, 2, 'optiond'),
(90, 13, 28, 2, 'optionc'),
(90, 13, 29, -0.66, 'optiona'),
(90, 13, 30, 2, 'optiona'),
(90, 13, 31, 2, 'optiond'),
(90, 13, 32, 2, 'optiona'),
(90, 13, 33, 2, 'optionb'),
(90, 13, 34, 2, 'optiona'),
(90, 13, 35, -0.66, 'optionb'),
(90, 13, 36, 2, 'optionc'),
(90, 13, 37, 2, 'optiona'),
(90, 13, 38, 2, 'optionb'),
(90, 13, 39, 2, 'optiona'),
(90, 13, 40, 2, 'optiond'),
(90, 15, 1, 1, 'optionc'),
(90, 15, 2, 1, 'optiond'),
(90, 15, 4, 1, 'optiona'),
(90, 15, 5, -0.33, 'optiond'),
(90, 15, 6, 1, 'optiona'),
(90, 15, 7, -0.33, 'optiond'),
(90, 15, 8, 1, 'optiona'),
(90, 15, 9, 1, 'optionb'),
(90, 15, 10, 1, 'optiona'),
(90, 15, 11, 1, 'optiond'),
(90, 15, 12, 1, 'optionc'),
(90, 15, 13, 1, 'optionb'),
(90, 15, 14, 1, 'optionc'),
(90, 15, 15, 1, 'optiond'),
(90, 15, 16, -0.33, 'optiona'),
(90, 15, 17, -0.33, 'optionc'),
(90, 15, 18, 1, 'optionb'),
(90, 15, 19, 1, 'optionc'),
(90, 15, 20, 1, 'optionb'),
(90, 15, 21, 1, 'optiona'),
(90, 15, 22, 1, 'optionb'),
(90, 15, 23, 1, 'optiona'),
(90, 15, 24, 1, 'optiona'),
(90, 15, 25, 1, 'optiond'),
(90, 15, 26, 2, 'optiona'),
(90, 15, 27, 2, 'optiona'),
(90, 15, 28, 2, 'optiond'),
(90, 15, 29, 2, 'optiond'),
(90, 15, 30, 2, 'optionb'),
(90, 15, 31, 2, 'optiona'),
(90, 15, 32, 2, 'optiona'),
(90, 15, 33, -0.66, 'optionb'),
(90, 15, 34, 2, 'optionb'),
(90, 15, 35, 2, 'optionc'),
(90, 15, 36, 2, 'optiond'),
(90, 15, 37, 2, 'optionb'),
(90, 15, 38, 2, 'optionc'),
(90, 15, 39, 2, 'optionb'),
(90, 15, 40, 2, 'optiond'),
(90, 15, 42, 2, 'optiona'),
(90, 15, 43, 2, 'optiona'),
(90, 15, 44, 2, 'optiond'),
(90, 15, 45, 2, 'optiona'),
(90, 15, 46, -0.66, 'optiond'),
(90, 15, 47, 2, 'optiond'),
(90, 15, 48, 2, 'optionc'),
(90, 15, 49, -0.66, 'optionb'),
(90, 15, 50, 2, 'optiond'),
(90, 15, 51, 2, 'optionb'),
(90, 15, 52, 2, 'optionc'),
(90, 15, 54, 2, 'optionc'),
(90, 15, 55, 2, 'optionb'),
(90, 15, 56, 1, 'optionc'),
(90, 15, 57, -0.33, 'optiona'),
(90, 15, 59, 1, 'optiond'),
(90, 15, 60, 1, 'optiona'),
(90, 15, 61, -0.66, 'optiona'),
(90, 15, 62, -0.66, 'optionc'),
(90, 15, 63, 2, 'optiond'),
(90, 15, 64, -0.66, 'optionc'),
(90, 16, 1, 1, 'optionc'),
(90, 16, 2, 1, 'optionb'),
(90, 16, 3, 1, 'optiond'),
(90, 16, 6, 1, 'optionb'),
(90, 16, 7, -0.33, 'optionb'),
(90, 16, 10, 1, 'optionc'),
(90, 16, 11, -0.33, 'optionc'),
(90, 16, 12, -0.33, 'optionc'),
(90, 16, 14, -0.33, 'optionc'),
(90, 16, 16, 1, 'optiond'),
(90, 16, 19, 1, 'optiond'),
(90, 16, 20, 1, 'optiona'),
(90, 16, 21, 1, 'optiond'),
(90, 16, 22, 1, 'optionb'),
(90, 16, 23, -0.33, 'optiona'),
(90, 16, 25, -0.33, 'optiond'),
(90, 16, 27, -0.66, 'optionc'),
(90, 16, 30, 2, 'optiond'),
(90, 16, 31, -0.66, 'optionc'),
(90, 16, 32, -0.66, 'optionb'),
(90, 16, 35, 2, 'optionb'),
(90, 16, 36, 2, 'optionc'),
(90, 16, 37, 2, 'optionb'),
(90, 16, 38, 2, 'optionb'),
(90, 16, 40, 2, 'optiona'),
(90, 16, 42, -0.66, 'optionc'),
(90, 16, 43, 2, 'optiona'),
(90, 16, 44, 2, 'optiond'),
(90, 16, 45, 2, 'optiona'),
(90, 16, 46, -0.66, 'optionb'),
(90, 16, 47, -0.66, 'optiona'),
(90, 16, 48, 2, 'optiona'),
(90, 16, 49, -0.66, 'optiona'),
(90, 16, 50, 2, 'optiona'),
(90, 16, 52, 2, 'optiona'),
(90, 16, 57, 1, 'optionc'),
(90, 16, 60, 1, 'optionc'),
(90, 16, 61, 2, 'optionb'),
(90, 16, 62, -0.66, 'optionb'),
(90, 17, 1, 1, 'optiona'),
(90, 17, 2, 1, 'optionb'),
(90, 17, 3, 1, 'optionb'),
(90, 17, 5, 1, 'optionc'),
(90, 17, 6, 1, 'optiona'),
(90, 17, 7, 1, 'optionc'),
(90, 17, 8, 1, 'optiona'),
(90, 17, 9, 1, 'optionb'),
(90, 17, 10, 1, 'optiona'),
(90, 17, 11, 1, 'optiond'),
(90, 17, 12, 1, 'optiona'),
(90, 17, 13, 1, 'optionb'),
(90, 17, 14, 1, 'optionc'),
(90, 17, 18, -0.33, 'optiond'),
(90, 17, 19, 1, 'optionb'),
(90, 17, 20, -0.33, 'optiond'),
(90, 17, 21, 1, 'optionc'),
(90, 17, 22, 1, 'optionb'),
(90, 17, 23, 1, 'optiond'),
(90, 17, 24, -0.33, 'optiond'),
(90, 17, 25, -0.33, 'optiond'),
(90, 17, 26, 2, 'optionc'),
(90, 17, 27, 2, 'optionc'),
(90, 17, 28, -0.66, 'optionb'),
(90, 17, 29, 2, 'optiond'),
(90, 17, 30, 2, 'optiona'),
(90, 17, 31, 2, 'optiond'),
(90, 17, 33, 2, 'optiona'),
(90, 17, 34, 2, 'optiond'),
(90, 17, 35, 2, 'optionb'),
(90, 17, 37, 2, 'optionc'),
(90, 17, 38, -0.66, 'optiona'),
(90, 17, 39, 2, 'optionb'),
(90, 17, 41, 2, 'optionc'),
(90, 17, 44, 2, 'optionb'),
(90, 17, 45, 2, 'optionb'),
(90, 17, 47, -0.66, 'optionb'),
(90, 17, 48, 2, 'optiond'),
(90, 17, 49, -0.66, 'optiond'),
(90, 17, 50, 2, 'optiond'),
(90, 17, 51, 2, 'optionc'),
(90, 17, 52, 2, 'optiond'),
(90, 17, 53, 2, 'optiona'),
(90, 17, 54, 2, 'optiond'),
(90, 17, 55, 2, 'optiona'),
(90, 17, 58, 1, 'optionc'),
(90, 17, 61, 2, 'optionb'),
(90, 17, 63, -0.66, 'optionb'),
(90, 17, 65, 2, 'optiond'),
(90, 18, 1, -0.33, 'optiond'),
(90, 18, 2, 1, 'optiond'),
(90, 18, 3, 1, 'optionb'),
(90, 18, 4, 1, 'optiona'),
(90, 18, 6, 1, 'optionc'),
(90, 18, 7, 1, 'optionb'),
(90, 18, 8, -0.33, 'optiond'),
(90, 18, 9, -0.33, 'optionc'),
(90, 18, 10, -0.33, 'optiona'),
(90, 18, 11, 1, 'optionb'),
(90, 18, 12, 1, 'optiona'),
(90, 18, 13, 1, 'optiond'),
(90, 18, 14, 1, 'optionc'),
(90, 18, 15, 1, 'optionc'),
(90, 18, 17, 1, 'optionb'),
(90, 18, 18, 1, 'optiona'),
(90, 18, 19, 1, 'optionc'),
(90, 18, 20, -0.33, 'optiona'),
(90, 18, 21, -0.33, 'optionc'),
(90, 18, 22, 1, 'optiond'),
(90, 18, 23, 1, 'optiond'),
(90, 18, 24, 1, 'optionc'),
(90, 18, 25, 1, 'optionc'),
(90, 18, 26, 2, 'optionb'),
(90, 18, 27, 2, 'optiond'),
(90, 18, 28, 2, 'optiona'),
(90, 18, 29, 2, 'optiond'),
(90, 18, 32, 2, 'optionb'),
(90, 18, 33, 2, 'optiond'),
(90, 18, 36, 2, 'optiona'),
(90, 18, 37, 2, 'optionc'),
(90, 18, 38, 2, 'optionb'),
(90, 18, 42, 2, 'optionb'),
(90, 18, 43, -0.66, 'optiond'),
(90, 18, 45, -0.66, 'optionc'),
(90, 18, 47, 2, 'optiond'),
(90, 18, 48, 2, 'optionb'),
(90, 18, 49, 2, 'optionc'),
(90, 18, 50, 2, 'optionc'),
(90, 18, 51, -0.66, 'optiond'),
(90, 18, 52, 2, 'optiona'),
(90, 18, 53, -0.66, 'optionb'),
(90, 18, 54, 2, 'optiona'),
(90, 18, 55, -0.66, 'optionc'),
(90, 18, 57, 1, 'optionb'),
(90, 18, 60, 1, 'optiona'),
(90, 18, 61, 2, 'optionb'),
(90, 18, 62, -0.66, 'optiona'),
(90, 18, 64, 2, 'optionb'),
(90, 18, 65, 2, 'optiond'),
(92, 8, 1, -0.33, 'optiond'),
(92, 8, 2, 1, 'optiona'),
(92, 8, 3, -0.33, 'optionc'),
(92, 8, 4, -0.33, 'optiona'),
(92, 8, 5, 1, 'optionc'),
(92, 8, 6, 1, 'optiond'),
(92, 8, 8, -0.33, 'optiond'),
(92, 8, 9, -0.33, 'optionb'),
(92, 8, 11, -0.33, 'optiona'),
(92, 8, 12, 1, 'optiona'),
(92, 8, 13, -0.33, 'optiona'),
(92, 8, 14, -0.33, 'optiond'),
(92, 8, 15, 1, 'optionc'),
(92, 8, 17, -0.33, 'optionb'),
(92, 8, 18, -0.33, 'optiona'),
(92, 8, 19, 1, 'optiona'),
(92, 8, 25, 1, 'optiond'),
(92, 8, 26, -0.33, 'optionc'),
(92, 8, 27, -0.33, 'optiona'),
(92, 8, 28, -0.33, 'optiona'),
(92, 8, 29, 1, 'optionb'),
(92, 8, 30, 1, 'optionc'),
(92, 8, 31, -0.33, 'optiona'),
(92, 8, 32, 1, 'optionb'),
(92, 8, 33, 1, 'optiona'),
(92, 8, 34, -0.33, 'optiona'),
(92, 8, 35, 1, 'optionc'),
(92, 8, 37, -0.33, 'optionc'),
(92, 8, 38, -0.33, 'optionc'),
(92, 8, 39, -0.33, 'optionc'),
(92, 8, 40, -0.33, 'optionb'),
(92, 8, 41, 1, 'optiona'),
(92, 8, 42, -0.33, 'optionc'),
(92, 8, 44, 1, 'optionb'),
(92, 8, 45, 1, 'optiond'),
(93, 8, 1, 1, 'optione'),
(93, 8, 2, -0.33, 'optionb'),
(93, 8, 3, -0.33, 'optionc'),
(93, 8, 4, 1, 'optiond'),
(93, 8, 5, 1, 'optionc'),
(93, 8, 6, 1, 'optiond'),
(93, 8, 7, 1, 'optionb'),
(93, 8, 9, 1, 'optiond'),
(93, 8, 10, 1, 'optionc'),
(93, 8, 11, 1, 'optiond'),
(93, 8, 12, -0.33, 'optiond'),
(93, 8, 13, -0.33, 'optiond'),
(93, 8, 14, 1, 'optiona'),
(93, 8, 17, -0.33, 'optionb'),
(93, 8, 18, 1, 'optione'),
(93, 8, 19, 1, 'optiona'),
(93, 8, 20, 1, 'optione'),
(93, 8, 25, -0.33, 'optione'),
(93, 8, 26, 1, 'optiond'),
(93, 8, 27, 1, 'optiond'),
(93, 8, 30, 1, 'optionc'),
(93, 8, 31, 1, 'optionc'),
(93, 8, 32, 1, 'optionb'),
(93, 8, 33, 1, 'optiona'),
(93, 8, 34, 1, 'optiond'),
(93, 8, 35, 1, 'optionc'),
(93, 8, 36, 1, 'optionc'),
(93, 8, 37, 1, 'optiond'),
(93, 8, 38, 1, 'optionb'),
(93, 8, 39, 1, 'optiond'),
(93, 8, 40, -0.33, 'optiona'),
(93, 8, 41, 1, 'optiona'),
(93, 8, 42, 1, 'optiond'),
(93, 8, 43, 1, 'optionb'),
(93, 8, 44, 1, 'optionb'),
(93, 8, 45, 1, 'optiond'),
(93, 9, 2, 2, 'optionb'),
(93, 9, 4, 2, 'optiona'),
(93, 9, 5, -0.66, 'optionc'),
(93, 9, 8, 2, 'optionb'),
(93, 9, 26, 2, 'optionc'),
(93, 9, 29, 2, 'optionc'),
(93, 9, 30, 2, 'optionb'),
(93, 9, 31, -0.66, 'optiona'),
(93, 9, 32, 2, 'optionb'),
(93, 9, 34, 2, 'optiond'),
(93, 9, 35, 2, 'optionb'),
(93, 9, 36, -0.66, 'optiona'),
(93, 9, 37, 2, 'optionb'),
(93, 9, 39, 2, 'optiond'),
(93, 9, 40, -0.66, 'optiond'),
(93, 9, 46, 2, 'optiond'),
(93, 9, 50, 2, 'optionb'),
(93, 9, 51, 2, 'optionb'),
(93, 9, 52, -0.66, 'optionc'),
(93, 9, 53, -0.66, 'optionb'),
(93, 9, 54, 2, 'optione'),
(93, 9, 55, 2, 'optionb'),
(93, 10, 1, 2, 'optione'),
(93, 10, 2, 2, 'optionb'),
(93, 10, 3, -0.66, 'optiona'),
(93, 10, 5, -0.66, 'optiona'),
(93, 10, 6, 2, 'optionb'),
(93, 10, 9, -0.66, 'optionb'),
(93, 10, 10, 2, 'optiond'),
(93, 10, 11, 2, 'optionc'),
(93, 10, 12, 2, 'optionb'),
(93, 10, 13, 2, 'optionc'),
(93, 10, 14, 2, 'optionb'),
(93, 10, 15, 2, 'optiond'),
(93, 10, 16, 2, 'optiona'),
(93, 10, 17, 2, 'optionb'),
(93, 10, 18, -0.66, 'optionb'),
(93, 10, 19, 2, 'optiona'),
(93, 10, 21, 2, 'optionb'),
(93, 10, 22, 2, 'optionb'),
(93, 10, 23, -0.66, 'optionc'),
(93, 11, 1, 2, 'optionb'),
(93, 11, 2, 2, 'optionc'),
(93, 11, 3, -0.66, 'optiond'),
(93, 11, 4, 2, 'optiond'),
(93, 11, 5, 2, 'optionb'),
(93, 11, 6, 2, 'optionb'),
(93, 11, 7, 2, 'optionb'),
(93, 11, 8, 2, 'optiona'),
(93, 11, 9, 2, 'optionc'),
(93, 11, 10, 2, 'optiona'),
(93, 11, 11, 2, 'optiona'),
(93, 11, 12, 2, 'optiona'),
(93, 11, 15, 2, 'optionc'),
(93, 11, 17, 2, 'optiona'),
(93, 11, 18, -0.66, 'optionc'),
(93, 11, 19, 2, 'optionb'),
(93, 11, 20, 2, 'optiona'),
(93, 11, 21, 2, 'optionc'),
(93, 11, 22, 2, 'optiona'),
(93, 11, 23, 2, 'optionc'),
(93, 11, 24, 2, 'optiona'),
(93, 11, 25, 2, 'optionb'),
(93, 11, 26, -0.66, 'optiond'),
(93, 11, 27, 2, 'optione'),
(93, 11, 28, 2, 'optiona'),
(93, 11, 29, 2, 'optiond'),
(93, 11, 30, 2, 'optiond'),
(93, 11, 31, -0.66, 'optionc'),
(93, 11, 32, 2, 'optionc'),
(93, 11, 33, -0.66, 'optione'),
(93, 11, 34, 2, 'optiond'),
(93, 11, 35, 2, 'optiond'),
(93, 11, 36, 2, 'optione'),
(93, 11, 37, 2, 'optionb'),
(93, 11, 38, -0.66, 'optione'),
(93, 11, 39, 2, 'optiona'),
(93, 11, 40, 2, 'optiond'),
(93, 11, 41, 2, 'optionc'),
(93, 11, 42, 2, 'optione'),
(93, 11, 43, -0.66, 'optionc'),
(93, 11, 45, 2, 'optiona'),
(93, 11, 46, -0.66, 'optione'),
(93, 11, 47, -0.66, 'optiona'),
(93, 11, 48, -0.66, 'optionc'),
(93, 11, 49, 2, 'optiond'),
(93, 11, 51, 2, 'optiond'),
(93, 11, 52, 2, 'optionb'),
(93, 11, 53, 2, 'optionc'),
(93, 11, 55, -0.66, 'optionc'),
(93, 11, 56, 2, 'optione'),
(93, 11, 57, 2, 'optionc'),
(93, 11, 58, 2, 'optione'),
(93, 11, 59, 2, 'optiona'),
(93, 11, 60, -0.66, 'optione'),
(93, 12, 1, 2, 'optionc'),
(93, 12, 2, -0.66, 'optiond'),
(93, 12, 4, -0.66, 'optiona'),
(93, 12, 5, -0.66, 'optionc'),
(93, 12, 7, 2, 'optionb'),
(93, 12, 8, -0.66, 'optiona'),
(93, 12, 9, -0.66, 'optionc'),
(93, 12, 10, -0.66, 'optiona'),
(93, 12, 11, 2, 'optionb'),
(93, 12, 12, -0.66, 'optiona'),
(93, 12, 13, -0.66, 'optionc'),
(93, 12, 14, 2, 'optiona'),
(93, 12, 15, 2, 'optiond'),
(93, 12, 16, 2, 'optionc'),
(93, 12, 17, -0.66, 'optionb'),
(93, 12, 18, 2, 'optiond'),
(93, 12, 19, 2, 'optionb'),
(93, 12, 20, 2, 'optionb'),
(93, 12, 21, 2, 'optiona'),
(93, 12, 22, 2, 'optiond'),
(93, 12, 23, -0.66, 'optiond'),
(93, 12, 24, 2, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(93, 12, 25, -0.66, 'optiona'),
(93, 12, 26, 2, 'optionb'),
(93, 12, 27, -0.66, 'optionb'),
(93, 12, 28, -0.66, 'optionc'),
(93, 12, 29, 2, 'optiona'),
(93, 12, 30, 2, 'optionb'),
(93, 12, 31, 2, 'optionc'),
(93, 12, 32, -0.66, 'optionb'),
(93, 12, 34, 2, 'optiond'),
(93, 12, 35, -0.66, 'optionb'),
(93, 12, 36, 2, 'optionc'),
(93, 12, 37, -0.66, 'optionb'),
(93, 12, 38, 2, 'optionc'),
(93, 12, 40, 2, 'optiona'),
(93, 12, 41, 2, 'optionb'),
(93, 12, 42, 2, 'optiona'),
(93, 12, 43, 2, 'optiond'),
(93, 12, 45, 2, 'optiond'),
(93, 12, 46, 2, 'optiond'),
(93, 12, 47, 2, 'optionc'),
(93, 12, 48, 2, 'optiona'),
(93, 12, 50, 2, 'optionb'),
(93, 12, 51, 2, 'optionc'),
(93, 12, 52, -0.66, 'optionc'),
(93, 12, 53, 2, 'optiona'),
(93, 12, 54, -0.66, 'optiond'),
(93, 15, 2, 1, 'optiond'),
(93, 15, 6, 1, 'optiona'),
(93, 15, 8, 1, 'optiona'),
(93, 15, 9, 1, 'optionb'),
(93, 15, 10, 1, 'optiona'),
(93, 15, 11, 1, 'optiond'),
(93, 15, 12, -0.33, 'optionb'),
(93, 15, 13, 1, 'optionb'),
(93, 15, 14, 1, 'optionc'),
(93, 15, 15, 1, 'optiond'),
(93, 15, 16, 1, 'optiond'),
(93, 15, 17, -0.33, 'optiond'),
(93, 15, 18, 1, 'optionb'),
(93, 15, 19, 1, 'optionc'),
(93, 15, 20, 1, 'optionb'),
(93, 15, 21, -0.33, 'optiond'),
(93, 15, 22, 1, 'optionb'),
(93, 15, 23, 1, 'optiona'),
(93, 15, 24, 1, 'optiona'),
(93, 15, 25, -0.33, 'optionb'),
(93, 15, 27, 2, 'optiona'),
(93, 15, 30, 2, 'optionb'),
(93, 15, 31, 2, 'optiona'),
(93, 15, 32, 2, 'optiona'),
(93, 15, 35, 2, 'optionc'),
(93, 15, 36, 2, 'optiond'),
(93, 15, 37, -0.66, 'optionc'),
(93, 15, 39, 2, 'optionb'),
(93, 15, 40, -0.66, 'optionc'),
(93, 15, 41, 2, 'optionc'),
(93, 15, 42, 2, 'optiona'),
(93, 15, 43, 2, 'optiona'),
(93, 15, 44, 2, 'optiond'),
(93, 15, 47, 2, 'optiond'),
(93, 15, 50, 2, 'optiond'),
(93, 15, 51, -0.66, 'optionc'),
(93, 15, 52, 2, 'optionc'),
(93, 15, 53, -0.66, 'optiona'),
(93, 15, 54, -0.66, 'optionb'),
(93, 15, 55, 2, 'optionb'),
(93, 15, 56, -0.33, 'optiona'),
(93, 15, 58, 1, 'optiond'),
(93, 15, 59, 1, 'optiond'),
(93, 15, 64, -0.66, 'optionc'),
(93, 15, 65, -0.66, 'optiond'),
(93, 16, 1, 1, 'optionc'),
(93, 16, 3, 1, 'optiond'),
(93, 16, 4, 1, 'optiond'),
(93, 16, 6, 1, 'optionb'),
(93, 16, 7, -0.33, 'optionb'),
(93, 16, 8, 1, 'optiona'),
(93, 16, 10, 1, 'optionc'),
(93, 16, 11, -0.33, 'optiona'),
(93, 16, 13, -0.33, 'optiona'),
(93, 16, 14, -0.33, 'optionc'),
(93, 16, 19, 1, 'optiond'),
(93, 16, 20, 1, 'optiona'),
(93, 16, 22, 1, 'optionb'),
(93, 16, 23, 1, 'optionc'),
(93, 16, 26, -0.66, 'optiond'),
(93, 16, 28, 2, 'optiond'),
(93, 16, 29, -0.66, 'optionb'),
(93, 16, 30, 2, 'optiond'),
(93, 16, 31, -0.66, 'optiona'),
(93, 16, 35, -0.66, 'optionc'),
(93, 16, 36, 2, 'optionc'),
(93, 16, 37, 2, 'optionb'),
(93, 16, 43, 2, 'optiona'),
(93, 16, 44, 2, 'optiond'),
(93, 16, 45, 2, 'optiona'),
(93, 16, 48, 2, 'optiona'),
(93, 16, 49, 2, 'optionc'),
(93, 16, 51, 2, 'optiona'),
(93, 16, 60, 1, 'optionc'),
(93, 16, 61, -0.66, 'optiona'),
(93, 17, 2, 1, 'optionb'),
(93, 17, 3, 1, 'optionb'),
(93, 17, 5, 1, 'optionc'),
(93, 17, 6, -0.33, 'optionb'),
(93, 17, 8, -0.33, 'optionb'),
(93, 17, 9, -0.33, 'optiona'),
(93, 17, 11, 1, 'optiond'),
(93, 17, 12, -0.33, 'optionc'),
(93, 17, 13, 1, 'optionb'),
(93, 17, 18, 1, 'optionb'),
(93, 17, 19, 1, 'optionb'),
(93, 17, 20, -0.33, 'optionb'),
(93, 17, 21, 1, 'optionc'),
(93, 17, 22, 1, 'optionb'),
(93, 17, 23, 1, 'optiond'),
(93, 17, 24, -0.33, 'optionc'),
(93, 17, 25, 1, 'optionb'),
(93, 17, 26, 2, 'optionc'),
(93, 17, 30, -0.66, 'optiond'),
(93, 17, 31, -0.66, 'optionc'),
(93, 17, 32, -0.66, 'optiond'),
(93, 17, 33, 2, 'optiona'),
(93, 17, 34, 2, 'optiond'),
(93, 17, 35, 2, 'optionb'),
(93, 17, 38, -0.66, 'optiona'),
(93, 17, 39, 2, 'optionb'),
(93, 17, 41, 2, 'optionc'),
(93, 17, 42, 2, 'optionb'),
(93, 17, 45, 2, 'optionb'),
(93, 17, 46, -0.66, 'optiona'),
(93, 17, 47, 2, 'optiona'),
(93, 17, 48, 2, 'optiond'),
(93, 17, 50, 2, 'optiond'),
(93, 17, 51, 2, 'optionc'),
(93, 17, 54, 2, 'optiond'),
(93, 17, 55, 2, 'optiona'),
(93, 17, 57, -0.33, 'optiona'),
(93, 17, 58, 1, 'optionc'),
(93, 17, 60, 1, 'optiond'),
(93, 17, 61, 2, 'optionb'),
(93, 17, 63, 2, 'optiona'),
(93, 17, 65, -0.66, 'optionb'),
(93, 18, 2, 1, 'optiond'),
(93, 18, 3, 1, 'optionb'),
(93, 18, 4, -0.33, 'optionb'),
(93, 18, 5, 1, 'optiond'),
(93, 18, 6, 1, 'optionc'),
(93, 18, 7, 1, 'optionb'),
(93, 18, 8, -0.33, 'optiona'),
(93, 18, 10, -0.33, 'optiond'),
(93, 18, 11, -0.33, 'optiond'),
(93, 18, 12, 1, 'optiona'),
(93, 18, 14, 1, 'optionc'),
(93, 18, 15, -0.33, 'optiona'),
(93, 18, 17, 1, 'optionb'),
(93, 18, 19, 1, 'optionc'),
(93, 18, 20, 1, 'optionb'),
(93, 18, 21, 1, 'optiond'),
(93, 18, 22, 1, 'optiond'),
(93, 18, 24, 1, 'optionc'),
(93, 18, 25, 1, 'optionc'),
(93, 18, 26, 2, 'optionb'),
(93, 18, 27, 2, 'optiond'),
(93, 18, 29, 2, 'optiond'),
(93, 18, 30, -0.66, 'optiona'),
(93, 18, 31, 2, 'optiona'),
(93, 18, 32, -0.66, 'optiona'),
(93, 18, 33, 2, 'optiond'),
(93, 18, 34, 2, 'optiona'),
(93, 18, 36, 2, 'optiona'),
(93, 18, 37, 2, 'optionc'),
(93, 18, 38, -0.66, 'optiona'),
(93, 18, 42, 2, 'optionb'),
(93, 18, 43, -0.66, 'optionc'),
(93, 18, 44, -0.66, 'optionb'),
(93, 18, 45, -0.66, 'optionc'),
(93, 18, 47, 2, 'optiond'),
(93, 18, 48, 2, 'optionb'),
(93, 18, 49, 2, 'optionc'),
(93, 18, 50, 2, 'optionc'),
(93, 18, 51, -0.66, 'optiond'),
(93, 18, 54, 2, 'optiona'),
(93, 18, 58, 1, 'optionc'),
(93, 18, 60, 1, 'optiona'),
(93, 18, 61, 2, 'optionb'),
(93, 18, 65, 2, 'optiond'),
(94, 8, 1, 1, 'optione'),
(94, 8, 2, -0.33, 'optiond'),
(94, 8, 3, 1, 'optionb'),
(94, 8, 4, -0.33, 'optiona'),
(94, 8, 5, -0.33, 'optiona'),
(94, 8, 6, 1, 'optiond'),
(94, 8, 7, 1, 'optionb'),
(94, 8, 8, 1, 'optionb'),
(94, 8, 9, 1, 'optiond'),
(94, 8, 10, 1, 'optionc'),
(94, 8, 11, 1, 'optiond'),
(94, 8, 12, 1, 'optiona'),
(94, 8, 13, 1, 'optionb'),
(94, 8, 14, 1, 'optiona'),
(94, 8, 15, 1, 'optionc'),
(94, 8, 16, 1, 'optionc'),
(94, 8, 17, 1, 'optione'),
(94, 8, 18, 1, 'optione'),
(94, 8, 19, 1, 'optiona'),
(94, 8, 20, -0.33, 'optiond'),
(94, 8, 25, 1, 'optiond'),
(94, 8, 26, 1, 'optiond'),
(94, 8, 27, 1, 'optiond'),
(94, 8, 28, 1, 'optionc'),
(94, 8, 29, 1, 'optionb'),
(94, 8, 30, 1, 'optionc'),
(94, 8, 31, 1, 'optionc'),
(94, 8, 32, 1, 'optionb'),
(94, 8, 33, 1, 'optiona'),
(94, 8, 34, 1, 'optiond'),
(94, 8, 35, 1, 'optionc'),
(94, 8, 36, 1, 'optionc'),
(94, 8, 37, -0.33, 'optionc'),
(94, 8, 38, -0.33, 'optionc'),
(94, 8, 39, 1, 'optiond'),
(94, 8, 40, -0.33, 'optiona'),
(94, 8, 41, 1, 'optiona'),
(94, 8, 42, 1, 'optiond'),
(94, 8, 43, 1, 'optionb'),
(94, 8, 44, -0.33, 'optiona'),
(94, 8, 45, 1, 'optiond'),
(94, 9, 2, -0.66, 'optiona'),
(94, 9, 4, 2, 'optiona'),
(94, 9, 5, 2, 'optiond'),
(94, 9, 7, 2, 'optionc'),
(94, 9, 8, -0.66, 'optionc'),
(94, 9, 9, 2, 'optionb'),
(94, 9, 10, 2, 'optionc'),
(94, 9, 14, -0.66, 'optiona'),
(94, 9, 15, -0.66, 'optionc'),
(94, 9, 17, 2, 'optionb'),
(94, 9, 18, 2, 'optionb'),
(94, 9, 19, 2, 'optionc'),
(94, 9, 21, -0.66, 'optionb'),
(94, 9, 25, -0.66, 'optiona'),
(94, 9, 26, 2, 'optionc'),
(94, 9, 28, -0.66, 'optionc'),
(94, 9, 29, 2, 'optionc'),
(94, 9, 30, 2, 'optionb'),
(94, 9, 31, -0.66, 'optiond'),
(94, 9, 32, 2, 'optionb'),
(94, 9, 34, 2, 'optiond'),
(94, 9, 35, 2, 'optionb'),
(94, 9, 36, -0.66, 'optiond'),
(94, 9, 37, 2, 'optionb'),
(94, 9, 39, 2, 'optiond'),
(94, 9, 42, 2, 'optionb'),
(94, 9, 43, -0.66, 'optionb'),
(94, 9, 45, 2, 'optionc'),
(94, 9, 46, 2, 'optiond'),
(94, 9, 47, 2, 'optionc'),
(94, 9, 48, 2, 'optionc'),
(94, 9, 49, 2, 'optionb'),
(94, 9, 50, 2, 'optionb'),
(94, 9, 52, 2, 'optionb'),
(94, 9, 53, 2, 'optionc'),
(94, 9, 55, -0.66, 'optiona'),
(94, 12, 1, 2, 'optionc'),
(94, 12, 2, 2, 'optionc'),
(94, 12, 4, -0.66, 'optionb'),
(94, 12, 5, 2, 'optiona'),
(94, 12, 6, 2, 'optiond'),
(94, 12, 7, 2, 'optionb'),
(94, 12, 13, 2, 'optionb'),
(94, 12, 14, 2, 'optiona'),
(94, 12, 15, 2, 'optiond'),
(94, 12, 16, 2, 'optionc'),
(94, 12, 26, 2, 'optionb'),
(94, 12, 27, -0.66, 'optiond'),
(94, 12, 28, -0.66, 'optionb'),
(94, 12, 29, -0.66, 'optiond'),
(94, 12, 30, 2, 'optionb'),
(94, 12, 31, 2, 'optionc'),
(94, 12, 32, 2, 'optionc'),
(94, 12, 34, -0.66, 'optionb'),
(94, 12, 35, -0.66, 'optiona'),
(94, 12, 36, 2, 'optionc'),
(94, 12, 37, -0.66, 'optionb'),
(94, 12, 38, 2, 'optionc'),
(94, 12, 40, -0.66, 'optiond'),
(94, 12, 41, 2, 'optionb'),
(94, 12, 42, 2, 'optiona'),
(94, 12, 43, -0.66, 'optionc'),
(94, 12, 45, 2, 'optiond'),
(94, 12, 46, 2, 'optiond'),
(94, 12, 47, 2, 'optionc'),
(94, 12, 49, 2, 'optionc'),
(94, 12, 50, 2, 'optionb'),
(94, 12, 52, 2, 'optionb'),
(94, 12, 53, 2, 'optiona'),
(94, 12, 54, -0.66, 'optiond'),
(94, 13, 1, -0.66, 'optiond'),
(94, 13, 2, 2, 'optionb'),
(94, 13, 3, -0.66, 'optionb'),
(94, 13, 5, -0.66, 'optiond'),
(94, 13, 6, -0.66, 'optiona'),
(94, 13, 7, -0.66, 'optiond'),
(94, 13, 8, 2, 'optionc'),
(94, 13, 9, -0.66, 'optiond'),
(94, 13, 10, 2, 'optione'),
(94, 13, 11, 2, 'optiond'),
(94, 13, 12, 2, 'optiona'),
(94, 13, 13, 2, 'optiond'),
(94, 13, 14, -0.66, 'optione'),
(94, 13, 15, -0.66, 'optiona'),
(94, 13, 18, -0.66, 'optiond'),
(94, 13, 20, 2, 'optiona'),
(94, 13, 24, -0.66, 'optiond'),
(94, 13, 25, 2, 'optiona'),
(94, 13, 28, 2, 'optionc'),
(94, 13, 29, -0.66, 'optiona'),
(94, 13, 30, 2, 'optiona'),
(94, 13, 31, 2, 'optiond'),
(94, 13, 32, -0.66, 'optionc'),
(94, 13, 33, 2, 'optionb'),
(94, 13, 34, -0.66, 'optiond'),
(94, 13, 35, 2, 'optionc'),
(94, 13, 36, 2, 'optionc'),
(94, 13, 38, 2, 'optionb'),
(94, 13, 39, 2, 'optiona'),
(94, 13, 40, 2, 'optiond'),
(94, 15, 2, 1, 'optiond'),
(94, 15, 3, 1, 'optionc'),
(94, 15, 4, 1, 'optiona'),
(94, 15, 5, 1, 'optionb'),
(94, 15, 6, 1, 'optiona'),
(94, 15, 7, 1, 'optionb'),
(94, 15, 8, 1, 'optiona'),
(94, 15, 9, 1, 'optionb'),
(94, 15, 10, 1, 'optiona'),
(94, 15, 11, 1, 'optiond'),
(94, 15, 12, 1, 'optionc'),
(94, 15, 13, 1, 'optionb'),
(94, 15, 14, 1, 'optionc'),
(94, 15, 15, 1, 'optiond'),
(94, 15, 16, 1, 'optiond'),
(94, 15, 17, 1, 'optionb'),
(94, 15, 18, 1, 'optionb'),
(94, 15, 19, 1, 'optionc'),
(94, 15, 20, 1, 'optionb'),
(94, 15, 21, 1, 'optiona'),
(94, 15, 22, 1, 'optionb'),
(94, 15, 23, 1, 'optiona'),
(94, 15, 24, 1, 'optiona'),
(94, 15, 25, 1, 'optiond'),
(94, 15, 26, 2, 'optiona'),
(94, 15, 27, 2, 'optiona'),
(94, 15, 29, 2, 'optiond'),
(94, 15, 30, -0.66, 'optiond'),
(94, 15, 31, 2, 'optiona'),
(94, 15, 32, 2, 'optiona'),
(94, 15, 33, -0.66, 'optionb'),
(94, 15, 35, 2, 'optionc'),
(94, 15, 36, 2, 'optiond'),
(94, 15, 37, -0.66, 'optionc'),
(94, 15, 38, 2, 'optionc'),
(94, 15, 39, 2, 'optionb'),
(94, 15, 40, 2, 'optiond'),
(94, 15, 41, 2, 'optionc'),
(94, 15, 42, 2, 'optiona'),
(94, 15, 43, 2, 'optiona'),
(94, 15, 44, 2, 'optiond'),
(94, 15, 45, 2, 'optiona'),
(94, 15, 46, 2, 'optionb'),
(94, 15, 47, 2, 'optiond'),
(94, 15, 48, -0.66, 'optiond'),
(94, 15, 49, -0.66, 'optiond'),
(94, 15, 50, 2, 'optiond'),
(94, 15, 51, -0.66, 'optionc'),
(94, 15, 52, 2, 'optionc'),
(94, 15, 53, 2, 'optionc'),
(94, 15, 54, -0.66, 'optionb'),
(94, 15, 55, -0.66, 'optiond'),
(94, 15, 56, -0.33, 'optiona'),
(94, 15, 57, 1, 'optionb'),
(94, 15, 58, 1, 'optiond'),
(94, 15, 59, 1, 'optiond'),
(94, 15, 60, 1, 'optiona'),
(94, 15, 61, 2, 'optionc'),
(94, 15, 62, 2, 'optionb'),
(94, 15, 63, 2, 'optiond'),
(94, 15, 64, 2, 'optiond'),
(94, 15, 65, 2, 'optionb'),
(94, 17, 1, 1, 'optiona'),
(94, 17, 2, 1, 'optionb'),
(94, 17, 3, 1, 'optionb'),
(94, 17, 4, -0.33, 'optionb'),
(94, 17, 5, 1, 'optionc'),
(94, 17, 6, 1, 'optiona'),
(94, 17, 7, 1, 'optionc'),
(94, 17, 8, 1, 'optiona'),
(94, 17, 9, 1, 'optionb'),
(94, 17, 10, -0.33, 'optionc'),
(94, 17, 11, 1, 'optiond'),
(94, 17, 13, 1, 'optionb'),
(94, 17, 14, 1, 'optionc'),
(94, 17, 16, 1, 'optionb'),
(94, 17, 18, 1, 'optionb'),
(94, 17, 19, 1, 'optionb'),
(94, 17, 20, 1, 'optiona'),
(94, 17, 22, 1, 'optionb'),
(94, 17, 23, 1, 'optiond'),
(94, 17, 24, -0.33, 'optionc'),
(94, 17, 25, 1, 'optionb'),
(94, 17, 26, 2, 'optionc'),
(94, 17, 27, 2, 'optionc'),
(94, 17, 28, 2, 'optiond'),
(94, 17, 29, 2, 'optiond'),
(94, 17, 30, 2, 'optiona'),
(94, 17, 31, -0.66, 'optionc'),
(94, 17, 32, 2, 'optiona'),
(94, 17, 33, 2, 'optiona'),
(94, 17, 34, 2, 'optiond'),
(94, 17, 35, 2, 'optionb'),
(94, 17, 38, -0.66, 'optiona'),
(94, 17, 39, 2, 'optionb'),
(94, 17, 40, 2, 'optionb'),
(94, 17, 41, 2, 'optionc'),
(94, 17, 42, 2, 'optionb'),
(94, 17, 45, 2, 'optionb'),
(94, 17, 47, -0.66, 'optionb'),
(94, 17, 48, -0.66, 'optionc'),
(94, 17, 50, -0.66, 'optionc'),
(94, 17, 52, 2, 'optiond'),
(94, 17, 53, -0.66, 'optionb'),
(94, 17, 54, 2, 'optiond'),
(94, 17, 55, 2, 'optiona'),
(94, 17, 57, -0.33, 'optiona'),
(94, 17, 58, 1, 'optionc'),
(94, 17, 60, 1, 'optiond'),
(94, 17, 61, 2, 'optionb'),
(94, 17, 63, 2, 'optiona'),
(94, 17, 64, -0.66, 'optiona'),
(94, 17, 65, -0.66, 'optionb'),
(94, 18, 1, 1, 'optiona'),
(94, 18, 2, 1, 'optiond'),
(94, 18, 3, 1, 'optionb'),
(94, 18, 4, 1, 'optiona'),
(94, 18, 6, 1, 'optionc'),
(94, 18, 7, 1, 'optionb'),
(94, 18, 8, 1, 'optionb'),
(94, 18, 9, 1, 'optiond'),
(94, 18, 11, 1, 'optionb'),
(94, 18, 12, 1, 'optiona'),
(94, 18, 13, 1, 'optiond'),
(94, 18, 15, 1, 'optionc'),
(94, 18, 17, 1, 'optionb'),
(94, 18, 18, 1, 'optiona'),
(94, 18, 19, -0.33, 'optiona'),
(94, 18, 20, -0.33, 'optiona'),
(94, 18, 21, 1, 'optiond'),
(94, 18, 22, -0.33, 'optionb'),
(94, 18, 23, 1, 'optiond'),
(94, 18, 24, 1, 'optionc'),
(94, 18, 25, 1, 'optionc'),
(94, 18, 26, 2, 'optionb'),
(94, 18, 27, 2, 'optiond'),
(94, 18, 29, 2, 'optiond'),
(94, 18, 30, 2, 'optionc'),
(94, 18, 31, 2, 'optiona'),
(94, 18, 32, 2, 'optionb'),
(94, 18, 33, 2, 'optiond'),
(94, 18, 35, 2, 'optiond'),
(94, 18, 37, 2, 'optionc'),
(94, 18, 38, 2, 'optionb'),
(94, 18, 39, -0.66, 'optionc'),
(94, 18, 40, -0.66, 'optionc'),
(94, 18, 42, 2, 'optionb'),
(94, 18, 43, 2, 'optionb'),
(94, 18, 44, 2, 'optionc'),
(94, 18, 45, -0.66, 'optionc'),
(94, 18, 47, 2, 'optiond'),
(94, 18, 48, 2, 'optionb'),
(94, 18, 49, 2, 'optionc'),
(94, 18, 50, 2, 'optionc'),
(94, 18, 51, -0.66, 'optiond'),
(94, 18, 54, 2, 'optiona'),
(94, 18, 56, 1, 'optione'),
(94, 18, 57, 1, 'optionb'),
(94, 18, 58, -0.33, 'optionb'),
(94, 18, 60, 1, 'optiona'),
(94, 18, 61, 2, 'optionb'),
(94, 18, 62, 2, 'optiond'),
(94, 18, 63, -0.66, 'optionc'),
(94, 18, 64, 2, 'optionb'),
(94, 18, 65, 2, 'optiond'),
(95, 7, 1, 1, 'optionc'),
(95, 7, 2, 1, 'optiond'),
(95, 7, 3, -0.33, 'optiond'),
(95, 7, 4, 1, 'optiond'),
(95, 7, 5, -0.33, 'optionc'),
(95, 7, 6, 1, 'optionb'),
(95, 7, 8, 1, 'optionb'),
(95, 7, 9, 1, 'optiona'),
(95, 7, 10, 1, 'optionc'),
(95, 7, 11, 1, 'optiona'),
(95, 7, 12, -0.33, 'optiona'),
(95, 7, 14, 1, 'optionc'),
(95, 7, 15, 1, 'optionb'),
(95, 7, 16, -0.33, 'optionb'),
(95, 7, 17, 1, 'optionc'),
(95, 7, 18, 1, 'optiona'),
(95, 7, 19, 1, 'optiond'),
(95, 7, 20, 1, 'optiona'),
(95, 7, 21, 1, 'optiond'),
(95, 7, 22, 1, 'optiond'),
(95, 7, 24, 1, 'optiona'),
(95, 7, 25, 1, 'optionc'),
(95, 7, 26, 2, 'optiona'),
(95, 7, 28, 2, 'optiona'),
(95, 7, 29, -0.66, 'optiona'),
(95, 7, 31, 2, 'optiona'),
(95, 7, 33, 2, 'optiond'),
(95, 7, 34, -0.66, 'optiond'),
(95, 7, 35, 2, 'optionc'),
(95, 7, 36, 2, 'optionc'),
(95, 7, 37, 2, 'optione'),
(95, 7, 39, 2, 'optione'),
(95, 7, 40, 2, 'optionb'),
(95, 7, 42, 2, 'optionc'),
(95, 7, 43, 2, 'optionb'),
(95, 7, 44, 2, 'optionb'),
(95, 7, 45, 2, 'optiond'),
(95, 7, 46, -0.66, 'optiona'),
(95, 7, 47, 2, 'optionb'),
(95, 7, 48, -0.66, 'optionc'),
(95, 7, 49, -0.66, 'optiona'),
(95, 7, 50, 2, 'optionc'),
(95, 7, 51, 2, 'optionb'),
(95, 7, 52, 2, 'optiona'),
(95, 7, 53, 2, 'optionb'),
(95, 7, 54, 2, 'optiond'),
(95, 7, 55, 2, 'optiond'),
(95, 7, 56, -0.33, 'optiona'),
(95, 7, 57, 1, 'optionc'),
(95, 7, 58, 1, 'optionb'),
(95, 7, 59, 1, 'optiond'),
(95, 7, 60, 1, 'optionc'),
(95, 7, 62, 2, 'optionc'),
(95, 7, 63, 2, 'optiond'),
(95, 7, 64, 2, 'optionc'),
(95, 7, 65, 2, 'optionb'),
(95, 8, 1, 1, 'optione'),
(95, 8, 2, -0.33, 'optiond'),
(95, 8, 3, 1, 'optionb'),
(95, 8, 4, -0.33, 'optionb'),
(95, 8, 5, -0.33, 'optiona'),
(95, 8, 6, 1, 'optiond'),
(95, 8, 8, 1, 'optionb'),
(95, 8, 9, 1, 'optiond'),
(95, 8, 10, 1, 'optionc'),
(95, 8, 11, 1, 'optiond'),
(95, 8, 12, 1, 'optiona'),
(95, 8, 13, 1, 'optionb'),
(95, 8, 14, 1, 'optiona'),
(95, 8, 15, 1, 'optionc'),
(95, 8, 16, 1, 'optionc'),
(95, 8, 17, -0.33, 'optionb'),
(95, 8, 18, -0.33, 'optionb'),
(95, 8, 19, 1, 'optiona'),
(95, 8, 20, -0.33, 'optiona'),
(95, 8, 22, -0.33, 'optionb'),
(95, 8, 23, 1, 'optiona'),
(95, 8, 24, 1, 'optiona'),
(95, 8, 25, 1, 'optiond'),
(95, 8, 26, 1, 'optiond'),
(95, 8, 27, 1, 'optiond'),
(95, 8, 29, 1, 'optionb'),
(95, 8, 30, 1, 'optionc'),
(95, 8, 31, 1, 'optionc'),
(95, 8, 32, 1, 'optionb'),
(95, 8, 33, 1, 'optiona'),
(95, 8, 34, 1, 'optiond'),
(95, 8, 35, 1, 'optionc'),
(95, 8, 36, 1, 'optionc'),
(95, 8, 37, 1, 'optiond'),
(95, 8, 38, 1, 'optionb'),
(95, 8, 39, 1, 'optiond'),
(95, 8, 40, 1, 'optionc'),
(95, 8, 41, 1, 'optiona'),
(95, 8, 42, 1, 'optiond'),
(95, 8, 43, 1, 'optionb'),
(95, 8, 44, -0.33, 'optiona'),
(95, 8, 45, -0.33, 'optionc'),
(95, 9, 1, 2, 'optionc'),
(95, 9, 2, 2, 'optionb'),
(95, 9, 3, 2, 'optiona'),
(95, 9, 4, 2, 'optiona'),
(95, 9, 5, 2, 'optiond'),
(95, 9, 6, 2, 'optiond'),
(95, 9, 8, -0.66, 'optionc'),
(95, 9, 12, 2, 'optiona'),
(95, 9, 14, 2, 'optionb'),
(95, 9, 15, -0.66, 'optiond'),
(95, 9, 17, 2, 'optionb'),
(95, 9, 18, 2, 'optionb'),
(95, 9, 21, 2, 'optionc'),
(95, 9, 23, -0.66, 'optionb'),
(95, 9, 24, 2, 'optionc'),
(95, 9, 25, -0.66, 'optiona'),
(95, 9, 26, 2, 'optionc'),
(95, 9, 28, -0.66, 'optionc'),
(95, 9, 29, 2, 'optionc'),
(95, 9, 30, 2, 'optionb'),
(95, 9, 31, -0.66, 'optiond'),
(95, 9, 32, -0.66, 'optiond'),
(95, 9, 34, 2, 'optiond'),
(95, 9, 35, 2, 'optionb'),
(95, 9, 36, -0.66, 'optiona'),
(95, 9, 37, 2, 'optionb'),
(95, 9, 39, -0.66, 'optionb'),
(95, 9, 47, 2, 'optionc'),
(95, 9, 48, -0.66, 'optiond'),
(95, 9, 49, 2, 'optionb'),
(95, 10, 1, -0.66, 'optionc'),
(95, 10, 2, 2, 'optionb'),
(95, 10, 3, -0.66, 'optiona'),
(95, 10, 4, -0.66, 'optione'),
(95, 10, 5, 2, 'optionb'),
(95, 10, 6, 2, 'optionb'),
(95, 10, 9, 2, 'optionc'),
(95, 10, 10, -0.66, 'optionc'),
(95, 10, 11, 2, 'optionc'),
(95, 10, 12, 2, 'optionb'),
(95, 10, 13, 2, 'optionc'),
(95, 10, 14, 2, 'optionb'),
(95, 10, 15, 2, 'optiond'),
(95, 10, 16, 2, 'optiona'),
(95, 10, 17, 2, 'optionb'),
(95, 10, 19, 2, 'optiona'),
(95, 10, 21, 2, 'optionb'),
(95, 10, 22, 2, 'optionb'),
(95, 10, 23, -0.66, 'optionc'),
(95, 10, 24, -0.66, 'optionc'),
(95, 11, 1, 2, 'optionb'),
(95, 11, 2, 2, 'optionc'),
(95, 11, 3, -0.66, 'optiond'),
(95, 11, 5, 2, 'optionb'),
(95, 11, 6, 2, 'optionb'),
(95, 11, 7, 2, 'optionb'),
(95, 11, 8, 2, 'optiona'),
(95, 11, 9, 2, 'optionc'),
(95, 11, 10, 2, 'optiona'),
(95, 11, 11, 2, 'optiona'),
(95, 11, 12, -0.66, 'optionb'),
(95, 11, 13, 2, 'optionb'),
(95, 11, 14, 2, 'optionc'),
(95, 11, 15, 2, 'optionc'),
(95, 11, 17, 2, 'optiona'),
(95, 11, 18, -0.66, 'optionc'),
(95, 11, 20, 2, 'optiona'),
(95, 11, 21, 2, 'optionc'),
(95, 11, 22, 2, 'optiona'),
(95, 11, 23, 2, 'optionc'),
(95, 11, 24, 2, 'optiona'),
(95, 11, 25, 2, 'optionb'),
(95, 11, 26, 2, 'optionc'),
(95, 11, 27, 2, 'optione'),
(95, 11, 28, -0.66, 'optiond'),
(95, 11, 29, 2, 'optiond'),
(95, 11, 30, -0.66, 'optiona'),
(95, 11, 31, 2, 'optione'),
(95, 11, 32, 2, 'optionc'),
(95, 11, 33, -0.66, 'optione'),
(95, 11, 34, 2, 'optiond'),
(95, 11, 35, 2, 'optiond'),
(95, 11, 36, 2, 'optione'),
(95, 11, 37, 2, 'optionb'),
(95, 11, 38, 2, 'optiona'),
(95, 11, 39, 2, 'optiona'),
(95, 11, 41, 2, 'optionc'),
(95, 11, 42, 2, 'optione'),
(95, 11, 44, -0.66, 'optionc'),
(95, 11, 45, 2, 'optiona'),
(95, 11, 46, 2, 'optiona'),
(95, 11, 48, 2, 'optiond'),
(95, 11, 49, 2, 'optiond'),
(95, 11, 51, 2, 'optiond'),
(95, 11, 52, 2, 'optionb'),
(95, 11, 53, 2, 'optionc'),
(95, 11, 55, 2, 'optionb'),
(95, 11, 56, 2, 'optione'),
(95, 11, 57, 2, 'optionc'),
(95, 11, 58, 2, 'optione'),
(95, 11, 60, 2, 'optiond'),
(95, 12, 1, 2, 'optionc'),
(95, 12, 2, 2, 'optionc'),
(95, 12, 4, 2, 'optionc'),
(95, 12, 5, 2, 'optiona'),
(95, 12, 6, -0.66, 'optiona'),
(95, 12, 7, 2, 'optionb'),
(95, 12, 8, 2, 'optionb'),
(95, 12, 9, 2, 'optiona'),
(95, 12, 10, 2, 'optiond'),
(95, 12, 12, 2, 'optionb'),
(95, 12, 13, 2, 'optionb'),
(95, 12, 14, 2, 'optiona'),
(95, 12, 15, 2, 'optiond'),
(95, 12, 16, 2, 'optionc'),
(95, 12, 17, 2, 'optionc'),
(95, 12, 18, 2, 'optiond'),
(95, 12, 20, 2, 'optionb'),
(95, 12, 21, 2, 'optiona'),
(95, 12, 22, 2, 'optiond'),
(95, 12, 23, 2, 'optionb'),
(95, 12, 24, 2, 'optiona'),
(95, 12, 25, 2, 'optionc'),
(95, 12, 26, 2, 'optionb'),
(95, 12, 27, 2, 'optionc'),
(95, 12, 28, 2, 'optiond'),
(95, 12, 30, 2, 'optionb'),
(95, 12, 31, 2, 'optionc'),
(95, 12, 32, 2, 'optionc'),
(95, 12, 34, -0.66, 'optionb'),
(95, 12, 35, -0.66, 'optionc'),
(95, 12, 36, 2, 'optionc'),
(95, 12, 38, 2, 'optionc'),
(95, 12, 40, -0.66, 'optiond'),
(95, 12, 41, 2, 'optionb'),
(95, 12, 42, 2, 'optiona'),
(95, 12, 43, -0.66, 'optionc'),
(95, 12, 44, -0.66, 'optiona'),
(95, 12, 45, 2, 'optiond'),
(95, 12, 46, 2, 'optiond'),
(95, 12, 47, -0.66, 'optiond'),
(95, 12, 48, -0.66, 'optiond'),
(95, 12, 49, -0.66, 'optionb'),
(95, 12, 50, 2, 'optionb'),
(95, 12, 51, 2, 'optionc'),
(95, 12, 52, -0.66, 'optiond'),
(95, 12, 53, 2, 'optiona'),
(95, 12, 54, 2, 'optiona'),
(95, 13, 1, -0.66, 'optiond'),
(95, 13, 2, 2, 'optionb'),
(95, 13, 3, -0.66, 'optiond'),
(95, 13, 5, -0.66, 'optiond'),
(95, 13, 7, -0.66, 'optionc'),
(95, 13, 8, 2, 'optionc'),
(95, 13, 9, 2, 'optione'),
(95, 13, 10, 2, 'optione'),
(95, 13, 11, 2, 'optiond'),
(95, 13, 12, 2, 'optiona'),
(95, 13, 13, 2, 'optiond'),
(95, 13, 14, 2, 'optionb'),
(95, 13, 19, 2, 'optionb'),
(95, 13, 21, 2, 'optiona'),
(95, 13, 22, -0.66, 'optionc'),
(95, 13, 23, -0.66, 'optionb'),
(95, 13, 24, 2, 'optionc'),
(95, 13, 25, -0.66, 'optionc'),
(95, 13, 26, 2, 'optiond'),
(95, 13, 27, 2, 'optiond'),
(95, 13, 28, 2, 'optionc'),
(95, 13, 29, -0.66, 'optiond'),
(95, 13, 30, 2, 'optiona'),
(95, 13, 31, 2, 'optiond'),
(95, 13, 32, 2, 'optiona'),
(95, 13, 33, 2, 'optionb'),
(95, 13, 34, -0.66, 'optionb'),
(95, 13, 35, 2, 'optionc'),
(95, 13, 36, 2, 'optionc'),
(95, 13, 39, 2, 'optiona'),
(95, 13, 40, 2, 'optiond'),
(95, 15, 1, 1, 'optionc'),
(95, 15, 2, 1, 'optiond'),
(95, 15, 4, 1, 'optiona'),
(95, 15, 5, -0.33, 'optiond'),
(95, 15, 6, 1, 'optiona'),
(95, 15, 7, -0.33, 'optiona'),
(95, 15, 9, 1, 'optionb'),
(95, 15, 11, 1, 'optiond'),
(95, 15, 12, -0.33, 'optiona'),
(95, 15, 13, 1, 'optionb'),
(95, 15, 14, 1, 'optionc'),
(95, 15, 15, 1, 'optiond'),
(95, 15, 16, -0.33, 'optiona'),
(95, 15, 17, -0.33, 'optionc'),
(95, 15, 18, 1, 'optionb'),
(95, 15, 19, 1, 'optionc'),
(95, 15, 20, 1, 'optionb'),
(95, 15, 21, 1, 'optiona'),
(95, 15, 22, 1, 'optionb'),
(95, 15, 23, -0.33, 'optiond'),
(95, 15, 24, 1, 'optiona'),
(95, 15, 25, 1, 'optiond'),
(95, 15, 26, 2, 'optiona'),
(95, 15, 27, 2, 'optiona'),
(95, 15, 29, 2, 'optiond'),
(95, 15, 30, 2, 'optionb'),
(95, 15, 31, 2, 'optiona'),
(95, 15, 32, 2, 'optiona'),
(95, 15, 33, 2, 'optionc'),
(95, 15, 35, 2, 'optionc'),
(95, 15, 36, 2, 'optiond'),
(95, 15, 37, 2, 'optionb'),
(95, 15, 38, 2, 'optionc'),
(95, 15, 39, 2, 'optionb'),
(95, 15, 40, 2, 'optiond'),
(95, 15, 41, 2, 'optionc'),
(95, 15, 42, 2, 'optiona'),
(95, 15, 43, 2, 'optiona'),
(95, 15, 44, 2, 'optiond'),
(95, 15, 45, 2, 'optiona'),
(95, 15, 46, -0.66, 'optiond'),
(95, 15, 47, 2, 'optiond'),
(95, 15, 48, -0.66, 'optiond'),
(95, 15, 49, -0.66, 'optiond'),
(95, 15, 50, -0.66, 'optiona'),
(95, 15, 51, -0.66, 'optionc'),
(95, 15, 52, 2, 'optionc'),
(95, 15, 53, 2, 'optionc'),
(95, 15, 54, 2, 'optionc'),
(95, 15, 55, 2, 'optionb'),
(95, 15, 56, -0.33, 'optiona'),
(95, 15, 58, 1, 'optiond'),
(95, 15, 59, 1, 'optiond'),
(95, 15, 60, 1, 'optiona'),
(95, 15, 61, 2, 'optionc'),
(95, 15, 62, 2, 'optionb'),
(95, 15, 64, -0.66, 'optiona'),
(95, 16, 1, 1, 'optionc'),
(95, 16, 2, 1, 'optionb'),
(95, 16, 3, -0.33, 'optionb'),
(95, 16, 4, 1, 'optiond'),
(95, 16, 6, 1, 'optionb'),
(95, 16, 8, 1, 'optiona'),
(95, 16, 9, 1, 'optionc'),
(95, 16, 10, 1, 'optionc'),
(95, 16, 11, -0.33, 'optionc'),
(95, 16, 12, -0.33, 'optionc'),
(95, 16, 13, 1, 'optionb'),
(95, 16, 15, 1, 'optionc'),
(95, 16, 16, 1, 'optiond'),
(95, 16, 18, -0.33, 'optionb'),
(95, 16, 19, 1, 'optiond'),
(95, 16, 20, -0.33, 'optionc'),
(95, 16, 21, 1, 'optiond'),
(95, 16, 22, 1, 'optionb'),
(95, 16, 25, -0.33, 'optiond'),
(95, 16, 26, -0.66, 'optionc'),
(95, 16, 28, 2, 'optiond'),
(95, 16, 29, -0.66, 'optionb'),
(95, 16, 30, 2, 'optiond'),
(95, 16, 31, -0.66, 'optionc'),
(95, 16, 33, 2, 'optiond'),
(95, 16, 34, 2, 'optiona'),
(95, 16, 35, -0.66, 'optiond'),
(95, 16, 36, -0.66, 'optiond'),
(95, 16, 37, 2, 'optionb'),
(95, 16, 38, 2, 'optionb'),
(95, 16, 40, -0.66, 'optionb'),
(95, 16, 42, 2, 'optiona'),
(95, 16, 43, 2, 'optiona'),
(95, 16, 44, 2, 'optiond'),
(95, 16, 45, 2, 'optiona'),
(95, 16, 46, -0.66, 'optionb'),
(95, 16, 47, -0.66, 'optiona'),
(95, 16, 48, 2, 'optiona'),
(95, 16, 49, 2, 'optionc'),
(95, 16, 50, 2, 'optiona'),
(95, 16, 51, 2, 'optiona'),
(95, 16, 52, 2, 'optiona'),
(95, 16, 53, 2, 'optionb'),
(95, 16, 56, 1, 'optiond'),
(95, 16, 58, 1, 'optiona'),
(95, 16, 59, 1, 'optionc'),
(95, 16, 60, 1, 'optionc'),
(95, 16, 61, 2, 'optionb'),
(95, 16, 62, 2, 'optiond'),
(95, 16, 63, 2, 'optionc'),
(95, 16, 65, 2, 'optiona'),
(95, 17, 1, 1, 'optiona'),
(95, 17, 2, 1, 'optionb'),
(95, 17, 3, -0.33, 'optionc'),
(95, 17, 4, -0.33, 'optionb'),
(95, 17, 5, 1, 'optionc'),
(95, 17, 6, 1, 'optiona'),
(95, 17, 7, 1, 'optionc'),
(95, 17, 8, 1, 'optiona'),
(95, 17, 9, 1, 'optionb'),
(95, 17, 10, -0.33, 'optionc'),
(95, 17, 11, 1, 'optiond'),
(95, 17, 12, 1, 'optiona'),
(95, 17, 13, 1, 'optionb'),
(95, 17, 14, 1, 'optionc'),
(95, 17, 17, 1, 'optiona'),
(95, 17, 18, -0.33, 'optiond'),
(95, 17, 19, 1, 'optionb'),
(95, 17, 20, -0.33, 'optionb'),
(95, 17, 21, 1, 'optionc'),
(95, 17, 22, 1, 'optionb'),
(95, 17, 23, 1, 'optiond'),
(95, 17, 25, -0.33, 'optiond'),
(95, 17, 26, 2, 'optionc'),
(95, 17, 27, 2, 'optionc'),
(95, 17, 28, 2, 'optiond'),
(95, 17, 29, 2, 'optiond'),
(95, 17, 30, 2, 'optiona'),
(95, 17, 31, 2, 'optiond'),
(95, 17, 32, 2, 'optiona'),
(95, 17, 33, 2, 'optiona'),
(95, 17, 34, 2, 'optiond'),
(95, 17, 35, 2, 'optionb'),
(95, 17, 37, 2, 'optionc'),
(95, 17, 38, 2, 'optionc'),
(95, 17, 39, 2, 'optionb'),
(95, 17, 40, -0.66, 'optiond'),
(95, 17, 41, 2, 'optionc'),
(95, 17, 45, 2, 'optionb'),
(95, 17, 46, 2, 'optionb'),
(95, 17, 47, -0.66, 'optionb'),
(95, 17, 48, 2, 'optiond'),
(95, 17, 50, -0.66, 'optionc'),
(95, 17, 51, 2, 'optionc'),
(95, 17, 54, 2, 'optiond'),
(95, 17, 55, 2, 'optiona'),
(95, 17, 57, 1, 'optionb'),
(95, 17, 58, 1, 'optionc'),
(95, 17, 59, -0.33, 'optiona'),
(95, 17, 61, 2, 'optionb'),
(95, 17, 62, 2, 'optionc'),
(95, 17, 63, -0.66, 'optionc'),
(95, 17, 64, -0.66, 'optiona'),
(95, 17, 65, 2, 'optiond'),
(95, 18, 1, 1, 'optiona'),
(95, 18, 2, 1, 'optiond'),
(95, 18, 3, 1, 'optionb'),
(95, 18, 4, 1, 'optiona'),
(95, 18, 6, -0.33, 'optiona'),
(95, 18, 7, -0.33, 'optiona'),
(95, 18, 8, 1, 'optionb'),
(95, 18, 9, 1, 'optiond'),
(95, 18, 10, -0.33, 'optiond'),
(95, 18, 11, 1, 'optionb'),
(95, 18, 12, 1, 'optiona'),
(95, 18, 13, -0.33, 'optionb'),
(95, 18, 14, 1, 'optionc'),
(95, 18, 15, 1, 'optionc'),
(95, 18, 16, 1, 'optionc'),
(95, 18, 17, -0.33, 'optiona'),
(95, 18, 20, -0.33, 'optiona'),
(95, 18, 21, 1, 'optiond'),
(95, 18, 23, -0.33, 'optionc'),
(95, 18, 24, 1, 'optionc'),
(95, 18, 25, 1, 'optionc'),
(95, 18, 26, 2, 'optionb'),
(95, 18, 27, 2, 'optiond'),
(95, 18, 28, 2, 'optiona'),
(95, 18, 29, 2, 'optiond'),
(95, 18, 30, 2, 'optionc'),
(95, 18, 31, 2, 'optiona'),
(95, 18, 32, 2, 'optionb'),
(95, 18, 34, 2, 'optiona'),
(95, 18, 35, -0.66, 'optiona'),
(95, 18, 36, 2, 'optiona'),
(95, 18, 37, -0.66, 'optiona'),
(95, 18, 38, -0.66, 'optiona'),
(95, 18, 39, 2, 'optiona'),
(95, 18, 42, 2, 'optionb'),
(95, 18, 43, -0.66, 'optionc'),
(95, 18, 44, -0.66, 'optionb'),
(95, 18, 45, -0.66, 'optionc'),
(95, 18, 46, -0.66, 'optiona'),
(95, 18, 47, 2, 'optiond'),
(95, 18, 48, 2, 'optionb'),
(95, 18, 49, 2, 'optionc'),
(95, 18, 50, 2, 'optionc'),
(95, 18, 52, 2, 'optiona'),
(95, 18, 54, 2, 'optiona'),
(95, 18, 55, 2, 'optiond'),
(95, 18, 56, -0.33, 'optiond'),
(95, 18, 57, 1, 'optionb'),
(95, 18, 59, 1, 'optionc'),
(95, 18, 60, 1, 'optiona'),
(95, 18, 61, 2, 'optionb'),
(95, 18, 62, 2, 'optiond'),
(95, 18, 64, 2, 'optionb'),
(95, 18, 65, 2, 'optiond'),
(96, 7, 1, 1, 'optionc'),
(96, 7, 2, 1, 'optiond'),
(96, 7, 3, -0.33, 'optiond'),
(96, 7, 4, 1, 'optiond'),
(96, 7, 5, -0.33, 'optionc'),
(96, 7, 6, 1, 'optionb'),
(96, 7, 7, 1, 'optionb'),
(96, 7, 8, -0.33, 'optiona'),
(96, 7, 9, 1, 'optiona'),
(96, 7, 10, 1, 'optionc'),
(96, 7, 11, 1, 'optiona'),
(96, 7, 14, 1, 'optionc'),
(96, 7, 15, 1, 'optionb'),
(96, 7, 16, 1, 'optiona'),
(96, 7, 17, 1, 'optionc'),
(96, 7, 18, 1, 'optiona'),
(96, 7, 19, 1, 'optiond'),
(96, 7, 21, 1, 'optiond'),
(96, 7, 22, -0.33, 'optiona'),
(96, 7, 23, 1, 'optiond'),
(96, 7, 24, 1, 'optiona'),
(96, 7, 26, 2, 'optiona'),
(96, 7, 27, 2, 'optionb'),
(96, 7, 28, 2, 'optiona'),
(96, 7, 29, -0.66, 'optiona'),
(96, 7, 30, -0.66, 'optionb'),
(96, 7, 31, 2, 'optiona'),
(96, 7, 33, 2, 'optiond'),
(96, 7, 34, -0.66, 'optionc'),
(96, 7, 35, 2, 'optionc'),
(96, 7, 36, 2, 'optionc'),
(96, 7, 37, -0.66, 'optionc'),
(96, 7, 38, -0.66, 'optionb'),
(96, 7, 39, -0.66, 'optiona'),
(96, 7, 40, 2, 'optionb'),
(96, 7, 41, 2, 'optionc'),
(96, 7, 42, 2, 'optionc'),
(96, 7, 44, 2, 'optionb'),
(96, 7, 45, 2, 'optiond'),
(96, 7, 47, -0.66, 'optiona'),
(96, 7, 48, 2, 'optionb'),
(96, 7, 49, 2, 'optionb'),
(96, 7, 50, 2, 'optionc'),
(96, 7, 51, 2, 'optionb'),
(96, 7, 52, -0.66, 'optionb'),
(96, 7, 53, -0.66, 'optiona'),
(96, 7, 54, 2, 'optiond'),
(96, 7, 56, 1, 'optiona'),
(96, 7, 61, -0.66, 'optiond'),
(96, 7, 62, 2, 'optionc'),
(96, 7, 63, 2, 'optiond'),
(96, 7, 65, -0.66, 'optiona'),
(96, 8, 1, 1, 'optione'),
(96, 8, 2, 1, 'optiona'),
(96, 8, 3, -0.33, 'optionc'),
(96, 8, 4, -0.33, 'optionb'),
(96, 8, 5, -0.33, 'optiona'),
(96, 8, 6, 1, 'optiond'),
(96, 8, 7, 1, 'optionb'),
(96, 8, 8, -0.33, 'optiond'),
(96, 8, 9, 1, 'optiond'),
(96, 8, 10, 1, 'optionc'),
(96, 8, 11, 1, 'optiond'),
(96, 8, 12, 1, 'optiona'),
(96, 8, 13, 1, 'optionb'),
(96, 8, 14, 1, 'optiona'),
(96, 8, 15, -0.33, 'optiona'),
(96, 8, 16, 1, 'optionc'),
(96, 8, 17, 1, 'optione'),
(96, 8, 18, -0.33, 'optiond'),
(96, 8, 19, 1, 'optiona'),
(96, 8, 20, -0.33, 'optiona'),
(96, 8, 22, -0.33, 'optiond'),
(96, 8, 23, 1, 'optiona'),
(96, 8, 24, 1, 'optiona'),
(96, 8, 25, 1, 'optiond'),
(96, 8, 26, 1, 'optiond'),
(96, 8, 27, 1, 'optiond'),
(96, 8, 28, -0.33, 'optiona'),
(96, 8, 29, 1, 'optionb'),
(96, 8, 30, 1, 'optionc'),
(96, 8, 31, 1, 'optionc'),
(96, 8, 32, 1, 'optionb'),
(96, 8, 33, 1, 'optiona'),
(96, 8, 34, 1, 'optiond'),
(96, 8, 35, 1, 'optionc'),
(96, 8, 36, 1, 'optionc'),
(96, 8, 37, 1, 'optiond'),
(96, 8, 38, 1, 'optionb'),
(96, 8, 39, 1, 'optiond'),
(96, 8, 40, -0.33, 'optiona'),
(96, 8, 41, 1, 'optiona'),
(96, 8, 42, 1, 'optiond'),
(96, 8, 43, 1, 'optionb'),
(96, 8, 44, -0.33, 'optiona'),
(96, 8, 45, 1, 'optiond'),
(96, 9, 1, 2, 'optionc'),
(96, 9, 2, -0.66, 'optiona'),
(96, 9, 4, 2, 'optiona'),
(96, 9, 5, 2, 'optiond'),
(96, 9, 6, 2, 'optiond'),
(96, 9, 7, -0.66, 'optiona'),
(96, 9, 8, 2, 'optionb'),
(96, 9, 9, 2, 'optionb'),
(96, 9, 10, 2, 'optionc'),
(96, 9, 12, 2, 'optiona'),
(96, 9, 16, 2, 'optionc'),
(96, 9, 17, -0.66, 'optiond'),
(96, 9, 18, 2, 'optionb'),
(96, 9, 21, 2, 'optionc'),
(96, 9, 24, 2, 'optionc'),
(96, 9, 26, 2, 'optionc'),
(96, 9, 27, -0.66, 'optionb'),
(96, 9, 28, 2, 'optionb'),
(96, 9, 29, 2, 'optionc'),
(96, 9, 30, 2, 'optionb'),
(96, 9, 32, 2, 'optionb'),
(96, 9, 35, 2, 'optionb'),
(96, 9, 37, 2, 'optionb'),
(96, 9, 39, -0.66, 'optionb'),
(96, 9, 43, -0.66, 'optiona'),
(96, 9, 50, -0.66, 'optiona'),
(96, 11, 1, 2, 'optionb'),
(96, 11, 2, 2, 'optionc'),
(96, 11, 4, 2, 'optiond'),
(96, 11, 5, 2, 'optionb'),
(96, 11, 6, 2, 'optionb'),
(96, 11, 7, 2, 'optionb'),
(96, 11, 8, 2, 'optiona'),
(96, 11, 9, 2, 'optionc'),
(96, 11, 10, 2, 'optiona'),
(96, 11, 11, 2, 'optiona'),
(96, 11, 12, 2, 'optiona'),
(96, 11, 13, 2, 'optionb'),
(96, 11, 14, 2, 'optionc'),
(96, 11, 15, 2, 'optionc'),
(96, 11, 17, 2, 'optiona'),
(96, 11, 18, 2, 'optionb'),
(96, 11, 20, -0.66, 'optionb'),
(96, 11, 21, 2, 'optionc'),
(96, 11, 22, 2, 'optiona'),
(96, 11, 23, 2, 'optionc'),
(96, 11, 24, 2, 'optiona'),
(96, 11, 25, 2, 'optionb'),
(96, 11, 26, 2, 'optionc'),
(96, 11, 27, 2, 'optione'),
(96, 11, 28, 2, 'optiona'),
(96, 11, 29, 2, 'optiond'),
(96, 11, 30, 2, 'optiond'),
(96, 11, 31, 2, 'optione'),
(96, 11, 32, 2, 'optionc'),
(96, 11, 33, 2, 'optiond'),
(96, 11, 34, 2, 'optiond'),
(96, 11, 35, 2, 'optiond'),
(96, 11, 36, 2, 'optione'),
(96, 11, 37, -0.66, 'optiond'),
(96, 11, 38, 2, 'optiona'),
(96, 11, 39, -0.66, 'optionb'),
(96, 11, 40, 2, 'optiond'),
(96, 11, 41, 2, 'optionc'),
(96, 11, 42, 2, 'optione'),
(96, 11, 43, -0.66, 'optionc'),
(96, 11, 46, 2, 'optiona'),
(96, 11, 48, -0.66, 'optionc'),
(96, 11, 49, 2, 'optiond'),
(96, 11, 51, -0.66, 'optionc'),
(96, 11, 52, 2, 'optionb'),
(96, 11, 53, 2, 'optionc'),
(96, 11, 54, 2, 'optionb'),
(96, 11, 55, -0.66, 'optionc'),
(96, 11, 56, 2, 'optione'),
(96, 11, 57, 2, 'optionc'),
(96, 11, 58, 2, 'optione'),
(96, 11, 60, -0.66, 'optione'),
(96, 12, 2, -0.66, 'optionb'),
(96, 12, 3, 2, 'optiond'),
(96, 12, 4, -0.66, 'optiona'),
(96, 12, 6, -0.66, 'optiona'),
(96, 12, 7, -0.66, 'optiond'),
(96, 12, 8, 2, 'optionb'),
(96, 12, 9, 2, 'optiona'),
(96, 12, 11, -0.66, 'optionc'),
(96, 12, 12, 2, 'optionb'),
(96, 12, 13, 2, 'optionb'),
(96, 12, 14, 2, 'optiona'),
(96, 12, 15, 2, 'optiond'),
(96, 12, 16, 2, 'optionc'),
(96, 12, 20, 2, 'optionb'),
(96, 12, 21, 2, 'optiona'),
(96, 12, 23, 2, 'optionb'),
(96, 12, 25, -0.66, 'optiona'),
(96, 12, 26, 2, 'optionb'),
(96, 12, 27, -0.66, 'optionb'),
(96, 12, 28, -0.66, 'optionb'),
(96, 12, 29, -0.66, 'optionb'),
(96, 12, 30, -0.66, 'optiona'),
(96, 12, 31, 2, 'optionc'),
(96, 12, 32, 2, 'optionc'),
(96, 12, 33, 2, 'optiond'),
(96, 12, 34, -0.66, 'optionb'),
(96, 12, 35, -0.66, 'optionb'),
(96, 12, 36, -0.66, 'optionb'),
(96, 12, 37, -0.66, 'optionb'),
(96, 12, 38, 2, 'optionc'),
(96, 12, 39, 2, 'optiona'),
(96, 12, 40, 2, 'optiona'),
(96, 12, 41, 2, 'optionb'),
(96, 12, 42, 2, 'optiona'),
(96, 12, 43, 2, 'optiond'),
(96, 12, 44, 2, 'optionb'),
(96, 12, 45, 2, 'optiond'),
(96, 12, 46, 2, 'optiond'),
(96, 12, 47, 2, 'optionc'),
(96, 12, 48, -0.66, 'optionc'),
(96, 12, 50, -0.66, 'optionc'),
(96, 12, 52, 2, 'optionb'),
(96, 12, 53, 2, 'optiona'),
(96, 12, 54, -0.66, 'optionb'),
(96, 13, 1, -0.66, 'optiond'),
(96, 13, 5, -0.66, 'optiond'),
(96, 13, 6, -0.66, 'optiona'),
(96, 13, 7, -0.66, 'optiond'),
(96, 13, 8, 2, 'optionc'),
(96, 13, 10, 2, 'optione'),
(96, 13, 11, 2, 'optiond'),
(96, 13, 12, 2, 'optiona'),
(96, 13, 13, 2, 'optiond'),
(96, 13, 14, -0.66, 'optiond'),
(96, 13, 18, -0.66, 'optionb'),
(96, 13, 20, 2, 'optiona'),
(96, 13, 22, 2, 'optiona'),
(96, 13, 24, -0.66, 'optiona'),
(96, 13, 25, 2, 'optiona'),
(96, 13, 26, 2, 'optiond'),
(96, 13, 27, 2, 'optiond'),
(96, 13, 28, 2, 'optionc'),
(96, 13, 29, 2, 'optionc'),
(96, 13, 30, 2, 'optiona'),
(96, 13, 31, 2, 'optiond'),
(96, 13, 32, 2, 'optiona'),
(96, 13, 33, 2, 'optionb'),
(96, 13, 35, 2, 'optionc'),
(96, 13, 36, 2, 'optionc'),
(96, 13, 37, -0.66, 'optionb'),
(96, 15, 2, 1, 'optiond'),
(96, 15, 3, 1, 'optionc'),
(96, 15, 4, 1, 'optiona'),
(96, 15, 5, 1, 'optionb'),
(96, 15, 6, 1, 'optiona'),
(96, 15, 8, 1, 'optiona'),
(96, 15, 9, 1, 'optionb'),
(96, 15, 10, 1, 'optiona'),
(96, 15, 11, 1, 'optiond'),
(96, 15, 12, -0.33, 'optiond'),
(96, 15, 13, 1, 'optionb'),
(96, 15, 14, 1, 'optionc'),
(96, 15, 15, 1, 'optiond'),
(96, 15, 16, 1, 'optiond'),
(96, 15, 17, 1, 'optionb'),
(96, 15, 18, 1, 'optionb'),
(96, 15, 19, 1, 'optionc'),
(96, 15, 20, -0.33, 'optionc'),
(96, 15, 21, 1, 'optiona'),
(96, 15, 22, 1, 'optionb'),
(96, 15, 23, -0.33, 'optiond'),
(96, 15, 24, 1, 'optiona'),
(96, 15, 25, 1, 'optiond'),
(96, 15, 26, -0.66, 'optiond'),
(96, 15, 27, 2, 'optiona'),
(96, 15, 28, -0.66, 'optiona'),
(96, 15, 29, 2, 'optiond'),
(96, 15, 30, -0.66, 'optiond'),
(96, 15, 31, 2, 'optiona'),
(96, 15, 32, 2, 'optiona'),
(96, 15, 33, 2, 'optionc'),
(96, 15, 36, 2, 'optiond'),
(96, 15, 37, 2, 'optionb'),
(96, 15, 38, 2, 'optionc'),
(96, 15, 39, 2, 'optionb'),
(96, 15, 40, 2, 'optiond'),
(96, 15, 41, 2, 'optionc'),
(96, 15, 42, 2, 'optiona'),
(96, 15, 43, -0.66, 'optionb'),
(96, 15, 44, 2, 'optiond'),
(96, 15, 45, -0.66, 'optionb'),
(96, 15, 46, 2, 'optionb'),
(96, 15, 47, 2, 'optiond'),
(96, 15, 48, 2, 'optionc'),
(96, 15, 49, 2, 'optionc'),
(96, 15, 50, -0.66, 'optiona'),
(96, 15, 51, -0.66, 'optionc'),
(96, 15, 52, 2, 'optionc'),
(96, 15, 54, 2, 'optionc'),
(96, 15, 55, 2, 'optionb'),
(96, 15, 59, 1, 'optiond'),
(96, 15, 62, -0.66, 'optiona'),
(96, 15, 63, -0.66, 'optiona'),
(96, 15, 65, -0.66, 'optiona'),
(96, 16, 1, 1, 'optionc'),
(96, 16, 3, 1, 'optiond'),
(96, 16, 4, 1, 'optiond'),
(96, 16, 6, 1, 'optionb'),
(96, 16, 8, 1, 'optiona'),
(96, 16, 9, 1, 'optionc'),
(96, 16, 10, 1, 'optionc'),
(96, 16, 12, -0.33, 'optionc'),
(96, 16, 14, 1, 'optiond'),
(96, 16, 16, 1, 'optiond'),
(96, 16, 17, 1, 'optiona'),
(96, 16, 19, 1, 'optiond'),
(96, 16, 20, 1, 'optiona'),
(96, 16, 21, -0.33, 'optiona'),
(96, 16, 22, 1, 'optionb'),
(96, 16, 23, 1, 'optionc'),
(96, 16, 24, 1, 'optiona'),
(96, 16, 25, -0.33, 'optiond'),
(96, 16, 26, 2, 'optiona'),
(96, 16, 27, 2, 'optionb'),
(96, 16, 28, 2, 'optiond'),
(96, 16, 29, -0.66, 'optionb'),
(96, 16, 30, 2, 'optiond'),
(96, 16, 33, 2, 'optiond'),
(96, 16, 35, 2, 'optionb'),
(96, 16, 37, 2, 'optionb'),
(96, 16, 38, 2, 'optionb'),
(96, 16, 39, 2, 'optionb'),
(96, 16, 40, 2, 'optiona'),
(96, 16, 43, 2, 'optiona'),
(96, 16, 44, 2, 'optiond'),
(96, 16, 45, 2, 'optiona'),
(96, 16, 46, 2, 'optionc'),
(96, 16, 53, 2, 'optionb'),
(96, 16, 63, 2, 'optionc'),
(96, 16, 64, -0.66, 'optionc'),
(96, 16, 65, 2, 'optiona'),
(96, 17, 2, 1, 'optionb'),
(96, 17, 3, 1, 'optionb'),
(96, 17, 4, -0.33, 'optionb'),
(96, 17, 5, 1, 'optionc'),
(96, 17, 6, 1, 'optiona'),
(96, 17, 7, -0.33, 'optiond'),
(96, 17, 8, 1, 'optiona'),
(96, 17, 9, -0.33, 'optiona'),
(96, 17, 10, 1, 'optiona'),
(96, 17, 11, 1, 'optiond'),
(96, 17, 13, 1, 'optionb'),
(96, 17, 14, 1, 'optionc'),
(96, 17, 18, 1, 'optionb'),
(96, 17, 19, 1, 'optionb'),
(96, 17, 20, -0.33, 'optionb'),
(96, 17, 21, 1, 'optionc'),
(96, 17, 22, -0.33, 'optionc'),
(96, 17, 23, -0.33, 'optionc'),
(96, 17, 24, -0.33, 'optiona'),
(96, 17, 25, 1, 'optionb'),
(96, 17, 26, 2, 'optionc'),
(96, 17, 28, -0.66, 'optionb'),
(96, 17, 30, 2, 'optiona'),
(96, 17, 31, 2, 'optiond'),
(96, 17, 32, 2, 'optiona'),
(96, 17, 33, 2, 'optiona'),
(96, 17, 34, 2, 'optiond'),
(96, 17, 35, 2, 'optionb'),
(96, 17, 36, -0.66, 'optiona'),
(96, 17, 37, -0.66, 'optionb'),
(96, 17, 38, -0.66, 'optiona'),
(96, 17, 41, 2, 'optionc'),
(96, 17, 42, 2, 'optionb'),
(96, 17, 45, -0.66, 'optiona'),
(96, 17, 46, 2, 'optionb'),
(96, 17, 47, -0.66, 'optionb'),
(96, 17, 48, -0.66, 'optionc'),
(96, 17, 50, 2, 'optiond'),
(96, 17, 51, 2, 'optionc'),
(96, 17, 52, 2, 'optiond'),
(96, 17, 53, 2, 'optiona'),
(96, 17, 54, 2, 'optiond'),
(96, 17, 55, 2, 'optiona'),
(96, 17, 60, 1, 'optiond'),
(96, 17, 62, 2, 'optionc'),
(96, 17, 63, 2, 'optiona'),
(96, 17, 65, 2, 'optiond'),
(96, 18, 1, 1, 'optiona'),
(96, 18, 2, 1, 'optiond'),
(96, 18, 3, 1, 'optionb'),
(96, 18, 4, 1, 'optiona'),
(96, 18, 5, -0.33, 'optionc'),
(96, 18, 6, 1, 'optionc'),
(96, 18, 7, 1, 'optionb'),
(96, 18, 8, 1, 'optionb'),
(96, 18, 9, 1, 'optiond'),
(96, 18, 10, -0.33, 'optiond'),
(96, 18, 11, -0.33, 'optionc'),
(96, 18, 12, -0.33, 'optionb'),
(96, 18, 13, 1, 'optiond'),
(96, 18, 15, 1, 'optionc'),
(96, 18, 16, -0.33, 'optiona'),
(96, 18, 17, -0.33, 'optiond'),
(96, 18, 18, 1, 'optiona'),
(96, 18, 19, 1, 'optionc'),
(96, 18, 20, 1, 'optionb'),
(96, 18, 21, 1, 'optiond'),
(96, 18, 22, 1, 'optiond'),
(96, 18, 24, 1, 'optionc'),
(96, 18, 25, 1, 'optionc'),
(96, 18, 26, 2, 'optionb'),
(96, 18, 27, 2, 'optiond'),
(96, 18, 28, 2, 'optiona'),
(96, 18, 29, 2, 'optiond'),
(96, 18, 30, 2, 'optionc'),
(96, 18, 31, 2, 'optiona'),
(96, 18, 32, -0.66, 'optionc'),
(96, 18, 33, 2, 'optiond'),
(96, 18, 34, 2, 'optiona'),
(96, 18, 37, 2, 'optionc'),
(96, 18, 38, 2, 'optionb'),
(96, 18, 39, 2, 'optiona'),
(96, 18, 42, 2, 'optionb'),
(96, 18, 43, 2, 'optionb'),
(96, 18, 45, -0.66, 'optionc'),
(96, 18, 46, 2, 'optionc'),
(96, 18, 47, 2, 'optiond'),
(96, 18, 48, 2, 'optionb'),
(96, 18, 49, 2, 'optionc'),
(96, 18, 50, 2, 'optionc'),
(96, 18, 51, -0.66, 'optiond'),
(96, 18, 52, -0.66, 'optionc'),
(96, 18, 53, -0.66, 'optiond'),
(96, 18, 54, -0.66, 'optionc'),
(96, 18, 60, 1, 'optiona'),
(96, 18, 61, 2, 'optionb'),
(96, 18, 62, 2, 'optiond'),
(96, 18, 63, -0.66, 'optiond'),
(96, 18, 65, 2, 'optiond'),
(97, 8, 1, 1, 'optione'),
(97, 8, 2, 1, 'optiona'),
(97, 8, 3, -0.33, 'optionc'),
(97, 8, 4, -0.33, 'optiona'),
(97, 8, 5, -0.33, 'optiona'),
(97, 8, 6, 1, 'optiond'),
(97, 8, 8, 1, 'optionb'),
(97, 8, 9, 1, 'optiond'),
(97, 8, 10, 1, 'optionc'),
(97, 8, 11, -0.33, 'optionc'),
(97, 8, 12, 1, 'optiona'),
(97, 8, 13, -0.33, 'optiona'),
(97, 8, 14, 1, 'optiona'),
(97, 8, 15, 1, 'optionc'),
(97, 8, 16, 1, 'optionc'),
(97, 8, 17, -0.33, 'optionb'),
(97, 8, 18, -0.33, 'optiond'),
(97, 8, 19, 1, 'optiona'),
(97, 8, 25, -0.33, 'optiona'),
(97, 8, 27, 1, 'optiond'),
(97, 8, 29, -0.33, 'optiona'),
(97, 8, 30, 1, 'optionc'),
(97, 8, 31, 1, 'optionc'),
(97, 8, 32, 1, 'optionb'),
(97, 8, 33, 1, 'optiona'),
(97, 8, 34, -0.33, 'optionb'),
(97, 8, 35, 1, 'optionc'),
(97, 8, 36, 1, 'optionc'),
(97, 8, 37, 1, 'optiond'),
(97, 8, 38, 1, 'optionb'),
(97, 8, 39, 1, 'optiond'),
(97, 8, 40, -0.33, 'optiona'),
(97, 8, 41, 1, 'optiona'),
(97, 8, 42, 1, 'optiond'),
(97, 8, 43, 1, 'optionb'),
(97, 8, 44, -0.33, 'optiona'),
(97, 8, 45, 1, 'optiond'),
(97, 18, 1, 1, 'optiona'),
(97, 18, 2, 1, 'optiond'),
(97, 18, 3, 1, 'optionb'),
(97, 18, 4, 1, 'optiona'),
(97, 18, 9, -0.33, 'optionc'),
(97, 18, 11, 1, 'optionb'),
(97, 18, 12, -0.33, 'optionb'),
(97, 18, 15, -0.33, 'optiond'),
(97, 18, 16, 1, 'optionc'),
(97, 18, 17, 1, 'optionb'),
(97, 18, 19, 1, 'optionc'),
(97, 18, 20, 1, 'optionb'),
(97, 18, 21, 1, 'optiond'),
(97, 18, 22, 1, 'optiond'),
(97, 18, 23, -0.33, 'optiona'),
(97, 18, 25, 1, 'optionc'),
(97, 18, 26, -0.66, 'optiona'),
(97, 18, 27, -0.66, 'optiona'),
(97, 18, 29, 2, 'optiond'),
(97, 18, 30, 2, 'optionc'),
(97, 18, 31, -0.66, 'optiond'),
(97, 18, 36, 2, 'optiona'),
(97, 18, 37, 2, 'optionc'),
(97, 18, 38, 2, 'optionb'),
(97, 18, 39, 2, 'optiona'),
(97, 18, 42, 2, 'optionb'),
(97, 18, 44, -0.66, 'optionb'),
(97, 18, 45, -0.66, 'optionc'),
(97, 18, 46, -0.66, 'optionb'),
(97, 18, 47, 2, 'optiond'),
(97, 18, 48, -0.66, 'optiona'),
(97, 18, 49, 2, 'optionc'),
(97, 18, 52, 2, 'optiona'),
(97, 18, 56, 1, 'optione'),
(97, 18, 58, 1, 'optionc'),
(97, 18, 59, 1, 'optionc'),
(97, 18, 60, 1, 'optiona'),
(97, 18, 61, 2, 'optionb'),
(97, 18, 62, 2, 'optiond'),
(97, 18, 63, -0.66, 'optionc'),
(97, 18, 64, 2, 'optionb'),
(97, 18, 65, 2, 'optiond'),
(98, 7, 1, 1, 'optionc'),
(98, 7, 3, -0.33, 'optiond'),
(98, 7, 4, 1, 'optiond'),
(98, 7, 5, -0.33, 'optionc'),
(98, 7, 6, 1, 'optionb'),
(98, 7, 8, -0.33, 'optionc'),
(98, 7, 9, 1, 'optiona'),
(98, 7, 10, 1, 'optionc'),
(98, 7, 11, 1, 'optiona'),
(98, 7, 12, -0.33, 'optiona'),
(98, 7, 13, 1, 'optionc'),
(98, 7, 14, 1, 'optionc'),
(98, 7, 15, 1, 'optionb'),
(98, 7, 16, 1, 'optiona'),
(98, 7, 17, -0.33, 'optionb'),
(98, 7, 18, 1, 'optiona'),
(98, 7, 19, 1, 'optiond'),
(98, 7, 20, 1, 'optiona'),
(98, 7, 21, 1, 'optiond'),
(98, 7, 22, 1, 'optiond'),
(98, 7, 23, 1, 'optiond'),
(98, 7, 24, 1, 'optiona'),
(98, 7, 25, -0.33, 'optionb'),
(98, 7, 26, 2, 'optiona'),
(98, 7, 27, -0.66, 'optiond'),
(98, 7, 28, 2, 'optiona'),
(98, 7, 31, 2, 'optiona'),
(98, 7, 33, 2, 'optiond'),
(98, 7, 34, -0.66, 'optiond'),
(98, 7, 35, 2, 'optionc'),
(98, 7, 36, 2, 'optionc'),
(98, 7, 39, -0.66, 'optiona'),
(98, 7, 40, -0.66, 'optionc'),
(98, 7, 41, -0.66, 'optiona'),
(98, 7, 42, 2, 'optionc'),
(98, 7, 44, 2, 'optionb'),
(98, 7, 45, 2, 'optiond'),
(98, 7, 47, 2, 'optionb'),
(98, 7, 48, -0.66, 'optiond'),
(98, 7, 50, 2, 'optionc'),
(98, 7, 51, 2, 'optionb'),
(98, 7, 52, 2, 'optiona'),
(98, 7, 53, 2, 'optionb'),
(98, 7, 54, 2, 'optiond'),
(98, 7, 55, 2, 'optionb'),
(98, 7, 56, 1, 'optiona'),
(98, 7, 58, -0.33, 'optiond'),
(98, 7, 59, 1, 'optiond'),
(98, 7, 60, 1, 'optionc'),
(98, 7, 61, 2, 'optionb'),
(98, 7, 62, 2, 'optionc'),
(98, 7, 63, 2, 'optiond'),
(98, 7, 64, 2, 'optionc'),
(98, 7, 65, 2, 'optionb'),
(98, 8, 1, 1, 'optione'),
(98, 8, 2, -0.33, 'optiond'),
(98, 8, 3, -0.33, 'optionc'),
(98, 8, 4, -0.33, 'optionb'),
(98, 8, 5, -0.33, 'optiona'),
(98, 8, 6, 1, 'optiond'),
(98, 8, 7, 1, 'optionb'),
(98, 8, 8, 1, 'optionb'),
(98, 8, 9, -0.33, 'optionb'),
(98, 8, 10, 1, 'optionc'),
(98, 8, 11, 1, 'optiond'),
(98, 8, 12, 1, 'optiona'),
(98, 8, 13, -0.33, 'optiona'),
(98, 8, 14, 1, 'optiona'),
(98, 8, 15, -0.33, 'optiond'),
(98, 8, 16, 1, 'optionc'),
(98, 8, 17, -0.33, 'optionb'),
(98, 8, 18, -0.33, 'optiond'),
(98, 8, 19, 1, 'optiona'),
(98, 8, 21, -0.33, 'optiond'),
(98, 8, 22, -0.33, 'optionb'),
(98, 8, 23, 1, 'optiona'),
(98, 8, 24, 1, 'optiona'),
(98, 8, 27, 1, 'optiond'),
(98, 8, 29, 1, 'optionb'),
(98, 8, 30, 1, 'optionc'),
(98, 8, 31, 1, 'optionc'),
(98, 8, 32, 1, 'optionb'),
(98, 8, 33, 1, 'optiona'),
(98, 8, 34, 1, 'optiond'),
(98, 8, 35, 1, 'optionc'),
(98, 8, 36, 1, 'optionc'),
(98, 8, 37, -0.33, 'optionb'),
(98, 8, 38, 1, 'optionb'),
(98, 8, 39, 1, 'optiond'),
(98, 8, 40, -0.33, 'optiona'),
(98, 8, 41, 1, 'optiona'),
(98, 8, 42, 1, 'optiond'),
(98, 8, 43, 1, 'optionb'),
(98, 8, 44, -0.33, 'optiona'),
(98, 8, 45, 1, 'optiond'),
(98, 9, 1, -0.66, 'optiona'),
(98, 9, 2, 2, 'optionb'),
(98, 9, 4, 2, 'optiona'),
(98, 9, 5, 2, 'optiond'),
(98, 9, 6, 2, 'optiond'),
(98, 9, 7, 2, 'optionc'),
(98, 9, 8, -0.66, 'optionc'),
(98, 9, 10, 2, 'optionc'),
(98, 9, 12, -0.66, 'optionc'),
(98, 9, 14, 2, 'optionb'),
(98, 9, 16, 2, 'optionc'),
(98, 9, 17, 2, 'optionb'),
(98, 9, 18, -0.66, 'optiona'),
(98, 9, 19, 2, 'optionc'),
(98, 9, 20, 2, 'optionc'),
(98, 9, 21, 2, 'optionc'),
(98, 9, 26, 2, 'optionc'),
(98, 9, 29, 2, 'optionc'),
(98, 9, 30, 2, 'optionb'),
(98, 9, 31, -0.66, 'optionc'),
(98, 9, 33, -0.66, 'optiona'),
(98, 9, 34, 2, 'optiond'),
(98, 9, 35, 2, 'optionb'),
(98, 9, 39, 2, 'optiond'),
(98, 9, 42, 2, 'optionb'),
(98, 9, 46, -0.66, 'optionc'),
(98, 9, 47, 2, 'optionc'),
(98, 9, 49, 2, 'optionb'),
(98, 9, 50, 2, 'optionb'),
(98, 9, 52, 2, 'optionb'),
(98, 9, 54, 2, 'optione'),
(98, 10, 1, 2, 'optione'),
(98, 10, 2, -0.66, 'optiona'),
(98, 10, 3, -0.66, 'optione'),
(98, 10, 5, 2, 'optionb'),
(98, 10, 6, 2, 'optionb'),
(98, 10, 9, -0.66, 'optionb'),
(98, 10, 10, 2, 'optiond'),
(98, 10, 11, 2, 'optionc'),
(98, 10, 12, -0.66, 'optionc'),
(98, 10, 13, 2, 'optionc'),
(98, 10, 14, 2, 'optionb'),
(98, 10, 15, 2, 'optiond'),
(98, 10, 16, 2, 'optiona'),
(98, 10, 17, -0.66, 'optionc'),
(98, 10, 18, -0.66, 'optionb'),
(98, 10, 21, 2, 'optionb'),
(98, 10, 22, 2, 'optionb'),
(98, 10, 23, 2, 'optiond'),
(98, 11, 1, 2, 'optionb'),
(98, 11, 2, 2, 'optionc'),
(98, 11, 3, -0.66, 'optionc'),
(98, 11, 4, 2, 'optiond'),
(98, 11, 5, 2, 'optionb'),
(98, 11, 6, 2, 'optionb'),
(98, 11, 7, 2, 'optionb'),
(98, 11, 8, 2, 'optiona'),
(98, 11, 9, 2, 'optionc'),
(98, 11, 10, 2, 'optiona'),
(98, 11, 11, 2, 'optiona'),
(98, 11, 12, 2, 'optiona'),
(98, 11, 13, -0.66, 'optiona'),
(98, 11, 14, -0.66, 'optiona'),
(98, 11, 15, -0.66, 'optiona'),
(98, 11, 17, 2, 'optiona'),
(98, 11, 18, 2, 'optionb'),
(98, 11, 20, -0.66, 'optionc'),
(98, 11, 21, 2, 'optionc'),
(98, 11, 22, 2, 'optiona'),
(98, 11, 23, 2, 'optionc'),
(98, 11, 24, 2, 'optiona'),
(98, 11, 25, 2, 'optionb'),
(98, 11, 26, 2, 'optionc'),
(98, 11, 27, 2, 'optione'),
(98, 11, 28, 2, 'optiona'),
(98, 11, 29, 2, 'optiond'),
(98, 11, 30, -0.66, 'optiona'),
(98, 11, 31, -0.66, 'optiond'),
(98, 11, 32, -0.66, 'optione'),
(98, 11, 33, -0.66, 'optione'),
(98, 11, 34, -0.66, 'optionb'),
(98, 11, 35, 2, 'optiond'),
(98, 11, 36, 2, 'optione'),
(98, 11, 37, 2, 'optionb'),
(98, 11, 38, 2, 'optiona'),
(98, 11, 39, -0.66, 'optionb'),
(98, 11, 40, 2, 'optiond'),
(98, 11, 41, 2, 'optionc'),
(98, 11, 42, 2, 'optione'),
(98, 11, 43, -0.66, 'optiona'),
(98, 11, 46, 2, 'optiona'),
(98, 11, 48, 2, 'optiond'),
(98, 11, 49, 2, 'optiond'),
(98, 11, 51, 2, 'optiond'),
(98, 11, 52, -0.66, 'optionc'),
(98, 11, 53, 2, 'optionc'),
(98, 11, 54, 2, 'optionb'),
(98, 11, 55, -0.66, 'optionc'),
(98, 11, 56, 2, 'optione'),
(98, 11, 57, -0.66, 'optiona'),
(98, 11, 58, 2, 'optione'),
(98, 11, 59, -0.66, 'optiond'),
(98, 11, 60, -0.66, 'optionc'),
(98, 12, 1, 2, 'optionc'),
(98, 12, 2, 2, 'optionc'),
(98, 12, 3, 2, 'optiond'),
(98, 12, 5, -0.66, 'optionb'),
(98, 12, 6, 2, 'optiond'),
(98, 12, 7, 2, 'optionb'),
(98, 12, 8, -0.66, 'optiond'),
(98, 12, 9, 2, 'optiona'),
(98, 12, 12, -0.66, 'optiona'),
(98, 12, 13, 2, 'optionb'),
(98, 12, 14, 2, 'optiona'),
(98, 12, 15, 2, 'optiond'),
(98, 12, 16, -0.66, 'optiona'),
(98, 12, 18, 2, 'optiond'),
(98, 12, 19, 2, 'optionb'),
(98, 12, 20, 2, 'optionb'),
(98, 12, 21, 2, 'optiona'),
(98, 12, 22, 2, 'optiond'),
(98, 12, 23, 2, 'optionb'),
(98, 12, 25, -0.66, 'optiona'),
(98, 12, 26, 2, 'optionb'),
(98, 12, 27, -0.66, 'optiond'),
(98, 12, 29, -0.66, 'optiond'),
(98, 12, 30, 2, 'optionb'),
(98, 12, 31, 2, 'optionc'),
(98, 12, 32, 2, 'optionc'),
(98, 12, 34, -0.66, 'optionb'),
(98, 12, 35, 2, 'optiond'),
(98, 12, 37, -0.66, 'optionb'),
(98, 12, 38, 2, 'optionc'),
(98, 12, 40, 2, 'optiona'),
(98, 12, 41, 2, 'optionb'),
(98, 12, 42, 2, 'optiona'),
(98, 12, 43, -0.66, 'optionc'),
(98, 12, 44, -0.66, 'optiona'),
(98, 12, 45, -0.66, 'optiona'),
(98, 12, 46, 2, 'optiond'),
(98, 12, 47, 2, 'optionc'),
(98, 12, 48, -0.66, 'optionc'),
(98, 12, 49, 2, 'optionc'),
(98, 12, 50, 2, 'optionb'),
(98, 12, 51, 2, 'optionc'),
(98, 12, 52, 2, 'optionb'),
(98, 12, 53, 2, 'optiona'),
(98, 12, 54, -0.66, 'optiond'),
(98, 13, 1, -0.66, 'optiond'),
(98, 13, 2, -0.66, 'optiond'),
(98, 13, 3, -0.66, 'optiond'),
(98, 13, 6, -0.66, 'optiona'),
(98, 13, 8, 2, 'optionc'),
(98, 13, 9, -0.66, 'optionb'),
(98, 13, 10, 2, 'optione'),
(98, 13, 11, -0.66, 'optione'),
(98, 13, 12, 2, 'optiona'),
(98, 13, 13, 2, 'optiond'),
(98, 13, 14, -0.66, 'optione'),
(98, 13, 15, -0.66, 'optione'),
(98, 13, 19, -0.66, 'optionc'),
(98, 13, 20, 2, 'optiona'),
(98, 13, 22, -0.66, 'optionc'),
(98, 13, 23, 2, 'optiona'),
(98, 13, 24, 2, 'optionc'),
(98, 13, 25, 2, 'optiona'),
(98, 13, 26, 2, 'optiond'),
(98, 13, 27, 2, 'optiond'),
(98, 13, 28, 2, 'optionc'),
(98, 13, 29, 2, 'optionc'),
(98, 13, 30, 2, 'optiona'),
(98, 13, 31, 2, 'optiond'),
(98, 13, 32, 2, 'optiona'),
(98, 13, 34, 2, 'optiona'),
(98, 13, 35, -0.66, 'optiond'),
(98, 13, 36, 2, 'optionc'),
(98, 13, 37, -0.66, 'optionc'),
(98, 13, 38, 2, 'optionb'),
(98, 13, 39, 2, 'optiona'),
(98, 13, 40, 2, 'optiond'),
(98, 15, 2, 1, 'optiond'),
(98, 15, 3, -0.33, 'optiona'),
(98, 15, 5, -0.33, 'optiona'),
(98, 15, 6, 1, 'optiona'),
(98, 15, 7, 1, 'optionb'),
(98, 15, 8, 1, 'optiona'),
(98, 15, 9, -0.33, 'optiona'),
(98, 15, 10, -0.33, 'optionb'),
(98, 15, 11, 1, 'optiond'),
(98, 15, 12, 1, 'optionc'),
(98, 15, 13, 1, 'optionb'),
(98, 15, 14, 1, 'optionc'),
(98, 15, 15, 1, 'optiond'),
(98, 15, 16, -0.33, 'optiona'),
(98, 15, 18, -0.33, 'optionc'),
(98, 15, 19, 1, 'optionc'),
(98, 15, 20, 1, 'optionb'),
(98, 15, 21, 1, 'optiona'),
(98, 15, 22, 1, 'optionb'),
(98, 15, 23, 1, 'optiona'),
(98, 15, 24, 1, 'optiona'),
(98, 15, 25, 1, 'optiond'),
(98, 15, 26, 2, 'optiona'),
(98, 15, 27, 2, 'optiona'),
(98, 15, 28, 2, 'optiond'),
(98, 15, 29, 2, 'optiond'),
(98, 15, 30, 2, 'optionb'),
(98, 15, 31, 2, 'optiona'),
(98, 15, 32, 2, 'optiona'),
(98, 15, 33, 2, 'optionc'),
(98, 15, 35, 2, 'optionc'),
(98, 15, 36, 2, 'optiond'),
(98, 15, 37, 2, 'optionb'),
(98, 15, 38, 2, 'optionc'),
(98, 15, 39, 2, 'optionb'),
(98, 15, 40, 2, 'optiond'),
(98, 15, 41, -0.66, 'optiona'),
(98, 15, 42, 2, 'optiona'),
(98, 15, 43, 2, 'optiona'),
(98, 15, 44, 2, 'optiond'),
(98, 15, 45, 2, 'optiona'),
(98, 15, 47, 2, 'optiond'),
(98, 15, 48, 2, 'optionc'),
(98, 15, 49, -0.66, 'optiona'),
(98, 15, 50, 2, 'optiond'),
(98, 15, 51, 2, 'optionb'),
(98, 15, 52, 2, 'optionc'),
(98, 15, 54, -0.66, 'optiond'),
(98, 15, 56, -0.33, 'optionb'),
(98, 15, 58, -0.33, 'optiona'),
(98, 15, 59, 1, 'optiond'),
(98, 15, 60, -0.33, 'optiond'),
(98, 15, 61, -0.66, 'optiona'),
(98, 15, 63, 2, 'optiond'),
(98, 16, 1, 1, 'optionc'),
(98, 16, 3, -0.33, 'optionb'),
(98, 16, 4, 1, 'optiond'),
(98, 16, 6, 1, 'optionb'),
(98, 16, 7, -0.33, 'optionb'),
(98, 16, 9, -0.33, 'optiona'),
(98, 16, 10, 1, 'optionc'),
(98, 16, 11, -0.33, 'optionc'),
(98, 16, 13, 1, 'optionb'),
(98, 16, 14, 1, 'optiond'),
(98, 16, 15, -0.33, 'optiond'),
(98, 16, 16, 1, 'optiond'),
(98, 16, 19, -0.33, 'optionc'),
(98, 16, 20, 1, 'optiona'),
(98, 16, 21, 1, 'optiond'),
(98, 16, 22, 1, 'optionb'),
(98, 16, 23, 1, 'optionc'),
(98, 16, 24, 1, 'optiona'),
(98, 16, 25, -0.33, 'optiona'),
(98, 16, 28, -0.66, 'optiona'),
(98, 16, 29, 2, 'optiond'),
(98, 16, 30, 2, 'optiond'),
(98, 16, 32, -0.66, 'optionb'),
(98, 16, 35, 2, 'optionb'),
(98, 16, 37, 2, 'optionb'),
(98, 16, 38, -0.66, 'optiond'),
(98, 16, 39, -0.66, 'optionc'),
(98, 16, 40, 2, 'optiona'),
(98, 16, 41, -0.66, 'optionb'),
(98, 16, 43, 2, 'optiona'),
(98, 16, 44, 2, 'optiond'),
(98, 16, 45, 2, 'optiona'),
(98, 16, 46, -0.66, 'optionb'),
(98, 16, 47, 2, 'optionc'),
(98, 16, 48, 2, 'optiona'),
(98, 16, 49, 2, 'optionc'),
(98, 16, 50, 2, 'optiona'),
(98, 16, 60, 1, 'optionc'),
(98, 16, 61, -0.66, 'optiond'),
(98, 16, 62, 2, 'optiond'),
(98, 16, 63, -0.66, 'optiond'),
(98, 16, 64, -0.66, 'optionc'),
(98, 17, 1, 1, 'optiona'),
(98, 17, 2, 1, 'optionb'),
(98, 17, 3, 1, 'optionb'),
(98, 17, 4, -0.33, 'optionb'),
(98, 17, 5, 1, 'optionc'),
(98, 17, 6, 1, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(98, 17, 8, 1, 'optiona'),
(98, 17, 9, -0.33, 'optiona'),
(98, 17, 10, 1, 'optiona'),
(98, 17, 11, -0.33, 'optionc'),
(98, 17, 12, -0.33, 'optionc'),
(98, 17, 13, 1, 'optionb'),
(98, 17, 14, 1, 'optionc'),
(98, 17, 15, -0.33, 'optiona'),
(98, 17, 18, 1, 'optionb'),
(98, 17, 19, 1, 'optionb'),
(98, 17, 20, -0.33, 'optionb'),
(98, 17, 21, 1, 'optionc'),
(98, 17, 22, 1, 'optionb'),
(98, 17, 23, 1, 'optiond'),
(98, 17, 24, 1, 'optionb'),
(98, 17, 25, 1, 'optionb'),
(98, 17, 26, 2, 'optionc'),
(98, 17, 27, -0.66, 'optionb'),
(98, 17, 28, -0.66, 'optionb'),
(98, 17, 29, 2, 'optiond'),
(98, 17, 30, 2, 'optiona'),
(98, 17, 31, 2, 'optiond'),
(98, 17, 32, 2, 'optiona'),
(98, 17, 33, 2, 'optiona'),
(98, 17, 34, 2, 'optiond'),
(98, 17, 35, 2, 'optionb'),
(98, 17, 36, 2, 'optiond'),
(98, 17, 37, 2, 'optionc'),
(98, 17, 38, -0.66, 'optiona'),
(98, 17, 39, 2, 'optionb'),
(98, 17, 41, 2, 'optionc'),
(98, 17, 42, -0.66, 'optiona'),
(98, 17, 45, -0.66, 'optiond'),
(98, 17, 46, -0.66, 'optionc'),
(98, 17, 47, -0.66, 'optionb'),
(98, 17, 48, 2, 'optiond'),
(98, 17, 50, 2, 'optiond'),
(98, 17, 51, 2, 'optionc'),
(98, 17, 52, 2, 'optiond'),
(98, 17, 53, 2, 'optiona'),
(98, 17, 54, 2, 'optiond'),
(98, 17, 55, 2, 'optiona'),
(98, 17, 58, 1, 'optionc'),
(98, 17, 61, 2, 'optionb'),
(98, 17, 62, 2, 'optionc'),
(98, 17, 63, 2, 'optiona'),
(98, 17, 65, 2, 'optiond'),
(98, 18, 1, 1, 'optiona'),
(98, 18, 2, 1, 'optiond'),
(98, 18, 3, 1, 'optionb'),
(98, 18, 4, 1, 'optiona'),
(98, 18, 6, 1, 'optionc'),
(98, 18, 7, 1, 'optionb'),
(98, 18, 8, 1, 'optionb'),
(98, 18, 9, 1, 'optiond'),
(98, 18, 11, -0.33, 'optionc'),
(98, 18, 12, 1, 'optiona'),
(98, 18, 13, 1, 'optiond'),
(98, 18, 14, 1, 'optionc'),
(98, 18, 15, -0.33, 'optiona'),
(98, 18, 16, -0.33, 'optiona'),
(98, 18, 17, -0.33, 'optionc'),
(98, 18, 18, 1, 'optiona'),
(98, 18, 19, 1, 'optionc'),
(98, 18, 20, 1, 'optionb'),
(98, 18, 21, -0.33, 'optiona'),
(98, 18, 22, 1, 'optiond'),
(98, 18, 23, 1, 'optiond'),
(98, 18, 24, 1, 'optionc'),
(98, 18, 25, 1, 'optionc'),
(98, 18, 26, 2, 'optionb'),
(98, 18, 27, -0.66, 'optionc'),
(98, 18, 29, 2, 'optiond'),
(98, 18, 30, 2, 'optionc'),
(98, 18, 31, 2, 'optiona'),
(98, 18, 32, 2, 'optionb'),
(98, 18, 33, 2, 'optiond'),
(98, 18, 35, -0.66, 'optionc'),
(98, 18, 37, 2, 'optionc'),
(98, 18, 38, 2, 'optionb'),
(98, 18, 39, 2, 'optiona'),
(98, 18, 42, 2, 'optionb'),
(98, 18, 43, 2, 'optionb'),
(98, 18, 44, 2, 'optionc'),
(98, 18, 45, -0.66, 'optionc'),
(98, 18, 47, 2, 'optiond'),
(98, 18, 48, 2, 'optionb'),
(98, 18, 49, 2, 'optionc'),
(98, 18, 50, 2, 'optionc'),
(98, 18, 51, -0.66, 'optiond'),
(98, 18, 52, -0.66, 'optionc'),
(98, 18, 53, -0.66, 'optiond'),
(98, 18, 54, 2, 'optiona'),
(98, 18, 56, 1, 'optione'),
(98, 18, 58, 1, 'optionc'),
(98, 18, 60, 1, 'optiona'),
(98, 18, 61, 2, 'optionb'),
(98, 18, 62, 2, 'optiond'),
(98, 18, 63, -0.66, 'optiond'),
(98, 18, 64, 2, 'optionb'),
(98, 18, 65, 2, 'optiond'),
(99, 4, 1, 1, 'optiona'),
(99, 4, 2, 1, 'optiond'),
(99, 4, 3, 1, 'optionc'),
(99, 4, 4, 1, 'optionc'),
(99, 4, 5, -0.33, 'optiona'),
(99, 4, 6, -0.33, 'optionc'),
(99, 4, 7, -0.33, 'optionb'),
(99, 4, 8, -0.33, 'optionc'),
(99, 4, 9, 1, 'optionb'),
(99, 4, 10, 1, 'optionc'),
(99, 4, 11, -0.33, 'optionc'),
(99, 4, 12, 1, 'optionc'),
(99, 4, 13, -0.33, 'optionc'),
(99, 4, 14, 1, 'optiond'),
(99, 4, 17, 1, 'optiond'),
(99, 4, 18, -0.33, 'optiona'),
(99, 4, 19, 1, 'optionb'),
(99, 4, 20, 1, 'optiona'),
(99, 4, 21, -0.66, 'optionb'),
(99, 4, 22, -0.66, 'optiona'),
(99, 4, 23, 2, 'optionb'),
(99, 4, 24, 2, 'optionc'),
(99, 4, 29, 2, 'optionb'),
(99, 4, 30, 2, 'optionc'),
(99, 4, 31, 2, 'optionc'),
(99, 4, 32, 2, 'optiond'),
(99, 4, 33, 2, 'optionc'),
(99, 4, 34, 2, 'optiona'),
(99, 4, 35, -0.66, 'optiond'),
(99, 4, 36, 2, 'optionc'),
(99, 4, 37, 2, 'optiond'),
(99, 4, 38, 2, 'optiond'),
(99, 4, 39, 2, 'optionb'),
(99, 4, 40, 2, 'optiona'),
(99, 4, 41, 4, 'optionc'),
(99, 4, 42, 4, 'optionc'),
(99, 4, 43, 4, 'optionc'),
(99, 4, 44, -1.33, 'optiona'),
(99, 4, 45, -1.33, 'optiona'),
(99, 4, 46, -1.33, 'optiond'),
(99, 4, 47, -1.33, 'optiona'),
(99, 4, 50, 4, 'optionc'),
(99, 7, 1, 1, 'optionc'),
(99, 7, 2, 1, 'optiond'),
(99, 7, 4, 1, 'optiond'),
(99, 7, 5, 1, 'optionb'),
(99, 7, 6, -0.33, 'optiond'),
(99, 7, 7, -0.33, 'optionc'),
(99, 7, 10, 1, 'optionc'),
(99, 7, 11, 1, 'optiona'),
(99, 7, 14, 1, 'optionc'),
(99, 7, 15, 1, 'optionb'),
(99, 7, 16, -0.33, 'optionc'),
(99, 7, 17, 1, 'optionc'),
(99, 7, 18, -0.33, 'optionc'),
(99, 7, 19, 1, 'optiond'),
(99, 7, 20, 1, 'optiona'),
(99, 7, 21, -0.33, 'optionc'),
(99, 7, 22, -0.33, 'optionb'),
(99, 7, 24, -0.33, 'optionc'),
(99, 7, 25, -0.33, 'optiond'),
(99, 7, 26, -0.66, 'optiond'),
(99, 7, 28, -0.66, 'optionb'),
(99, 7, 30, 2, 'optionc'),
(99, 7, 31, -0.66, 'optionc'),
(99, 7, 32, -0.66, 'optiond'),
(99, 7, 35, -0.66, 'optione'),
(99, 7, 36, 2, 'optionc'),
(99, 7, 37, -0.66, 'optionc'),
(99, 7, 39, -0.66, 'optionb'),
(99, 7, 40, 2, 'optionb'),
(99, 7, 41, -0.66, 'optiona'),
(99, 7, 42, -0.66, 'optiond'),
(99, 7, 43, 2, 'optionb'),
(99, 7, 44, 2, 'optionb'),
(99, 7, 45, 2, 'optiond'),
(99, 7, 46, -0.66, 'optionb'),
(99, 7, 50, 2, 'optionc'),
(99, 7, 52, -0.66, 'optionb'),
(99, 7, 53, -0.66, 'optiona'),
(99, 7, 54, 2, 'optiond'),
(99, 7, 55, 2, 'optionb'),
(99, 7, 59, 1, 'optiond'),
(99, 7, 60, -0.33, 'optiond'),
(99, 7, 63, 2, 'optiond'),
(99, 7, 65, -0.66, 'optiona'),
(99, 8, 1, 1, 'optione'),
(99, 8, 2, -0.33, 'optionb'),
(99, 8, 3, 1, 'optionb'),
(99, 8, 4, -0.33, 'optionb'),
(99, 8, 5, -0.33, 'optiona'),
(99, 8, 6, 1, 'optiond'),
(99, 8, 8, 1, 'optionb'),
(99, 8, 9, 1, 'optiond'),
(99, 8, 10, 1, 'optionc'),
(99, 8, 11, 1, 'optiond'),
(99, 8, 12, 1, 'optiona'),
(99, 8, 13, 1, 'optionb'),
(99, 8, 14, 1, 'optiona'),
(99, 8, 15, 1, 'optionc'),
(99, 8, 16, 1, 'optionc'),
(99, 8, 17, -0.33, 'optionb'),
(99, 8, 18, -0.33, 'optiond'),
(99, 8, 19, 1, 'optiona'),
(99, 8, 22, -0.33, 'optiond'),
(99, 8, 23, 1, 'optiona'),
(99, 8, 24, -0.33, 'optiond'),
(99, 8, 25, -0.33, 'optione'),
(99, 8, 26, 1, 'optiond'),
(99, 8, 27, 1, 'optiond'),
(99, 8, 28, 1, 'optionc'),
(99, 8, 30, 1, 'optionc'),
(99, 8, 31, 1, 'optionc'),
(99, 8, 32, 1, 'optionb'),
(99, 8, 33, 1, 'optiona'),
(99, 8, 34, 1, 'optiond'),
(99, 8, 35, 1, 'optionc'),
(99, 8, 36, 1, 'optionc'),
(99, 8, 37, -0.33, 'optionb'),
(99, 8, 38, 1, 'optionb'),
(99, 8, 39, 1, 'optiond'),
(99, 8, 40, -0.33, 'optiona'),
(99, 8, 41, 1, 'optiona'),
(99, 8, 42, 1, 'optiond'),
(99, 8, 43, -0.33, 'optiona'),
(99, 8, 44, -0.33, 'optiona'),
(99, 8, 45, 1, 'optiond'),
(99, 13, 1, -0.66, 'optiond'),
(99, 13, 2, -0.66, 'optionc'),
(99, 13, 3, -0.66, 'optiond'),
(99, 13, 15, -0.66, 'optiond'),
(99, 13, 18, -0.66, 'optionb'),
(99, 13, 19, -0.66, 'optiond'),
(99, 13, 22, -0.66, 'optionc'),
(99, 13, 23, -0.66, 'optionc'),
(99, 13, 24, 2, 'optionc'),
(99, 13, 25, -0.66, 'optionc'),
(99, 13, 26, -0.66, 'optionb'),
(99, 13, 28, 2, 'optionc'),
(99, 13, 29, -0.66, 'optiond'),
(99, 13, 30, 2, 'optiona'),
(99, 13, 31, -0.66, 'optionc'),
(99, 13, 32, 2, 'optiona'),
(99, 13, 35, -0.66, 'optione'),
(99, 13, 36, -0.66, 'optiona'),
(99, 13, 37, 2, 'optiona'),
(99, 13, 38, 2, 'optionb'),
(99, 13, 39, 2, 'optiona'),
(99, 13, 40, 2, 'optiond'),
(99, 15, 1, 1, 'optionc'),
(99, 15, 2, 1, 'optiond'),
(99, 15, 3, 1, 'optionc'),
(99, 15, 4, 1, 'optiona'),
(99, 15, 5, 1, 'optionb'),
(99, 15, 6, 1, 'optiona'),
(99, 15, 9, 1, 'optionb'),
(99, 15, 10, -0.33, 'optiond'),
(99, 15, 11, -0.33, 'optiona'),
(99, 15, 12, 1, 'optionc'),
(99, 15, 13, 1, 'optionb'),
(99, 15, 14, 1, 'optionc'),
(99, 15, 15, 1, 'optiond'),
(99, 15, 16, 1, 'optiond'),
(99, 15, 17, -0.33, 'optiona'),
(99, 15, 18, 1, 'optionb'),
(99, 15, 19, 1, 'optionc'),
(99, 15, 20, 1, 'optionb'),
(99, 15, 21, 1, 'optiona'),
(99, 15, 22, -0.33, 'optiond'),
(99, 15, 24, 1, 'optiona'),
(99, 15, 25, -0.33, 'optionb'),
(99, 15, 26, -0.66, 'optionb'),
(99, 15, 28, 2, 'optiond'),
(99, 15, 29, 2, 'optiond'),
(99, 15, 30, 2, 'optionb'),
(99, 15, 31, 2, 'optiona'),
(99, 15, 32, -0.66, 'optionb'),
(99, 15, 35, 2, 'optionc'),
(99, 15, 37, 2, 'optionb'),
(99, 15, 38, 2, 'optionc'),
(99, 15, 39, -0.66, 'optiond'),
(99, 15, 40, 2, 'optiond'),
(99, 15, 41, -0.66, 'optiond'),
(99, 15, 44, -0.66, 'optionc'),
(99, 15, 45, -0.66, 'optiond'),
(99, 15, 47, -0.66, 'optiona'),
(99, 15, 50, -0.66, 'optionc'),
(99, 15, 51, -0.66, 'optionc'),
(99, 15, 52, 2, 'optionc'),
(99, 15, 54, 2, 'optionc'),
(99, 15, 59, 1, 'optiond'),
(99, 15, 61, -0.66, 'optiona'),
(99, 15, 64, 2, 'optiond'),
(99, 15, 65, -0.66, 'optiond'),
(99, 16, 1, 1, 'optionc'),
(99, 16, 3, 1, 'optiond'),
(99, 16, 5, -0.33, 'optiona'),
(99, 16, 7, -0.33, 'optionb'),
(99, 16, 8, -0.33, 'optiond'),
(99, 16, 9, -0.33, 'optionb'),
(99, 16, 14, -0.33, 'optionb'),
(99, 16, 16, -0.33, 'optiona'),
(99, 16, 18, -0.33, 'optionb'),
(99, 16, 19, -0.33, 'optionb'),
(99, 16, 20, 1, 'optiona'),
(99, 16, 22, 1, 'optionb'),
(99, 16, 23, -0.33, 'optiona'),
(99, 16, 25, -0.33, 'optiona'),
(99, 16, 26, -0.66, 'optionc'),
(99, 16, 27, 2, 'optionb'),
(99, 16, 30, 2, 'optiond'),
(99, 16, 32, -0.66, 'optionb'),
(99, 16, 33, 2, 'optiond'),
(99, 16, 35, -0.66, 'optionc'),
(99, 16, 36, -0.66, 'optionb'),
(99, 16, 37, 2, 'optionb'),
(99, 16, 38, -0.66, 'optiona'),
(99, 16, 40, -0.66, 'optionb'),
(99, 16, 41, 2, 'optionc'),
(99, 16, 43, 2, 'optiona'),
(99, 16, 44, -0.66, 'optiona'),
(99, 16, 45, 2, 'optiona'),
(99, 16, 48, -0.66, 'optionb'),
(99, 17, 1, 1, 'optiona'),
(99, 17, 2, 1, 'optionb'),
(99, 17, 3, 1, 'optionb'),
(99, 17, 4, -0.33, 'optiona'),
(99, 17, 5, 1, 'optionc'),
(99, 17, 7, -0.33, 'optiona'),
(99, 17, 8, -0.33, 'optionc'),
(99, 17, 9, 1, 'optionb'),
(99, 17, 10, -0.33, 'optionb'),
(99, 17, 13, -0.33, 'optiond'),
(99, 17, 14, -0.33, 'optionb'),
(99, 17, 15, -0.33, 'optionc'),
(99, 17, 19, -0.33, 'optiona'),
(99, 17, 20, 1, 'optiona'),
(99, 17, 22, 1, 'optionb'),
(99, 17, 23, 1, 'optiond'),
(99, 17, 24, -0.33, 'optiona'),
(99, 17, 25, -0.33, 'optiond'),
(99, 17, 26, 2, 'optionc'),
(99, 17, 28, 2, 'optiond'),
(99, 17, 29, 2, 'optiond'),
(99, 17, 30, 2, 'optiona'),
(99, 17, 31, 2, 'optiond'),
(99, 17, 32, 2, 'optiona'),
(99, 17, 33, 2, 'optiona'),
(99, 17, 34, 2, 'optiond'),
(99, 17, 35, -0.66, 'optionc'),
(99, 17, 37, 2, 'optionc'),
(99, 17, 38, -0.66, 'optiona'),
(99, 17, 39, 2, 'optionb'),
(99, 17, 41, -0.66, 'optionb'),
(99, 17, 47, 2, 'optiona'),
(99, 17, 52, 2, 'optiond'),
(99, 17, 53, -0.66, 'optionb'),
(99, 17, 54, 2, 'optiond'),
(99, 17, 57, 1, 'optionb'),
(99, 17, 59, -0.33, 'optiona'),
(99, 17, 61, -0.66, 'optiond'),
(99, 17, 63, 2, 'optiona'),
(99, 18, 1, 1, 'optiona'),
(99, 18, 2, -0.33, 'optiona'),
(99, 18, 3, 1, 'optionb'),
(99, 18, 4, 1, 'optiona'),
(99, 18, 6, -0.33, 'optionb'),
(99, 18, 8, -0.33, 'optiona'),
(99, 18, 10, -0.33, 'optionc'),
(99, 18, 11, -0.33, 'optiona'),
(99, 18, 15, 1, 'optionc'),
(99, 18, 16, -0.33, 'optiona'),
(99, 18, 17, 1, 'optionb'),
(99, 18, 19, -0.33, 'optionb'),
(99, 18, 20, -0.33, 'optiona'),
(99, 18, 21, 1, 'optiond'),
(99, 18, 22, 1, 'optiond'),
(99, 18, 24, 1, 'optionc'),
(99, 18, 25, 1, 'optionc'),
(99, 18, 26, 2, 'optionb'),
(99, 18, 28, 2, 'optiona'),
(99, 18, 29, 2, 'optiond'),
(99, 18, 31, 2, 'optiona'),
(99, 18, 33, 2, 'optiond'),
(99, 18, 34, 2, 'optiona'),
(99, 18, 36, 2, 'optiona'),
(99, 18, 37, -0.66, 'optionb'),
(99, 18, 39, -0.66, 'optiond'),
(99, 18, 41, 2, 'optiond'),
(99, 18, 42, 2, 'optionb'),
(99, 18, 45, -0.66, 'optiond'),
(99, 18, 47, 2, 'optiond'),
(99, 18, 48, 2, 'optionb'),
(99, 18, 49, 2, 'optionc'),
(99, 18, 52, 2, 'optiona'),
(99, 18, 54, 2, 'optiona'),
(99, 18, 58, 1, 'optionc'),
(99, 18, 59, 1, 'optionc'),
(99, 18, 61, 2, 'optionb'),
(99, 18, 65, 2, 'optiond'),
(100, 7, 1, 1, 'optionc'),
(100, 7, 2, 1, 'optiond'),
(100, 7, 4, 1, 'optiond'),
(100, 7, 5, -0.33, 'optionc'),
(100, 7, 6, 1, 'optionb'),
(100, 7, 7, -0.33, 'optiona'),
(100, 7, 8, 1, 'optionb'),
(100, 7, 9, 1, 'optiona'),
(100, 7, 10, 1, 'optionc'),
(100, 7, 11, 1, 'optiona'),
(100, 7, 12, -0.33, 'optiona'),
(100, 7, 14, -0.33, 'optiona'),
(100, 7, 15, 1, 'optionb'),
(100, 7, 16, 1, 'optiona'),
(100, 7, 17, 1, 'optionc'),
(100, 7, 18, -0.33, 'optiond'),
(100, 7, 19, 1, 'optiond'),
(100, 7, 22, -0.33, 'optiona'),
(100, 7, 23, 1, 'optiond'),
(100, 7, 24, 1, 'optiona'),
(100, 7, 25, -0.33, 'optionb'),
(100, 7, 26, 2, 'optiona'),
(100, 7, 29, 2, 'optiond'),
(100, 7, 30, -0.66, 'optiona'),
(100, 7, 31, 2, 'optiona'),
(100, 7, 34, -0.66, 'optiond'),
(100, 7, 35, 2, 'optionc'),
(100, 7, 36, 2, 'optionc'),
(100, 7, 38, -0.66, 'optionb'),
(100, 7, 40, 2, 'optionb'),
(100, 7, 41, -0.66, 'optiond'),
(100, 7, 42, 2, 'optionc'),
(100, 7, 43, 2, 'optionb'),
(100, 7, 44, 2, 'optionb'),
(100, 7, 45, 2, 'optiond'),
(100, 7, 46, -0.66, 'optionc'),
(100, 7, 47, 2, 'optionb'),
(100, 7, 48, 2, 'optionb'),
(100, 7, 49, -0.66, 'optiona'),
(100, 7, 50, 2, 'optionc'),
(100, 7, 51, 2, 'optionb'),
(100, 7, 52, 2, 'optiona'),
(100, 7, 53, 2, 'optionb'),
(100, 7, 54, 2, 'optiond'),
(100, 7, 55, -0.66, 'optiond'),
(100, 7, 56, 1, 'optiona'),
(100, 7, 58, 1, 'optionb'),
(100, 7, 61, 2, 'optionb'),
(100, 7, 62, 2, 'optionc'),
(100, 7, 63, 2, 'optiond'),
(100, 7, 65, -0.66, 'optiond'),
(100, 8, 1, 1, 'optione'),
(100, 8, 2, -0.33, 'optionb'),
(100, 8, 4, -0.33, 'optionb'),
(100, 8, 5, -0.33, 'optiona'),
(100, 8, 6, 1, 'optiond'),
(100, 8, 7, -0.33, 'optionc'),
(100, 8, 8, 1, 'optionb'),
(100, 8, 9, 1, 'optiond'),
(100, 8, 10, 1, 'optionc'),
(100, 8, 11, 1, 'optiond'),
(100, 8, 12, 1, 'optiona'),
(100, 8, 13, 1, 'optionb'),
(100, 8, 14, 1, 'optiona'),
(100, 8, 15, 1, 'optionc'),
(100, 8, 16, 1, 'optionc'),
(100, 8, 17, -0.33, 'optiond'),
(100, 8, 18, 1, 'optione'),
(100, 8, 19, 1, 'optiona'),
(100, 8, 22, -0.33, 'optionc'),
(100, 8, 23, 1, 'optiona'),
(100, 8, 24, 1, 'optiona'),
(100, 8, 26, 1, 'optiond'),
(100, 8, 27, 1, 'optiond'),
(100, 8, 29, 1, 'optionb'),
(100, 8, 30, 1, 'optionc'),
(100, 8, 31, 1, 'optionc'),
(100, 8, 32, 1, 'optionb'),
(100, 8, 33, 1, 'optiona'),
(100, 8, 34, 1, 'optiond'),
(100, 8, 35, 1, 'optionc'),
(100, 8, 36, 1, 'optionc'),
(100, 8, 37, 1, 'optiond'),
(100, 8, 38, 1, 'optionb'),
(100, 8, 39, 1, 'optiond'),
(100, 8, 40, 1, 'optionc'),
(100, 8, 41, 1, 'optiona'),
(100, 8, 42, 1, 'optiond'),
(100, 8, 43, 1, 'optionb'),
(100, 8, 44, -0.33, 'optiona'),
(100, 8, 45, 1, 'optiond'),
(100, 9, 1, -0.66, 'optiona'),
(100, 9, 2, -0.66, 'optiona'),
(100, 9, 7, -0.66, 'optiona'),
(100, 9, 12, 2, 'optiona'),
(100, 9, 14, -0.66, 'optiond'),
(100, 9, 18, 2, 'optionb'),
(100, 9, 23, 2, 'optionc'),
(100, 9, 25, -0.66, 'optiona'),
(100, 9, 26, 2, 'optionc'),
(100, 9, 31, 2, 'optione'),
(100, 9, 34, 2, 'optiond'),
(100, 9, 37, 2, 'optionb'),
(100, 9, 48, -0.66, 'optiond'),
(100, 9, 49, 2, 'optionb'),
(100, 9, 50, 2, 'optionb'),
(100, 9, 52, 2, 'optionb'),
(100, 9, 53, -0.66, 'optionb'),
(100, 9, 55, -0.66, 'optiona'),
(100, 10, 1, 2, 'optione'),
(100, 10, 2, 2, 'optionb'),
(100, 10, 3, -0.66, 'optiona'),
(100, 10, 4, 2, 'optionc'),
(100, 10, 5, 2, 'optionb'),
(100, 10, 6, 2, 'optionb'),
(100, 10, 9, -0.66, 'optiond'),
(100, 10, 10, -0.66, 'optionc'),
(100, 10, 11, 2, 'optionc'),
(100, 10, 12, 2, 'optionb'),
(100, 10, 13, 2, 'optionc'),
(100, 10, 14, 2, 'optionb'),
(100, 10, 15, 2, 'optiond'),
(100, 10, 16, 2, 'optiona'),
(100, 10, 17, 2, 'optionb'),
(100, 10, 18, -0.66, 'optionc'),
(100, 10, 19, 2, 'optiona'),
(100, 10, 21, 2, 'optionb'),
(100, 10, 22, -0.66, 'optiond'),
(100, 10, 23, -0.66, 'optionc'),
(100, 10, 24, -0.66, 'optionc'),
(100, 11, 1, 2, 'optionb'),
(100, 11, 2, 2, 'optionc'),
(100, 11, 3, -0.66, 'optiond'),
(100, 11, 4, 2, 'optiond'),
(100, 11, 5, 2, 'optionb'),
(100, 11, 6, 2, 'optionb'),
(100, 11, 7, 2, 'optionb'),
(100, 11, 8, 2, 'optiona'),
(100, 11, 9, 2, 'optionc'),
(100, 11, 10, 2, 'optiona'),
(100, 11, 11, 2, 'optiona'),
(100, 11, 12, 2, 'optiona'),
(100, 11, 13, 2, 'optionb'),
(100, 11, 14, 2, 'optionc'),
(100, 11, 15, 2, 'optionc'),
(100, 11, 17, 2, 'optiona'),
(100, 11, 20, 2, 'optiona'),
(100, 11, 21, 2, 'optionc'),
(100, 11, 22, 2, 'optiona'),
(100, 11, 23, 2, 'optionc'),
(100, 11, 24, 2, 'optiona'),
(100, 11, 25, 2, 'optionb'),
(100, 11, 26, 2, 'optionc'),
(100, 11, 27, 2, 'optione'),
(100, 11, 28, 2, 'optiona'),
(100, 11, 29, 2, 'optiond'),
(100, 11, 30, 2, 'optiond'),
(100, 11, 31, 2, 'optione'),
(100, 11, 32, 2, 'optionc'),
(100, 11, 33, 2, 'optiond'),
(100, 11, 34, 2, 'optiond'),
(100, 11, 35, 2, 'optiond'),
(100, 11, 36, 2, 'optione'),
(100, 11, 37, 2, 'optionb'),
(100, 11, 38, 2, 'optiona'),
(100, 11, 39, 2, 'optiona'),
(100, 11, 41, 2, 'optionc'),
(100, 11, 42, 2, 'optione'),
(100, 11, 43, -0.66, 'optionc'),
(100, 11, 45, 2, 'optiona'),
(100, 11, 46, 2, 'optiona'),
(100, 11, 48, 2, 'optiond'),
(100, 11, 49, 2, 'optiond'),
(100, 11, 50, 2, 'optionc'),
(100, 11, 51, 2, 'optiond'),
(100, 11, 52, 2, 'optionb'),
(100, 11, 53, 2, 'optionc'),
(100, 11, 54, 2, 'optionb'),
(100, 11, 55, 2, 'optionb'),
(100, 11, 56, 2, 'optione'),
(100, 11, 57, 2, 'optionc'),
(100, 11, 58, 2, 'optione'),
(100, 11, 60, 2, 'optiond'),
(100, 12, 1, 2, 'optionc'),
(100, 12, 2, 2, 'optionc'),
(100, 12, 4, 2, 'optionc'),
(100, 12, 6, -0.66, 'optiona'),
(100, 12, 7, 2, 'optionb'),
(100, 12, 8, 2, 'optionb'),
(100, 12, 9, 2, 'optiona'),
(100, 12, 10, 2, 'optiond'),
(100, 12, 11, 2, 'optionb'),
(100, 12, 12, -0.66, 'optiona'),
(100, 12, 13, -0.66, 'optiona'),
(100, 12, 14, 2, 'optiona'),
(100, 12, 15, 2, 'optiond'),
(100, 12, 16, 2, 'optionc'),
(100, 12, 17, 2, 'optionc'),
(100, 12, 18, 2, 'optiond'),
(100, 12, 19, 2, 'optionb'),
(100, 12, 20, 2, 'optionb'),
(100, 12, 21, 2, 'optiona'),
(100, 12, 22, 2, 'optiond'),
(100, 12, 24, 2, 'optiona'),
(100, 12, 25, -0.66, 'optiona'),
(100, 12, 26, 2, 'optionb'),
(100, 12, 28, 2, 'optiond'),
(100, 12, 30, 2, 'optionb'),
(100, 12, 31, -0.66, 'optionb'),
(100, 12, 32, 2, 'optionc'),
(100, 12, 34, 2, 'optiond'),
(100, 12, 35, 2, 'optiond'),
(100, 12, 36, 2, 'optionc'),
(100, 12, 37, -0.66, 'optiond'),
(100, 12, 38, 2, 'optionc'),
(100, 12, 40, -0.66, 'optiond'),
(100, 12, 41, 2, 'optionb'),
(100, 12, 42, 2, 'optiona'),
(100, 12, 43, 2, 'optiond'),
(100, 12, 44, -0.66, 'optionc'),
(100, 12, 45, 2, 'optiond'),
(100, 12, 46, 2, 'optiond'),
(100, 12, 47, 2, 'optionc'),
(100, 12, 48, -0.66, 'optionc'),
(100, 12, 50, 2, 'optionb'),
(100, 12, 51, 2, 'optionc'),
(100, 12, 52, 2, 'optionb'),
(100, 12, 53, 2, 'optiona'),
(100, 12, 54, -0.66, 'optiond'),
(100, 13, 1, 2, 'optionc'),
(100, 13, 2, 2, 'optionb'),
(100, 13, 3, -0.66, 'optionb'),
(100, 13, 6, -0.66, 'optiona'),
(100, 13, 7, -0.66, 'optionc'),
(100, 13, 8, 2, 'optionc'),
(100, 13, 9, 2, 'optione'),
(100, 13, 13, -0.66, 'optiona'),
(100, 13, 14, -0.66, 'optiona'),
(100, 13, 15, -0.66, 'optionb'),
(100, 13, 18, -0.66, 'optionb'),
(100, 13, 19, -0.66, 'optiona'),
(100, 13, 22, 2, 'optiona'),
(100, 13, 24, -0.66, 'optiond'),
(100, 13, 25, 2, 'optiona'),
(100, 13, 26, -0.66, 'optionc'),
(100, 13, 27, 2, 'optiond'),
(100, 13, 28, 2, 'optionc'),
(100, 13, 30, 2, 'optiona'),
(100, 13, 31, 2, 'optiond'),
(100, 13, 32, 2, 'optiona'),
(100, 13, 33, 2, 'optionb'),
(100, 13, 34, 2, 'optiona'),
(100, 13, 35, 2, 'optionc'),
(100, 13, 36, 2, 'optionc'),
(100, 13, 37, -0.66, 'optionb'),
(100, 13, 38, 2, 'optionb'),
(100, 13, 39, 2, 'optiona'),
(100, 13, 40, 2, 'optiond'),
(100, 15, 2, 1, 'optiond'),
(100, 15, 6, 1, 'optiona'),
(100, 15, 7, -0.33, 'optiond'),
(100, 15, 8, 1, 'optiona'),
(100, 15, 9, 1, 'optionb'),
(100, 15, 10, 1, 'optiona'),
(100, 15, 11, 1, 'optiond'),
(100, 15, 12, 1, 'optionc'),
(100, 15, 13, 1, 'optionb'),
(100, 15, 14, 1, 'optionc'),
(100, 15, 15, 1, 'optiond'),
(100, 15, 16, -0.33, 'optiona'),
(100, 15, 17, 1, 'optionb'),
(100, 15, 18, -0.33, 'optionc'),
(100, 15, 19, 1, 'optionc'),
(100, 15, 20, 1, 'optionb'),
(100, 15, 21, 1, 'optiona'),
(100, 15, 22, 1, 'optionb'),
(100, 15, 23, -0.33, 'optiond'),
(100, 15, 24, 1, 'optiona'),
(100, 15, 25, 1, 'optiond'),
(100, 15, 26, 2, 'optiona'),
(100, 15, 27, 2, 'optiona'),
(100, 15, 28, -0.66, 'optiona'),
(100, 15, 29, 2, 'optiond'),
(100, 15, 30, 2, 'optionb'),
(100, 15, 32, 2, 'optiona'),
(100, 15, 33, 2, 'optionc'),
(100, 15, 35, 2, 'optionc'),
(100, 15, 36, 2, 'optiond'),
(100, 15, 37, -0.66, 'optiona'),
(100, 15, 38, 2, 'optionc'),
(100, 15, 39, 2, 'optionb'),
(100, 15, 40, 2, 'optiond'),
(100, 15, 41, 2, 'optionc'),
(100, 15, 42, 2, 'optiona'),
(100, 15, 43, 2, 'optiona'),
(100, 15, 44, 2, 'optiond'),
(100, 15, 45, 2, 'optiona'),
(100, 15, 46, 2, 'optionb'),
(100, 15, 47, 2, 'optiond'),
(100, 15, 48, 2, 'optionc'),
(100, 15, 49, 2, 'optionc'),
(100, 15, 50, 2, 'optiond'),
(100, 15, 51, 2, 'optionb'),
(100, 15, 52, -0.66, 'optiond'),
(100, 15, 54, -0.66, 'optionb'),
(100, 15, 55, -0.66, 'optiond'),
(100, 15, 57, -0.33, 'optionc'),
(100, 15, 59, 1, 'optiond'),
(100, 15, 64, -0.66, 'optionb'),
(100, 16, 1, 1, 'optionc'),
(100, 16, 3, -0.33, 'optionb'),
(100, 16, 4, 1, 'optiond'),
(100, 16, 6, 1, 'optionb'),
(100, 16, 8, 1, 'optiona'),
(100, 16, 10, 1, 'optionc'),
(100, 16, 13, -0.33, 'optiond'),
(100, 16, 16, 1, 'optiond'),
(100, 16, 19, 1, 'optiond'),
(100, 16, 20, -0.33, 'optionc'),
(100, 16, 21, 1, 'optiond'),
(100, 16, 22, 1, 'optionb'),
(100, 16, 23, 1, 'optionc'),
(100, 16, 26, -0.66, 'optiond'),
(100, 16, 29, 2, 'optiond'),
(100, 16, 35, 2, 'optionb'),
(100, 16, 36, 2, 'optionc'),
(100, 16, 37, 2, 'optionb'),
(100, 16, 38, 2, 'optionb'),
(100, 16, 40, 2, 'optiona'),
(100, 16, 43, 2, 'optiona'),
(100, 16, 44, 2, 'optiond'),
(100, 16, 45, 2, 'optiona'),
(100, 16, 46, 2, 'optionc'),
(100, 16, 47, 2, 'optionc'),
(100, 16, 48, 2, 'optiona'),
(100, 16, 49, 2, 'optionc'),
(100, 16, 50, 2, 'optiona'),
(100, 16, 51, 2, 'optiona'),
(100, 16, 52, 2, 'optiona'),
(100, 16, 53, 2, 'optionb'),
(100, 16, 60, -0.33, 'optionb'),
(100, 16, 61, -0.66, 'optiond'),
(100, 17, 1, -0.33, 'optionb'),
(100, 17, 2, 1, 'optionb'),
(100, 17, 3, 1, 'optionb'),
(100, 17, 5, 1, 'optionc'),
(100, 17, 6, 1, 'optiona'),
(100, 17, 7, 1, 'optionc'),
(100, 17, 8, 1, 'optiona'),
(100, 17, 9, -0.33, 'optiona'),
(100, 17, 10, 1, 'optiona'),
(100, 17, 11, -0.33, 'optionb'),
(100, 17, 12, -0.33, 'optionc'),
(100, 17, 13, -0.33, 'optiond'),
(100, 17, 18, 1, 'optionb'),
(100, 17, 20, -0.33, 'optionb'),
(100, 17, 21, -0.33, 'optiona'),
(100, 17, 22, 1, 'optionb'),
(100, 17, 23, 1, 'optiond'),
(100, 17, 25, 1, 'optionb'),
(100, 17, 26, 2, 'optionc'),
(100, 17, 27, 2, 'optionc'),
(100, 17, 28, 2, 'optiond'),
(100, 17, 29, 2, 'optiond'),
(100, 17, 30, 2, 'optiona'),
(100, 17, 31, 2, 'optiond'),
(100, 17, 32, 2, 'optiona'),
(100, 17, 33, 2, 'optiona'),
(100, 17, 34, 2, 'optiond'),
(100, 17, 35, 2, 'optionb'),
(100, 17, 37, 2, 'optionc'),
(100, 17, 38, 2, 'optionc'),
(100, 17, 41, 2, 'optionc'),
(100, 17, 45, -0.66, 'optiond'),
(100, 17, 47, -0.66, 'optionb'),
(100, 17, 48, 2, 'optiond'),
(100, 17, 50, -0.66, 'optionc'),
(100, 17, 51, 2, 'optionc'),
(100, 17, 52, 2, 'optiond'),
(100, 17, 53, 2, 'optiona'),
(100, 17, 54, 2, 'optiond'),
(100, 17, 55, 2, 'optiona'),
(100, 17, 57, -0.33, 'optiona'),
(100, 17, 58, 1, 'optionc'),
(100, 17, 61, 2, 'optionb'),
(100, 17, 64, -0.66, 'optiona'),
(100, 17, 65, -0.66, 'optiona'),
(100, 18, 1, -0.33, 'optionb'),
(100, 18, 2, 1, 'optiond'),
(100, 18, 3, 1, 'optionb'),
(100, 18, 4, 1, 'optiona'),
(100, 18, 6, 1, 'optionc'),
(100, 18, 7, 1, 'optionb'),
(100, 18, 8, 1, 'optionb'),
(100, 18, 9, 1, 'optiond'),
(100, 18, 12, 1, 'optiona'),
(100, 18, 14, 1, 'optionc'),
(100, 18, 15, 1, 'optionc'),
(100, 18, 16, 1, 'optionc'),
(100, 18, 19, 1, 'optionc'),
(100, 18, 22, 1, 'optiond'),
(100, 18, 23, 1, 'optiond'),
(100, 18, 24, 1, 'optionc'),
(100, 18, 25, 1, 'optionc'),
(100, 18, 26, 2, 'optionb'),
(100, 18, 27, 2, 'optiond'),
(100, 18, 28, 2, 'optiona'),
(100, 18, 29, 2, 'optiond'),
(100, 18, 30, 2, 'optionc'),
(100, 18, 32, 2, 'optionb'),
(100, 18, 33, 2, 'optiond'),
(100, 18, 34, 2, 'optiona'),
(100, 18, 35, -0.66, 'optiona'),
(100, 18, 36, 2, 'optiona'),
(100, 18, 37, 2, 'optionc'),
(100, 18, 38, 2, 'optionb'),
(100, 18, 39, 2, 'optiona'),
(100, 18, 42, 2, 'optionb'),
(100, 18, 45, -0.66, 'optionc'),
(100, 18, 47, 2, 'optiond'),
(100, 18, 48, 2, 'optionb'),
(100, 18, 49, 2, 'optionc'),
(100, 18, 50, 2, 'optionc'),
(100, 18, 51, -0.66, 'optiond'),
(100, 18, 54, 2, 'optiona'),
(100, 18, 56, 1, 'optione'),
(100, 18, 61, 2, 'optionb'),
(100, 18, 64, -0.66, 'optiona'),
(100, 18, 65, 2, 'optiond'),
(101, 7, 1, 1, 'optionc'),
(101, 7, 2, -0.33, 'optionb'),
(101, 7, 3, -0.33, 'optiond'),
(101, 7, 4, 1, 'optiond'),
(101, 7, 5, -0.33, 'optionc'),
(101, 7, 6, 1, 'optionb'),
(101, 7, 9, 1, 'optiona'),
(101, 7, 10, 1, 'optionc'),
(101, 7, 11, 1, 'optiona'),
(101, 7, 12, -0.33, 'optiond'),
(101, 7, 13, 1, 'optionc'),
(101, 7, 14, 1, 'optionc'),
(101, 7, 15, 1, 'optionb'),
(101, 7, 16, 1, 'optiona'),
(101, 7, 17, 1, 'optionc'),
(101, 7, 18, 1, 'optiona'),
(101, 7, 19, 1, 'optiond'),
(101, 7, 20, 1, 'optiona'),
(101, 7, 21, 1, 'optiond'),
(101, 7, 22, -0.33, 'optionb'),
(101, 7, 24, 1, 'optiona'),
(101, 7, 26, 2, 'optiona'),
(101, 7, 27, -0.66, 'optiond'),
(101, 7, 30, 2, 'optionc'),
(101, 7, 31, 2, 'optiona'),
(101, 7, 33, 2, 'optiond'),
(101, 7, 35, 2, 'optionc'),
(101, 7, 36, 2, 'optionc'),
(101, 7, 37, -0.66, 'optiona'),
(101, 7, 39, -0.66, 'optiond'),
(101, 7, 40, 2, 'optionb'),
(101, 7, 41, 2, 'optionc'),
(101, 7, 42, 2, 'optionc'),
(101, 7, 44, 2, 'optionb'),
(101, 7, 45, 2, 'optiond'),
(101, 7, 50, 2, 'optionc'),
(101, 7, 51, 2, 'optionb'),
(101, 7, 52, -0.66, 'optionb'),
(101, 7, 53, -0.66, 'optiona'),
(101, 7, 54, 2, 'optiond'),
(101, 7, 56, 1, 'optiona'),
(101, 7, 57, 1, 'optionc'),
(101, 7, 59, 1, 'optiond'),
(101, 7, 60, 1, 'optionc'),
(101, 7, 61, 2, 'optionb'),
(101, 7, 62, 2, 'optionc'),
(101, 7, 64, 2, 'optionc'),
(101, 7, 65, 2, 'optionb'),
(101, 8, 1, 1, 'optione'),
(101, 8, 2, -0.33, 'optionb'),
(101, 8, 3, -0.33, 'optionc'),
(101, 8, 4, 1, 'optiond'),
(101, 8, 6, 1, 'optiond'),
(101, 8, 7, 1, 'optionb'),
(101, 8, 8, -0.33, 'optiond'),
(101, 8, 9, -0.33, 'optionb'),
(101, 8, 10, -0.33, 'optiona'),
(101, 8, 11, 1, 'optiond'),
(101, 8, 12, -0.33, 'optionc'),
(101, 8, 13, 1, 'optionb'),
(101, 8, 14, 1, 'optiona'),
(101, 8, 15, 1, 'optionc'),
(101, 8, 16, 1, 'optionc'),
(101, 8, 17, 1, 'optione'),
(101, 8, 18, -0.33, 'optiond'),
(101, 8, 19, 1, 'optiona'),
(101, 8, 25, -0.33, 'optionc'),
(101, 8, 26, 1, 'optiond'),
(101, 8, 27, 1, 'optiond'),
(101, 8, 29, -0.33, 'optiona'),
(101, 8, 30, 1, 'optionc'),
(101, 8, 31, 1, 'optionc'),
(101, 8, 32, 1, 'optionb'),
(101, 8, 33, 1, 'optiona'),
(101, 8, 34, 1, 'optiond'),
(101, 8, 35, 1, 'optionc'),
(101, 8, 36, 1, 'optionc'),
(101, 8, 37, 1, 'optiond'),
(101, 8, 38, 1, 'optionb'),
(101, 8, 39, 1, 'optiond'),
(101, 8, 40, -0.33, 'optiona'),
(101, 8, 41, 1, 'optiona'),
(101, 8, 42, 1, 'optiond'),
(101, 8, 43, 1, 'optionb'),
(101, 8, 45, -0.33, 'optiona'),
(101, 10, 1, -0.66, 'optionc'),
(101, 10, 2, 2, 'optionb'),
(101, 10, 3, -0.66, 'optionc'),
(101, 10, 6, 2, 'optionb'),
(101, 10, 8, -0.66, 'optionb'),
(101, 10, 9, -0.66, 'optiona'),
(101, 10, 10, -0.66, 'optiona'),
(101, 10, 11, 2, 'optionc'),
(101, 10, 12, 2, 'optionb'),
(101, 10, 13, 2, 'optionc'),
(101, 10, 14, -0.66, 'optionc'),
(101, 10, 15, 2, 'optiond'),
(101, 10, 16, 2, 'optiona'),
(101, 10, 17, 2, 'optionb'),
(101, 10, 19, 2, 'optiona'),
(101, 10, 20, -0.66, 'optionb'),
(101, 10, 21, 2, 'optionb'),
(101, 10, 22, -0.66, 'optionc'),
(101, 10, 23, -0.66, 'optionc'),
(101, 10, 24, -0.66, 'optionc'),
(101, 11, 1, -0.66, 'optionc'),
(101, 11, 3, 2, 'optiona'),
(101, 11, 4, 2, 'optiond'),
(101, 11, 5, 2, 'optionb'),
(101, 11, 6, -0.66, 'optionc'),
(101, 11, 7, -0.66, 'optiona'),
(101, 11, 8, 2, 'optiona'),
(101, 11, 9, 2, 'optionc'),
(101, 11, 10, 2, 'optiona'),
(101, 11, 11, 2, 'optiona'),
(101, 11, 12, 2, 'optiona'),
(101, 11, 13, 2, 'optionb'),
(101, 11, 15, 2, 'optionc'),
(101, 11, 17, 2, 'optiona'),
(101, 11, 18, 2, 'optionb'),
(101, 11, 19, 2, 'optionb'),
(101, 11, 20, 2, 'optiona'),
(101, 11, 21, 2, 'optionc'),
(101, 11, 22, 2, 'optiona'),
(101, 11, 23, 2, 'optionc'),
(101, 11, 24, 2, 'optiona'),
(101, 11, 25, 2, 'optionb'),
(101, 11, 26, 2, 'optionc'),
(101, 11, 27, 2, 'optione'),
(101, 11, 28, -0.66, 'optione'),
(101, 11, 29, 2, 'optiond'),
(101, 11, 30, -0.66, 'optionb'),
(101, 11, 31, -0.66, 'optiond'),
(101, 11, 32, 2, 'optionc'),
(101, 11, 33, -0.66, 'optione'),
(101, 11, 34, 2, 'optiond'),
(101, 11, 35, 2, 'optiond'),
(101, 11, 36, 2, 'optione'),
(101, 11, 37, 2, 'optionb'),
(101, 11, 38, 2, 'optiona'),
(101, 11, 39, 2, 'optiona'),
(101, 11, 40, 2, 'optiond'),
(101, 11, 41, 2, 'optionc'),
(101, 11, 42, 2, 'optione'),
(101, 11, 43, 2, 'optiond'),
(101, 11, 44, -0.66, 'optiond'),
(101, 11, 46, 2, 'optiona'),
(101, 11, 48, 2, 'optiond'),
(101, 11, 49, 2, 'optiond'),
(101, 11, 51, 2, 'optiond'),
(101, 11, 52, 2, 'optionb'),
(101, 11, 53, 2, 'optionc'),
(101, 11, 54, 2, 'optionb'),
(101, 11, 55, -0.66, 'optionc'),
(101, 11, 56, 2, 'optione'),
(101, 11, 57, -0.66, 'optione'),
(101, 11, 58, 2, 'optione'),
(101, 11, 60, 2, 'optiond'),
(101, 12, 1, 2, 'optionc'),
(101, 12, 2, -0.66, 'optionb'),
(101, 12, 3, -0.66, 'optionc'),
(101, 12, 4, 2, 'optionc'),
(101, 12, 6, -0.66, 'optionb'),
(101, 12, 7, 2, 'optionb'),
(101, 12, 8, -0.66, 'optionc'),
(101, 12, 9, 2, 'optiona'),
(101, 12, 10, 2, 'optiond'),
(101, 12, 11, 2, 'optionb'),
(101, 12, 12, 2, 'optionb'),
(101, 12, 13, -0.66, 'optionc'),
(101, 12, 14, 2, 'optiona'),
(101, 12, 15, 2, 'optiond'),
(101, 12, 16, 2, 'optionc'),
(101, 12, 26, 2, 'optionb'),
(101, 12, 27, -0.66, 'optiond'),
(101, 12, 28, 2, 'optiond'),
(101, 12, 31, 2, 'optionc'),
(101, 12, 32, 2, 'optionc'),
(101, 12, 34, 2, 'optiond'),
(101, 12, 35, 2, 'optiond'),
(101, 12, 38, -0.66, 'optionb'),
(101, 12, 40, 2, 'optiona'),
(101, 12, 42, 2, 'optiona'),
(101, 12, 43, 2, 'optiond'),
(101, 12, 44, -0.66, 'optiond'),
(101, 12, 45, 2, 'optiond'),
(101, 12, 46, 2, 'optiond'),
(101, 12, 47, -0.66, 'optiona'),
(101, 12, 48, -0.66, 'optiond'),
(101, 12, 50, 2, 'optionb'),
(101, 12, 51, 2, 'optionc'),
(101, 12, 52, 2, 'optionb'),
(101, 12, 53, 2, 'optiona'),
(101, 12, 54, 2, 'optiona'),
(101, 13, 1, 2, 'optionc'),
(101, 13, 2, 2, 'optionb'),
(101, 13, 3, -0.66, 'optiond'),
(101, 13, 6, -0.66, 'optiona'),
(101, 13, 7, 2, 'optionb'),
(101, 13, 8, 2, 'optionc'),
(101, 13, 9, 2, 'optione'),
(101, 13, 11, 2, 'optiond'),
(101, 13, 24, 2, 'optionc'),
(101, 13, 25, 2, 'optiona'),
(101, 13, 26, 2, 'optiond'),
(101, 13, 27, 2, 'optiond'),
(101, 13, 28, 2, 'optionc'),
(101, 13, 30, 2, 'optiona'),
(101, 13, 32, 2, 'optiona'),
(101, 13, 33, 2, 'optionb'),
(101, 13, 34, 2, 'optiona'),
(101, 13, 35, 2, 'optionc'),
(101, 13, 36, 2, 'optionc'),
(101, 13, 38, 2, 'optionb'),
(101, 13, 39, 2, 'optiona'),
(101, 13, 40, 2, 'optiond'),
(101, 15, 2, 1, 'optiond'),
(101, 15, 3, 1, 'optionc'),
(101, 15, 6, 1, 'optiona'),
(101, 15, 8, 1, 'optiona'),
(101, 15, 9, 1, 'optionb'),
(101, 15, 10, 1, 'optiona'),
(101, 15, 11, 1, 'optiond'),
(101, 15, 12, 1, 'optionc'),
(101, 15, 13, 1, 'optionb'),
(101, 15, 14, 1, 'optionc'),
(101, 15, 15, 1, 'optiond'),
(101, 15, 18, 1, 'optionb'),
(101, 15, 19, 1, 'optionc'),
(101, 15, 20, 1, 'optionb'),
(101, 15, 21, 1, 'optiona'),
(101, 15, 22, 1, 'optionb'),
(101, 15, 23, 1, 'optiona'),
(101, 15, 24, 1, 'optiona'),
(101, 15, 25, 1, 'optiond'),
(101, 15, 26, 2, 'optiona'),
(101, 15, 27, 2, 'optiona'),
(101, 15, 28, 2, 'optiond'),
(101, 15, 30, -0.66, 'optiond'),
(101, 15, 31, -0.66, 'optiond'),
(101, 15, 32, 2, 'optiona'),
(101, 15, 33, 2, 'optionc'),
(101, 15, 35, 2, 'optionc'),
(101, 15, 36, 2, 'optiond'),
(101, 15, 37, 2, 'optionb'),
(101, 15, 39, 2, 'optionb'),
(101, 15, 40, 2, 'optiond'),
(101, 15, 41, 2, 'optionc'),
(101, 15, 42, 2, 'optiona'),
(101, 15, 43, 2, 'optiona'),
(101, 15, 44, 2, 'optiond'),
(101, 15, 47, 2, 'optiond'),
(101, 15, 50, 2, 'optiond'),
(101, 15, 51, 2, 'optionb'),
(101, 15, 52, 2, 'optionc'),
(101, 15, 54, 2, 'optionc'),
(101, 15, 55, 2, 'optionb'),
(101, 15, 56, -0.33, 'optionb'),
(101, 15, 57, 1, 'optionb'),
(101, 15, 58, 1, 'optiond'),
(101, 15, 59, 1, 'optiond'),
(101, 15, 60, 1, 'optiona'),
(101, 15, 62, -0.66, 'optiond'),
(101, 15, 63, 2, 'optiond'),
(101, 15, 64, 2, 'optiond'),
(101, 16, 1, -0.33, 'optiond'),
(101, 16, 3, 1, 'optiond'),
(101, 16, 4, 1, 'optiond'),
(101, 16, 5, 1, 'optiond'),
(101, 16, 6, 1, 'optionb'),
(101, 16, 7, -0.33, 'optiona'),
(101, 16, 9, 1, 'optionc'),
(101, 16, 10, 1, 'optionc'),
(101, 16, 14, -0.33, 'optiona'),
(101, 16, 16, 1, 'optiond'),
(101, 16, 20, -0.33, 'optionb'),
(101, 16, 21, 1, 'optiond'),
(101, 16, 22, 1, 'optionb'),
(101, 16, 26, 2, 'optiona'),
(101, 16, 29, -0.66, 'optiona'),
(101, 16, 30, 2, 'optiond'),
(101, 16, 32, 2, 'optiond'),
(101, 16, 33, -0.66, 'optionb'),
(101, 16, 35, 2, 'optionb'),
(101, 16, 37, 2, 'optionb'),
(101, 16, 38, 2, 'optionb'),
(101, 16, 43, 2, 'optiona'),
(101, 16, 44, 2, 'optiond'),
(101, 16, 45, 2, 'optiona'),
(101, 16, 47, 2, 'optionc'),
(101, 16, 50, 2, 'optiona'),
(101, 16, 51, -0.66, 'optionb'),
(101, 16, 52, 2, 'optiona'),
(101, 16, 53, -0.66, 'optiond'),
(101, 16, 56, 1, 'optiond'),
(101, 16, 61, 2, 'optionb'),
(101, 16, 62, -0.66, 'optiona'),
(101, 16, 63, -0.66, 'optiond'),
(101, 16, 64, 2, 'optionb'),
(101, 17, 1, -0.33, 'optionb'),
(101, 17, 2, 1, 'optionb'),
(101, 17, 3, 1, 'optionb'),
(101, 17, 5, 1, 'optionc'),
(101, 17, 6, 1, 'optiona'),
(101, 17, 8, 1, 'optiona'),
(101, 17, 9, -0.33, 'optiona'),
(101, 17, 10, -0.33, 'optionc'),
(101, 17, 11, 1, 'optiond'),
(101, 17, 13, 1, 'optionb'),
(101, 17, 14, 1, 'optionc'),
(101, 17, 16, 1, 'optionb'),
(101, 17, 18, -0.33, 'optiond'),
(101, 17, 19, 1, 'optionb'),
(101, 17, 20, -0.33, 'optionb'),
(101, 17, 22, 1, 'optionb'),
(101, 17, 23, 1, 'optiond'),
(101, 17, 25, 1, 'optionb'),
(101, 17, 26, 2, 'optionc'),
(101, 17, 28, 2, 'optiond'),
(101, 17, 30, 2, 'optiona'),
(101, 17, 31, 2, 'optiond'),
(101, 17, 32, 2, 'optiona'),
(101, 17, 33, 2, 'optiona'),
(101, 17, 34, 2, 'optiond'),
(101, 17, 35, 2, 'optionb'),
(101, 17, 37, 2, 'optionc'),
(101, 17, 38, -0.66, 'optiond'),
(101, 17, 41, 2, 'optionc'),
(101, 17, 42, 2, 'optionb'),
(101, 17, 44, 2, 'optionb'),
(101, 17, 45, 2, 'optionb'),
(101, 17, 46, -0.66, 'optionc'),
(101, 17, 47, -0.66, 'optionb'),
(101, 17, 48, 2, 'optiond'),
(101, 17, 49, -0.66, 'optiond'),
(101, 17, 50, -0.66, 'optionc'),
(101, 17, 51, 2, 'optionc'),
(101, 17, 52, 2, 'optiond'),
(101, 17, 53, 2, 'optiona'),
(101, 17, 54, 2, 'optiond'),
(101, 17, 55, 2, 'optiona'),
(101, 17, 56, -0.33, 'optiond'),
(101, 17, 58, -0.33, 'optionb'),
(101, 17, 59, -0.33, 'optionc'),
(101, 17, 61, 2, 'optionb'),
(101, 17, 62, 2, 'optionc'),
(101, 17, 65, 2, 'optiond'),
(101, 18, 2, 1, 'optiond'),
(101, 18, 3, 1, 'optionb'),
(101, 18, 4, 1, 'optiona'),
(101, 18, 6, 1, 'optionc'),
(101, 18, 7, 1, 'optionb'),
(101, 18, 8, -0.33, 'optiond'),
(101, 18, 9, 1, 'optiond'),
(101, 18, 10, -0.33, 'optiona'),
(101, 18, 11, 1, 'optionb'),
(101, 18, 12, 1, 'optiona'),
(101, 18, 13, 1, 'optiond'),
(101, 18, 15, 1, 'optionc'),
(101, 18, 17, 1, 'optionb'),
(101, 18, 19, 1, 'optionc'),
(101, 18, 20, 1, 'optionb'),
(101, 18, 21, -0.33, 'optionc'),
(101, 18, 22, 1, 'optiond'),
(101, 18, 23, -0.33, 'optiona'),
(101, 18, 24, 1, 'optionc'),
(101, 18, 25, 1, 'optionc'),
(101, 18, 26, 2, 'optionb'),
(101, 18, 27, 2, 'optiond'),
(101, 18, 28, 2, 'optiona'),
(101, 18, 29, 2, 'optiond'),
(101, 18, 30, 2, 'optionc'),
(101, 18, 31, 2, 'optiona'),
(101, 18, 32, 2, 'optionb'),
(101, 18, 33, 2, 'optiond'),
(101, 18, 35, -0.66, 'optionb'),
(101, 18, 36, 2, 'optiona'),
(101, 18, 37, -0.66, 'optiona'),
(101, 18, 38, 2, 'optionb'),
(101, 18, 39, -0.66, 'optiond'),
(101, 18, 42, 2, 'optionb'),
(101, 18, 43, 2, 'optionb'),
(101, 18, 44, 2, 'optionc'),
(101, 18, 45, -0.66, 'optionc'),
(101, 18, 47, 2, 'optiond'),
(101, 18, 48, -0.66, 'optiona'),
(101, 18, 49, 2, 'optionc'),
(101, 18, 51, -0.66, 'optiond'),
(101, 18, 52, -0.66, 'optionc'),
(101, 18, 53, 2, 'optiona'),
(101, 18, 54, 2, 'optiona'),
(101, 18, 55, 2, 'optiond'),
(101, 18, 56, 1, 'optione'),
(101, 18, 58, 1, 'optionc'),
(101, 18, 60, 1, 'optiona'),
(101, 18, 61, 2, 'optionb'),
(101, 18, 62, 2, 'optiond'),
(101, 18, 63, -0.66, 'optionc'),
(101, 18, 64, -0.66, 'optiona'),
(101, 18, 65, 2, 'optiond'),
(102, 7, 1, 1, 'optionc'),
(102, 7, 3, -0.33, 'optiond'),
(102, 7, 4, 1, 'optiond'),
(102, 7, 5, -0.33, 'optionc'),
(102, 7, 6, -0.33, 'optiona'),
(102, 7, 7, 1, 'optionb'),
(102, 7, 8, -0.33, 'optiona'),
(102, 7, 9, 1, 'optiona'),
(102, 7, 11, 1, 'optiona'),
(102, 7, 14, 1, 'optionc'),
(102, 7, 15, 1, 'optionb'),
(102, 7, 16, 1, 'optiona'),
(102, 7, 17, 1, 'optionc'),
(102, 7, 19, 1, 'optiond'),
(102, 7, 20, 1, 'optiona'),
(102, 7, 21, 1, 'optiond'),
(102, 7, 23, -0.33, 'optionb'),
(102, 7, 24, 1, 'optiona'),
(102, 7, 25, 1, 'optionc'),
(102, 7, 26, -0.66, 'optiond'),
(102, 7, 29, -0.66, 'optiona'),
(102, 7, 30, 2, 'optionc'),
(102, 7, 31, 2, 'optiona'),
(102, 7, 33, 2, 'optiond'),
(102, 7, 35, 2, 'optionc'),
(102, 7, 36, 2, 'optionc'),
(102, 7, 38, -0.66, 'optionb'),
(102, 7, 39, -0.66, 'optiona'),
(102, 7, 40, 2, 'optionb'),
(102, 7, 41, 2, 'optionc'),
(102, 7, 42, 2, 'optionc'),
(102, 7, 44, 2, 'optionb'),
(102, 7, 45, 2, 'optiond'),
(102, 7, 47, -0.66, 'optiona'),
(102, 7, 48, 2, 'optionb'),
(102, 7, 51, 2, 'optionb'),
(102, 7, 52, 2, 'optiona'),
(102, 7, 53, 2, 'optionb'),
(102, 7, 54, 2, 'optiond'),
(102, 7, 55, -0.66, 'optiond'),
(102, 7, 56, 1, 'optiona'),
(102, 7, 58, 1, 'optionb'),
(102, 7, 59, 1, 'optiond'),
(102, 7, 62, 2, 'optionc'),
(102, 7, 63, 2, 'optiond'),
(102, 7, 65, 2, 'optionb'),
(102, 8, 2, 1, 'optiona'),
(102, 8, 3, 1, 'optionb'),
(102, 8, 4, -0.33, 'optionc'),
(102, 8, 5, -0.33, 'optiona'),
(102, 8, 6, 1, 'optiond'),
(102, 8, 8, 1, 'optionb'),
(102, 8, 10, 1, 'optionc'),
(102, 8, 11, 1, 'optiond'),
(102, 8, 12, 1, 'optiona'),
(102, 8, 13, 1, 'optionb'),
(102, 8, 16, -0.33, 'optiona'),
(102, 8, 17, -0.33, 'optiond'),
(102, 8, 19, 1, 'optiona'),
(102, 8, 20, -0.33, 'optionc'),
(102, 8, 25, -0.33, 'optione'),
(102, 8, 26, 1, 'optiond'),
(102, 8, 27, 1, 'optiond'),
(102, 8, 30, 1, 'optionc'),
(102, 8, 32, 1, 'optionb'),
(102, 8, 33, 1, 'optiona'),
(102, 8, 34, 1, 'optiond'),
(102, 8, 35, 1, 'optionc'),
(102, 8, 36, 1, 'optionc'),
(102, 8, 37, 1, 'optiond'),
(102, 8, 38, -0.33, 'optionc'),
(102, 8, 39, 1, 'optiond'),
(102, 8, 40, -0.33, 'optiona'),
(102, 8, 41, 1, 'optiona'),
(102, 8, 42, 1, 'optiond'),
(102, 8, 43, 1, 'optionb'),
(102, 8, 44, -0.33, 'optiona'),
(102, 10, 1, 2, 'optione'),
(102, 10, 2, 2, 'optionb'),
(102, 10, 3, 2, 'optiond'),
(102, 10, 4, -0.66, 'optionb'),
(102, 10, 5, 2, 'optionb'),
(102, 10, 6, 2, 'optionb'),
(102, 10, 7, 2, 'optiona'),
(102, 10, 8, -0.66, 'optiona'),
(102, 10, 9, 2, 'optionc'),
(102, 10, 10, 2, 'optiond'),
(102, 10, 11, 2, 'optionc'),
(102, 10, 12, 2, 'optionb'),
(102, 10, 15, 2, 'optiond'),
(102, 10, 16, 2, 'optiona'),
(102, 10, 17, 2, 'optionb'),
(102, 10, 19, 2, 'optiona'),
(102, 10, 21, -0.66, 'optiona'),
(102, 10, 23, -0.66, 'optionc'),
(102, 11, 1, 2, 'optionb'),
(102, 11, 2, 2, 'optionc'),
(102, 11, 3, -0.66, 'optionb'),
(102, 11, 4, -0.66, 'optionb'),
(102, 11, 5, 2, 'optionb'),
(102, 11, 8, 2, 'optiona'),
(102, 11, 9, 2, 'optionc'),
(102, 11, 11, 2, 'optiona'),
(102, 11, 12, 2, 'optiona'),
(102, 11, 15, -0.66, 'optiona'),
(102, 11, 16, 2, 'optionb'),
(102, 11, 21, 2, 'optionc'),
(102, 11, 22, 2, 'optiona'),
(102, 11, 26, -0.66, 'optionb'),
(102, 11, 27, -0.66, 'optiond'),
(102, 11, 29, 2, 'optiond'),
(102, 11, 31, -0.66, 'optionc'),
(102, 11, 32, -0.66, 'optionb'),
(102, 11, 35, 2, 'optiond'),
(102, 11, 37, -0.66, 'optiond'),
(102, 11, 38, -0.66, 'optiond'),
(102, 11, 40, -0.66, 'optionb'),
(102, 11, 41, 2, 'optionc'),
(102, 11, 42, 2, 'optione'),
(102, 11, 43, 2, 'optiond'),
(102, 11, 44, 2, 'optionb'),
(102, 11, 46, 2, 'optiona'),
(102, 11, 48, 2, 'optiond'),
(102, 11, 49, 2, 'optiond'),
(102, 11, 51, 2, 'optiond'),
(102, 11, 52, 2, 'optionb'),
(102, 11, 53, 2, 'optionc'),
(102, 11, 54, -0.66, 'optione'),
(102, 11, 55, -0.66, 'optionc'),
(102, 11, 56, 2, 'optione'),
(102, 11, 57, 2, 'optionc'),
(102, 11, 58, 2, 'optione'),
(102, 11, 60, 2, 'optiond'),
(102, 12, 1, -0.66, 'optiond'),
(102, 12, 2, -0.66, 'optionb'),
(102, 12, 4, 2, 'optionc'),
(102, 12, 5, -0.66, 'optionb'),
(102, 12, 6, -0.66, 'optiona'),
(102, 12, 7, 2, 'optionb'),
(102, 12, 8, 2, 'optionb'),
(102, 12, 9, 2, 'optiona'),
(102, 12, 10, 2, 'optiond'),
(102, 12, 12, -0.66, 'optiona'),
(102, 12, 13, 2, 'optionb'),
(102, 12, 14, 2, 'optiona'),
(102, 12, 15, 2, 'optiond'),
(102, 12, 16, 2, 'optionc'),
(102, 12, 17, -0.66, 'optiond'),
(102, 12, 18, -0.66, 'optionc'),
(102, 12, 19, 2, 'optionb'),
(102, 12, 20, 2, 'optionb'),
(102, 12, 21, 2, 'optiona'),
(102, 12, 22, 2, 'optiond'),
(102, 12, 23, 2, 'optionb'),
(102, 12, 24, 2, 'optiona'),
(102, 12, 25, 2, 'optionc'),
(102, 12, 28, 2, 'optiond'),
(102, 12, 29, -0.66, 'optiond'),
(102, 12, 30, -0.66, 'optiond'),
(102, 12, 31, 2, 'optionc'),
(102, 12, 32, 2, 'optionc'),
(102, 12, 34, 2, 'optiond'),
(102, 12, 35, -0.66, 'optionc'),
(102, 12, 36, 2, 'optionc'),
(102, 12, 38, 2, 'optionc'),
(102, 12, 40, 2, 'optiona'),
(102, 12, 41, 2, 'optionb'),
(102, 12, 43, -0.66, 'optionc'),
(102, 12, 45, -0.66, 'optionc'),
(102, 12, 46, -0.66, 'optionc'),
(102, 12, 47, 2, 'optionc'),
(102, 12, 48, -0.66, 'optionc'),
(102, 12, 50, 2, 'optionb'),
(102, 12, 51, 2, 'optionc'),
(102, 12, 52, 2, 'optionb'),
(102, 13, 1, -0.66, 'optiond'),
(102, 13, 7, -0.66, 'optiond'),
(102, 13, 8, 2, 'optionc'),
(102, 13, 10, 2, 'optione'),
(102, 13, 11, 2, 'optiond'),
(102, 13, 12, 2, 'optiona'),
(102, 13, 13, 2, 'optiond'),
(102, 13, 14, 2, 'optionb'),
(102, 13, 20, -0.66, 'optiond'),
(102, 13, 27, 2, 'optiond'),
(102, 13, 28, 2, 'optionc'),
(102, 13, 29, -0.66, 'optiond'),
(102, 13, 30, 2, 'optiona'),
(102, 13, 31, 2, 'optiond'),
(102, 13, 32, 2, 'optiona'),
(102, 13, 35, 2, 'optionc'),
(102, 13, 36, 2, 'optionc'),
(102, 13, 38, 2, 'optionb'),
(102, 13, 39, 2, 'optiona'),
(102, 13, 40, 2, 'optiond'),
(102, 15, 1, -0.33, 'optiond'),
(102, 15, 2, 1, 'optiond'),
(102, 15, 3, 1, 'optionc'),
(102, 15, 6, 1, 'optiona'),
(102, 15, 10, 1, 'optiona'),
(102, 15, 11, 1, 'optiond'),
(102, 15, 14, -0.33, 'optionb'),
(102, 15, 16, 1, 'optiond'),
(102, 15, 17, 1, 'optionb'),
(102, 15, 18, -0.33, 'optionc'),
(102, 15, 19, -0.33, 'optionb'),
(102, 15, 20, 1, 'optionb'),
(102, 15, 21, -0.33, 'optionb'),
(102, 15, 22, 1, 'optionb'),
(102, 15, 23, 1, 'optiona'),
(102, 15, 24, 1, 'optiona'),
(102, 15, 25, 1, 'optiond'),
(102, 15, 30, 2, 'optionb'),
(102, 15, 31, 2, 'optiona'),
(102, 15, 33, 2, 'optionc'),
(102, 15, 35, 2, 'optionc'),
(102, 15, 36, -0.66, 'optionb'),
(102, 15, 37, 2, 'optionb'),
(102, 15, 39, -0.66, 'optiond'),
(102, 15, 40, 2, 'optiond'),
(102, 15, 43, 2, 'optiona'),
(102, 15, 50, 2, 'optiond'),
(102, 15, 51, 2, 'optionb'),
(102, 15, 52, 2, 'optionc'),
(102, 15, 53, 2, 'optionc'),
(102, 15, 54, 2, 'optionc'),
(102, 15, 55, -0.66, 'optiona'),
(102, 15, 56, -0.33, 'optionb'),
(102, 15, 58, 1, 'optiond'),
(102, 15, 59, 1, 'optiond'),
(102, 15, 60, 1, 'optiona'),
(102, 15, 61, -0.66, 'optiona'),
(102, 15, 62, 2, 'optionb'),
(102, 15, 63, -0.66, 'optionc'),
(102, 15, 64, 2, 'optiond'),
(102, 15, 65, 2, 'optionb'),
(102, 16, 1, 1, 'optionc'),
(102, 16, 4, 1, 'optiond'),
(102, 16, 5, 1, 'optiond'),
(102, 16, 10, 1, 'optionc'),
(102, 16, 11, -0.33, 'optionc'),
(102, 16, 15, -0.33, 'optiona'),
(102, 16, 16, 1, 'optiond'),
(102, 16, 18, -0.33, 'optionb'),
(102, 16, 19, 1, 'optiond'),
(102, 16, 20, 1, 'optiona'),
(102, 16, 21, -0.33, 'optiona'),
(102, 16, 22, -0.33, 'optionc'),
(102, 16, 24, -0.33, 'optiond'),
(102, 16, 30, -0.66, 'optionc'),
(102, 16, 32, -0.66, 'optionb'),
(102, 16, 33, 2, 'optiond'),
(102, 16, 37, 2, 'optionb'),
(102, 16, 43, 2, 'optiona'),
(102, 16, 44, 2, 'optiond'),
(102, 16, 45, -0.66, 'optiond'),
(102, 16, 46, -0.66, 'optiond'),
(102, 17, 2, 1, 'optionb'),
(102, 17, 3, 1, 'optionb'),
(102, 17, 4, 1, 'optionc'),
(102, 17, 5, 1, 'optionc'),
(102, 17, 6, 1, 'optiona'),
(102, 17, 8, -0.33, 'optionc'),
(102, 17, 9, -0.33, 'optiona'),
(102, 17, 10, 1, 'optiona'),
(102, 17, 11, -0.33, 'optionb'),
(102, 17, 12, 1, 'optiona'),
(102, 17, 13, 1, 'optionb'),
(102, 17, 14, 1, 'optionc'),
(102, 17, 20, -0.33, 'optionb'),
(102, 17, 21, 1, 'optionc'),
(102, 17, 22, -0.33, 'optiona'),
(102, 17, 23, 1, 'optiond'),
(102, 17, 25, 1, 'optionb'),
(102, 17, 26, 2, 'optionc'),
(102, 17, 30, 2, 'optiona'),
(102, 17, 33, 2, 'optiona'),
(102, 17, 35, 2, 'optionb'),
(102, 17, 37, 2, 'optionc'),
(102, 17, 38, -0.66, 'optiona'),
(102, 17, 42, 2, 'optionb'),
(102, 17, 45, 2, 'optionb'),
(102, 17, 46, -0.66, 'optionc'),
(102, 17, 50, 2, 'optiond'),
(102, 17, 51, -0.66, 'optiona'),
(102, 17, 52, 2, 'optiond'),
(102, 17, 53, 2, 'optiona'),
(102, 17, 54, 2, 'optiond'),
(102, 17, 55, 2, 'optiona'),
(102, 17, 56, -0.33, 'optionb'),
(102, 17, 57, -0.33, 'optiona'),
(102, 17, 58, 1, 'optionc'),
(102, 17, 60, -0.33, 'optiona'),
(102, 17, 63, -0.66, 'optionb'),
(102, 17, 65, -0.66, 'optiona'),
(102, 18, 2, 1, 'optiond'),
(102, 18, 3, 1, 'optionb'),
(102, 18, 4, 1, 'optiona'),
(102, 18, 5, -0.33, 'optiona'),
(102, 18, 6, 1, 'optionc'),
(102, 18, 7, 1, 'optionb'),
(102, 18, 8, -0.33, 'optionc'),
(102, 18, 9, -0.33, 'optionb'),
(102, 18, 10, 1, 'optionb'),
(102, 18, 11, 1, 'optionb'),
(102, 18, 12, 1, 'optiona'),
(102, 18, 13, 1, 'optiond'),
(102, 18, 14, 1, 'optionc'),
(102, 18, 15, 1, 'optionc'),
(102, 18, 16, -0.33, 'optionb'),
(102, 18, 17, 1, 'optionb'),
(102, 18, 18, 1, 'optiona'),
(102, 18, 19, -0.33, 'optiona'),
(102, 18, 20, 1, 'optionb'),
(102, 18, 21, 1, 'optiond'),
(102, 18, 22, 1, 'optiond'),
(102, 18, 23, -0.33, 'optionb'),
(102, 18, 24, 1, 'optionc'),
(102, 18, 25, 1, 'optionc'),
(102, 18, 26, 2, 'optionb'),
(102, 18, 28, 2, 'optiona'),
(102, 18, 30, 2, 'optionc'),
(102, 18, 32, -0.66, 'optionc'),
(102, 18, 33, 2, 'optiond'),
(102, 18, 40, -0.66, 'optionc'),
(102, 18, 42, -0.66, 'optiona'),
(102, 18, 45, -0.66, 'optionc'),
(102, 18, 47, -0.66, 'optiona'),
(102, 18, 48, 2, 'optionb'),
(102, 18, 49, -0.66, 'optiona'),
(102, 18, 50, 2, 'optionc'),
(102, 18, 51, -0.66, 'optionb'),
(102, 18, 52, -0.66, 'optionb'),
(102, 18, 53, -0.66, 'optiond'),
(102, 18, 54, 2, 'optiona'),
(102, 18, 55, -0.66, 'optionc'),
(102, 18, 57, 1, 'optionb'),
(102, 18, 58, -0.33, 'optiona'),
(102, 18, 59, -0.33, 'optiond'),
(102, 18, 60, 1, 'optiona'),
(102, 18, 64, -0.66, 'optionc'),
(102, 18, 65, 2, 'optiond'),
(104, 11, 1, -0.66, 'optionc'),
(104, 11, 2, -0.66, 'optiond'),
(104, 11, 3, 2, 'optiona'),
(104, 11, 4, 2, 'optiond'),
(104, 11, 5, 2, 'optionb'),
(104, 11, 6, 2, 'optionb'),
(104, 11, 10, 2, 'optiona'),
(104, 11, 11, 2, 'optiona'),
(104, 11, 12, 2, 'optiona'),
(104, 11, 15, -0.66, 'optiona'),
(104, 11, 16, -0.66, 'optionc'),
(104, 11, 17, -0.66, 'optionb'),
(104, 11, 18, 2, 'optionb'),
(104, 11, 19, 2, 'optionb'),
(104, 11, 20, -0.66, 'optionc'),
(104, 11, 21, 2, 'optionc'),
(104, 11, 22, -0.66, 'optionb'),
(104, 11, 23, -0.66, 'optionb'),
(104, 11, 25, 2, 'optionb'),
(104, 11, 26, 2, 'optionc'),
(104, 11, 27, 2, 'optione'),
(104, 11, 29, 2, 'optiond'),
(104, 11, 30, -0.66, 'optionb'),
(104, 11, 31, 2, 'optione'),
(104, 11, 32, -0.66, 'optione'),
(104, 11, 33, -0.66, 'optione'),
(104, 11, 34, -0.66, 'optiona'),
(104, 11, 35, -0.66, 'optione'),
(104, 11, 36, -0.66, 'optionc'),
(104, 11, 37, 2, 'optionb'),
(104, 11, 38, -0.66, 'optione'),
(104, 11, 39, 2, 'optiona'),
(104, 11, 40, -0.66, 'optionc'),
(104, 11, 41, 2, 'optionc'),
(104, 11, 42, 2, 'optione'),
(104, 11, 43, 2, 'optiond'),
(104, 11, 45, -0.66, 'optionc'),
(104, 11, 46, -0.66, 'optione'),
(104, 11, 48, 2, 'optiond'),
(104, 11, 49, 2, 'optiond'),
(104, 11, 51, 2, 'optiond'),
(104, 11, 53, -0.66, 'optione'),
(104, 11, 54, 2, 'optionb'),
(104, 11, 55, -0.66, 'optionc'),
(104, 11, 56, 2, 'optione'),
(104, 11, 57, -0.66, 'optionb'),
(104, 11, 59, 2, 'optiona'),
(104, 11, 60, 2, 'optiond'),
(105, 7, 1, -0.33, 'optionc'),
(105, 7, 4, 1, 'optiond'),
(105, 7, 5, -0.33, 'optionb'),
(105, 7, 8, 1, 'optionb'),
(105, 7, 9, 1, 'optiona'),
(105, 7, 10, 1, 'optionc'),
(105, 7, 11, 1, 'optiona'),
(105, 7, 14, 1, 'optionc'),
(105, 7, 15, 1, 'optionb'),
(105, 7, 16, 1, 'optiona'),
(105, 7, 17, 1, 'optionc'),
(105, 7, 19, 1, 'optiond'),
(105, 7, 20, 1, 'optiona'),
(105, 7, 22, 1, 'optiond'),
(105, 7, 24, 1, 'optiona'),
(105, 7, 25, 1, 'optionc'),
(105, 7, 26, 2, 'optiona'),
(105, 7, 27, -0.66, 'optiona'),
(105, 7, 28, 2, 'optiona'),
(105, 7, 31, 2, 'optiona'),
(105, 7, 34, -0.66, 'optionc'),
(105, 7, 35, 2, 'optionc'),
(105, 7, 36, -0.66, 'optiona'),
(105, 7, 39, -0.66, 'optiona'),
(105, 7, 40, 2, 'optionb'),
(105, 7, 41, 2, 'optionc'),
(105, 7, 42, 2, 'optionc'),
(105, 7, 44, 2, 'optionb'),
(105, 7, 45, 2, 'optiond'),
(105, 7, 47, 2, 'optionb'),
(105, 7, 48, 2, 'optionb'),
(105, 7, 49, -0.66, 'optiona'),
(105, 7, 52, -0.66, 'optionb'),
(105, 7, 53, -0.66, 'optiona'),
(105, 7, 54, 2, 'optiond'),
(105, 7, 56, -0.33, 'optiona'),
(105, 7, 58, 1, 'optionb'),
(105, 7, 59, 1, 'optiond'),
(105, 7, 62, 2, 'optionc'),
(105, 7, 63, 2, 'optiond'),
(105, 7, 64, 2, 'optionc'),
(105, 7, 65, 2, 'optionb'),
(105, 8, 4, 1, 'optiond'),
(105, 8, 5, -0.33, 'optiona'),
(105, 8, 6, 1, 'optiond'),
(105, 8, 9, -0.33, 'optionb'),
(105, 8, 10, 1, 'optionc'),
(105, 8, 11, 1, 'optiond'),
(105, 8, 12, -0.33, 'optionc'),
(105, 8, 13, 1, 'optionb'),
(105, 8, 14, 1, 'optiona'),
(105, 8, 16, 1, 'optionc'),
(105, 8, 18, -0.33, 'optiond'),
(105, 8, 19, -0.33, 'optionb'),
(105, 8, 25, 1, 'optiond'),
(105, 8, 26, -0.33, 'optione'),
(105, 8, 27, 1, 'optiond'),
(105, 8, 30, 1, 'optionc'),
(105, 8, 31, -0.33, 'optiona'),
(105, 8, 32, 1, 'optionb'),
(105, 8, 33, -0.33, 'optionb'),
(105, 8, 35, 1, 'optionc'),
(105, 8, 36, 1, 'optionc'),
(105, 8, 37, 1, 'optiond'),
(105, 8, 38, 1, 'optionb'),
(105, 8, 39, 1, 'optiond'),
(105, 8, 40, -0.33, 'optiona'),
(105, 8, 41, 1, 'optiona'),
(105, 8, 42, 1, 'optiond'),
(105, 8, 43, 1, 'optionb'),
(105, 8, 44, -0.33, 'optiona'),
(105, 9, 2, -0.66, 'optiond'),
(105, 9, 4, 2, 'optiona'),
(105, 9, 5, 2, 'optiond'),
(105, 9, 6, 2, 'optiond'),
(105, 9, 9, -0.66, 'optiona'),
(105, 9, 12, -0.66, 'optionc'),
(105, 9, 19, 2, 'optionc'),
(105, 9, 24, 2, 'optionc'),
(105, 9, 30, -0.66, 'optiond'),
(105, 9, 31, -0.66, 'optionc'),
(105, 9, 32, -0.66, 'optiona'),
(105, 9, 35, -0.66, 'optionc'),
(105, 9, 37, 2, 'optionb'),
(105, 9, 39, 2, 'optiond'),
(105, 9, 43, -0.66, 'optiona'),
(105, 9, 46, -0.66, 'optionc'),
(105, 9, 47, -0.66, 'optionb'),
(105, 9, 49, 2, 'optionb'),
(105, 9, 50, -0.66, 'optiona'),
(105, 9, 52, 2, 'optionb'),
(105, 9, 53, -0.66, 'optionb'),
(105, 9, 54, -0.66, 'optionb'),
(105, 11, 1, 2, 'optionb'),
(105, 11, 4, -0.66, 'optiona'),
(105, 11, 5, 2, 'optionb'),
(105, 11, 6, 2, 'optionb'),
(105, 11, 7, 2, 'optionb'),
(105, 11, 8, 2, 'optiona'),
(105, 11, 9, 2, 'optionc'),
(105, 11, 10, -0.66, 'optionb'),
(105, 11, 11, 2, 'optiona'),
(105, 11, 12, -0.66, 'optionc'),
(105, 11, 15, -0.66, 'optiona'),
(105, 11, 17, -0.66, 'optionb'),
(105, 11, 18, -0.66, 'optionc'),
(105, 11, 19, 2, 'optionb'),
(105, 11, 20, -0.66, 'optionb'),
(105, 11, 22, -0.66, 'optionb'),
(105, 11, 25, 2, 'optionb'),
(105, 11, 26, 2, 'optionc'),
(105, 11, 27, 2, 'optione'),
(105, 11, 28, 2, 'optiona'),
(105, 11, 31, 2, 'optione'),
(105, 11, 32, -0.66, 'optione'),
(105, 11, 33, -0.66, 'optione'),
(105, 11, 35, 2, 'optiond'),
(105, 11, 36, 2, 'optione'),
(105, 11, 37, -0.66, 'optionc'),
(105, 11, 38, 2, 'optiona'),
(105, 11, 39, -0.66, 'optiond'),
(105, 11, 40, 2, 'optiond'),
(105, 11, 42, -0.66, 'optiona'),
(105, 11, 44, 2, 'optionb'),
(105, 11, 45, 2, 'optiona'),
(105, 11, 48, 2, 'optiond'),
(105, 11, 51, 2, 'optiond'),
(105, 11, 52, -0.66, 'optionc'),
(105, 11, 53, 2, 'optionc'),
(105, 11, 54, -0.66, 'optione'),
(105, 11, 55, -0.66, 'optione'),
(105, 11, 56, 2, 'optione'),
(105, 11, 57, 2, 'optionc'),
(105, 11, 58, -0.66, 'optiond'),
(105, 11, 59, -0.66, 'optionc'),
(105, 11, 60, -0.66, 'optione'),
(105, 12, 1, 2, 'optionc'),
(105, 12, 6, -0.66, 'optiona'),
(105, 12, 7, -0.66, 'optiond'),
(105, 12, 10, 2, 'optiond'),
(105, 12, 14, -0.66, 'optiond'),
(105, 12, 15, 2, 'optiond'),
(105, 12, 16, -0.66, 'optiond'),
(105, 12, 26, 2, 'optionb'),
(105, 12, 30, -0.66, 'optiona'),
(105, 12, 31, 2, 'optionc'),
(105, 12, 32, 2, 'optionc'),
(105, 12, 34, -0.66, 'optionb'),
(105, 12, 35, -0.66, 'optionc'),
(105, 12, 37, -0.66, 'optiond'),
(105, 12, 38, 2, 'optionc'),
(105, 12, 41, 2, 'optionb'),
(105, 12, 45, 2, 'optiond'),
(105, 12, 46, 2, 'optiond'),
(105, 12, 47, -0.66, 'optiond'),
(105, 12, 48, -0.66, 'optionc'),
(105, 12, 50, 2, 'optionb'),
(105, 12, 51, 2, 'optionc'),
(105, 12, 52, 2, 'optionb'),
(105, 12, 53, 2, 'optiona'),
(105, 12, 54, 2, 'optiona'),
(105, 13, 1, -0.66, 'optiond'),
(105, 13, 3, 2, 'optiona'),
(105, 13, 6, -0.66, 'optiona'),
(105, 13, 8, 2, 'optionc'),
(105, 13, 9, -0.66, 'optiond'),
(105, 13, 10, 2, 'optione'),
(105, 13, 11, 2, 'optiond'),
(105, 13, 13, -0.66, 'optiona'),
(105, 13, 24, -0.66, 'optiond'),
(105, 13, 25, 2, 'optiona'),
(105, 13, 28, 2, 'optionc'),
(105, 13, 30, 2, 'optiona'),
(105, 13, 32, 2, 'optiona'),
(105, 13, 34, -0.66, 'optiond'),
(105, 13, 35, 2, 'optionc'),
(105, 13, 36, 2, 'optionc'),
(105, 13, 38, 2, 'optionb'),
(105, 13, 39, 2, 'optiona'),
(105, 13, 40, -0.66, 'optiona'),
(107, 8, 1, 1, 'optione'),
(107, 8, 2, -0.33, 'optionb'),
(107, 8, 3, 1, 'optionb'),
(107, 8, 4, -0.33, 'optionb'),
(107, 8, 5, 1, 'optionc'),
(107, 8, 6, 1, 'optiond'),
(107, 8, 7, 1, 'optionb'),
(107, 8, 9, 1, 'optiond'),
(107, 8, 10, 1, 'optionc'),
(107, 8, 11, 1, 'optiond'),
(107, 8, 12, 1, 'optiona'),
(107, 8, 13, 1, 'optionb'),
(107, 8, 14, 1, 'optiona'),
(107, 8, 15, 1, 'optionc');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(107, 8, 16, 1, 'optionc'),
(107, 8, 17, -0.33, 'optionb'),
(107, 8, 18, 1, 'optione'),
(107, 8, 19, 1, 'optiona'),
(107, 8, 22, -0.33, 'optionc'),
(107, 8, 23, 1, 'optiona'),
(107, 8, 24, 1, 'optiona'),
(107, 8, 25, 1, 'optiond'),
(107, 8, 26, 1, 'optiond'),
(107, 8, 27, 1, 'optiond'),
(107, 8, 30, 1, 'optionc'),
(107, 8, 31, 1, 'optionc'),
(107, 8, 32, 1, 'optionb'),
(107, 8, 33, 1, 'optiona'),
(107, 8, 34, 1, 'optiond'),
(107, 8, 35, 1, 'optionc'),
(107, 8, 36, 1, 'optionc'),
(107, 8, 37, 1, 'optiond'),
(107, 8, 38, -0.33, 'optionc'),
(107, 8, 39, 1, 'optiond'),
(107, 8, 40, -0.33, 'optiona'),
(107, 8, 41, 1, 'optiona'),
(107, 8, 42, 1, 'optiond'),
(107, 8, 43, 1, 'optionb'),
(107, 8, 44, -0.33, 'optiona'),
(107, 8, 45, 1, 'optiond'),
(107, 10, 1, 2, 'optione'),
(107, 10, 2, 2, 'optionb'),
(107, 10, 3, 2, 'optiond'),
(107, 10, 4, -0.66, 'optionb'),
(107, 10, 5, 2, 'optionb'),
(107, 10, 6, 2, 'optionb'),
(107, 10, 7, -0.66, 'optiond'),
(107, 10, 8, 2, 'optione'),
(107, 10, 9, -0.66, 'optionb'),
(107, 10, 10, -0.66, 'optiona'),
(107, 10, 11, 2, 'optionc'),
(107, 10, 12, 2, 'optionb'),
(107, 10, 13, 2, 'optionc'),
(107, 10, 14, -0.66, 'optiona'),
(107, 10, 15, 2, 'optiond'),
(107, 10, 16, 2, 'optiona'),
(107, 10, 17, 2, 'optionb'),
(107, 10, 18, -0.66, 'optionc'),
(107, 10, 19, 2, 'optiona'),
(107, 10, 21, -0.66, 'optiona'),
(107, 10, 22, 2, 'optionb'),
(107, 10, 23, -0.66, 'optionc'),
(107, 10, 24, -0.66, 'optionc'),
(107, 11, 1, -0.66, 'optionc'),
(107, 11, 2, 2, 'optionc'),
(107, 11, 3, -0.66, 'optionc'),
(107, 11, 4, 2, 'optiond'),
(107, 11, 5, 2, 'optionb'),
(107, 11, 6, 2, 'optionb'),
(107, 11, 7, 2, 'optionb'),
(107, 11, 8, 2, 'optiona'),
(107, 11, 9, 2, 'optionc'),
(107, 11, 10, 2, 'optiona'),
(107, 11, 11, 2, 'optiona'),
(107, 11, 12, 2, 'optiona'),
(107, 11, 15, 2, 'optionc'),
(107, 11, 17, 2, 'optiona'),
(107, 11, 18, 2, 'optionb'),
(107, 11, 19, 2, 'optionb'),
(107, 11, 20, -0.66, 'optionb'),
(107, 11, 21, 2, 'optionc'),
(107, 11, 22, 2, 'optiona'),
(107, 11, 23, -0.66, 'optionb'),
(107, 11, 25, 2, 'optionb'),
(107, 11, 26, 2, 'optionc'),
(107, 11, 27, 2, 'optione'),
(107, 11, 28, -0.66, 'optiond'),
(107, 11, 29, 2, 'optiond'),
(107, 11, 30, 2, 'optiond'),
(107, 11, 31, 2, 'optione'),
(107, 11, 32, -0.66, 'optione'),
(107, 11, 33, -0.66, 'optione'),
(107, 11, 34, 2, 'optiond'),
(107, 11, 35, 2, 'optiond'),
(107, 11, 36, 2, 'optione'),
(107, 11, 37, 2, 'optionb'),
(107, 11, 38, 2, 'optiona'),
(107, 11, 39, 2, 'optiona'),
(107, 11, 40, 2, 'optiond'),
(107, 11, 41, 2, 'optionc'),
(107, 11, 42, 2, 'optione'),
(107, 11, 43, -0.66, 'optionc'),
(107, 11, 44, 2, 'optionb'),
(107, 11, 46, 2, 'optiona'),
(107, 11, 48, 2, 'optiond'),
(107, 11, 49, 2, 'optiond'),
(107, 11, 50, -0.66, 'optione'),
(107, 11, 51, 2, 'optiond'),
(107, 11, 52, 2, 'optionb'),
(107, 11, 53, 2, 'optionc'),
(107, 11, 54, 2, 'optionb'),
(107, 11, 55, -0.66, 'optionc'),
(107, 11, 56, 2, 'optione'),
(107, 11, 57, -0.66, 'optionb'),
(107, 11, 58, 2, 'optione'),
(107, 11, 60, 2, 'optiond'),
(107, 12, 1, 2, 'optionc'),
(107, 12, 2, 2, 'optionc'),
(107, 12, 4, 2, 'optionc'),
(107, 12, 5, 2, 'optiona'),
(107, 12, 6, 2, 'optiond'),
(107, 12, 7, 2, 'optionb'),
(107, 12, 8, 2, 'optionb'),
(107, 12, 9, 2, 'optiona'),
(107, 12, 10, 2, 'optiond'),
(107, 12, 11, -0.66, 'optiona'),
(107, 12, 12, 2, 'optionb'),
(107, 12, 14, 2, 'optiona'),
(107, 12, 15, 2, 'optiond'),
(107, 12, 16, 2, 'optionc'),
(107, 12, 17, 2, 'optionc'),
(107, 12, 18, 2, 'optiond'),
(107, 12, 19, 2, 'optionb'),
(107, 12, 20, 2, 'optionb'),
(107, 12, 21, 2, 'optiona'),
(107, 12, 22, 2, 'optiond'),
(107, 12, 23, 2, 'optionb'),
(107, 12, 25, -0.66, 'optiona'),
(107, 12, 26, -0.66, 'optionc'),
(107, 12, 27, -0.66, 'optiond'),
(107, 12, 28, -0.66, 'optionc'),
(107, 12, 29, 2, 'optiona'),
(107, 12, 30, 2, 'optionb'),
(107, 12, 31, 2, 'optionc'),
(107, 12, 32, 2, 'optionc'),
(107, 12, 34, 2, 'optiond'),
(107, 12, 35, -0.66, 'optionc'),
(107, 12, 36, 2, 'optionc'),
(107, 12, 37, 2, 'optiona'),
(107, 12, 38, -0.66, 'optiona'),
(107, 12, 40, 2, 'optiona'),
(107, 12, 41, 2, 'optionb'),
(107, 12, 45, 2, 'optiond'),
(107, 12, 46, 2, 'optiond'),
(107, 12, 47, 2, 'optionc'),
(107, 12, 48, 2, 'optiona'),
(107, 12, 50, 2, 'optionb'),
(107, 12, 51, 2, 'optionc'),
(107, 12, 52, 2, 'optionb'),
(107, 12, 53, 2, 'optiona'),
(107, 12, 54, 2, 'optiona'),
(107, 13, 1, -0.66, 'optiona'),
(107, 13, 2, 2, 'optionb'),
(107, 13, 3, -0.66, 'optiond'),
(107, 13, 5, 2, 'optionc'),
(107, 13, 6, -0.66, 'optiona'),
(107, 13, 8, 2, 'optionc'),
(107, 13, 9, -0.66, 'optiona'),
(107, 13, 10, -0.66, 'optionc'),
(107, 13, 11, 2, 'optiond'),
(107, 13, 12, 2, 'optiona'),
(107, 13, 13, 2, 'optiond'),
(107, 13, 14, 2, 'optionb'),
(107, 13, 19, 2, 'optionb'),
(107, 13, 22, 2, 'optiona'),
(107, 13, 24, -0.66, 'optiond'),
(107, 13, 25, 2, 'optiona'),
(107, 13, 26, 2, 'optiond'),
(107, 13, 27, 2, 'optiond'),
(107, 13, 28, 2, 'optionc'),
(107, 13, 29, -0.66, 'optione'),
(107, 13, 30, 2, 'optiona'),
(107, 13, 31, 2, 'optiond'),
(107, 13, 32, 2, 'optiona'),
(107, 13, 33, -0.66, 'optiona'),
(107, 13, 34, 2, 'optiona'),
(107, 13, 35, 2, 'optionc'),
(107, 13, 36, 2, 'optionc'),
(107, 13, 38, 2, 'optionb'),
(107, 13, 39, 2, 'optiona'),
(107, 13, 40, 2, 'optiond'),
(107, 15, 2, 1, 'optiond'),
(107, 15, 3, -0.33, 'optiond'),
(107, 15, 4, 1, 'optiona'),
(107, 15, 6, 1, 'optiona'),
(107, 15, 8, 1, 'optiona'),
(107, 15, 9, 1, 'optionb'),
(107, 15, 11, 1, 'optiond'),
(107, 15, 12, 1, 'optionc'),
(107, 15, 13, 1, 'optionb'),
(107, 15, 14, 1, 'optionc'),
(107, 15, 15, 1, 'optiond'),
(107, 15, 16, 1, 'optiond'),
(107, 15, 17, -0.33, 'optiona'),
(107, 15, 18, 1, 'optionb'),
(107, 15, 19, 1, 'optionc'),
(107, 15, 20, 1, 'optionb'),
(107, 15, 21, -0.33, 'optionc'),
(107, 15, 22, 1, 'optionb'),
(107, 15, 23, 1, 'optiona'),
(107, 15, 24, 1, 'optiona'),
(107, 15, 25, 1, 'optiond'),
(107, 15, 26, 2, 'optiona'),
(107, 15, 27, 2, 'optiona'),
(107, 15, 28, -0.66, 'optiona'),
(107, 15, 29, 2, 'optiond'),
(107, 15, 30, 2, 'optionb'),
(107, 15, 31, 2, 'optiona'),
(107, 15, 32, 2, 'optiona'),
(107, 15, 33, 2, 'optionc'),
(107, 15, 35, 2, 'optionc'),
(107, 15, 36, -0.66, 'optiona'),
(107, 15, 37, 2, 'optionb'),
(107, 15, 38, 2, 'optionc'),
(107, 15, 39, -0.66, 'optiona'),
(107, 15, 40, 2, 'optiond'),
(107, 15, 42, 2, 'optiona'),
(107, 15, 43, 2, 'optiona'),
(107, 15, 44, 2, 'optiond'),
(107, 15, 45, 2, 'optiona'),
(107, 15, 47, 2, 'optiond'),
(107, 15, 48, 2, 'optionc'),
(107, 15, 49, -0.66, 'optionb'),
(107, 15, 50, 2, 'optiond'),
(107, 15, 51, -0.66, 'optionc'),
(107, 15, 52, 2, 'optionc'),
(107, 15, 53, 2, 'optionc'),
(107, 15, 54, 2, 'optionc'),
(107, 15, 55, -0.66, 'optionc'),
(107, 15, 59, 1, 'optiond'),
(107, 15, 61, -0.66, 'optiona'),
(107, 15, 62, -0.66, 'optionc'),
(107, 15, 65, -0.66, 'optiond'),
(107, 16, 1, 1, 'optionc'),
(107, 16, 2, -0.33, 'optiona'),
(107, 16, 4, 1, 'optiond'),
(107, 16, 6, 1, 'optionb'),
(107, 16, 7, -0.33, 'optionc'),
(107, 16, 8, 1, 'optiona'),
(107, 16, 9, 1, 'optionc'),
(107, 16, 10, -0.33, 'optionb'),
(107, 16, 11, -0.33, 'optionc'),
(107, 16, 12, -0.33, 'optionc'),
(107, 16, 13, -0.33, 'optiona'),
(107, 16, 14, 1, 'optiond'),
(107, 16, 15, 1, 'optionc'),
(107, 16, 16, -0.33, 'optionc'),
(107, 16, 17, -0.33, 'optiond'),
(107, 16, 19, 1, 'optiond'),
(107, 16, 20, 1, 'optiona'),
(107, 16, 21, -0.33, 'optiona'),
(107, 16, 22, 1, 'optionb'),
(107, 16, 23, -0.33, 'optionb'),
(107, 16, 24, 1, 'optiona'),
(107, 16, 25, 1, 'optionb'),
(107, 16, 26, 2, 'optiona'),
(107, 16, 27, 2, 'optionb'),
(107, 16, 28, -0.66, 'optionc'),
(107, 16, 29, -0.66, 'optiona'),
(107, 16, 30, -0.66, 'optionb'),
(107, 16, 32, -0.66, 'optionc'),
(107, 16, 35, -0.66, 'optiond'),
(107, 16, 36, -0.66, 'optionb'),
(107, 16, 37, 2, 'optionb'),
(107, 16, 40, 2, 'optiona'),
(107, 16, 43, 2, 'optiona'),
(107, 16, 44, 2, 'optiond'),
(107, 16, 45, 2, 'optiona'),
(107, 16, 46, -0.66, 'optiond'),
(107, 16, 47, -0.66, 'optiona'),
(107, 16, 48, 2, 'optiona'),
(107, 16, 50, 2, 'optiona'),
(107, 16, 51, -0.66, 'optionb'),
(107, 16, 56, 1, 'optiond'),
(107, 16, 57, 1, 'optionc'),
(107, 16, 59, -0.33, 'optiond'),
(107, 16, 60, 1, 'optionc'),
(107, 16, 61, 2, 'optionb'),
(107, 16, 62, -0.66, 'optiona'),
(107, 17, 1, -0.33, 'optionb'),
(107, 17, 2, 1, 'optionb'),
(107, 17, 3, 1, 'optionb'),
(107, 17, 4, -0.33, 'optionb'),
(107, 17, 5, 1, 'optionc'),
(107, 17, 6, 1, 'optiona'),
(107, 17, 7, -0.33, 'optionb'),
(107, 17, 8, 1, 'optiona'),
(107, 17, 9, -0.33, 'optiona'),
(107, 17, 10, 1, 'optiona'),
(107, 17, 13, 1, 'optionb'),
(107, 17, 14, -0.33, 'optionb'),
(107, 17, 15, -0.33, 'optionc'),
(107, 17, 18, 1, 'optionb'),
(107, 17, 19, -0.33, 'optionc'),
(107, 17, 20, -0.33, 'optionb'),
(107, 17, 21, 1, 'optionc'),
(107, 17, 22, 1, 'optionb'),
(107, 17, 23, 1, 'optiond'),
(107, 17, 24, -0.33, 'optionc'),
(107, 17, 25, 1, 'optionb'),
(107, 17, 26, 2, 'optionc'),
(107, 17, 28, -0.66, 'optionb'),
(107, 17, 30, 2, 'optiona'),
(107, 17, 32, 2, 'optiona'),
(107, 17, 33, 2, 'optiona'),
(107, 17, 34, 2, 'optiond'),
(107, 17, 35, -0.66, 'optiona'),
(107, 17, 36, 2, 'optiond'),
(107, 17, 37, 2, 'optionc'),
(107, 17, 38, -0.66, 'optiona'),
(107, 17, 39, 2, 'optionb'),
(107, 17, 41, -0.66, 'optionb'),
(107, 17, 42, 2, 'optionb'),
(107, 17, 45, 2, 'optionb'),
(107, 17, 46, 2, 'optionb'),
(107, 17, 47, -0.66, 'optiond'),
(107, 17, 48, 2, 'optiond'),
(107, 17, 49, -0.66, 'optiond'),
(107, 17, 52, 2, 'optiond'),
(107, 17, 53, 2, 'optiona'),
(107, 17, 54, 2, 'optiond'),
(107, 17, 55, -0.66, 'optionb'),
(107, 17, 58, -0.33, 'optionb'),
(107, 17, 61, 2, 'optionb'),
(107, 17, 63, -0.66, 'optionb'),
(107, 17, 64, 2, 'optionb'),
(107, 17, 65, 2, 'optiond'),
(107, 18, 1, 1, 'optiona'),
(107, 18, 2, 1, 'optiond'),
(107, 18, 3, 1, 'optionb'),
(107, 18, 4, 1, 'optiona'),
(107, 18, 6, 1, 'optionc'),
(107, 18, 7, 1, 'optionb'),
(107, 18, 8, -0.33, 'optiond'),
(107, 18, 9, 1, 'optiond'),
(107, 18, 10, -0.33, 'optiond'),
(107, 18, 11, 1, 'optionb'),
(107, 18, 12, 1, 'optiona'),
(107, 18, 13, -0.33, 'optionb'),
(107, 18, 14, 1, 'optionc'),
(107, 18, 15, 1, 'optionc'),
(107, 18, 19, 1, 'optionc'),
(107, 18, 20, -0.33, 'optiona'),
(107, 18, 21, 1, 'optiond'),
(107, 18, 22, 1, 'optiond'),
(107, 18, 24, 1, 'optionc'),
(107, 18, 25, 1, 'optionc'),
(107, 18, 26, 2, 'optionb'),
(107, 18, 27, 2, 'optiond'),
(107, 18, 28, 2, 'optiona'),
(107, 18, 29, 2, 'optiond'),
(107, 18, 31, 2, 'optiona'),
(107, 18, 32, 2, 'optionb'),
(107, 18, 33, 2, 'optiond'),
(107, 18, 34, 2, 'optiona'),
(107, 18, 35, 2, 'optiond'),
(107, 18, 36, 2, 'optiona'),
(107, 18, 38, 2, 'optionb'),
(107, 18, 42, 2, 'optionb'),
(107, 18, 45, -0.66, 'optionc'),
(107, 18, 47, 2, 'optiond'),
(107, 18, 48, -0.66, 'optiona'),
(107, 18, 49, 2, 'optionc'),
(107, 18, 51, -0.66, 'optionc'),
(107, 18, 52, 2, 'optiona'),
(107, 18, 53, -0.66, 'optiond'),
(107, 18, 54, 2, 'optiona'),
(107, 18, 55, -0.66, 'optionc'),
(107, 18, 60, 1, 'optiona'),
(107, 18, 61, 2, 'optionb'),
(107, 18, 62, 2, 'optiond'),
(107, 18, 63, -0.66, 'optionc'),
(107, 18, 64, -0.66, 'optionc'),
(107, 18, 65, 2, 'optiond'),
(108, 7, 1, 1, 'optionc'),
(108, 7, 3, -0.33, 'optiond'),
(108, 7, 4, 1, 'optiond'),
(108, 7, 5, -0.33, 'optionc'),
(108, 7, 6, -0.33, 'optiona'),
(108, 7, 8, -0.33, 'optionc'),
(108, 7, 10, -0.33, 'optionb'),
(108, 7, 11, 1, 'optiona'),
(108, 7, 14, 1, 'optionc'),
(108, 7, 15, 1, 'optionb'),
(108, 7, 16, -0.33, 'optionb'),
(108, 7, 17, 1, 'optionc'),
(108, 7, 18, -0.33, 'optionb'),
(108, 7, 19, -0.33, 'optiona'),
(108, 7, 21, 1, 'optiond'),
(108, 7, 22, -0.33, 'optionb'),
(108, 7, 24, 1, 'optiona'),
(108, 7, 28, 2, 'optiona'),
(108, 7, 31, 2, 'optiona'),
(108, 7, 34, -0.66, 'optiond'),
(108, 7, 35, 2, 'optionc'),
(108, 7, 36, -0.66, 'optione'),
(108, 7, 39, 2, 'optione'),
(108, 7, 40, 2, 'optionb'),
(108, 7, 41, 2, 'optionc'),
(108, 7, 42, -0.66, 'optiond'),
(108, 7, 44, -0.66, 'optiona'),
(108, 7, 45, 2, 'optiond'),
(108, 7, 54, 2, 'optiond'),
(108, 7, 55, -0.66, 'optiond'),
(108, 7, 57, 1, 'optionc'),
(108, 7, 58, 1, 'optionb'),
(108, 7, 59, 1, 'optiond'),
(108, 7, 60, 1, 'optionc'),
(108, 7, 63, 2, 'optiond'),
(108, 7, 65, 2, 'optionb'),
(108, 11, 1, 2, 'optionb'),
(108, 11, 2, -0.66, 'optiond'),
(108, 11, 4, -0.66, 'optionb'),
(108, 11, 6, 2, 'optionb'),
(108, 11, 8, 2, 'optiona'),
(108, 11, 9, 2, 'optionc'),
(108, 11, 11, 2, 'optiona'),
(108, 11, 12, 2, 'optiona'),
(108, 11, 15, 2, 'optionc'),
(108, 11, 17, 2, 'optiona'),
(108, 11, 18, 2, 'optionb'),
(108, 11, 19, -0.66, 'optiona'),
(108, 11, 20, 2, 'optiona'),
(108, 11, 22, 2, 'optiona'),
(108, 11, 24, -0.66, 'optiond'),
(108, 11, 26, 2, 'optionc'),
(108, 11, 27, 2, 'optione'),
(108, 11, 28, -0.66, 'optione'),
(108, 11, 29, 2, 'optiond'),
(108, 11, 30, -0.66, 'optiona'),
(108, 11, 32, -0.66, 'optiona'),
(108, 11, 33, -0.66, 'optione'),
(108, 11, 34, 2, 'optiond'),
(108, 11, 35, 2, 'optiond'),
(108, 11, 36, 2, 'optione'),
(108, 11, 37, -0.66, 'optionc'),
(108, 11, 38, 2, 'optiona'),
(108, 11, 40, -0.66, 'optionb'),
(108, 11, 41, 2, 'optionc'),
(108, 11, 42, -0.66, 'optionc'),
(108, 11, 43, -0.66, 'optionc'),
(108, 11, 45, 2, 'optiona'),
(108, 11, 46, 2, 'optiona'),
(108, 11, 47, 2, 'optione'),
(108, 11, 48, 2, 'optiond'),
(108, 11, 49, 2, 'optiond'),
(108, 11, 50, -0.66, 'optiona'),
(108, 11, 51, 2, 'optiond'),
(108, 11, 52, 2, 'optionb'),
(108, 11, 53, -0.66, 'optione'),
(108, 11, 54, -0.66, 'optione'),
(108, 11, 55, -0.66, 'optionc'),
(108, 11, 56, 2, 'optione'),
(108, 11, 57, -0.66, 'optiona'),
(108, 11, 58, 2, 'optione'),
(108, 11, 60, 2, 'optiond'),
(108, 12, 2, 2, 'optionc'),
(108, 12, 4, -0.66, 'optiona'),
(108, 12, 6, -0.66, 'optiona'),
(108, 12, 7, 2, 'optionb'),
(108, 12, 12, 2, 'optionb'),
(108, 12, 14, 2, 'optiona'),
(108, 12, 15, 2, 'optiond'),
(108, 12, 16, 2, 'optionc'),
(108, 12, 19, 2, 'optionb'),
(108, 12, 20, 2, 'optionb'),
(108, 12, 21, 2, 'optiona'),
(108, 12, 26, 2, 'optionb'),
(108, 12, 27, -0.66, 'optionb'),
(108, 12, 28, -0.66, 'optionb'),
(108, 12, 29, 2, 'optiona'),
(108, 12, 31, 2, 'optionc'),
(108, 12, 32, 2, 'optionc'),
(108, 12, 34, 2, 'optiond'),
(108, 12, 35, -0.66, 'optionc'),
(108, 12, 36, -0.66, 'optionb'),
(108, 12, 38, 2, 'optionc'),
(108, 12, 40, 2, 'optiona'),
(108, 12, 41, 2, 'optionb'),
(108, 12, 42, 2, 'optiona'),
(108, 12, 43, -0.66, 'optionc'),
(108, 12, 44, -0.66, 'optiona'),
(108, 12, 45, 2, 'optiond'),
(108, 12, 46, 2, 'optiond'),
(108, 12, 47, -0.66, 'optiond'),
(108, 12, 48, -0.66, 'optionc'),
(108, 12, 50, 2, 'optionb'),
(108, 12, 52, 2, 'optionb'),
(108, 12, 53, 2, 'optiona'),
(108, 13, 1, -0.66, 'optiond'),
(108, 13, 3, -0.66, 'optiond'),
(108, 13, 8, 2, 'optionc'),
(108, 13, 12, 2, 'optiona'),
(108, 13, 19, -0.66, 'optiond'),
(108, 13, 24, 2, 'optionc'),
(108, 13, 25, 2, 'optiona'),
(108, 13, 27, 2, 'optiond'),
(108, 13, 30, 2, 'optiona'),
(108, 13, 31, 2, 'optiond'),
(108, 13, 32, -0.66, 'optionc'),
(108, 13, 33, 2, 'optionb'),
(108, 13, 34, 2, 'optiona'),
(108, 13, 35, -0.66, 'optione'),
(108, 13, 36, 2, 'optionc'),
(108, 13, 39, 2, 'optiona'),
(108, 13, 40, 2, 'optiond'),
(108, 15, 1, 1, 'optionc'),
(108, 15, 3, -0.33, 'optiond'),
(108, 15, 4, 1, 'optiona'),
(108, 15, 6, 1, 'optiona'),
(108, 15, 8, 1, 'optiona'),
(108, 15, 9, 1, 'optionb'),
(108, 15, 10, -0.33, 'optionb'),
(108, 15, 11, 1, 'optiond'),
(108, 15, 13, 1, 'optionb'),
(108, 15, 14, 1, 'optionc'),
(108, 15, 15, 1, 'optiond'),
(108, 15, 16, 1, 'optiond'),
(108, 15, 17, 1, 'optionb'),
(108, 15, 18, 1, 'optionb'),
(108, 15, 19, 1, 'optionc'),
(108, 15, 20, 1, 'optionb'),
(108, 15, 21, -0.33, 'optionb'),
(108, 15, 22, 1, 'optionb'),
(108, 15, 24, 1, 'optiona'),
(108, 15, 25, 1, 'optiond'),
(108, 15, 27, 2, 'optiona'),
(108, 15, 29, 2, 'optiond'),
(108, 15, 30, -0.66, 'optiond'),
(108, 15, 33, -0.66, 'optiond'),
(108, 15, 36, 2, 'optiond'),
(108, 15, 37, 2, 'optionb'),
(108, 15, 39, -0.66, 'optiona'),
(108, 15, 40, 2, 'optiond'),
(108, 15, 42, 2, 'optiona'),
(108, 15, 43, 2, 'optiona'),
(108, 15, 45, -0.66, 'optionc'),
(108, 15, 47, 2, 'optiond'),
(108, 15, 48, -0.66, 'optiond'),
(108, 15, 52, 2, 'optionc'),
(108, 15, 53, 2, 'optionc'),
(108, 15, 56, -0.33, 'optionb'),
(108, 15, 57, -0.33, 'optionc'),
(108, 15, 58, 1, 'optiond'),
(108, 15, 59, 1, 'optiond'),
(108, 15, 64, 2, 'optiond'),
(109, 4, 1, 1, 'optiona'),
(109, 4, 2, 1, 'optiond'),
(109, 4, 3, 1, 'optionc'),
(109, 4, 4, 1, 'optionc'),
(109, 4, 5, 1, 'optionb'),
(109, 4, 6, 1, 'optiond'),
(109, 4, 7, 1, 'optiond'),
(109, 4, 8, 1, 'optionb'),
(109, 4, 9, 1, 'optionb'),
(109, 4, 10, 1, 'optionc'),
(109, 4, 11, 1, 'optiona'),
(109, 4, 12, 1, 'optionc'),
(109, 4, 13, 1, 'optionb'),
(109, 4, 14, 1, 'optiond'),
(109, 4, 15, 1, 'optiona'),
(109, 4, 16, 1, 'optiona'),
(109, 4, 17, 1, 'optiond'),
(109, 4, 18, 1, 'optionc'),
(109, 4, 19, -0.33, 'optiond'),
(109, 4, 20, 1, 'optiona'),
(109, 4, 21, 2, 'optiond'),
(109, 4, 22, 2, 'optionc'),
(109, 4, 23, 2, 'optionb'),
(109, 4, 24, 2, 'optionc'),
(109, 4, 25, 2, 'optiona'),
(109, 4, 26, 2, 'optionc'),
(109, 4, 27, 2, 'optionc'),
(109, 4, 28, 2, 'optiond'),
(109, 4, 29, 2, 'optionb'),
(109, 4, 30, 2, 'optionc'),
(109, 4, 32, 2, 'optiond'),
(109, 4, 33, -0.66, 'optionb'),
(109, 4, 34, 2, 'optiona'),
(109, 4, 35, -0.66, 'optionb'),
(109, 4, 36, -0.66, 'optionb'),
(109, 4, 37, -0.66, 'optionc'),
(109, 4, 38, -0.66, 'optionc'),
(109, 4, 39, 2, 'optionb'),
(109, 4, 41, 4, 'optionc'),
(109, 4, 42, 4, 'optionc'),
(109, 4, 43, 4, 'optionc'),
(109, 4, 44, -1.33, 'optionc'),
(109, 4, 45, -1.33, 'optionb'),
(109, 4, 46, 4, ''),
(109, 4, 47, 4, 'optionc'),
(109, 4, 48, 4, 'optionb'),
(109, 4, 49, 4, 'optiona'),
(109, 4, 50, 4, 'optionc'),
(109, 7, 1, 1, 'optionc'),
(109, 7, 3, -0.33, 'optionc'),
(109, 7, 5, 1, 'optionb'),
(109, 7, 7, -0.33, 'optionc'),
(109, 7, 8, -0.33, 'optiona'),
(109, 7, 9, 1, 'optiona'),
(109, 7, 10, -0.33, 'optionb'),
(109, 7, 11, 1, 'optiona'),
(109, 7, 15, -0.33, 'optiona'),
(109, 7, 16, 1, 'optiona'),
(109, 7, 17, 1, 'optionc'),
(109, 7, 19, 1, 'optiond'),
(109, 7, 20, 1, 'optiona'),
(109, 7, 22, -0.33, 'optiona'),
(109, 7, 23, -0.33, 'optionb'),
(109, 7, 24, 1, 'optiona'),
(109, 7, 25, -0.33, 'optionb'),
(109, 7, 26, 2, 'optiona'),
(109, 7, 29, 2, 'optiond'),
(109, 7, 31, 2, 'optiona'),
(109, 7, 34, -0.66, 'optiond'),
(109, 7, 35, -0.66, 'optione'),
(109, 7, 36, 2, 'optionc'),
(109, 7, 38, 2, 'optiona'),
(109, 7, 39, 2, 'optione'),
(109, 7, 40, 2, 'optionb'),
(109, 7, 41, 2, 'optionc'),
(109, 7, 42, 2, 'optionc'),
(109, 7, 43, 2, 'optionb'),
(109, 7, 44, 2, 'optionb'),
(109, 7, 45, 2, 'optiond'),
(109, 7, 47, 2, 'optionb'),
(109, 7, 48, 2, 'optionb'),
(109, 7, 49, -0.66, 'optiona'),
(109, 7, 50, 2, 'optionc'),
(109, 7, 51, 2, 'optionb'),
(109, 7, 52, 2, 'optiona'),
(109, 7, 53, 2, 'optionb'),
(109, 7, 54, 2, 'optiond'),
(109, 7, 56, 1, 'optiona'),
(109, 7, 57, 1, 'optionc'),
(109, 7, 59, 1, 'optiond'),
(109, 7, 60, 1, 'optionc'),
(109, 7, 61, 2, 'optionb'),
(109, 7, 62, 2, 'optionc'),
(109, 7, 63, 2, 'optiond'),
(109, 7, 64, -0.66, 'optiona'),
(109, 7, 65, 2, 'optionb'),
(109, 8, 1, 1, 'optione'),
(109, 8, 2, 1, 'optiona'),
(109, 8, 3, 1, 'optionb'),
(109, 8, 4, -0.33, 'optionb'),
(109, 8, 5, -0.33, 'optiona'),
(109, 8, 6, 1, 'optiond'),
(109, 8, 7, 1, 'optionb'),
(109, 8, 8, 1, 'optionb'),
(109, 8, 9, 1, 'optiond'),
(109, 8, 10, 1, 'optionc'),
(109, 8, 11, 1, 'optiond'),
(109, 8, 12, 1, 'optiona'),
(109, 8, 13, -0.33, 'optiond'),
(109, 8, 14, 1, 'optiona'),
(109, 8, 15, 1, 'optionc'),
(109, 8, 16, 1, 'optionc'),
(109, 8, 17, 1, 'optione'),
(109, 8, 18, 1, 'optione'),
(109, 8, 19, 1, 'optiona'),
(109, 8, 25, -0.33, 'optiona'),
(109, 8, 26, 1, 'optiond'),
(109, 8, 27, 1, 'optiond'),
(109, 8, 29, 1, 'optionb'),
(109, 8, 30, 1, 'optionc'),
(109, 8, 31, 1, 'optionc'),
(109, 8, 32, 1, 'optionb'),
(109, 8, 33, 1, 'optiona'),
(109, 8, 34, 1, 'optiond'),
(109, 8, 35, 1, 'optionc'),
(109, 8, 36, 1, 'optionc'),
(109, 8, 37, -0.33, 'optionb'),
(109, 8, 38, 1, 'optionb'),
(109, 8, 39, 1, 'optiond'),
(109, 8, 40, -0.33, 'optiona'),
(109, 8, 41, 1, 'optiona'),
(109, 8, 42, 1, 'optiond'),
(109, 8, 43, 1, 'optionb'),
(109, 8, 44, -0.33, 'optiona'),
(109, 8, 45, 1, 'optiond'),
(109, 10, 1, 2, 'optione'),
(109, 10, 2, 2, 'optionb'),
(109, 10, 3, -0.66, 'optionc'),
(109, 10, 4, 2, 'optionc'),
(109, 10, 5, 2, 'optionb'),
(109, 10, 6, 2, 'optionb'),
(109, 10, 7, -0.66, 'optiond'),
(109, 10, 8, 2, 'optione'),
(109, 10, 9, -0.66, 'optiona'),
(109, 10, 10, -0.66, 'optiona'),
(109, 10, 11, 2, 'optionc'),
(109, 10, 12, 2, 'optionb'),
(109, 10, 13, 2, 'optionc'),
(109, 10, 14, -0.66, 'optionc'),
(109, 10, 15, 2, 'optiond'),
(109, 10, 16, 2, 'optiona'),
(109, 10, 17, 2, 'optionb'),
(109, 10, 18, -0.66, 'optionc'),
(109, 10, 19, 2, 'optiona'),
(109, 10, 20, 2, 'optionc'),
(109, 10, 21, -0.66, 'optionc'),
(109, 10, 22, 2, 'optionb'),
(109, 10, 23, -0.66, 'optionc'),
(109, 10, 24, -0.66, 'optionc'),
(109, 11, 1, -0.66, 'optionc'),
(109, 11, 2, 2, 'optionc'),
(109, 11, 3, -0.66, 'optionc'),
(109, 11, 4, 2, 'optiond'),
(109, 11, 5, 2, 'optionb'),
(109, 11, 6, 2, 'optionb'),
(109, 11, 7, 2, 'optionb'),
(109, 11, 8, 2, 'optiona'),
(109, 11, 9, 2, 'optionc'),
(109, 11, 10, 2, 'optiona'),
(109, 11, 11, 2, 'optiona'),
(109, 11, 12, 2, 'optiona'),
(109, 11, 15, 2, 'optionc'),
(109, 11, 17, 2, 'optiona'),
(109, 11, 18, 2, 'optionb'),
(109, 11, 19, 2, 'optionb'),
(109, 11, 20, -0.66, 'optionb'),
(109, 11, 21, 2, 'optionc'),
(109, 11, 22, 2, 'optiona'),
(109, 11, 23, -0.66, 'optionb'),
(109, 11, 25, 2, 'optionb'),
(109, 11, 26, 2, 'optionc'),
(109, 11, 27, 2, 'optione'),
(109, 11, 28, -0.66, 'optiond'),
(109, 11, 29, 2, 'optiond'),
(109, 11, 30, 2, 'optiond'),
(109, 11, 31, 2, 'optione'),
(109, 11, 32, -0.66, 'optione'),
(109, 11, 33, -0.66, 'optione'),
(109, 11, 34, 2, 'optiond'),
(109, 11, 35, 2, 'optiond'),
(109, 11, 36, 2, 'optione'),
(109, 11, 37, 2, 'optionb'),
(109, 11, 38, 2, 'optiona'),
(109, 11, 39, 2, 'optiona'),
(109, 11, 40, 2, 'optiond'),
(109, 11, 41, 2, 'optionc'),
(109, 11, 42, 2, 'optione'),
(109, 11, 43, -0.66, 'optionc'),
(109, 11, 44, 2, 'optionb'),
(109, 11, 46, 2, 'optiona'),
(109, 11, 48, 2, 'optiond'),
(109, 11, 49, 2, 'optiond'),
(109, 11, 50, -0.66, 'optione'),
(109, 11, 51, 2, 'optiond'),
(109, 11, 52, 2, 'optionb'),
(109, 11, 53, 2, 'optionc'),
(109, 11, 54, 2, 'optionb'),
(109, 11, 55, -0.66, 'optionc'),
(109, 11, 56, 2, 'optione'),
(109, 11, 57, -0.66, 'optionb'),
(109, 11, 58, 2, 'optione'),
(109, 11, 60, -0.66, 'optione'),
(109, 12, 1, -0.66, 'optiond'),
(109, 12, 2, 2, 'optionc'),
(109, 12, 3, -0.66, 'optionb'),
(109, 12, 4, 2, 'optionc'),
(109, 12, 5, 2, 'optiona'),
(109, 12, 6, -0.66, 'optiona'),
(109, 12, 7, 2, 'optionb'),
(109, 12, 8, 2, 'optionb'),
(109, 12, 12, -0.66, 'optiona'),
(109, 12, 14, 2, 'optiona'),
(109, 12, 15, 2, 'optiond'),
(109, 12, 16, 2, 'optionc'),
(109, 12, 17, 2, 'optionc'),
(109, 12, 18, 2, 'optiond'),
(109, 12, 19, -0.66, 'optiond'),
(109, 12, 20, 2, 'optionb'),
(109, 12, 21, 2, 'optiona'),
(109, 12, 22, 2, 'optiond'),
(109, 12, 23, 2, 'optionb'),
(109, 12, 26, 2, 'optionb'),
(109, 12, 27, -0.66, 'optiond'),
(109, 12, 28, 2, 'optiond'),
(109, 12, 30, 2, 'optionb'),
(109, 12, 31, 2, 'optionc'),
(109, 12, 32, -0.66, 'optiona'),
(109, 12, 34, 2, 'optiond'),
(109, 12, 35, -0.66, 'optionc'),
(109, 12, 36, -0.66, 'optionc'),
(109, 12, 37, -0.66, 'optionb'),
(109, 12, 38, 2, 'optionc'),
(109, 12, 40, 2, 'optiona'),
(109, 12, 41, 2, 'optionb'),
(109, 12, 42, 2, 'optiona'),
(109, 12, 43, -0.66, 'optiond'),
(109, 12, 44, -0.66, 'optionc'),
(109, 12, 45, -0.66, 'optiond'),
(109, 12, 46, 2, 'optiond'),
(109, 12, 47, 2, 'optionc'),
(109, 12, 48, -0.66, 'optiond'),
(109, 12, 50, 2, 'optionb'),
(109, 12, 51, 2, 'optionc'),
(109, 12, 52, 2, 'optionb'),
(109, 12, 53, 2, 'optiona'),
(109, 12, 54, 2, 'optiona'),
(109, 13, 1, -0.66, 'optiond'),
(109, 13, 2, 2, 'optionb'),
(109, 13, 3, -0.66, 'optiond'),
(109, 13, 5, 2, 'optionc'),
(109, 13, 6, -0.66, 'optiona'),
(109, 13, 8, 2, 'optionc'),
(109, 13, 9, -0.66, 'optiona'),
(109, 13, 10, 2, 'optione'),
(109, 13, 11, 2, 'optiond'),
(109, 13, 12, 2, 'optiona'),
(109, 13, 13, 2, 'optiond'),
(109, 13, 14, 2, 'optionb'),
(109, 13, 19, 2, 'optionb'),
(109, 13, 22, 2, 'optiona'),
(109, 13, 24, -0.66, 'optiond'),
(109, 13, 25, 2, 'optiona'),
(109, 13, 26, 2, 'optiond'),
(109, 13, 27, 2, 'optiond'),
(109, 13, 28, 2, 'optionc'),
(109, 13, 29, 2, 'optionc'),
(109, 13, 30, 2, 'optiona'),
(109, 13, 31, 2, 'optiond'),
(109, 13, 32, 2, 'optiona'),
(109, 13, 33, 2, 'optionb'),
(109, 13, 34, 2, 'optiona'),
(109, 13, 35, 2, 'optionc'),
(109, 13, 36, 2, 'optionc'),
(109, 13, 38, 2, 'optionb'),
(109, 13, 39, 2, 'optiona'),
(109, 13, 40, 2, 'optiond'),
(109, 17, 2, 1, 'optionb'),
(109, 17, 5, 1, 'optionc'),
(109, 17, 6, -0.33, 'optionc'),
(109, 17, 8, -0.33, 'optionb'),
(109, 17, 9, -0.33, 'optiona'),
(109, 17, 11, -0.33, 'optionc'),
(109, 17, 12, -0.33, 'optionc'),
(109, 17, 13, -0.33, 'optiona'),
(109, 17, 18, 1, 'optionb'),
(109, 17, 19, -0.33, 'optionc'),
(109, 17, 20, -0.33, 'optionb'),
(109, 17, 22, 1, 'optionb'),
(109, 17, 23, 1, 'optiond'),
(109, 17, 25, 1, 'optionb'),
(109, 17, 26, 2, 'optionc'),
(109, 17, 28, -0.66, 'optionc'),
(109, 17, 29, -0.66, 'optiona'),
(109, 17, 31, 2, 'optiond'),
(109, 17, 33, 2, 'optiona'),
(109, 17, 34, 2, 'optiond'),
(109, 17, 35, -0.66, 'optiond'),
(109, 17, 36, 2, 'optiond'),
(109, 17, 37, 2, 'optionc'),
(109, 17, 40, -0.66, 'optiona'),
(109, 17, 44, 2, 'optionb'),
(109, 17, 45, -0.66, 'optiona'),
(109, 17, 47, -0.66, 'optionb'),
(109, 17, 48, 2, 'optiond'),
(109, 17, 52, 2, 'optiond'),
(109, 17, 53, 2, 'optiona'),
(109, 17, 56, -0.33, 'optionc'),
(109, 17, 58, -0.33, 'optionb'),
(109, 17, 59, -0.33, 'optionc'),
(109, 17, 60, 1, 'optiond'),
(109, 17, 61, 2, 'optionb'),
(109, 17, 62, -0.66, 'optiond'),
(109, 17, 63, 2, 'optiona'),
(109, 17, 64, 2, 'optionb'),
(109, 17, 65, -0.66, 'optiona'),
(109, 18, 2, 1, 'optiond'),
(109, 18, 3, 1, 'optionb'),
(109, 18, 4, 1, 'optiona'),
(109, 18, 6, 1, 'optionc'),
(109, 18, 7, 1, 'optionb'),
(109, 18, 9, 1, 'optiond'),
(109, 18, 10, 1, 'optionb'),
(109, 18, 11, -0.33, 'optiona'),
(109, 18, 12, 1, 'optiona'),
(109, 18, 13, -0.33, 'optionb'),
(109, 18, 14, 1, 'optionc'),
(109, 18, 15, 1, 'optionc'),
(109, 18, 17, -0.33, 'optiona'),
(109, 18, 18, 1, 'optiona'),
(109, 18, 19, -0.33, 'optiona'),
(109, 18, 20, 1, 'optionb'),
(109, 18, 21, 1, 'optiond'),
(109, 18, 22, 1, 'optiond'),
(109, 18, 23, -0.33, 'optionc'),
(109, 18, 24, 1, 'optionc'),
(109, 18, 25, 1, 'optionc'),
(109, 18, 26, -0.66, 'optiond'),
(109, 18, 27, 2, 'optiond'),
(109, 18, 28, -0.66, 'optionb'),
(109, 18, 29, 2, 'optiond'),
(109, 18, 32, 2, 'optionb'),
(109, 18, 33, 2, 'optiond'),
(109, 18, 34, 2, 'optiona'),
(109, 18, 35, 2, 'optiond'),
(109, 18, 36, -0.66, 'optionb'),
(109, 18, 37, 2, 'optionc'),
(109, 18, 38, 2, 'optionb'),
(109, 18, 42, 2, 'optionb'),
(109, 18, 44, -0.66, 'optionb'),
(109, 18, 45, -0.66, 'optionc'),
(109, 18, 47, 2, 'optiond'),
(109, 18, 48, 2, 'optionb'),
(109, 18, 49, 2, 'optionc'),
(109, 18, 50, 2, 'optionc'),
(109, 18, 51, -0.66, 'optiond'),
(109, 18, 54, 2, 'optiona'),
(109, 18, 56, 1, 'optione'),
(109, 18, 57, -0.33, 'optiona'),
(109, 18, 58, 1, 'optionc'),
(109, 18, 60, 1, 'optiona'),
(109, 18, 61, 2, 'optionb'),
(109, 18, 62, 2, 'optiond'),
(109, 18, 63, -0.66, 'optionc'),
(109, 18, 64, 2, 'optionb'),
(109, 18, 65, 2, 'optiond'),
(111, 7, 1, -0.33, 'optionc'),
(111, 7, 2, 1, 'optiond'),
(111, 7, 3, -0.33, 'optiond'),
(111, 7, 4, 1, 'optiond'),
(111, 7, 5, -0.33, 'optionb'),
(111, 7, 10, 1, 'optionc'),
(111, 7, 11, 1, 'optiona'),
(111, 7, 12, -0.33, 'optiona'),
(111, 7, 14, 1, 'optionc'),
(111, 7, 15, 1, 'optionb'),
(111, 7, 16, 1, 'optiona'),
(111, 7, 17, 1, 'optionc'),
(111, 7, 18, 1, 'optiona'),
(111, 7, 19, 1, 'optiond'),
(111, 7, 20, 1, 'optiona'),
(111, 7, 21, -0.33, 'optionc'),
(111, 7, 22, -0.33, 'optionb'),
(111, 7, 24, 1, 'optiona'),
(111, 7, 25, 1, 'optionc'),
(111, 7, 31, 2, 'optiona'),
(111, 7, 35, 2, 'optionc'),
(111, 7, 36, -0.66, 'optiond'),
(111, 7, 37, 2, 'optionc'),
(111, 7, 39, 2, 'optione'),
(111, 7, 40, 2, 'optionb'),
(111, 7, 41, -0.66, 'optionb'),
(111, 7, 42, -0.66, 'optionb'),
(111, 7, 43, 2, 'optionb'),
(111, 7, 44, 2, 'optionb'),
(111, 7, 45, 2, 'optiond'),
(111, 7, 46, 2, 'optiond'),
(111, 7, 47, 2, 'optionb'),
(111, 7, 48, -0.66, 'optiona'),
(111, 7, 49, -0.66, 'optiona'),
(111, 7, 51, 2, 'optionb'),
(111, 7, 52, 2, 'optiona'),
(111, 7, 53, 2, 'optionb'),
(111, 7, 54, 2, 'optiond'),
(111, 7, 55, 2, 'optiond'),
(111, 7, 58, 1, 'optionb'),
(111, 7, 60, 1, 'optionc'),
(111, 7, 61, -0.66, 'optiond'),
(111, 7, 63, 2, 'optiond'),
(111, 7, 65, 2, 'optionb'),
(111, 8, 1, 1, 'optione'),
(111, 8, 2, -0.33, 'optionb'),
(111, 8, 3, 1, 'optionb'),
(111, 8, 4, 1, 'optiond'),
(111, 8, 6, 1, 'optiond'),
(111, 8, 7, 1, 'optionb'),
(111, 8, 9, -0.33, 'optionb'),
(111, 8, 11, 1, 'optiond'),
(111, 8, 12, 1, 'optiona'),
(111, 8, 18, -0.33, 'optiond'),
(111, 8, 19, 1, 'optiona'),
(111, 8, 21, 1, 'optiona'),
(111, 8, 22, -0.33, 'optionb'),
(111, 8, 24, 1, 'optiona'),
(111, 8, 25, -0.33, 'optionb'),
(111, 8, 27, 1, 'optiond'),
(111, 8, 29, 1, 'optionb'),
(111, 8, 30, 1, 'optionc'),
(111, 8, 31, 1, 'optionc'),
(111, 8, 32, 1, 'optionb'),
(111, 8, 34, 1, 'optiond'),
(111, 8, 35, 1, 'optionc'),
(111, 8, 36, 1, 'optionc'),
(111, 8, 37, 1, 'optiond'),
(111, 8, 38, 1, 'optionb'),
(111, 8, 39, 1, 'optiond'),
(111, 8, 40, -0.33, 'optionb'),
(111, 8, 41, 1, 'optiona'),
(111, 8, 42, 1, 'optiond'),
(111, 8, 43, -0.33, 'optiond'),
(111, 8, 44, 1, 'optionb'),
(111, 8, 45, 1, 'optiond'),
(111, 10, 1, -0.66, 'optiona'),
(111, 10, 2, 2, 'optionb'),
(111, 10, 4, -0.66, 'optione'),
(111, 10, 5, 2, 'optionb'),
(111, 10, 6, 2, 'optionb'),
(111, 10, 7, -0.66, 'optionb'),
(111, 10, 8, -0.66, 'optiond'),
(111, 10, 9, -0.66, 'optionb'),
(111, 10, 10, -0.66, 'optionc'),
(111, 10, 11, 2, 'optionc'),
(111, 10, 12, 2, 'optionb'),
(111, 10, 14, -0.66, 'optiond'),
(111, 10, 15, 2, 'optiond'),
(111, 10, 16, 2, 'optiona'),
(111, 10, 19, 2, 'optiona'),
(111, 10, 20, -0.66, 'optiond'),
(111, 10, 21, 2, 'optionb'),
(111, 10, 22, -0.66, 'optiona'),
(111, 10, 23, 2, 'optiond'),
(111, 11, 1, 2, 'optionb'),
(111, 11, 2, 2, 'optionc'),
(111, 11, 4, 2, 'optiond'),
(111, 11, 5, 2, 'optionb'),
(111, 11, 6, 2, 'optionb'),
(111, 11, 11, 2, 'optiona'),
(111, 11, 12, 2, 'optiona'),
(111, 11, 15, 2, 'optionc'),
(111, 11, 17, -0.66, 'optionc'),
(111, 11, 18, 2, 'optionb'),
(111, 11, 19, -0.66, 'optiona'),
(111, 11, 20, 2, 'optiona'),
(111, 11, 22, -0.66, 'optionb'),
(111, 11, 24, 2, 'optiona'),
(111, 11, 25, -0.66, 'optiond'),
(111, 11, 27, 2, 'optione'),
(111, 11, 29, 2, 'optiond'),
(111, 11, 30, -0.66, 'optiona'),
(111, 11, 31, 2, 'optione'),
(111, 11, 32, -0.66, 'optione'),
(111, 11, 33, -0.66, 'optione'),
(111, 11, 34, 2, 'optiond'),
(111, 11, 35, 2, 'optiond'),
(111, 11, 36, 2, 'optione'),
(111, 11, 37, 2, 'optionb'),
(111, 11, 38, 2, 'optiona'),
(111, 11, 39, 2, 'optiona'),
(111, 11, 41, -0.66, 'optionb'),
(111, 11, 42, -0.66, 'optiond'),
(111, 11, 43, 2, 'optiond'),
(111, 11, 44, -0.66, 'optiond'),
(111, 11, 45, 2, 'optiona'),
(111, 11, 46, 2, 'optiona'),
(111, 11, 47, 2, 'optione'),
(111, 11, 48, 2, 'optiond'),
(111, 11, 49, -0.66, 'optionc'),
(111, 11, 51, 2, 'optiond'),
(111, 11, 52, 2, 'optionb'),
(111, 11, 53, 2, 'optionc'),
(111, 11, 54, 2, 'optionb'),
(111, 11, 56, 2, 'optione'),
(111, 11, 57, 2, 'optionc'),
(111, 11, 58, 2, 'optione'),
(111, 11, 60, -0.66, 'optionc'),
(111, 12, 4, 2, 'optionc'),
(111, 12, 7, 2, 'optionb'),
(111, 12, 8, 2, 'optionb'),
(111, 12, 12, -0.66, 'optiona'),
(111, 12, 13, 2, 'optionb'),
(111, 12, 14, 2, 'optiona'),
(111, 12, 15, 2, 'optiond'),
(111, 12, 19, -0.66, 'optiona'),
(111, 12, 20, 2, 'optionb'),
(111, 12, 21, 2, 'optiona'),
(111, 12, 22, 2, 'optiond'),
(111, 12, 23, 2, 'optionb'),
(111, 12, 26, -0.66, 'optiona'),
(111, 12, 27, 2, 'optionc'),
(111, 12, 30, 2, 'optionb'),
(111, 12, 35, -0.66, 'optionb'),
(111, 12, 40, 2, 'optiona'),
(111, 12, 41, 2, 'optionb'),
(111, 12, 42, -0.66, 'optionb'),
(111, 12, 44, -0.66, 'optionc'),
(111, 12, 45, 2, 'optiond'),
(111, 12, 46, 2, 'optiond'),
(111, 12, 47, -0.66, 'optionb'),
(111, 12, 48, -0.66, 'optionc'),
(111, 12, 50, 2, 'optionb'),
(111, 12, 51, 2, 'optionc'),
(111, 12, 52, 2, 'optionb'),
(111, 12, 53, 2, 'optiona'),
(111, 12, 54, 2, 'optiona'),
(111, 13, 1, -0.66, 'optiona'),
(111, 13, 8, 2, 'optionc'),
(111, 13, 10, 2, 'optione'),
(111, 13, 11, 2, 'optiond'),
(111, 13, 12, -0.66, 'optiond'),
(111, 13, 18, -0.66, 'optionc'),
(111, 13, 19, 2, 'optionb'),
(111, 13, 24, 2, 'optionc'),
(111, 13, 25, 2, 'optiona'),
(111, 13, 26, -0.66, 'optionb'),
(111, 13, 28, 2, 'optionc'),
(111, 13, 30, -0.66, 'optionb'),
(111, 13, 31, 2, 'optiond'),
(111, 13, 33, 2, 'optionb'),
(111, 13, 34, 2, 'optiona'),
(111, 13, 36, -0.66, 'optionb'),
(111, 13, 37, -0.66, 'optiond'),
(111, 13, 38, 2, 'optionb'),
(111, 13, 39, 2, 'optiona'),
(111, 13, 40, 2, 'optiond'),
(111, 15, 3, -0.33, 'optiond'),
(111, 15, 4, 1, 'optiona'),
(111, 15, 6, 1, 'optiona'),
(111, 15, 7, 1, 'optionb'),
(111, 15, 9, 1, 'optionb'),
(111, 15, 10, 1, 'optiona'),
(111, 15, 11, 1, 'optiond'),
(111, 15, 12, -0.33, 'optiond'),
(111, 15, 13, 1, 'optionb'),
(111, 15, 14, 1, 'optionc'),
(111, 15, 15, 1, 'optiond'),
(111, 15, 16, 1, 'optiond'),
(111, 15, 17, -0.33, 'optionc'),
(111, 15, 18, 1, 'optionb'),
(111, 15, 19, 1, 'optionc'),
(111, 15, 20, -0.33, 'optionc'),
(111, 15, 21, -0.33, 'optionb'),
(111, 15, 22, 1, 'optionb'),
(111, 15, 24, 1, 'optiona'),
(111, 15, 25, 1, 'optiond'),
(111, 15, 26, 2, 'optiona'),
(111, 15, 29, 2, 'optiond'),
(111, 15, 30, 2, 'optionb'),
(111, 15, 32, 2, 'optiona'),
(111, 15, 33, -0.66, 'optionb'),
(111, 15, 35, 2, 'optionc'),
(111, 15, 36, 2, 'optiond'),
(111, 15, 37, -0.66, 'optiona'),
(111, 15, 38, 2, 'optionc'),
(111, 15, 39, 2, 'optionb'),
(111, 15, 40, -0.66, 'optionb'),
(111, 15, 41, 2, 'optionc'),
(111, 15, 42, 2, 'optiona'),
(111, 15, 43, 2, 'optiona'),
(111, 15, 45, -0.66, 'optionb'),
(111, 15, 47, 2, 'optiond'),
(111, 15, 48, -0.66, 'optiond'),
(111, 15, 49, -0.66, 'optiond'),
(111, 15, 52, 2, 'optionc'),
(111, 15, 54, -0.66, 'optionb'),
(111, 15, 56, -0.33, 'optionb'),
(111, 15, 58, 1, 'optiond'),
(111, 15, 59, 1, 'optiond'),
(111, 15, 63, 2, 'optiond'),
(111, 15, 64, -0.66, 'optionc'),
(111, 16, 3, -0.33, 'optionb'),
(111, 16, 6, 1, 'optionb'),
(111, 16, 8, 1, 'optiona'),
(111, 16, 9, 1, 'optionc'),
(111, 16, 10, -0.33, 'optiond'),
(111, 16, 11, -0.33, 'optiona'),
(111, 16, 12, 1, 'optiond'),
(111, 16, 13, 1, 'optionb'),
(111, 16, 14, -0.33, 'optiona'),
(111, 16, 15, -0.33, 'optiona'),
(111, 16, 16, 1, 'optiond'),
(111, 16, 19, 1, 'optiond'),
(111, 16, 20, 1, 'optiona'),
(111, 16, 22, 1, 'optionb'),
(111, 16, 25, -0.33, 'optionc'),
(111, 16, 26, 2, 'optiona'),
(111, 16, 28, 2, 'optiond'),
(111, 16, 30, 2, 'optiond'),
(111, 16, 32, -0.66, 'optionc'),
(111, 16, 35, 2, 'optionb'),
(111, 16, 37, 2, 'optionb'),
(111, 16, 40, -0.66, 'optionb'),
(111, 16, 41, -0.66, 'optiona'),
(111, 16, 45, 2, 'optiona'),
(111, 16, 50, -0.66, 'optionb'),
(111, 16, 53, -0.66, 'optiond'),
(111, 16, 55, -0.66, 'optiond'),
(111, 17, 2, 1, 'optionb'),
(111, 17, 3, 1, 'optionb'),
(111, 17, 4, -0.33, 'optionb'),
(111, 17, 5, 1, 'optionc'),
(111, 17, 6, 1, 'optiona'),
(111, 17, 8, 1, 'optiona'),
(111, 17, 9, 1, 'optionb'),
(111, 17, 11, 1, 'optiond'),
(111, 17, 12, 1, 'optiona'),
(111, 17, 13, 1, 'optionb'),
(111, 17, 17, -0.33, 'optiond'),
(111, 17, 18, -0.33, 'optiond'),
(111, 17, 23, 1, 'optiond'),
(111, 17, 24, -0.33, 'optionc'),
(111, 17, 25, 1, 'optionb'),
(111, 17, 26, 2, 'optionc'),
(111, 17, 27, -0.66, 'optionb'),
(111, 17, 28, -0.66, 'optionb'),
(111, 17, 29, 2, 'optiond'),
(111, 17, 30, -0.66, 'optiond'),
(111, 17, 33, 2, 'optiona'),
(111, 17, 35, -0.66, 'optiond'),
(111, 17, 36, -0.66, 'optiona'),
(111, 17, 37, 2, 'optionc'),
(111, 17, 38, -0.66, 'optionb'),
(111, 17, 41, 2, 'optionc'),
(111, 17, 42, 2, 'optionb'),
(111, 17, 61, 2, 'optionb'),
(111, 17, 65, -0.66, 'optionc'),
(112, 8, 1, 1, 'optione'),
(112, 8, 2, -0.33, 'optionb'),
(112, 8, 3, -0.33, 'optionc'),
(112, 8, 4, 1, 'optiond'),
(112, 8, 5, -0.33, 'optiona'),
(112, 8, 6, 1, 'optiond'),
(112, 8, 7, 1, 'optionb'),
(112, 8, 8, 1, 'optionb'),
(112, 8, 9, -0.33, 'optiona'),
(112, 8, 10, 1, 'optionc'),
(112, 8, 11, 1, 'optiond'),
(112, 8, 12, 1, 'optiona'),
(112, 8, 13, 1, 'optionb'),
(112, 8, 14, 1, 'optiona'),
(112, 8, 17, 1, 'optione'),
(112, 8, 18, -0.33, 'optionb'),
(112, 8, 19, 1, 'optiona'),
(112, 8, 25, -0.33, 'optione'),
(112, 8, 26, 1, 'optiond'),
(112, 8, 27, 1, 'optiond'),
(112, 8, 30, 1, 'optionc'),
(112, 8, 31, 1, 'optionc'),
(112, 8, 32, 1, 'optionb'),
(112, 8, 33, 1, 'optiona'),
(112, 8, 34, 1, 'optiond'),
(112, 8, 35, 1, 'optionc'),
(112, 8, 36, 1, 'optionc'),
(112, 8, 37, 1, 'optiond'),
(112, 8, 38, 1, 'optionb'),
(112, 8, 39, 1, 'optiond'),
(112, 8, 40, -0.33, 'optiona'),
(112, 8, 41, 1, 'optiona'),
(112, 8, 42, 1, 'optiond'),
(112, 8, 43, 1, 'optionb'),
(112, 8, 44, -0.33, 'optiona'),
(112, 8, 45, 1, 'optiond'),
(112, 9, 1, -0.66, 'optiona'),
(112, 9, 2, 2, 'optionb'),
(112, 9, 4, 2, 'optiona'),
(112, 9, 5, 2, 'optiond'),
(112, 9, 7, 2, 'optionc'),
(112, 9, 11, -0.66, 'optionc'),
(112, 9, 24, 2, 'optionc'),
(112, 9, 25, -0.66, 'optionb'),
(112, 9, 26, 2, 'optionc'),
(112, 9, 27, -0.66, 'optiona'),
(112, 9, 31, -0.66, 'optionc'),
(112, 9, 32, -0.66, 'optiona'),
(112, 9, 34, 2, 'optiond'),
(112, 9, 35, 2, 'optionb'),
(112, 9, 36, -0.66, 'optiona'),
(112, 9, 39, -0.66, 'optionb'),
(112, 9, 50, -0.66, 'optiona'),
(112, 9, 51, -0.66, 'optionc'),
(112, 9, 52, 2, 'optionb'),
(112, 13, 1, -0.66, 'optiond'),
(112, 13, 2, 2, 'optionb'),
(112, 13, 3, -0.66, 'optionb'),
(112, 13, 5, -0.66, 'optiond'),
(112, 13, 6, -0.66, 'optiona'),
(112, 13, 7, -0.66, 'optionc'),
(112, 13, 8, 2, 'optionc'),
(112, 13, 10, 2, 'optione'),
(112, 13, 11, 2, 'optiond'),
(112, 13, 14, -0.66, 'optiona'),
(112, 13, 20, -0.66, 'optionc'),
(112, 13, 22, 2, 'optiona'),
(112, 13, 24, -0.66, 'optiond'),
(112, 13, 25, 2, 'optiona'),
(112, 13, 26, -0.66, 'optionb'),
(112, 13, 27, 2, 'optiond'),
(112, 13, 28, 2, 'optionc'),
(112, 13, 29, -0.66, 'optiond'),
(112, 13, 30, 2, 'optiona'),
(112, 13, 32, 2, 'optiona'),
(112, 13, 33, 2, 'optionb'),
(112, 13, 34, -0.66, 'optionb'),
(112, 13, 35, 2, 'optionc'),
(112, 13, 36, 2, 'optionc'),
(112, 13, 38, 2, 'optionb'),
(112, 13, 39, 2, 'optiona'),
(112, 13, 40, 2, 'optiond'),
(112, 15, 2, 1, 'optiond'),
(112, 15, 5, -0.33, 'optiond'),
(112, 15, 6, 1, 'optiona'),
(112, 15, 8, 1, 'optiona'),
(112, 15, 9, 1, 'optionb'),
(112, 15, 11, 1, 'optiond'),
(112, 15, 13, 1, 'optionb'),
(112, 15, 15, 1, 'optiond'),
(112, 15, 19, 1, 'optionc'),
(112, 15, 22, 1, 'optionb'),
(112, 15, 23, -0.33, 'optiond'),
(112, 15, 24, 1, 'optiona'),
(112, 15, 25, -0.33, 'optionb'),
(112, 15, 29, 2, 'optiond'),
(112, 15, 30, 2, 'optionb'),
(112, 15, 31, 2, 'optiona'),
(112, 15, 35, 2, 'optionc'),
(112, 15, 36, 2, 'optiond'),
(112, 15, 37, 2, 'optionb'),
(112, 15, 39, -0.66, 'optiond'),
(112, 15, 42, 2, 'optiona'),
(112, 15, 44, 2, 'optiond'),
(112, 15, 47, -0.66, 'optionc'),
(112, 15, 50, 2, 'optiond'),
(112, 15, 51, 2, 'optionb'),
(112, 15, 52, 2, 'optionc'),
(112, 15, 59, 1, 'optiond'),
(112, 16, 1, 1, 'optionc'),
(112, 16, 2, 1, 'optionb'),
(112, 16, 3, 1, 'optiond'),
(112, 16, 6, 1, 'optionb'),
(112, 16, 8, 1, 'optiona'),
(112, 16, 9, -0.33, 'optiona'),
(112, 16, 10, -0.33, 'optiond'),
(112, 16, 11, -0.33, 'optionc'),
(112, 16, 12, -0.33, 'optionc'),
(112, 16, 16, 1, 'optiond'),
(112, 16, 20, -0.33, 'optionb'),
(112, 16, 22, 1, 'optionb'),
(112, 16, 23, -0.33, 'optiona'),
(112, 16, 24, -0.33, 'optiond'),
(112, 16, 25, 1, 'optionb'),
(112, 16, 26, 2, 'optiona'),
(112, 16, 36, 2, 'optionc'),
(112, 16, 37, 2, 'optionb'),
(112, 16, 43, 2, 'optiona'),
(112, 16, 44, 2, 'optiond'),
(112, 16, 45, 2, 'optiona'),
(112, 16, 48, 2, 'optiona'),
(112, 16, 49, 2, 'optionc'),
(112, 16, 56, -0.33, 'optionb'),
(112, 16, 59, -0.33, 'optiond'),
(112, 16, 60, 1, 'optionc'),
(112, 17, 3, 1, 'optionb'),
(112, 17, 5, 1, 'optionc'),
(112, 17, 6, -0.33, 'optiond'),
(112, 17, 7, -0.33, 'optionb'),
(112, 17, 8, 1, 'optiona'),
(112, 17, 9, 1, 'optionb'),
(112, 17, 10, 1, 'optiona'),
(112, 17, 13, 1, 'optionb'),
(112, 17, 14, -0.33, 'optiona'),
(112, 17, 19, 1, 'optionb'),
(112, 17, 21, -0.33, 'optiona'),
(112, 17, 23, -0.33, 'optionc'),
(112, 17, 24, -0.33, 'optiond'),
(112, 17, 25, -0.33, 'optiond'),
(112, 17, 26, 2, 'optionc'),
(112, 17, 32, 2, 'optiona'),
(112, 17, 33, 2, 'optiona'),
(112, 17, 34, 2, 'optiond'),
(112, 17, 35, 2, 'optionb'),
(112, 17, 37, 2, 'optionc'),
(112, 17, 38, -0.66, 'optiona'),
(112, 17, 44, 2, 'optionb'),
(112, 17, 46, 2, 'optionb'),
(112, 17, 47, -0.66, 'optiond'),
(112, 17, 48, 2, 'optiond'),
(112, 17, 49, -0.66, 'optiond'),
(112, 17, 50, -0.66, 'optionc'),
(112, 17, 51, 2, 'optionc'),
(112, 17, 52, 2, 'optiond'),
(112, 17, 53, 2, 'optiona'),
(112, 17, 54, 2, 'optiond'),
(112, 17, 58, 1, 'optionc'),
(112, 17, 63, 2, 'optiona'),
(112, 18, 2, 1, 'optiond'),
(112, 18, 3, 1, 'optionb'),
(112, 18, 4, 1, 'optiona'),
(112, 18, 5, 1, 'optiond'),
(112, 18, 6, -0.33, 'optiona'),
(112, 18, 9, 1, 'optiond'),
(112, 18, 11, -0.33, 'optionc'),
(112, 18, 12, 1, 'optiona'),
(112, 18, 13, -0.33, 'optionc'),
(112, 18, 15, 1, 'optionc'),
(112, 18, 17, 1, 'optionb'),
(112, 18, 19, 1, 'optionc'),
(112, 18, 20, 1, 'optionb'),
(112, 18, 21, 1, 'optiond'),
(112, 18, 22, -0.33, 'optionc'),
(112, 18, 24, 1, 'optionc'),
(112, 18, 25, 1, 'optionc'),
(112, 18, 26, -0.66, 'optiona'),
(112, 18, 27, -0.66, 'optionc'),
(112, 18, 29, 2, 'optiond'),
(112, 18, 30, -0.66, 'optionb'),
(112, 18, 31, 2, 'optiona'),
(112, 18, 32, 2, 'optionb'),
(112, 18, 36, 2, 'optiona'),
(112, 18, 37, 2, 'optionc'),
(112, 18, 42, 2, 'optionb'),
(112, 18, 45, -0.66, 'optionc'),
(112, 18, 49, -0.66, 'optionb'),
(112, 18, 51, -0.66, 'optionb'),
(112, 18, 54, 2, 'optiona'),
(112, 18, 58, 1, 'optionc'),
(112, 18, 60, 1, 'optiona'),
(112, 18, 61, 2, 'optionb'),
(112, 18, 62, 2, 'optiond'),
(112, 18, 65, 2, 'optiond'),
(113, 8, 1, 1, 'optione'),
(113, 8, 2, -0.33, 'optionb'),
(113, 8, 3, -0.33, 'optionc'),
(113, 8, 4, -0.33, 'optionb'),
(113, 8, 5, -0.33, 'optiona'),
(113, 8, 6, 1, 'optiond'),
(113, 8, 7, 1, 'optionb'),
(113, 8, 8, 1, 'optionb'),
(113, 8, 9, -0.33, 'optiona'),
(113, 8, 10, 1, 'optionc'),
(113, 8, 11, 1, 'optiond'),
(113, 8, 12, 1, 'optiona'),
(113, 8, 13, 1, 'optionb'),
(113, 8, 14, 1, 'optiona'),
(113, 8, 16, -0.33, 'optiona'),
(113, 8, 17, -0.33, 'optionb'),
(113, 8, 18, -0.33, 'optiond'),
(113, 8, 19, 1, 'optiona'),
(113, 8, 25, -0.33, 'optione'),
(113, 8, 26, 1, 'optiond'),
(113, 8, 27, 1, 'optiond'),
(113, 8, 30, 1, 'optionc'),
(113, 8, 31, 1, 'optionc'),
(113, 8, 32, 1, 'optionb'),
(113, 8, 33, 1, 'optiona'),
(113, 8, 34, -0.33, 'optiona'),
(113, 8, 35, 1, 'optionc'),
(113, 8, 36, 1, 'optionc'),
(113, 8, 37, -0.33, 'optiona'),
(113, 8, 38, 1, 'optionb'),
(113, 8, 39, 1, 'optiond'),
(113, 8, 40, -0.33, 'optiona'),
(113, 8, 41, 1, 'optiona'),
(113, 8, 42, 1, 'optiond'),
(113, 8, 43, 1, 'optionb'),
(113, 8, 44, -0.33, 'optiona'),
(113, 8, 45, 1, 'optiond'),
(113, 9, 1, 2, 'optionc'),
(113, 9, 2, 2, 'optionb'),
(113, 9, 4, 2, 'optiona'),
(113, 9, 7, -0.66, 'optionb'),
(113, 9, 8, 2, 'optionb'),
(113, 9, 9, -0.66, 'optionc'),
(113, 9, 25, -0.66, 'optionb'),
(113, 9, 26, 2, 'optionc'),
(113, 9, 29, 2, 'optionc'),
(113, 9, 30, 2, 'optionb'),
(113, 9, 31, -0.66, 'optiond'),
(113, 9, 32, 2, 'optionb'),
(113, 9, 34, 2, 'optiond'),
(113, 9, 35, 2, 'optionb'),
(113, 9, 36, -0.66, 'optiona'),
(113, 9, 37, -0.66, 'optiond'),
(113, 9, 39, 2, 'optiond'),
(113, 9, 46, 2, 'optiond'),
(113, 9, 47, 2, 'optionc'),
(113, 9, 48, -0.66, 'optiond'),
(113, 9, 50, 2, 'optionb'),
(113, 9, 51, 2, 'optionb'),
(113, 9, 52, 2, 'optionb'),
(113, 9, 53, -0.66, 'optionb'),
(113, 9, 54, 2, 'optione'),
(113, 9, 55, 2, 'optionb'),
(113, 13, 1, -0.66, 'optiond'),
(113, 13, 2, 2, 'optionb'),
(113, 13, 3, -0.66, 'optiond'),
(113, 13, 5, -0.66, 'optiond'),
(113, 13, 6, -0.66, 'optiona'),
(113, 13, 7, -0.66, 'optionc'),
(113, 13, 8, 2, 'optionc'),
(113, 13, 10, 2, 'optione'),
(113, 13, 11, 2, 'optiond'),
(113, 13, 12, -0.66, 'optionb'),
(113, 13, 14, 2, 'optionb'),
(113, 13, 22, 2, 'optiona'),
(113, 13, 24, -0.66, 'optiond'),
(113, 13, 25, 2, 'optiona'),
(113, 13, 26, -0.66, 'optionb'),
(113, 13, 27, 2, 'optiond'),
(113, 13, 28, -0.66, 'optiond'),
(113, 13, 29, -0.66, 'optiond'),
(113, 13, 30, -0.66, 'optionc'),
(113, 13, 31, 2, 'optiond'),
(113, 13, 32, 2, 'optiona'),
(113, 13, 34, -0.66, 'optiond'),
(113, 13, 35, -0.66, 'optiond'),
(113, 13, 36, 2, 'optionc'),
(113, 13, 38, 2, 'optionb'),
(113, 13, 39, 2, 'optiona'),
(113, 13, 40, 2, 'optiond'),
(113, 15, 2, 1, 'optiond'),
(113, 15, 3, -0.33, 'optiond'),
(113, 15, 6, 1, 'optiona'),
(113, 15, 9, 1, 'optionb'),
(113, 15, 10, -0.33, 'optionb'),
(113, 15, 11, -0.33, 'optiona'),
(113, 15, 13, 1, 'optionb'),
(113, 15, 14, 1, 'optionc'),
(113, 15, 15, 1, 'optiond'),
(113, 15, 16, 1, 'optiond'),
(113, 15, 18, -0.33, 'optiona'),
(113, 15, 19, 1, 'optionc'),
(113, 15, 20, -0.33, 'optionc'),
(113, 15, 22, 1, 'optionb'),
(113, 15, 23, -0.33, 'optiond'),
(113, 15, 24, 1, 'optiona'),
(113, 15, 25, -0.33, 'optionb'),
(113, 15, 29, 2, 'optiond'),
(113, 15, 30, -0.66, 'optionc'),
(113, 15, 31, 2, 'optiona'),
(113, 15, 33, 2, 'optionc'),
(113, 15, 37, 2, 'optionb'),
(113, 15, 38, 2, 'optionc'),
(113, 15, 40, -0.66, 'optiona'),
(113, 15, 43, 2, 'optiona'),
(113, 15, 44, 2, 'optiond'),
(113, 15, 58, 1, 'optiond'),
(113, 15, 59, 1, 'optiond'),
(113, 15, 60, -0.33, 'optiond'),
(113, 15, 61, -0.66, 'optiona'),
(113, 15, 62, -0.66, 'optionc'),
(113, 15, 64, 2, 'optiond'),
(113, 16, 8, 1, 'optiona'),
(113, 16, 10, -0.33, 'optiona'),
(113, 16, 11, -0.33, 'optionc'),
(113, 16, 14, -0.33, 'optiona'),
(113, 16, 15, -0.33, 'optiond'),
(113, 16, 22, 1, 'optionb'),
(113, 16, 26, -0.66, 'optiond'),
(113, 16, 29, 2, 'optiond'),
(113, 16, 32, -0.66, 'optionb'),
(113, 16, 35, -0.66, 'optiond'),
(113, 16, 36, -0.66, 'optionb'),
(113, 16, 37, 2, 'optionb'),
(113, 16, 38, 2, 'optionb'),
(113, 16, 41, -0.66, 'optionb'),
(113, 16, 43, 2, 'optiona'),
(113, 16, 44, 2, 'optiond'),
(113, 16, 45, 2, 'optiona'),
(113, 16, 47, 2, 'optionc'),
(113, 16, 48, 2, 'optiona'),
(113, 16, 49, 2, 'optionc'),
(113, 16, 50, 2, 'optiona'),
(113, 16, 51, -0.66, 'optionb'),
(113, 16, 52, 2, 'optiona'),
(113, 17, 1, -0.33, 'optionb'),
(113, 17, 2, 1, 'optionb'),
(113, 17, 3, 1, 'optionb'),
(113, 17, 5, 1, 'optionc'),
(113, 17, 6, -0.33, 'optiond'),
(113, 17, 7, -0.33, 'optiond'),
(113, 17, 8, -0.33, 'optionb'),
(113, 17, 9, 1, 'optionb'),
(113, 17, 12, -0.33, 'optionc'),
(113, 17, 13, -0.33, 'optiond'),
(113, 17, 19, -0.33, 'optionc'),
(113, 17, 20, -0.33, 'optionc'),
(113, 17, 21, 1, 'optionc'),
(113, 17, 22, -0.33, 'optionc'),
(113, 17, 23, -0.33, 'optionc'),
(113, 17, 24, 1, 'optionb'),
(113, 17, 25, -0.33, 'optiond'),
(113, 17, 26, 2, 'optionc'),
(113, 17, 29, -0.66, 'optiona'),
(113, 17, 30, -0.66, 'optiond'),
(113, 17, 31, -0.66, 'optionb'),
(113, 17, 33, 2, 'optiona'),
(113, 17, 35, 2, 'optionb'),
(113, 17, 37, 2, 'optionc'),
(113, 17, 38, -0.66, 'optiona'),
(113, 17, 40, -0.66, 'optiona'),
(113, 17, 41, -0.66, 'optionb'),
(113, 17, 46, -0.66, 'optionc'),
(113, 17, 47, -0.66, 'optiond'),
(113, 17, 48, -0.66, 'optionc'),
(113, 17, 50, 2, 'optiond'),
(113, 17, 51, 2, 'optionc'),
(113, 17, 52, 2, 'optiond'),
(113, 17, 53, -0.66, 'optiond'),
(113, 17, 54, 2, 'optiond'),
(113, 17, 55, 2, 'optiona'),
(113, 17, 61, 2, 'optionb'),
(114, 8, 1, 1, 'optione'),
(114, 8, 2, -0.33, 'optiond'),
(114, 8, 3, -0.33, 'optionc'),
(114, 8, 4, 1, 'optiond'),
(114, 8, 5, -0.33, 'optiona'),
(114, 8, 6, 1, 'optiond'),
(114, 8, 7, 1, 'optionb'),
(114, 8, 8, -0.33, 'optionc'),
(114, 8, 9, 1, 'optiond'),
(114, 8, 10, 1, 'optionc'),
(114, 8, 11, 1, 'optiond'),
(114, 8, 12, 1, 'optiona'),
(114, 8, 13, 1, 'optionb'),
(114, 8, 14, 1, 'optiona'),
(114, 8, 16, 1, 'optionc'),
(114, 8, 17, -0.33, 'optiond'),
(114, 8, 18, -0.33, 'optionb'),
(114, 8, 19, 1, 'optiona'),
(114, 8, 21, -0.33, 'optiond'),
(114, 8, 22, -0.33, 'optiond'),
(114, 8, 23, 1, 'optiona'),
(114, 8, 24, 1, 'optiona'),
(114, 8, 25, 1, 'optiond'),
(114, 8, 26, -0.33, 'optionc'),
(114, 8, 27, 1, 'optiond'),
(114, 8, 30, 1, 'optionc'),
(114, 8, 31, 1, 'optionc'),
(114, 8, 32, 1, 'optionb'),
(114, 8, 33, 1, 'optiona'),
(114, 8, 34, 1, 'optiond'),
(114, 8, 35, 1, 'optionc'),
(114, 8, 36, 1, 'optionc'),
(114, 8, 37, 1, 'optiond'),
(114, 8, 38, 1, 'optionb'),
(114, 8, 39, 1, 'optiond'),
(114, 8, 40, -0.33, 'optiona'),
(114, 8, 41, 1, 'optiona'),
(114, 8, 42, 1, 'optiond'),
(114, 8, 43, 1, 'optionb'),
(114, 8, 44, -0.33, 'optiona'),
(114, 8, 45, 1, 'optiond'),
(114, 9, 1, -0.66, 'optiona'),
(114, 9, 2, 2, 'optionb'),
(114, 9, 4, 2, 'optiona'),
(114, 9, 5, 2, 'optiond'),
(114, 9, 6, 2, 'optiond'),
(114, 9, 7, 2, 'optionc'),
(114, 9, 8, 2, 'optionb'),
(114, 9, 9, 2, 'optionb'),
(114, 9, 10, 2, 'optionc'),
(114, 9, 11, 2, 'optiona'),
(114, 9, 12, -0.66, 'optionc'),
(114, 9, 14, 2, 'optionb'),
(114, 9, 17, -0.66, 'optiond'),
(114, 9, 19, 2, 'optionc'),
(114, 9, 20, 2, 'optionc'),
(114, 9, 24, 2, 'optionc'),
(114, 9, 25, 2, 'optiond'),
(114, 9, 26, 2, 'optionc'),
(114, 9, 28, -0.66, 'optionc'),
(114, 9, 29, 2, 'optionc'),
(114, 9, 30, 2, 'optionb'),
(114, 9, 31, 2, 'optione'),
(114, 9, 32, 2, 'optionb'),
(114, 9, 33, -0.66, 'optiona'),
(114, 9, 34, 2, 'optiond'),
(114, 9, 35, 2, 'optionb'),
(114, 9, 37, -0.66, 'optiond'),
(114, 15, 1, 1, 'optionc'),
(114, 15, 2, 1, 'optiond'),
(114, 15, 3, 1, 'optionc'),
(114, 15, 4, 1, 'optiona'),
(114, 15, 5, 1, 'optionb'),
(114, 15, 6, 1, 'optiona'),
(114, 15, 10, 1, 'optiona'),
(114, 15, 11, 1, 'optiond'),
(114, 15, 12, 1, 'optionc'),
(114, 15, 13, 1, 'optionb'),
(114, 15, 14, 1, 'optionc'),
(114, 15, 15, 1, 'optiond'),
(114, 15, 16, 1, 'optiond'),
(114, 15, 17, 1, 'optionb'),
(114, 15, 18, 1, 'optionb'),
(114, 15, 19, 1, 'optionc'),
(114, 15, 20, 1, 'optionb'),
(114, 15, 21, 1, 'optiona'),
(114, 15, 22, 1, 'optionb'),
(114, 15, 23, 1, 'optiona'),
(114, 15, 24, 1, 'optiona'),
(114, 15, 25, 1, 'optiond'),
(114, 15, 26, 2, 'optiona'),
(114, 15, 28, -0.66, 'optionc'),
(114, 15, 29, 2, 'optiond'),
(114, 15, 30, 2, 'optionb'),
(114, 15, 31, 2, 'optiona'),
(114, 15, 32, 2, 'optiona'),
(114, 15, 33, 2, 'optionc'),
(114, 15, 36, 2, 'optiond'),
(114, 15, 37, 2, 'optionb'),
(114, 15, 38, 2, 'optionc'),
(114, 15, 39, 2, 'optionb'),
(114, 15, 40, 2, 'optiond'),
(114, 15, 41, 2, 'optionc'),
(114, 15, 42, 2, 'optiona'),
(114, 15, 43, 2, 'optiona'),
(114, 15, 44, 2, 'optiond'),
(114, 15, 45, 2, 'optiona'),
(114, 15, 47, 2, 'optiond'),
(114, 15, 48, -0.66, 'optiond'),
(114, 15, 49, -0.66, 'optiond'),
(114, 15, 50, 2, 'optiond'),
(114, 15, 51, -0.66, 'optionc'),
(114, 15, 52, 2, 'optionc'),
(114, 15, 56, 1, 'optionc'),
(114, 15, 58, 1, 'optiond'),
(114, 15, 59, 1, 'optiond'),
(114, 15, 60, 1, 'optiona'),
(114, 15, 61, 2, 'optionc'),
(114, 15, 63, 2, 'optiond'),
(114, 15, 64, -0.66, 'optionc'),
(114, 16, 1, 1, 'optionc'),
(114, 16, 3, 1, 'optiond'),
(114, 16, 4, 1, 'optiond'),
(114, 16, 6, 1, 'optionb'),
(114, 16, 8, 1, 'optiona'),
(114, 16, 9, 1, 'optionc'),
(114, 16, 10, -0.33, 'optiond'),
(114, 16, 12, -0.33, 'optionc'),
(114, 16, 14, -0.33, 'optionc'),
(114, 16, 15, 1, 'optionc'),
(114, 16, 16, -0.33, 'optiona'),
(114, 16, 19, 1, 'optiond'),
(114, 16, 21, 1, 'optiond'),
(114, 16, 22, 1, 'optionb'),
(114, 16, 23, -0.33, 'optiona'),
(114, 16, 26, 2, 'optiona'),
(114, 16, 28, -0.66, 'optiona'),
(114, 16, 29, 2, 'optiond'),
(114, 16, 30, -0.66, 'optionc'),
(114, 16, 32, -0.66, 'optionb'),
(114, 16, 35, -0.66, 'optiond'),
(114, 16, 37, 2, 'optionb'),
(114, 16, 40, 2, 'optiona'),
(114, 16, 43, 2, 'optiona'),
(114, 16, 44, 2, 'optiond'),
(114, 16, 45, 2, 'optiona'),
(114, 16, 46, -0.66, 'optionb'),
(114, 16, 47, -0.66, 'optiona'),
(114, 16, 50, 2, 'optiona'),
(114, 16, 51, -0.66, 'optionb'),
(114, 16, 53, 2, 'optionb'),
(114, 16, 59, 1, 'optionc'),
(114, 16, 60, -0.33, 'optionb'),
(114, 16, 61, 2, 'optionb'),
(114, 17, 1, 1, 'optiona'),
(114, 17, 2, 1, 'optionb'),
(114, 17, 3, 1, 'optionb'),
(114, 17, 5, 1, 'optionc'),
(114, 17, 6, -0.33, 'optionb'),
(114, 17, 8, 1, 'optiona'),
(114, 17, 9, -0.33, 'optiona'),
(114, 17, 10, -0.33, 'optionb'),
(114, 17, 11, -0.33, 'optionc'),
(114, 17, 12, -0.33, 'optionc'),
(114, 17, 14, 1, 'optionc'),
(114, 17, 19, 1, 'optionb'),
(114, 17, 20, -0.33, 'optionb'),
(114, 17, 21, -0.33, 'optiona'),
(114, 17, 22, 1, 'optionb'),
(114, 17, 23, 1, 'optiond'),
(114, 17, 25, 1, 'optionb'),
(114, 17, 26, 2, 'optionc'),
(114, 17, 28, 2, 'optiond'),
(114, 17, 30, 2, 'optiona'),
(114, 17, 31, -0.66, 'optionc'),
(114, 17, 32, 2, 'optiona'),
(114, 17, 33, 2, 'optiona'),
(114, 17, 35, 2, 'optionb'),
(114, 17, 37, 2, 'optionc'),
(114, 17, 38, -0.66, 'optiona'),
(114, 17, 45, -0.66, 'optionc'),
(114, 17, 47, -0.66, 'optionb'),
(114, 17, 48, -0.66, 'optionc'),
(114, 17, 50, 2, 'optiond'),
(114, 17, 51, 2, 'optionc'),
(114, 17, 54, 2, 'optiond'),
(114, 17, 55, -0.66, 'optionb'),
(114, 17, 56, -0.33, 'optionc'),
(114, 17, 58, 1, 'optionc'),
(114, 17, 59, -0.33, 'optionb'),
(114, 17, 60, -0.33, 'optiona'),
(114, 17, 61, 2, 'optionb'),
(114, 18, 2, 1, 'optiond'),
(114, 18, 3, 1, 'optionb'),
(114, 18, 4, 1, 'optiona'),
(114, 18, 6, -0.33, 'optiona'),
(114, 18, 8, -0.33, 'optiona'),
(114, 18, 10, -0.33, 'optiona'),
(114, 18, 11, -0.33, 'optionc'),
(114, 18, 12, 1, 'optiona'),
(114, 18, 13, 1, 'optiond'),
(114, 18, 15, 1, 'optionc'),
(114, 18, 16, -0.33, 'optiona'),
(114, 18, 17, 1, 'optionb'),
(114, 18, 18, 1, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(114, 18, 19, 1, 'optionc'),
(114, 18, 20, 1, 'optionb'),
(114, 18, 21, 1, 'optiond'),
(114, 18, 22, 1, 'optiond'),
(114, 18, 24, 1, 'optionc'),
(114, 18, 26, 2, 'optionb'),
(114, 18, 27, 2, 'optiond'),
(114, 18, 28, -0.66, 'optiond'),
(114, 18, 29, 2, 'optiond'),
(114, 18, 31, 2, 'optiona'),
(114, 18, 32, -0.66, 'optiona'),
(114, 18, 33, 2, 'optiond'),
(114, 18, 37, -0.66, 'optiona'),
(114, 18, 42, 2, 'optionb'),
(114, 18, 44, 2, 'optionc'),
(114, 18, 45, -0.66, 'optionc'),
(114, 18, 47, 2, 'optiond'),
(114, 18, 49, 2, 'optionc'),
(114, 18, 50, 2, 'optionc'),
(114, 18, 51, -0.66, 'optiond'),
(114, 18, 52, 2, 'optiona'),
(114, 18, 54, 2, 'optiona'),
(114, 18, 56, 1, 'optione'),
(114, 18, 58, 1, 'optionc'),
(114, 18, 59, 1, 'optionc'),
(114, 18, 60, 1, 'optiona'),
(114, 18, 61, 2, 'optionb'),
(114, 18, 64, -0.66, 'optionc'),
(114, 18, 65, 2, 'optiond'),
(115, 9, 1, 2, 'optionc'),
(115, 9, 2, 2, 'optionb'),
(115, 9, 4, 2, 'optiona'),
(115, 9, 5, 2, 'optiond'),
(115, 9, 6, 2, 'optiond'),
(115, 9, 7, 2, 'optionc'),
(115, 9, 8, 2, 'optionb'),
(115, 9, 9, 2, 'optionb'),
(115, 9, 10, 2, 'optionc'),
(115, 9, 11, 2, 'optiona'),
(115, 9, 12, -0.66, 'optionc'),
(115, 9, 14, -0.66, 'optiond'),
(115, 9, 15, -0.66, 'optionb'),
(115, 9, 16, -0.66, 'optiond'),
(115, 9, 17, -0.66, 'optiond'),
(115, 9, 18, -0.66, 'optiona'),
(115, 9, 23, 2, 'optionc'),
(115, 9, 24, 2, 'optionc'),
(115, 9, 25, 2, 'optiond'),
(115, 9, 26, 2, 'optionc'),
(115, 9, 29, 2, 'optionc'),
(115, 9, 30, 2, 'optionb'),
(115, 9, 31, -0.66, 'optionc'),
(115, 9, 32, 2, 'optionb'),
(115, 9, 34, -0.66, 'optiona'),
(115, 9, 35, 2, 'optionb'),
(115, 9, 37, -0.66, 'optiond'),
(115, 16, 1, 1, 'optionc'),
(115, 16, 3, 1, 'optiond'),
(115, 16, 4, 1, 'optiond'),
(115, 16, 6, 1, 'optionb'),
(115, 16, 8, 1, 'optiona'),
(115, 16, 9, -0.33, 'optiona'),
(115, 16, 10, 1, 'optionc'),
(115, 16, 11, -0.33, 'optiond'),
(115, 16, 12, -0.33, 'optiona'),
(115, 16, 13, -0.33, 'optiona'),
(115, 16, 15, -0.33, 'optiond'),
(115, 16, 19, 1, 'optiond'),
(115, 16, 20, 1, 'optiona'),
(115, 16, 21, -0.33, 'optiona'),
(115, 16, 22, 1, 'optionb'),
(115, 16, 26, 2, 'optiona'),
(115, 16, 29, 2, 'optiond'),
(115, 16, 30, 2, 'optiond'),
(115, 16, 31, -0.66, 'optionb'),
(115, 16, 32, -0.66, 'optionb'),
(115, 16, 33, 2, 'optiond'),
(115, 16, 34, -0.66, 'optiond'),
(115, 16, 35, 2, 'optionb'),
(115, 16, 36, -0.66, 'optiona'),
(115, 16, 37, 2, 'optionb'),
(115, 16, 40, 2, 'optiona'),
(115, 16, 43, 2, 'optiona'),
(115, 16, 44, 2, 'optiond'),
(115, 16, 45, 2, 'optiona'),
(115, 16, 47, 2, 'optionc'),
(115, 16, 48, 2, 'optiona'),
(115, 16, 51, -0.66, 'optionb'),
(115, 16, 52, 2, 'optiona'),
(115, 16, 53, 2, 'optionb'),
(115, 16, 56, 1, 'optiond'),
(115, 16, 60, 1, 'optionc'),
(115, 16, 61, 2, 'optionb'),
(115, 16, 62, 2, 'optiond'),
(115, 16, 63, -0.66, 'optiond'),
(115, 17, 1, -0.33, 'optionb'),
(115, 17, 2, 1, 'optionb'),
(115, 17, 3, 1, 'optionb'),
(115, 17, 4, 1, 'optionc'),
(115, 17, 5, 1, 'optionc'),
(115, 17, 6, 1, 'optiona'),
(115, 17, 7, 1, 'optionc'),
(115, 17, 8, 1, 'optiona'),
(115, 17, 9, 1, 'optionb'),
(115, 17, 10, -0.33, 'optionc'),
(115, 17, 12, -0.33, 'optionc'),
(115, 17, 13, 1, 'optionb'),
(115, 17, 14, 1, 'optionc'),
(115, 17, 18, -0.33, 'optiond'),
(115, 17, 19, 1, 'optionb'),
(115, 17, 21, -0.33, 'optiona'),
(115, 17, 22, 1, 'optionb'),
(115, 17, 23, 1, 'optiond'),
(115, 17, 24, 1, 'optionb'),
(115, 17, 25, 1, 'optionb'),
(115, 17, 26, 2, 'optionc'),
(115, 17, 28, 2, 'optiond'),
(115, 17, 29, 2, 'optiond'),
(115, 17, 30, 2, 'optiona'),
(115, 17, 31, 2, 'optiond'),
(115, 17, 32, 2, 'optiona'),
(115, 17, 33, 2, 'optiona'),
(115, 17, 34, 2, 'optiond'),
(115, 17, 35, -0.66, 'optionc'),
(115, 17, 37, 2, 'optionc'),
(115, 17, 38, -0.66, 'optiond'),
(115, 17, 41, 2, 'optionc'),
(115, 17, 42, 2, 'optionb'),
(115, 17, 45, 2, 'optionb'),
(115, 17, 46, 2, 'optionb'),
(115, 17, 47, -0.66, 'optionb'),
(115, 17, 48, 2, 'optiond'),
(115, 17, 50, -0.66, 'optiona'),
(115, 17, 52, 2, 'optiond'),
(115, 17, 53, 2, 'optiona'),
(115, 17, 54, -0.66, 'optionb'),
(115, 17, 55, 2, 'optiona'),
(115, 17, 57, -0.33, 'optiond'),
(115, 17, 58, 1, 'optionc'),
(115, 17, 61, -0.66, 'optiona'),
(115, 17, 62, -0.66, 'optiond'),
(115, 17, 63, -0.66, 'optionb'),
(115, 18, 1, 1, 'optiona'),
(115, 18, 2, 1, 'optiond'),
(115, 18, 3, 1, 'optionb'),
(115, 18, 4, 1, 'optiona'),
(115, 18, 6, 1, 'optionc'),
(115, 18, 7, 1, 'optionb'),
(115, 18, 9, 1, 'optiond'),
(115, 18, 10, -0.33, 'optiond'),
(115, 18, 12, 1, 'optiona'),
(115, 18, 13, 1, 'optiond'),
(115, 18, 14, 1, 'optionc'),
(115, 18, 15, 1, 'optionc'),
(115, 18, 18, -0.33, 'optionb'),
(115, 18, 19, 1, 'optionc'),
(115, 18, 20, -0.33, 'optiona'),
(115, 18, 21, -0.33, 'optionc'),
(115, 18, 22, 1, 'optiond'),
(115, 18, 23, 1, 'optiond'),
(115, 18, 24, 1, 'optionc'),
(115, 18, 26, 2, 'optionb'),
(115, 18, 29, 2, 'optiond'),
(115, 18, 30, 2, 'optionc'),
(115, 18, 32, 2, 'optionb'),
(115, 18, 33, 2, 'optiond'),
(115, 18, 34, 2, 'optiona'),
(115, 18, 36, -0.66, 'optionb'),
(115, 18, 37, 2, 'optionc'),
(115, 18, 38, 2, 'optionb'),
(115, 18, 39, 2, 'optiona'),
(115, 18, 42, 2, 'optionb'),
(115, 18, 44, -0.66, 'optionb'),
(115, 18, 45, -0.66, 'optionc'),
(115, 18, 47, 2, 'optiond'),
(115, 18, 48, -0.66, 'optionc'),
(115, 18, 49, -0.66, 'optiona'),
(115, 18, 50, 2, 'optionc'),
(115, 18, 52, 2, 'optiona'),
(115, 18, 54, 2, 'optiona'),
(115, 18, 56, 1, 'optione'),
(115, 18, 57, 1, 'optionb'),
(115, 18, 58, -0.33, 'optiona'),
(115, 18, 59, 1, 'optionc'),
(115, 18, 60, 1, 'optiona'),
(115, 18, 61, 2, 'optionb'),
(115, 18, 62, 2, 'optiond'),
(115, 18, 64, -0.66, 'optionc'),
(115, 18, 65, 2, 'optiond'),
(116, 7, 1, -0.33, 'optionc'),
(116, 7, 2, 1, 'optiond'),
(116, 7, 3, 1, 'optionb'),
(116, 7, 4, -0.33, 'optionb'),
(116, 7, 5, -0.33, 'optionb'),
(116, 7, 6, 1, 'optionb'),
(116, 7, 8, 1, 'optionb'),
(116, 7, 9, 1, 'optiona'),
(116, 7, 10, 1, 'optionc'),
(116, 7, 11, 1, 'optiona'),
(116, 7, 12, -0.33, 'optiona'),
(116, 7, 14, 1, 'optionc'),
(116, 7, 15, 1, 'optionb'),
(116, 7, 16, 1, 'optiona'),
(116, 7, 17, 1, 'optionc'),
(116, 7, 18, 1, 'optiona'),
(116, 7, 19, 1, 'optiond'),
(116, 7, 20, 1, 'optiona'),
(116, 7, 21, 1, 'optiond'),
(116, 7, 22, 1, 'optiond'),
(116, 7, 23, 1, 'optiond'),
(116, 7, 24, 1, 'optiona'),
(116, 7, 25, 1, 'optionc'),
(116, 7, 26, 2, 'optiona'),
(116, 7, 27, -0.66, 'optionc'),
(116, 7, 28, 2, 'optiona'),
(116, 7, 30, 2, 'optionc'),
(116, 7, 31, 2, 'optiona'),
(116, 7, 32, 2, 'optiona'),
(116, 7, 33, 2, 'optiond'),
(116, 7, 34, -0.66, 'optiond'),
(116, 7, 35, 2, 'optionc'),
(116, 7, 36, 2, 'optionc'),
(116, 7, 37, -0.66, 'optionb'),
(116, 7, 39, -0.66, 'optionb'),
(116, 7, 40, 2, 'optionb'),
(116, 7, 41, 2, 'optionc'),
(116, 7, 42, 2, 'optionc'),
(116, 7, 43, 2, 'optionb'),
(116, 7, 44, 2, 'optionb'),
(116, 7, 45, 2, 'optiond'),
(116, 7, 46, -0.66, 'optionc'),
(116, 7, 47, 2, 'optionb'),
(116, 7, 48, 2, 'optionb'),
(116, 7, 49, 2, 'optionb'),
(116, 7, 50, 2, 'optionc'),
(116, 7, 51, 2, 'optionb'),
(116, 7, 52, 2, 'optiona'),
(116, 7, 53, 2, 'optionb'),
(116, 7, 54, 2, 'optiond'),
(116, 7, 55, 2, 'optiond'),
(116, 7, 56, -0.33, 'optiona'),
(116, 7, 57, -0.33, 'optiond'),
(116, 7, 58, 1, 'optionb'),
(116, 7, 59, 1, 'optiond'),
(116, 7, 60, 1, 'optionc'),
(116, 7, 61, 2, 'optionb'),
(116, 7, 62, 2, 'optionc'),
(116, 7, 63, 2, 'optiond'),
(116, 7, 64, 2, 'optionc'),
(116, 7, 65, -0.66, 'optiond'),
(116, 8, 1, 1, 'optione'),
(116, 8, 2, -0.33, 'optiond'),
(116, 8, 3, 1, 'optionb'),
(116, 8, 4, 1, 'optiond'),
(116, 8, 5, 1, 'optionc'),
(116, 8, 6, 1, 'optiond'),
(116, 8, 7, 1, 'optionb'),
(116, 8, 8, -0.33, 'optiona'),
(116, 8, 9, 1, 'optiond'),
(116, 8, 10, 1, 'optionc'),
(116, 8, 11, 1, 'optiond'),
(116, 8, 12, 1, 'optiona'),
(116, 8, 13, 1, 'optionb'),
(116, 8, 14, 1, 'optiona'),
(116, 8, 15, 1, 'optionc'),
(116, 8, 16, 1, 'optionc'),
(116, 8, 18, -0.33, 'optiond'),
(116, 8, 19, 1, 'optiona'),
(116, 8, 20, 1, 'optione'),
(116, 8, 22, -0.33, 'optionb'),
(116, 8, 23, -0.33, 'optionb'),
(116, 8, 24, 1, 'optiona'),
(116, 8, 25, 1, 'optiond'),
(116, 8, 26, 1, 'optiond'),
(116, 8, 27, 1, 'optiond'),
(116, 8, 29, 1, 'optionb'),
(116, 8, 30, 1, 'optionc'),
(116, 8, 31, 1, 'optionc'),
(116, 8, 32, 1, 'optionb'),
(116, 8, 33, 1, 'optiona'),
(116, 8, 34, 1, 'optiond'),
(116, 8, 35, 1, 'optionc'),
(116, 8, 36, 1, 'optionc'),
(116, 8, 37, 1, 'optiond'),
(116, 8, 38, 1, 'optionb'),
(116, 8, 39, 1, 'optiond'),
(116, 8, 40, 1, 'optionc'),
(116, 8, 41, 1, 'optiona'),
(116, 8, 42, 1, 'optiond'),
(116, 8, 43, 1, 'optionb'),
(116, 8, 44, 1, 'optionb'),
(116, 8, 45, 1, 'optiond'),
(116, 10, 1, 2, 'optione'),
(116, 10, 2, 2, 'optionb'),
(116, 10, 3, -0.66, 'optiona'),
(116, 10, 5, 2, 'optionb'),
(116, 10, 6, 2, 'optionb'),
(116, 10, 9, 2, 'optionc'),
(116, 10, 10, -0.66, 'optiona'),
(116, 10, 11, 2, 'optionc'),
(116, 10, 12, 2, 'optionb'),
(116, 10, 13, 2, 'optionc'),
(116, 10, 14, 2, 'optionb'),
(116, 10, 15, 2, 'optiond'),
(116, 10, 16, 2, 'optiona'),
(116, 10, 17, -0.66, 'optionc'),
(116, 10, 19, 2, 'optiona'),
(116, 10, 20, -0.66, 'optionb'),
(116, 10, 21, 2, 'optionb'),
(116, 10, 22, 2, 'optionb'),
(116, 10, 23, 2, 'optiond'),
(116, 11, 1, 2, 'optionb'),
(116, 11, 2, 2, 'optionc'),
(116, 11, 3, -0.66, 'optionc'),
(116, 11, 4, 2, 'optiond'),
(116, 11, 5, 2, 'optionb'),
(116, 11, 6, 2, 'optionb'),
(116, 11, 7, 2, 'optionb'),
(116, 11, 8, 2, 'optiona'),
(116, 11, 9, 2, 'optionc'),
(116, 11, 10, -0.66, 'optionc'),
(116, 11, 11, 2, 'optiona'),
(116, 11, 13, 2, 'optionb'),
(116, 11, 14, 2, 'optionc'),
(116, 11, 15, 2, 'optionc'),
(116, 11, 17, 2, 'optiona'),
(116, 11, 18, 2, 'optionb'),
(116, 11, 19, 2, 'optionb'),
(116, 11, 20, -0.66, 'optionb'),
(116, 11, 21, -0.66, 'optiond'),
(116, 11, 22, 2, 'optiona'),
(116, 11, 23, 2, 'optionc'),
(116, 11, 24, 2, 'optiona'),
(116, 11, 25, 2, 'optionb'),
(116, 11, 26, 2, 'optionc'),
(116, 11, 27, 2, 'optione'),
(116, 11, 29, 2, 'optiond'),
(116, 11, 30, -0.66, 'optionb'),
(116, 11, 32, 2, 'optionc'),
(116, 11, 33, -0.66, 'optione'),
(116, 11, 34, -0.66, 'optiona'),
(116, 11, 35, 2, 'optiond'),
(116, 11, 36, 2, 'optione'),
(116, 11, 38, 2, 'optiona'),
(116, 11, 39, 2, 'optiona'),
(116, 11, 40, 2, 'optiond'),
(116, 11, 41, 2, 'optionc'),
(116, 11, 42, -0.66, 'optionc'),
(116, 11, 43, -0.66, 'optionc'),
(116, 11, 45, 2, 'optiona'),
(116, 11, 46, -0.66, 'optiond'),
(116, 11, 47, -0.66, 'optiona'),
(116, 11, 48, -0.66, 'optionc'),
(116, 11, 49, 2, 'optiond'),
(116, 11, 51, 2, 'optiond'),
(116, 11, 52, -0.66, 'optionc'),
(116, 11, 53, 2, 'optionc'),
(116, 11, 55, -0.66, 'optionc'),
(116, 11, 56, 2, 'optione'),
(116, 11, 57, 2, 'optionc'),
(116, 11, 58, 2, 'optione'),
(116, 11, 60, -0.66, 'optione'),
(116, 12, 1, 2, 'optionc'),
(116, 12, 2, 2, 'optionc'),
(116, 12, 5, 2, 'optiona'),
(116, 12, 6, 2, 'optiond'),
(116, 12, 7, 2, 'optionb'),
(116, 12, 8, 2, 'optionb'),
(116, 12, 9, 2, 'optiona'),
(116, 12, 10, 2, 'optiond'),
(116, 12, 11, 2, 'optionb'),
(116, 12, 12, 2, 'optionb'),
(116, 12, 13, 2, 'optionb'),
(116, 12, 14, 2, 'optiona'),
(116, 12, 15, 2, 'optiond'),
(116, 12, 16, 2, 'optionc'),
(116, 12, 17, 2, 'optionc'),
(116, 12, 18, 2, 'optiond'),
(116, 12, 19, 2, 'optionb'),
(116, 12, 20, 2, 'optionb'),
(116, 12, 21, 2, 'optiona'),
(116, 12, 22, 2, 'optiond'),
(116, 12, 23, -0.66, 'optiona'),
(116, 12, 24, 2, 'optiona'),
(116, 12, 25, 2, 'optionc'),
(116, 12, 26, 2, 'optionb'),
(116, 12, 27, -0.66, 'optione'),
(116, 12, 28, -0.66, 'optionb'),
(116, 12, 29, 2, 'optiona'),
(116, 12, 30, -0.66, 'optiona'),
(116, 12, 31, -0.66, 'optionb'),
(116, 12, 32, 2, 'optionc'),
(116, 12, 34, 2, 'optiond'),
(116, 12, 35, -0.66, 'optionc'),
(116, 12, 36, 2, 'optionc'),
(116, 12, 37, 2, 'optiona'),
(116, 12, 38, 2, 'optionc'),
(116, 12, 40, 2, 'optiona'),
(116, 12, 41, 2, 'optionb'),
(116, 12, 42, 2, 'optiona'),
(116, 12, 43, -0.66, 'optionc'),
(116, 12, 44, 2, 'optionb'),
(116, 12, 45, 2, 'optiond'),
(116, 12, 46, 2, 'optiond'),
(116, 12, 47, 2, 'optionc'),
(116, 12, 48, -0.66, 'optionc'),
(116, 12, 49, 2, 'optionc'),
(116, 12, 50, 2, 'optionb'),
(116, 12, 51, 2, 'optionc'),
(116, 12, 52, 2, 'optionb'),
(116, 12, 53, 2, 'optiona'),
(116, 12, 54, 2, 'optiona'),
(116, 13, 1, -0.66, 'optiond'),
(116, 13, 2, 2, 'optionb'),
(116, 13, 3, -0.66, 'optiond'),
(116, 13, 6, -0.66, 'optiona'),
(116, 13, 7, 2, 'optionb'),
(116, 13, 8, 2, 'optionc'),
(116, 13, 9, -0.66, 'optiond'),
(116, 13, 10, 2, 'optione'),
(116, 13, 11, 2, 'optiond'),
(116, 13, 15, -0.66, 'optionb'),
(116, 13, 18, -0.66, 'optionb'),
(116, 13, 19, 2, 'optionb'),
(116, 13, 20, 2, 'optiona'),
(116, 13, 22, -0.66, 'optionc'),
(116, 13, 23, 2, 'optiona'),
(116, 13, 24, -0.66, 'optiond'),
(116, 13, 25, 2, 'optiona'),
(116, 13, 26, -0.66, 'optionb'),
(116, 13, 27, 2, 'optiond'),
(116, 13, 28, 2, 'optionc'),
(116, 13, 29, 2, 'optionc'),
(116, 13, 30, 2, 'optiona'),
(116, 13, 31, 2, 'optiond'),
(116, 13, 32, -0.66, 'optionc'),
(116, 13, 33, -0.66, 'optiond'),
(116, 13, 34, 2, 'optiona'),
(116, 13, 35, -0.66, 'optionb'),
(116, 13, 36, 2, 'optionc'),
(116, 13, 37, -0.66, 'optionb'),
(116, 13, 38, 2, 'optionb'),
(116, 13, 39, 2, 'optiona'),
(116, 13, 40, 2, 'optiond'),
(116, 15, 1, 1, 'optionc'),
(116, 15, 2, 1, 'optiond'),
(116, 15, 3, 1, 'optionc'),
(116, 15, 4, 1, 'optiona'),
(116, 15, 5, 1, 'optionb'),
(116, 15, 6, 1, 'optiona'),
(116, 15, 7, -0.33, 'optiond'),
(116, 15, 8, 1, 'optiona'),
(116, 15, 9, 1, 'optionb'),
(116, 15, 10, 1, 'optiona'),
(116, 15, 11, 1, 'optiond'),
(116, 15, 12, 1, 'optionc'),
(116, 15, 13, 1, 'optionb'),
(116, 15, 14, 1, 'optionc'),
(116, 15, 15, 1, 'optiond'),
(116, 15, 16, 1, 'optiond'),
(116, 15, 17, 1, 'optionb'),
(116, 15, 18, 1, 'optionb'),
(116, 15, 19, 1, 'optionc'),
(116, 15, 20, 1, 'optionb'),
(116, 15, 21, 1, 'optiona'),
(116, 15, 22, 1, 'optionb'),
(116, 15, 23, 1, 'optiona'),
(116, 15, 24, 1, 'optiona'),
(116, 15, 25, 1, 'optiond'),
(116, 15, 26, 2, 'optiona'),
(116, 15, 27, 2, 'optiona'),
(116, 15, 28, 2, 'optiond'),
(116, 15, 29, 2, 'optiond'),
(116, 15, 30, 2, 'optionb'),
(116, 15, 31, 2, 'optiona'),
(116, 15, 32, 2, 'optiona'),
(116, 15, 33, 2, 'optionc'),
(116, 15, 34, -0.66, 'optiond'),
(116, 15, 35, 2, 'optionc'),
(116, 15, 36, 2, 'optiond'),
(116, 15, 37, 2, 'optionb'),
(116, 15, 38, 2, 'optionc'),
(116, 15, 39, 2, 'optionb'),
(116, 15, 40, 2, 'optiond'),
(116, 15, 41, -0.66, 'optionb'),
(116, 15, 42, 2, 'optiona'),
(116, 15, 43, 2, 'optiona'),
(116, 15, 44, 2, 'optiond'),
(116, 15, 45, -0.66, 'optionc'),
(116, 15, 46, 2, 'optionb'),
(116, 15, 47, 2, 'optiond'),
(116, 15, 50, 2, 'optiond'),
(116, 15, 51, 2, 'optionb'),
(116, 15, 52, 2, 'optionc'),
(116, 15, 53, 2, 'optionc'),
(116, 15, 54, 2, 'optionc'),
(116, 15, 55, 2, 'optionb'),
(116, 15, 56, 1, 'optionc'),
(116, 15, 57, 1, 'optionb'),
(116, 15, 58, 1, 'optiond'),
(116, 15, 59, 1, 'optiond'),
(116, 15, 60, 1, 'optiona'),
(116, 15, 61, 2, 'optionc'),
(116, 15, 62, 2, 'optionb'),
(116, 15, 63, 2, 'optiond'),
(116, 15, 64, 2, 'optiond'),
(116, 16, 1, 1, 'optionc'),
(116, 16, 3, 1, 'optiond'),
(116, 16, 4, 1, 'optiond'),
(116, 16, 6, 1, 'optionb'),
(116, 16, 7, 1, 'optiond'),
(116, 16, 9, 1, 'optionc'),
(116, 16, 10, 1, 'optionc'),
(116, 16, 11, 1, 'optionb'),
(116, 16, 12, 1, 'optiond'),
(116, 16, 13, 1, 'optionb'),
(116, 16, 14, 1, 'optiond'),
(116, 16, 15, -0.33, 'optiond'),
(116, 16, 16, 1, 'optiond'),
(116, 16, 17, 1, 'optiona'),
(116, 16, 19, 1, 'optiond'),
(116, 16, 20, 1, 'optiona'),
(116, 16, 21, -0.33, 'optiona'),
(116, 16, 22, 1, 'optionb'),
(116, 16, 23, 1, 'optionc'),
(116, 16, 26, 2, 'optiona'),
(116, 16, 27, 2, 'optionb'),
(116, 16, 28, 2, 'optiond'),
(116, 16, 30, 2, 'optiond'),
(116, 16, 32, 2, 'optiond'),
(116, 16, 34, 2, 'optiona'),
(116, 16, 35, 2, 'optionb'),
(116, 16, 36, -0.66, 'optiona'),
(116, 16, 37, 2, 'optionb'),
(116, 16, 38, 2, 'optionb'),
(116, 16, 40, 2, 'optiona'),
(116, 16, 42, 2, 'optiona'),
(116, 16, 43, 2, 'optiona'),
(116, 16, 44, 2, 'optiond'),
(116, 16, 45, 2, 'optiona'),
(116, 16, 47, 2, 'optionc'),
(116, 16, 48, 2, 'optiona'),
(116, 16, 49, 2, 'optionc'),
(116, 16, 50, 2, 'optiona'),
(116, 16, 51, -0.66, 'optiond'),
(116, 16, 52, 2, 'optiona'),
(116, 16, 53, 2, 'optionb'),
(116, 16, 54, 2, 'optionc'),
(116, 16, 55, -0.66, 'optiond'),
(116, 16, 60, 1, 'optionc'),
(116, 16, 61, 2, 'optionb'),
(116, 16, 62, 2, 'optiond'),
(116, 16, 64, -0.66, 'optiona'),
(116, 17, 2, 1, 'optionb'),
(116, 17, 3, 1, 'optionb'),
(116, 17, 4, -0.33, 'optionb'),
(116, 17, 5, 1, 'optionc'),
(116, 17, 7, 1, 'optionc'),
(116, 17, 8, 1, 'optiona'),
(116, 17, 9, -0.33, 'optiona'),
(116, 17, 10, 1, 'optiona'),
(116, 17, 11, 1, 'optiond'),
(116, 17, 12, 1, 'optiona'),
(116, 17, 13, 1, 'optionb'),
(116, 17, 14, 1, 'optionc'),
(116, 17, 16, 1, 'optionb'),
(116, 17, 17, 1, 'optiona'),
(116, 17, 18, -0.33, 'optiona'),
(116, 17, 19, 1, 'optionb'),
(116, 17, 20, -0.33, 'optionb'),
(116, 17, 21, 1, 'optionc'),
(116, 17, 22, 1, 'optionb'),
(116, 17, 23, 1, 'optiond'),
(116, 17, 24, 1, 'optionb'),
(116, 17, 25, 1, 'optionb'),
(116, 17, 26, 2, 'optionc'),
(116, 17, 27, 2, 'optionc'),
(116, 17, 28, 2, 'optiond'),
(116, 17, 29, 2, 'optiond'),
(116, 17, 30, 2, 'optiona'),
(116, 17, 31, 2, 'optiond'),
(116, 17, 32, 2, 'optiona'),
(116, 17, 33, 2, 'optiona'),
(116, 17, 34, 2, 'optiond'),
(116, 17, 35, 2, 'optionb'),
(116, 17, 36, -0.66, 'optionc'),
(116, 17, 37, 2, 'optionc'),
(116, 17, 38, -0.66, 'optiona'),
(116, 17, 39, 2, 'optionb'),
(116, 17, 40, -0.66, 'optiond'),
(116, 17, 41, 2, 'optionc'),
(116, 17, 42, 2, 'optionb'),
(116, 17, 45, 2, 'optionb'),
(116, 17, 47, -0.66, 'optiond'),
(116, 17, 48, 2, 'optiond'),
(116, 17, 49, -0.66, 'optiond'),
(116, 17, 51, 2, 'optionc'),
(116, 17, 52, 2, 'optiond'),
(116, 17, 53, 2, 'optiona'),
(116, 17, 54, 2, 'optiond'),
(116, 17, 55, 2, 'optiona'),
(116, 17, 57, 1, 'optionb'),
(116, 17, 58, 1, 'optionc'),
(116, 17, 60, 1, 'optiond'),
(116, 17, 61, 2, 'optionb'),
(116, 17, 63, 2, 'optiona'),
(116, 17, 65, 2, 'optiond'),
(116, 18, 1, 1, 'optiona'),
(116, 18, 2, 1, 'optiond'),
(116, 18, 3, 1, 'optionb'),
(116, 18, 4, 1, 'optiona'),
(116, 18, 6, 1, 'optionc'),
(116, 18, 7, 1, 'optionb'),
(116, 18, 8, -0.33, 'optiond'),
(116, 18, 9, 1, 'optiond'),
(116, 18, 10, -0.33, 'optiond'),
(116, 18, 11, 1, 'optionb'),
(116, 18, 12, 1, 'optiona'),
(116, 18, 13, 1, 'optiond'),
(116, 18, 14, 1, 'optionc'),
(116, 18, 15, 1, 'optionc'),
(116, 18, 16, 1, 'optionc'),
(116, 18, 17, 1, 'optionb'),
(116, 18, 18, 1, 'optiona'),
(116, 18, 19, 1, 'optionc'),
(116, 18, 20, 1, 'optionb'),
(116, 18, 21, 1, 'optiond'),
(116, 18, 22, 1, 'optiond'),
(116, 18, 23, 1, 'optiond'),
(116, 18, 24, 1, 'optionc'),
(116, 18, 25, 1, 'optionc'),
(116, 18, 26, 2, 'optionb'),
(116, 18, 27, 2, 'optiond'),
(116, 18, 28, 2, 'optiona'),
(116, 18, 29, 2, 'optiond'),
(116, 18, 30, 2, 'optionc'),
(116, 18, 31, 2, 'optiona'),
(116, 18, 32, 2, 'optionb'),
(116, 18, 33, 2, 'optiond'),
(116, 18, 34, 2, 'optiona'),
(116, 18, 35, -0.66, 'optiona'),
(116, 18, 36, 2, 'optiona'),
(116, 18, 37, 2, 'optionc'),
(116, 18, 38, 2, 'optionb'),
(116, 18, 39, -0.66, 'optionc'),
(116, 18, 40, 2, 'optionb'),
(116, 18, 41, 2, 'optiond'),
(116, 18, 42, 2, 'optionb'),
(116, 18, 43, 2, 'optionb'),
(116, 18, 44, 2, 'optionc'),
(116, 18, 45, -0.66, 'optionc'),
(116, 18, 47, 2, 'optiond'),
(116, 18, 48, -0.66, 'optiona'),
(116, 18, 49, 2, 'optionc'),
(116, 18, 51, -0.66, 'optiond'),
(116, 18, 52, 2, 'optiona'),
(116, 18, 53, -0.66, 'optiond'),
(116, 18, 54, 2, 'optiona'),
(116, 18, 56, 1, 'optione'),
(116, 18, 57, 1, 'optionb'),
(116, 18, 58, 1, 'optionc'),
(116, 18, 60, 1, 'optiona'),
(116, 18, 61, 2, 'optionb'),
(116, 18, 62, 2, 'optiond'),
(116, 18, 63, 2, 'optiona'),
(116, 18, 65, 2, 'optiond'),
(117, 8, 1, 1, 'optione'),
(117, 8, 2, -0.33, 'optionb'),
(117, 8, 3, 1, 'optionb'),
(117, 8, 4, -0.33, 'optionb'),
(117, 8, 5, 1, 'optionc'),
(117, 8, 6, 1, 'optiond'),
(117, 8, 7, 1, 'optionb'),
(117, 8, 9, 1, 'optiond'),
(117, 8, 11, 1, 'optiond'),
(117, 8, 12, 1, 'optiona'),
(117, 8, 13, 1, 'optionb'),
(117, 8, 15, 1, 'optionc'),
(117, 8, 17, -0.33, 'optiond'),
(117, 8, 18, 1, 'optione'),
(117, 8, 19, 1, 'optiona'),
(117, 8, 21, -0.33, 'optiond'),
(117, 8, 23, -0.33, 'optionc'),
(117, 8, 24, -0.33, 'optionc'),
(117, 8, 26, 1, 'optiond'),
(117, 8, 27, 1, 'optiond'),
(117, 8, 29, 1, 'optionb'),
(117, 8, 30, 1, 'optionc'),
(117, 8, 31, 1, 'optionc'),
(117, 8, 32, 1, 'optionb'),
(117, 8, 33, 1, 'optiona'),
(117, 8, 34, 1, 'optiond'),
(117, 8, 35, 1, 'optionc'),
(117, 8, 36, 1, 'optionc'),
(117, 8, 37, 1, 'optiond'),
(117, 8, 38, -0.33, 'optionc'),
(117, 8, 39, 1, 'optiond'),
(117, 8, 40, -0.33, 'optiond'),
(117, 8, 41, 1, 'optiona'),
(117, 8, 42, 1, 'optiond'),
(117, 8, 43, -0.33, 'optiond'),
(117, 8, 44, -0.33, 'optiona'),
(117, 8, 45, 1, 'optiond'),
(117, 9, 1, 2, 'optionc'),
(117, 9, 2, 2, 'optionb'),
(117, 9, 3, 2, 'optiona'),
(117, 9, 4, 2, 'optiona'),
(117, 9, 5, 2, 'optiond'),
(117, 9, 6, 2, 'optiond'),
(117, 9, 7, 2, 'optionc'),
(117, 9, 8, 2, 'optionb'),
(117, 9, 9, -0.66, 'optionc'),
(117, 9, 10, 2, 'optionc'),
(117, 9, 11, 2, 'optiona'),
(117, 9, 12, 2, 'optiona'),
(117, 9, 13, 2, 'optiond'),
(117, 9, 14, 2, 'optionb'),
(117, 9, 17, 2, 'optionb'),
(117, 9, 26, 2, 'optionc'),
(117, 9, 28, 2, 'optionb'),
(117, 9, 29, 2, 'optionc'),
(117, 9, 30, 2, 'optionb'),
(117, 9, 31, 2, 'optione'),
(117, 9, 34, 2, 'optiond'),
(117, 9, 35, 2, 'optionb'),
(117, 9, 36, 2, 'optionc'),
(117, 9, 37, 2, 'optionb'),
(117, 9, 39, 2, 'optiond'),
(117, 9, 40, 2, 'optionc'),
(117, 9, 41, 2, 'optionb'),
(117, 9, 42, 2, 'optionb'),
(117, 9, 43, 2, 'optionc'),
(117, 9, 44, 2, 'optionc'),
(117, 9, 45, 2, 'optionc'),
(117, 9, 46, 2, 'optiond'),
(117, 9, 47, 2, 'optionc'),
(117, 9, 48, -0.66, 'optionb'),
(117, 9, 49, 2, 'optionb'),
(117, 9, 50, 2, 'optionb'),
(117, 9, 51, 2, 'optionb'),
(117, 9, 52, -0.66, 'optionc'),
(117, 9, 53, 2, 'optionc'),
(117, 9, 54, 2, 'optione'),
(117, 9, 55, 2, 'optionb'),
(117, 13, 2, -0.66, 'optionc'),
(117, 15, 2, 1, 'optiond'),
(117, 15, 3, 1, 'optionc'),
(117, 15, 4, 1, 'optiona'),
(117, 15, 6, 1, 'optiona'),
(117, 15, 7, 1, 'optionb'),
(117, 15, 8, 1, 'optiona'),
(117, 15, 9, 1, 'optionb'),
(117, 15, 11, -0.33, 'optionb'),
(117, 15, 13, 1, 'optionb'),
(117, 15, 14, 1, 'optionc'),
(117, 15, 15, 1, 'optiond'),
(117, 15, 16, 1, 'optiond'),
(117, 15, 17, 1, 'optionb'),
(117, 15, 18, 1, 'optionb'),
(117, 15, 19, 1, 'optionc'),
(117, 15, 20, 1, 'optionb'),
(117, 15, 21, 1, 'optiona'),
(117, 15, 22, 1, 'optionb'),
(117, 15, 24, 1, 'optiona'),
(117, 15, 25, 1, 'optiond'),
(117, 15, 26, 2, 'optiona'),
(117, 15, 29, -0.66, 'optiona'),
(117, 15, 30, -0.66, 'optiond'),
(117, 15, 31, -0.66, 'optiond'),
(117, 15, 33, -0.66, 'optionb'),
(117, 15, 35, 2, 'optionc'),
(117, 15, 36, 2, 'optiond'),
(117, 15, 37, 2, 'optionb'),
(117, 15, 38, -0.66, 'optiona'),
(117, 15, 39, -0.66, 'optiond'),
(117, 15, 40, -0.66, 'optiona'),
(117, 15, 42, 2, 'optiona'),
(117, 15, 43, -0.66, 'optionb'),
(117, 15, 44, 2, 'optiond'),
(117, 15, 45, 2, 'optiona'),
(117, 15, 48, 2, 'optionc'),
(117, 15, 49, 2, 'optionc'),
(117, 15, 50, -0.66, 'optiona'),
(117, 15, 51, 2, 'optionb'),
(117, 15, 52, 2, 'optionc'),
(117, 15, 53, 2, 'optionc'),
(117, 15, 54, 2, 'optionc'),
(117, 15, 55, 2, 'optionb'),
(117, 15, 58, 1, 'optiond'),
(117, 15, 59, 1, 'optiond'),
(117, 15, 60, 1, 'optiona'),
(117, 15, 64, 2, 'optiond'),
(117, 16, 1, 1, 'optionc'),
(117, 16, 3, 1, 'optiond'),
(117, 16, 4, 1, 'optiond'),
(117, 16, 6, 1, 'optionb'),
(117, 16, 8, 1, 'optiona'),
(117, 16, 9, 1, 'optionc'),
(117, 16, 10, -0.33, 'optiona'),
(117, 16, 13, -0.33, 'optionc'),
(117, 16, 14, -0.33, 'optionc'),
(117, 16, 16, 1, 'optiond'),
(117, 16, 17, -0.33, 'optiond'),
(117, 16, 19, 1, 'optiond'),
(117, 16, 20, 1, 'optiona'),
(117, 16, 21, -0.33, 'optiona'),
(117, 16, 22, 1, 'optionb'),
(117, 16, 26, -0.66, 'optionb'),
(117, 16, 27, -0.66, 'optiona'),
(117, 16, 28, -0.66, 'optiona'),
(117, 16, 29, -0.66, 'optiona'),
(117, 16, 31, -0.66, 'optionb'),
(117, 16, 32, -0.66, 'optionc'),
(117, 16, 34, 2, 'optiona'),
(117, 16, 35, -0.66, 'optiond'),
(117, 16, 36, -0.66, 'optiond'),
(117, 16, 37, 2, 'optionb'),
(117, 16, 39, -0.66, 'optiond'),
(117, 16, 41, 2, 'optionc'),
(117, 16, 43, 2, 'optiona'),
(117, 16, 45, 2, 'optiona'),
(117, 16, 46, -0.66, 'optionb'),
(117, 16, 47, 2, 'optionc'),
(117, 16, 48, 2, 'optiona'),
(117, 16, 49, 2, 'optionc'),
(117, 16, 50, 2, 'optiona'),
(117, 16, 51, -0.66, 'optionb'),
(117, 16, 56, 1, 'optiond'),
(117, 16, 59, -0.33, 'optiond'),
(117, 16, 60, -0.33, 'optiond'),
(117, 16, 61, 2, 'optionb'),
(117, 17, 1, 1, 'optiona'),
(117, 17, 2, 1, 'optionb'),
(117, 17, 3, 1, 'optionb'),
(117, 17, 4, 1, 'optionc'),
(117, 17, 5, 1, 'optionc'),
(117, 17, 6, 1, 'optiona'),
(117, 17, 7, 1, 'optionc'),
(117, 17, 8, 1, 'optiona'),
(117, 17, 9, 1, 'optionb'),
(117, 17, 10, -0.33, 'optionc'),
(117, 17, 11, 1, 'optiond'),
(117, 17, 12, 1, 'optiona'),
(117, 17, 13, 1, 'optionb'),
(117, 17, 14, 1, 'optionc'),
(117, 17, 15, -0.33, 'optionc'),
(117, 17, 16, -0.33, 'optionc'),
(117, 17, 17, 1, 'optiona'),
(117, 17, 19, 1, 'optionb'),
(117, 17, 21, -0.33, 'optiond'),
(117, 17, 22, 1, 'optionb'),
(117, 17, 23, 1, 'optiond'),
(117, 17, 24, -0.33, 'optionc'),
(117, 17, 25, -0.33, 'optiond'),
(117, 17, 26, 2, 'optionc'),
(117, 17, 27, -0.66, 'optiond'),
(117, 17, 28, -0.66, 'optionb'),
(117, 17, 30, 2, 'optiona'),
(117, 17, 31, 2, 'optiond'),
(117, 17, 32, 2, 'optiona'),
(117, 17, 33, 2, 'optiona'),
(117, 17, 35, 2, 'optionb'),
(117, 17, 37, 2, 'optionc'),
(117, 17, 38, -0.66, 'optiona'),
(117, 17, 40, -0.66, 'optiond'),
(117, 17, 41, 2, 'optionc'),
(117, 17, 43, 2, 'optiond'),
(117, 17, 46, 2, 'optionb'),
(117, 17, 47, -0.66, 'optionb'),
(117, 17, 48, 2, 'optiond'),
(117, 17, 49, -0.66, 'optiond'),
(117, 17, 50, -0.66, 'optiona'),
(117, 17, 52, 2, 'optiond'),
(117, 17, 53, 2, 'optiona'),
(117, 17, 54, 2, 'optiond'),
(117, 17, 55, 2, 'optiona'),
(117, 17, 57, 1, 'optionb'),
(117, 17, 58, 1, 'optionc'),
(117, 17, 59, -0.33, 'optiona'),
(117, 17, 61, 2, 'optionb'),
(117, 17, 65, -0.66, 'optionc'),
(117, 18, 1, 1, 'optiona'),
(117, 18, 2, 1, 'optiond'),
(117, 18, 3, 1, 'optionb'),
(117, 18, 6, 1, 'optionc'),
(117, 18, 7, 1, 'optionb'),
(117, 18, 8, 1, 'optionb'),
(117, 18, 9, 1, 'optiond'),
(117, 18, 10, 1, 'optionb'),
(117, 18, 11, 1, 'optionb'),
(117, 18, 12, -0.33, 'optionb'),
(117, 18, 13, 1, 'optiond'),
(117, 18, 14, 1, 'optionc'),
(117, 18, 15, 1, 'optionc'),
(117, 18, 19, -0.33, 'optiona'),
(117, 18, 20, 1, 'optionb'),
(117, 18, 21, 1, 'optiond'),
(117, 18, 22, 1, 'optiond'),
(117, 18, 23, -0.33, 'optionb'),
(117, 18, 24, 1, 'optionc'),
(117, 18, 26, 2, 'optionb'),
(117, 18, 27, 2, 'optiond'),
(117, 18, 28, 2, 'optiona'),
(117, 18, 29, -0.66, 'optiona'),
(117, 18, 30, 2, 'optionc'),
(117, 18, 31, 2, 'optiona'),
(117, 18, 32, 2, 'optionb'),
(117, 18, 33, 2, 'optiond'),
(117, 18, 34, 2, 'optiona'),
(117, 18, 35, 2, 'optiond'),
(117, 18, 36, 2, 'optiona'),
(117, 18, 37, 2, 'optionc'),
(117, 18, 38, 2, 'optionb'),
(117, 18, 39, 2, 'optiona'),
(117, 18, 42, 2, 'optionb'),
(117, 18, 43, -0.66, 'optionc'),
(117, 18, 44, 2, 'optionc'),
(117, 18, 45, -0.66, 'optionc'),
(117, 18, 47, -0.66, 'optionb'),
(117, 18, 48, -0.66, 'optiona'),
(117, 18, 49, -0.66, 'optionb'),
(117, 18, 50, 2, 'optionc'),
(117, 18, 51, -0.66, 'optiond'),
(117, 18, 52, 2, 'optiona'),
(117, 18, 53, -0.66, 'optionc'),
(117, 18, 54, 2, 'optiona'),
(117, 18, 55, 2, 'optiond'),
(117, 18, 56, -0.33, 'optiond'),
(117, 18, 57, 1, 'optionb'),
(117, 18, 58, 1, 'optionc'),
(117, 18, 59, -0.33, 'optiona'),
(117, 18, 60, 1, 'optiona'),
(117, 18, 61, 2, 'optionb'),
(117, 18, 64, 2, 'optionb'),
(117, 18, 65, 2, 'optiond'),
(119, 7, 1, 1, 'optionc'),
(119, 7, 2, 1, 'optiond'),
(119, 7, 3, 1, 'optionb'),
(119, 7, 4, 1, 'optiond'),
(119, 7, 5, 1, 'optionb'),
(119, 7, 6, -0.33, 'optiona'),
(119, 7, 7, -0.33, 'optionc'),
(119, 7, 8, -0.33, 'optiona'),
(119, 7, 9, 1, 'optiona'),
(119, 7, 10, 1, 'optionc'),
(119, 7, 11, 1, 'optiona'),
(119, 7, 14, 1, 'optionc'),
(119, 7, 15, 1, 'optionb'),
(119, 7, 16, 1, 'optiona'),
(119, 7, 17, 1, 'optionc'),
(119, 7, 18, 1, 'optiona'),
(119, 7, 19, 1, 'optiond'),
(119, 7, 21, 1, 'optiond'),
(119, 7, 22, 1, 'optiond'),
(119, 7, 25, 1, 'optionc'),
(119, 7, 27, -0.66, 'optionc'),
(119, 7, 28, 2, 'optiona'),
(119, 7, 29, -0.66, 'optiona'),
(119, 7, 30, -0.66, 'optiond'),
(119, 7, 31, 2, 'optiona'),
(119, 7, 35, 2, 'optionc'),
(119, 7, 36, 2, 'optionc'),
(119, 7, 37, -0.66, 'optionc'),
(119, 7, 39, -0.66, 'optionc'),
(119, 7, 40, 2, 'optionb'),
(119, 7, 41, 2, 'optionc'),
(119, 7, 42, 2, 'optionc'),
(119, 7, 43, 2, 'optionb'),
(119, 7, 44, 2, 'optionb'),
(119, 7, 45, 2, 'optiond'),
(119, 7, 48, 2, 'optionb'),
(119, 7, 50, 2, 'optionc'),
(119, 7, 51, 2, 'optionb'),
(119, 7, 52, 2, 'optiona'),
(119, 7, 53, 2, 'optionb'),
(119, 7, 54, 2, 'optiond'),
(119, 7, 55, -0.66, 'optiond'),
(119, 7, 56, 1, 'optiona'),
(119, 7, 57, 1, 'optionc'),
(119, 7, 58, 1, 'optionb'),
(119, 7, 59, 1, 'optiond'),
(119, 7, 60, 1, 'optionc'),
(119, 7, 62, 2, 'optionc'),
(119, 7, 63, 2, 'optiond'),
(119, 7, 64, 2, 'optionc'),
(119, 7, 65, 2, 'optionb'),
(119, 8, 1, 1, 'optione'),
(119, 8, 2, 1, 'optiona'),
(119, 8, 3, 1, 'optionb'),
(119, 8, 4, 1, 'optiond'),
(119, 8, 5, -0.33, 'optiona'),
(119, 8, 6, 1, 'optiond'),
(119, 8, 7, -0.33, 'optionc'),
(119, 8, 9, 1, 'optiond'),
(119, 8, 10, 1, 'optionc'),
(119, 8, 11, 1, 'optiond'),
(119, 8, 12, -0.33, 'optionb'),
(119, 8, 13, 1, 'optionb'),
(119, 8, 14, 1, 'optiona'),
(119, 8, 15, 1, 'optionc'),
(119, 8, 16, 1, 'optionc'),
(119, 8, 18, 1, 'optione'),
(119, 8, 19, 1, 'optiona'),
(119, 8, 21, 1, 'optiona'),
(119, 8, 22, -0.33, 'optiond'),
(119, 8, 23, 1, 'optiona'),
(119, 8, 24, 1, 'optiona'),
(119, 8, 27, 1, 'optiond'),
(119, 8, 29, 1, 'optionb'),
(119, 8, 30, 1, 'optionc'),
(119, 8, 31, 1, 'optionc'),
(119, 8, 32, 1, 'optionb'),
(119, 8, 33, 1, 'optiona'),
(119, 8, 34, 1, 'optiond'),
(119, 8, 35, 1, 'optionc'),
(119, 8, 36, 1, 'optionc'),
(119, 8, 37, -0.33, 'optionb'),
(119, 8, 38, -0.33, 'optionc'),
(119, 8, 39, 1, 'optiond'),
(119, 8, 41, 1, 'optiona'),
(119, 8, 42, 1, 'optiond'),
(119, 8, 43, 1, 'optionb'),
(119, 8, 44, -0.33, 'optiona'),
(119, 9, 1, 2, 'optionc'),
(119, 9, 2, -0.66, 'optiona'),
(119, 9, 3, -0.66, 'optionc'),
(119, 9, 4, 2, 'optiona'),
(119, 9, 5, 2, 'optiond'),
(119, 9, 7, 2, 'optionc'),
(119, 9, 8, 2, 'optionb'),
(119, 9, 9, 2, 'optionb'),
(119, 9, 11, 2, 'optiona'),
(119, 9, 12, 2, 'optiona'),
(119, 9, 14, -0.66, 'optiona'),
(119, 9, 17, -0.66, 'optiond'),
(119, 9, 24, 2, 'optionc'),
(119, 9, 25, 2, 'optiond'),
(119, 9, 26, 2, 'optionc'),
(119, 9, 29, 2, 'optionc'),
(119, 9, 30, 2, 'optionb'),
(119, 9, 31, 2, 'optione'),
(119, 9, 34, 2, 'optiond'),
(119, 9, 35, 2, 'optionb'),
(119, 9, 36, -0.66, 'optionb'),
(119, 9, 37, 2, 'optionb'),
(119, 9, 39, -0.66, 'optionb'),
(119, 9, 41, -0.66, 'optiond'),
(119, 9, 43, 2, 'optionc'),
(119, 9, 46, 2, 'optiond'),
(119, 9, 47, -0.66, 'optiond'),
(119, 9, 48, 2, 'optionc'),
(119, 9, 49, 2, 'optionb'),
(119, 9, 50, -0.66, 'optiona'),
(119, 9, 51, -0.66, 'optionc'),
(119, 9, 52, 2, 'optionb'),
(119, 9, 53, 2, 'optionc'),
(119, 9, 55, 2, 'optionb'),
(119, 10, 1, 2, 'optione'),
(119, 10, 2, 2, 'optionb'),
(119, 10, 3, -0.66, 'optiona'),
(119, 10, 5, -0.66, 'optiona'),
(119, 10, 6, 2, 'optionb'),
(119, 10, 8, -0.66, 'optiona'),
(119, 10, 9, -0.66, 'optiond'),
(119, 10, 10, 2, 'optiond'),
(119, 10, 12, -0.66, 'optione'),
(119, 10, 13, -0.66, 'optionb'),
(119, 10, 14, 2, 'optionb'),
(119, 10, 15, 2, 'optiond'),
(119, 10, 16, 2, 'optiona'),
(119, 10, 17, 2, 'optionb'),
(119, 10, 21, 2, 'optionb'),
(119, 10, 23, -0.66, 'optionc'),
(119, 11, 1, 2, 'optionb'),
(119, 11, 2, 2, 'optionc'),
(119, 11, 4, 2, 'optiond'),
(119, 11, 5, 2, 'optionb'),
(119, 11, 6, 2, 'optionb'),
(119, 11, 7, 2, 'optionb'),
(119, 11, 8, 2, 'optiona'),
(119, 11, 9, 2, 'optionc'),
(119, 11, 10, 2, 'optiona'),
(119, 11, 11, 2, 'optiona'),
(119, 11, 12, 2, 'optiona'),
(119, 11, 13, -0.66, 'optiona'),
(119, 11, 14, 2, 'optionc'),
(119, 11, 15, 2, 'optionc'),
(119, 11, 17, 2, 'optiona'),
(119, 11, 18, 2, 'optionb'),
(119, 11, 19, 2, 'optionb'),
(119, 11, 21, 2, 'optionc'),
(119, 11, 22, 2, 'optiona'),
(119, 11, 23, 2, 'optionc'),
(119, 11, 24, -0.66, 'optionc'),
(119, 11, 25, 2, 'optionb'),
(119, 11, 26, -0.66, 'optionb'),
(119, 11, 27, 2, 'optione'),
(119, 11, 28, 2, 'optiona'),
(119, 11, 29, 2, 'optiond'),
(119, 11, 30, -0.66, 'optiona'),
(119, 11, 32, 2, 'optionc'),
(119, 11, 33, -0.66, 'optione'),
(119, 11, 34, 2, 'optiond'),
(119, 11, 35, 2, 'optiond'),
(119, 11, 36, -0.66, 'optionc'),
(119, 11, 37, 2, 'optionb'),
(119, 11, 38, 2, 'optiona'),
(119, 11, 39, 2, 'optiona'),
(119, 11, 40, -0.66, 'optionb'),
(119, 11, 41, 2, 'optionc'),
(119, 11, 46, 2, 'optiona'),
(119, 11, 48, -0.66, 'optionc'),
(119, 11, 49, 2, 'optiond'),
(119, 11, 51, -0.66, 'optionc'),
(119, 11, 52, -0.66, 'optionc'),
(119, 11, 53, 2, 'optionc'),
(119, 11, 55, -0.66, 'optionc'),
(119, 11, 56, 2, 'optione'),
(119, 11, 57, -0.66, 'optione'),
(119, 11, 58, 2, 'optione'),
(119, 11, 60, 2, 'optiond'),
(119, 12, 1, -0.66, 'optiona'),
(119, 12, 2, 2, 'optionc'),
(119, 12, 3, 2, 'optiond'),
(119, 12, 4, 2, 'optionc'),
(119, 12, 6, -0.66, 'optiona'),
(119, 12, 7, 2, 'optionb'),
(119, 12, 8, -0.66, 'optionc'),
(119, 12, 9, 2, 'optiona'),
(119, 12, 10, 2, 'optiond'),
(119, 12, 12, -0.66, 'optiona'),
(119, 12, 13, 2, 'optionb'),
(119, 12, 14, -0.66, 'optiond'),
(119, 12, 15, 2, 'optiond'),
(119, 12, 16, 2, 'optionc'),
(119, 12, 17, 2, 'optionc'),
(119, 12, 18, 2, 'optiond'),
(119, 12, 19, 2, 'optionb'),
(119, 12, 20, 2, 'optionb'),
(119, 12, 21, 2, 'optiona'),
(119, 12, 22, 2, 'optiond'),
(119, 12, 23, 2, 'optionb'),
(119, 12, 26, 2, 'optionb'),
(119, 12, 27, 2, 'optionc'),
(119, 12, 28, -0.66, 'optionb'),
(119, 12, 29, 2, 'optiona'),
(119, 12, 31, 2, 'optionc'),
(119, 12, 32, -0.66, 'optiona'),
(119, 12, 34, 2, 'optiond'),
(119, 12, 35, -0.66, 'optionb'),
(119, 12, 38, -0.66, 'optionb'),
(119, 12, 41, 2, 'optionb'),
(119, 12, 42, -0.66, 'optionc'),
(119, 12, 43, 2, 'optiond'),
(119, 12, 44, -0.66, 'optionc'),
(119, 12, 45, 2, 'optiond'),
(119, 12, 46, 2, 'optiond'),
(119, 12, 47, 2, 'optionc'),
(119, 12, 48, -0.66, 'optionc'),
(119, 12, 50, 2, 'optionb'),
(119, 12, 51, 2, 'optionc'),
(119, 12, 52, 2, 'optionb'),
(119, 12, 53, 2, 'optiona'),
(119, 12, 54, -0.66, 'optionb'),
(119, 13, 1, -0.66, 'optiond'),
(119, 13, 2, 2, 'optionb'),
(119, 13, 3, -0.66, 'optionb'),
(119, 13, 5, 2, 'optionc'),
(119, 13, 6, -0.66, 'optiona'),
(119, 13, 8, 2, 'optionc'),
(119, 13, 9, 2, 'optione'),
(119, 13, 10, 2, 'optione'),
(119, 13, 11, 2, 'optiond'),
(119, 13, 13, -0.66, 'optiona'),
(119, 13, 19, -0.66, 'optionc'),
(119, 13, 20, 2, 'optiona'),
(119, 13, 22, 2, 'optiona'),
(119, 13, 24, -0.66, 'optiond'),
(119, 13, 25, 2, 'optiona'),
(119, 13, 26, 2, 'optiond'),
(119, 13, 27, -0.66, 'optione'),
(119, 13, 28, 2, 'optionc'),
(119, 13, 29, -0.66, 'optiond'),
(119, 13, 30, 2, 'optiona'),
(119, 13, 32, 2, 'optiona'),
(119, 13, 33, 2, 'optionb'),
(119, 13, 34, 2, 'optiona'),
(119, 13, 36, 2, 'optionc'),
(119, 13, 38, 2, 'optionb'),
(119, 13, 39, 2, 'optiona'),
(119, 13, 40, 2, 'optiond'),
(119, 15, 2, 1, 'optiond'),
(119, 15, 3, 1, 'optionc'),
(119, 15, 6, 1, 'optiona'),
(119, 15, 9, 1, 'optionb'),
(119, 15, 10, 1, 'optiona'),
(119, 15, 11, 1, 'optiond'),
(119, 15, 12, 1, 'optionc'),
(119, 15, 13, 1, 'optionb'),
(119, 15, 14, 1, 'optionc'),
(119, 15, 15, 1, 'optiond'),
(119, 15, 16, 1, 'optiond'),
(119, 15, 17, 1, 'optionb'),
(119, 15, 18, 1, 'optionb'),
(119, 15, 19, 1, 'optionc'),
(119, 15, 20, 1, 'optionb'),
(119, 15, 21, 1, 'optiona'),
(119, 15, 22, -0.33, 'optionc'),
(119, 15, 23, 1, 'optiona'),
(119, 15, 24, 1, 'optiona'),
(119, 15, 25, 1, 'optiond'),
(119, 15, 26, 2, 'optiona'),
(119, 15, 28, -0.66, 'optiona'),
(119, 15, 29, 2, 'optiond'),
(119, 15, 30, -0.66, 'optionc'),
(119, 15, 31, 2, 'optiona'),
(119, 15, 33, 2, 'optionc'),
(119, 15, 35, 2, 'optionc'),
(119, 15, 36, 2, 'optiond'),
(119, 15, 37, -0.66, 'optiona'),
(119, 15, 39, 2, 'optionb'),
(119, 15, 40, 2, 'optiond'),
(119, 15, 41, 2, 'optionc'),
(119, 15, 42, 2, 'optiona'),
(119, 15, 44, -0.66, 'optiona'),
(119, 15, 47, 2, 'optiond'),
(119, 15, 48, 2, 'optionc'),
(119, 15, 50, 2, 'optiond'),
(119, 15, 51, -0.66, 'optiona'),
(119, 15, 52, 2, 'optionc'),
(119, 15, 54, -0.66, 'optionb'),
(119, 15, 55, -0.66, 'optionc'),
(119, 15, 58, -0.33, 'optiona'),
(119, 15, 59, 1, 'optiond'),
(119, 15, 61, 2, 'optionc'),
(119, 15, 63, 2, 'optiond'),
(119, 15, 64, -0.66, 'optiona'),
(119, 16, 1, 1, 'optionc'),
(119, 16, 3, 1, 'optiond'),
(119, 16, 4, 1, 'optiond'),
(119, 16, 6, 1, 'optionb'),
(119, 16, 8, 1, 'optiona'),
(119, 16, 9, 1, 'optionc'),
(119, 16, 10, -0.33, 'optionb'),
(119, 16, 12, -0.33, 'optionc'),
(119, 16, 14, 1, 'optiond'),
(119, 16, 16, 1, 'optiond'),
(119, 16, 18, -0.33, 'optiona'),
(119, 16, 19, -0.33, 'optionc'),
(119, 16, 20, 1, 'optiona'),
(119, 16, 21, 1, 'optiond'),
(119, 16, 22, 1, 'optionb'),
(119, 16, 23, 1, 'optionc'),
(119, 16, 24, 1, 'optiona'),
(119, 16, 25, 1, 'optionb'),
(119, 16, 27, 2, 'optionb'),
(119, 16, 28, 2, 'optiond'),
(119, 16, 29, -0.66, 'optiona'),
(119, 16, 30, 2, 'optiond'),
(119, 16, 32, 2, 'optiond'),
(119, 16, 33, 2, 'optiond'),
(119, 16, 35, 2, 'optionb'),
(119, 16, 36, -0.66, 'optiona'),
(119, 16, 37, 2, 'optionb'),
(119, 16, 38, 2, 'optionb'),
(119, 16, 39, 2, 'optionb'),
(119, 16, 40, 2, 'optiona'),
(119, 16, 41, 2, 'optionc'),
(119, 16, 43, 2, 'optiona'),
(119, 16, 44, 2, 'optiond'),
(119, 16, 45, -0.66, 'optiond'),
(119, 16, 46, 2, 'optionc'),
(119, 16, 47, 2, 'optionc'),
(119, 16, 48, 2, 'optiona'),
(119, 16, 49, 2, 'optionc'),
(119, 16, 51, 2, 'optiona'),
(119, 16, 52, -0.66, 'optionc'),
(119, 16, 53, 2, 'optionb'),
(119, 16, 56, -0.33, 'optionb'),
(119, 16, 57, 1, 'optionc'),
(119, 16, 59, 1, 'optionc'),
(119, 16, 60, 1, 'optionc'),
(119, 16, 61, 2, 'optionb'),
(119, 16, 62, 2, 'optiond'),
(119, 16, 65, 2, 'optiona'),
(120, 8, 1, 1, 'optione'),
(120, 8, 3, 1, 'optionb'),
(120, 8, 4, 1, 'optiond'),
(120, 8, 5, -0.33, 'optiona'),
(120, 8, 6, 1, 'optiond'),
(120, 8, 7, 1, 'optionb'),
(120, 8, 9, 1, 'optiond'),
(120, 8, 10, 1, 'optionc'),
(120, 8, 11, 1, 'optiond'),
(120, 8, 12, 1, 'optiona'),
(120, 8, 13, 1, 'optionb'),
(120, 8, 14, 1, 'optiona'),
(120, 8, 15, 1, 'optionc'),
(120, 8, 17, -0.33, 'optionb'),
(120, 8, 18, -0.33, 'optionb'),
(120, 8, 19, 1, 'optiona'),
(120, 8, 20, -0.33, 'optionc'),
(120, 8, 25, 1, 'optiond'),
(120, 8, 26, 1, 'optiond'),
(120, 8, 27, 1, 'optiond'),
(120, 8, 29, 1, 'optionb'),
(120, 8, 30, 1, 'optionc'),
(120, 8, 31, 1, 'optionc'),
(120, 8, 32, 1, 'optionb'),
(120, 8, 33, 1, 'optiona'),
(120, 8, 35, 1, 'optionc'),
(120, 8, 36, 1, 'optionc'),
(120, 8, 37, 1, 'optiond'),
(120, 8, 38, 1, 'optionb'),
(120, 8, 39, 1, 'optiond'),
(120, 8, 40, 1, 'optionc'),
(120, 8, 41, 1, 'optiona'),
(120, 8, 42, 1, 'optiond'),
(120, 8, 43, 1, 'optionb'),
(120, 8, 44, -0.33, 'optiona'),
(120, 8, 45, -0.33, 'optionb'),
(121, 7, 1, 1, 'optionc'),
(121, 7, 2, 1, 'optiond'),
(121, 7, 3, -0.33, 'optiond'),
(121, 7, 4, 1, 'optiond'),
(121, 7, 5, -0.33, 'optionc'),
(121, 7, 6, 1, 'optionb'),
(121, 7, 9, 1, 'optiona'),
(121, 7, 10, 1, 'optionc'),
(121, 7, 14, 1, 'optionc'),
(121, 7, 15, 1, 'optionb'),
(121, 7, 16, 1, 'optiona'),
(121, 7, 17, 1, 'optionc'),
(121, 7, 18, 1, 'optiona'),
(121, 7, 19, 1, 'optiond'),
(121, 7, 20, 1, 'optiona'),
(121, 7, 21, -0.33, 'optionc'),
(121, 7, 22, 1, 'optiond'),
(121, 7, 23, -0.33, 'optionc'),
(121, 7, 24, 1, 'optiona'),
(121, 7, 25, 1, 'optionc'),
(121, 7, 26, -0.66, 'optiond'),
(121, 7, 29, 2, 'optiond'),
(121, 7, 31, 2, 'optiona'),
(121, 7, 34, -0.66, 'optiond'),
(121, 7, 35, 2, 'optionc'),
(121, 7, 36, 2, 'optionc'),
(121, 7, 40, 2, 'optionb'),
(121, 7, 41, 2, 'optionc'),
(121, 7, 42, -0.66, 'optiond'),
(121, 7, 43, 2, 'optionb'),
(121, 7, 45, 2, 'optiond'),
(121, 7, 47, 2, 'optionb'),
(121, 7, 50, 2, 'optionc'),
(121, 7, 51, 2, 'optionb'),
(121, 7, 52, -0.66, 'optionb'),
(121, 7, 53, -0.66, 'optiona'),
(121, 7, 54, 2, 'optiond'),
(121, 7, 55, 2, 'optionb'),
(121, 7, 56, 1, 'optiona'),
(121, 7, 58, 1, 'optionb'),
(121, 7, 59, 1, 'optiond'),
(121, 7, 60, 1, 'optionc'),
(121, 7, 62, 2, 'optionc'),
(121, 7, 63, 2, 'optiond'),
(121, 7, 64, 2, 'optionc'),
(121, 7, 65, 2, 'optionb'),
(121, 8, 1, 1, 'optione'),
(121, 8, 2, -0.33, 'optionb'),
(121, 8, 3, -0.33, 'optionc'),
(121, 8, 5, -0.33, 'optiona'),
(121, 8, 6, 1, 'optiond'),
(121, 8, 9, -0.33, 'optiona'),
(121, 8, 10, 1, 'optionc'),
(121, 8, 11, 1, 'optiond'),
(121, 8, 12, 1, 'optiona'),
(121, 8, 13, 1, 'optionb'),
(121, 8, 14, 1, 'optiona'),
(121, 8, 15, 1, 'optionc'),
(121, 8, 18, -0.33, 'optionb'),
(121, 8, 19, 1, 'optiona'),
(121, 8, 21, 1, 'optiona'),
(121, 8, 22, -0.33, 'optionb'),
(121, 8, 24, 1, 'optiona'),
(121, 8, 26, -0.33, 'optione'),
(121, 8, 27, 1, 'optiond'),
(121, 8, 30, 1, 'optionc'),
(121, 8, 31, 1, 'optionc'),
(121, 8, 32, 1, 'optionb'),
(121, 8, 33, 1, 'optiona'),
(121, 8, 34, 1, 'optiond'),
(121, 8, 35, 1, 'optionc'),
(121, 8, 36, 1, 'optionc'),
(121, 8, 37, 1, 'optiond'),
(121, 8, 38, 1, 'optionb'),
(121, 8, 39, 1, 'optiond'),
(121, 8, 40, -0.33, 'optiona'),
(121, 8, 41, 1, 'optiona'),
(121, 8, 42, 1, 'optiond'),
(121, 8, 43, 1, 'optionb'),
(121, 8, 44, -0.33, 'optiona'),
(121, 8, 45, 1, 'optiond'),
(121, 9, 1, -0.66, 'optionb'),
(121, 9, 2, 2, 'optionb'),
(121, 9, 4, 2, 'optiona'),
(121, 9, 5, 2, 'optiond'),
(121, 9, 7, 2, 'optionc'),
(121, 9, 9, 2, 'optionb'),
(121, 9, 11, 2, 'optiona'),
(121, 9, 16, -0.66, 'optiond'),
(121, 9, 17, 2, 'optionb'),
(121, 9, 18, 2, 'optionb'),
(121, 9, 21, 2, 'optionc'),
(121, 9, 23, 2, 'optionc'),
(121, 9, 24, 2, 'optionc'),
(121, 9, 26, 2, 'optionc'),
(121, 9, 28, -0.66, 'optionc'),
(121, 9, 29, 2, 'optionc'),
(121, 9, 30, 2, 'optionb'),
(121, 9, 31, -0.66, 'optiond'),
(121, 9, 32, 2, 'optionb'),
(121, 9, 34, 2, 'optiond'),
(121, 9, 35, 2, 'optionb'),
(121, 9, 36, -0.66, 'optionb'),
(121, 9, 37, 2, 'optionb'),
(121, 9, 46, -0.66, 'optiona'),
(121, 10, 2, 2, 'optionb'),
(121, 10, 3, 2, 'optiond'),
(121, 10, 4, -0.66, 'optione'),
(121, 10, 5, 2, 'optionb'),
(121, 10, 9, 2, 'optionc'),
(121, 10, 11, 2, 'optionc'),
(121, 10, 12, 2, 'optionb'),
(121, 10, 13, 2, 'optionc'),
(121, 10, 14, 2, 'optionb'),
(121, 10, 15, 2, 'optiond'),
(121, 10, 16, 2, 'optiona'),
(121, 10, 17, 2, 'optionb'),
(121, 10, 18, -0.66, 'optiond'),
(121, 10, 19, 2, 'optiona'),
(121, 10, 21, 2, 'optionb'),
(121, 10, 22, 2, 'optionb'),
(121, 10, 23, -0.66, 'optionc'),
(121, 11, 1, 2, 'optionb'),
(121, 11, 2, 2, 'optionc'),
(121, 11, 4, 2, 'optiond'),
(121, 11, 5, 2, 'optionb'),
(121, 11, 6, 2, 'optionb'),
(121, 11, 7, 2, 'optionb'),
(121, 11, 8, 2, 'optiona'),
(121, 11, 9, 2, 'optionc'),
(121, 11, 11, 2, 'optiona'),
(121, 11, 12, 2, 'optiona'),
(121, 11, 13, 2, 'optionb'),
(121, 11, 14, -0.66, 'optiond'),
(121, 11, 15, 2, 'optionc'),
(121, 11, 17, 2, 'optiona'),
(121, 11, 18, 2, 'optionb'),
(121, 11, 19, 2, 'optionb'),
(121, 11, 20, 2, 'optiona'),
(121, 11, 21, -0.66, 'optionb'),
(121, 11, 22, 2, 'optiona'),
(121, 11, 23, 2, 'optionc'),
(121, 11, 24, 2, 'optiona'),
(121, 11, 25, 2, 'optionb'),
(121, 11, 26, 2, 'optionc'),
(121, 11, 29, 2, 'optiond'),
(121, 11, 30, -0.66, 'optionb'),
(121, 11, 31, 2, 'optione'),
(121, 11, 32, 2, 'optionc'),
(121, 11, 33, 2, 'optiond'),
(121, 11, 34, 2, 'optiond'),
(121, 11, 35, 2, 'optiond'),
(121, 11, 36, 2, 'optione'),
(121, 11, 37, 2, 'optionb'),
(121, 11, 38, 2, 'optiona'),
(121, 11, 39, 2, 'optiona'),
(121, 11, 41, 2, 'optionc'),
(121, 11, 42, -0.66, 'optionc'),
(121, 11, 43, 2, 'optiond'),
(121, 11, 45, 2, 'optiona'),
(121, 11, 46, 2, 'optiona'),
(121, 11, 48, 2, 'optiond'),
(121, 11, 49, 2, 'optiond'),
(121, 11, 51, -0.66, 'optionc'),
(121, 11, 52, 2, 'optionb'),
(121, 11, 53, 2, 'optionc'),
(121, 11, 54, -0.66, 'optione'),
(121, 11, 55, 2, 'optionb'),
(121, 11, 56, 2, 'optione'),
(121, 11, 57, 2, 'optionc'),
(121, 11, 58, 2, 'optione'),
(121, 11, 59, 2, 'optiona'),
(121, 11, 60, -0.66, 'optione'),
(121, 12, 1, 2, 'optionc'),
(121, 12, 2, -0.66, 'optiond'),
(121, 12, 4, 2, 'optionc'),
(121, 12, 5, 2, 'optiona'),
(121, 12, 6, -0.66, 'optiona'),
(121, 12, 7, 2, 'optionb'),
(121, 12, 8, 2, 'optionb'),
(121, 12, 9, 2, 'optiona'),
(121, 12, 10, 2, 'optiond'),
(121, 12, 12, -0.66, 'optiona'),
(121, 12, 13, 2, 'optionb'),
(121, 12, 14, 2, 'optiona'),
(121, 12, 15, 2, 'optiond'),
(121, 12, 16, 2, 'optionc'),
(121, 12, 17, -0.66, 'optionb'),
(121, 12, 18, -0.66, 'optionb'),
(121, 12, 19, 2, 'optionb'),
(121, 12, 20, 2, 'optionb'),
(121, 12, 21, 2, 'optiona'),
(121, 12, 22, 2, 'optiond'),
(121, 12, 23, 2, 'optionb'),
(121, 12, 25, 2, 'optionc'),
(121, 12, 26, 2, 'optionb'),
(121, 12, 27, -0.66, 'optiond'),
(121, 12, 28, 2, 'optiond'),
(121, 12, 30, 2, 'optionb'),
(121, 12, 31, 2, 'optionc'),
(121, 12, 32, 2, 'optionc'),
(121, 12, 34, 2, 'optiond'),
(121, 12, 35, 2, 'optiond'),
(121, 12, 37, 2, 'optiona'),
(121, 12, 38, 2, 'optionc'),
(121, 12, 40, 2, 'optiona'),
(121, 12, 41, 2, 'optionb'),
(121, 12, 45, 2, 'optiond'),
(121, 12, 46, 2, 'optiond'),
(121, 12, 47, 2, 'optionc'),
(121, 12, 50, 2, 'optionb'),
(121, 12, 51, 2, 'optionc'),
(121, 12, 52, 2, 'optionb'),
(121, 12, 53, 2, 'optiona'),
(121, 13, 1, -0.66, 'optiond'),
(121, 13, 2, 2, 'optionb'),
(121, 13, 3, -0.66, 'optiond'),
(121, 13, 5, 2, 'optionc'),
(121, 13, 6, -0.66, 'optiona'),
(121, 13, 7, 2, 'optionb'),
(121, 13, 8, 2, 'optionc'),
(121, 13, 9, 2, 'optione'),
(121, 13, 10, 2, 'optione'),
(121, 13, 11, 2, 'optiond'),
(121, 13, 12, 2, 'optiona'),
(121, 13, 13, 2, 'optiond'),
(121, 13, 14, 2, 'optionb'),
(121, 13, 15, 2, 'optionc'),
(121, 13, 22, 2, 'optiona'),
(121, 13, 24, 2, 'optionc'),
(121, 13, 25, 2, 'optiona'),
(121, 13, 26, 2, 'optiond'),
(121, 13, 27, 2, 'optiond'),
(121, 13, 28, 2, 'optionc'),
(121, 13, 30, 2, 'optiona'),
(121, 13, 31, 2, 'optiond'),
(121, 13, 32, -0.66, 'optionc'),
(121, 13, 34, 2, 'optiona'),
(121, 13, 36, -0.66, 'optionb'),
(121, 13, 38, 2, 'optionb'),
(121, 13, 39, 2, 'optiona'),
(121, 13, 40, 2, 'optiond'),
(121, 15, 2, 1, 'optiond'),
(121, 15, 3, -0.33, 'optiond'),
(121, 15, 5, 1, 'optionb'),
(121, 15, 6, 1, 'optiona'),
(121, 15, 8, 1, 'optiona'),
(121, 15, 9, 1, 'optionb'),
(121, 15, 10, 1, 'optiona'),
(121, 15, 11, 1, 'optiond'),
(121, 15, 12, 1, 'optionc'),
(121, 15, 13, 1, 'optionb'),
(121, 15, 14, 1, 'optionc'),
(121, 15, 15, 1, 'optiond'),
(121, 15, 16, 1, 'optiond'),
(121, 15, 18, 1, 'optionb'),
(121, 15, 19, 1, 'optionc'),
(121, 15, 20, 1, 'optionb'),
(121, 15, 21, 1, 'optiona'),
(121, 15, 22, 1, 'optionb'),
(121, 15, 23, -0.33, 'optionb'),
(121, 15, 24, 1, 'optiona'),
(121, 15, 25, 1, 'optiond'),
(121, 15, 26, 2, 'optiona'),
(121, 15, 27, 2, 'optiona'),
(121, 15, 29, 2, 'optiond'),
(121, 15, 30, 2, 'optionb'),
(121, 15, 31, 2, 'optiona'),
(121, 15, 32, 2, 'optiona'),
(121, 15, 33, 2, 'optionc'),
(121, 15, 35, 2, 'optionc'),
(121, 15, 36, 2, 'optiond'),
(121, 15, 42, 2, 'optiona'),
(121, 15, 43, 2, 'optiona'),
(121, 15, 44, 2, 'optiond'),
(121, 15, 47, 2, 'optiond'),
(121, 15, 50, 2, 'optiond'),
(121, 15, 51, 2, 'optionb'),
(121, 15, 52, 2, 'optionc'),
(121, 15, 53, 2, 'optionc'),
(121, 15, 56, -0.33, 'optionb'),
(121, 15, 58, 1, 'optiond'),
(121, 15, 59, 1, 'optiond'),
(121, 15, 60, 1, 'optiona'),
(121, 15, 63, 2, 'optiond'),
(121, 16, 1, 1, 'optionc'),
(121, 16, 3, 1, 'optiond'),
(121, 16, 4, 1, 'optiond'),
(121, 16, 6, 1, 'optionb'),
(121, 16, 8, 1, 'optiona'),
(121, 16, 10, 1, 'optionc'),
(121, 16, 13, 1, 'optionb'),
(121, 16, 14, 1, 'optiond'),
(121, 16, 15, -0.33, 'optiond'),
(121, 16, 16, 1, 'optiond'),
(121, 16, 19, 1, 'optiond'),
(121, 16, 20, 1, 'optiona'),
(121, 16, 21, 1, 'optiond'),
(121, 16, 22, 1, 'optionb'),
(121, 16, 23, 1, 'optionc'),
(121, 16, 27, 2, 'optionb'),
(121, 16, 28, 2, 'optiond'),
(121, 16, 29, -0.66, 'optionb'),
(121, 16, 30, 2, 'optiond'),
(121, 16, 32, -0.66, 'optionb'),
(121, 16, 35, 2, 'optionb'),
(121, 16, 37, 2, 'optionb'),
(121, 16, 39, 2, 'optionb'),
(121, 16, 40, 2, 'optiona'),
(121, 16, 45, 2, 'optiona'),
(121, 16, 50, 2, 'optiona'),
(121, 16, 51, -0.66, 'optionb'),
(121, 16, 53, 2, 'optionb'),
(121, 16, 56, 1, 'optiond'),
(121, 16, 57, 1, 'optionc'),
(121, 16, 61, 2, 'optionb'),
(121, 17, 1, 1, 'optiona'),
(121, 17, 2, 1, 'optionb'),
(121, 17, 3, 1, 'optionb'),
(121, 17, 4, -0.33, 'optiond'),
(121, 17, 5, 1, 'optionc'),
(121, 17, 6, 1, 'optiona'),
(121, 17, 7, 1, 'optionc'),
(121, 17, 8, 1, 'optiona'),
(121, 17, 9, 1, 'optionb'),
(121, 17, 10, -0.33, 'optionb'),
(121, 17, 11, 1, 'optiond'),
(121, 17, 12, 1, 'optiona'),
(121, 17, 13, 1, 'optionb'),
(121, 17, 17, 1, 'optiona'),
(121, 17, 19, 1, 'optionb'),
(121, 17, 22, 1, 'optionb'),
(121, 17, 23, 1, 'optiond'),
(121, 17, 24, -0.33, 'optionc'),
(121, 17, 25, 1, 'optionb'),
(121, 17, 26, 2, 'optionc'),
(121, 17, 27, -0.66, 'optiona'),
(121, 17, 28, 2, 'optiond'),
(121, 17, 32, 2, 'optiona'),
(121, 17, 33, 2, 'optiona'),
(121, 17, 34, 2, 'optiond'),
(121, 17, 35, 2, 'optionb'),
(121, 17, 37, 2, 'optionc'),
(121, 17, 38, 2, 'optionc'),
(121, 17, 41, 2, 'optionc'),
(121, 17, 42, 2, 'optionb'),
(121, 17, 45, 2, 'optionb'),
(121, 17, 46, -0.66, 'optionc'),
(121, 17, 47, -0.66, 'optionb'),
(121, 17, 48, 2, 'optiond'),
(121, 17, 50, -0.66, 'optionc'),
(121, 17, 52, 2, 'optiond'),
(121, 17, 54, 2, 'optiond'),
(121, 17, 55, 2, 'optiona'),
(121, 17, 60, 1, 'optiond'),
(121, 17, 61, 2, 'optionb'),
(121, 17, 63, 2, 'optiona'),
(121, 17, 65, 2, 'optiond'),
(121, 18, 2, 1, 'optiond'),
(121, 18, 3, 1, 'optionb'),
(121, 18, 4, 1, 'optiona'),
(121, 18, 6, 1, 'optionc'),
(121, 18, 8, -0.33, 'optiond'),
(121, 18, 9, 1, 'optiond'),
(121, 18, 10, 1, 'optionb'),
(121, 18, 11, 1, 'optionb'),
(121, 18, 12, 1, 'optiona'),
(121, 18, 13, 1, 'optiond'),
(121, 18, 15, 1, 'optionc'),
(121, 18, 16, 1, 'optionc'),
(121, 18, 17, 1, 'optionb'),
(121, 18, 20, 1, 'optionb'),
(121, 18, 21, 1, 'optiond'),
(121, 18, 22, -0.33, 'optionb'),
(121, 18, 25, 1, 'optionc'),
(121, 18, 26, 2, 'optionb'),
(121, 18, 27, -0.66, 'optionc'),
(121, 18, 29, 2, 'optiond'),
(121, 18, 30, 2, 'optionc'),
(121, 18, 31, 2, 'optiona'),
(121, 18, 32, -0.66, 'optionc'),
(121, 18, 33, 2, 'optiond'),
(121, 18, 36, 2, 'optiona'),
(121, 18, 38, 2, 'optionb'),
(121, 18, 39, 2, 'optiona'),
(121, 18, 42, 2, 'optionb'),
(121, 18, 45, -0.66, 'optionc'),
(121, 18, 47, 2, 'optiond'),
(121, 18, 48, 2, 'optionb'),
(121, 18, 49, 2, 'optionc'),
(121, 18, 50, 2, 'optionc'),
(121, 18, 51, -0.66, 'optiond'),
(121, 18, 52, -0.66, 'optionb'),
(121, 18, 53, 2, 'optiona'),
(121, 18, 56, 1, 'optione'),
(121, 18, 57, 1, 'optionb'),
(121, 18, 60, 1, 'optiona'),
(121, 18, 61, 2, 'optionb'),
(121, 18, 62, 2, 'optiond'),
(121, 18, 65, 2, 'optiond'),
(122, 7, 1, 1, 'optionc'),
(122, 7, 3, -0.33, 'optiond'),
(122, 7, 4, -0.33, 'optionb'),
(122, 7, 5, -0.33, 'optionc'),
(122, 7, 6, -0.33, 'optiona'),
(122, 7, 7, 1, 'optionb'),
(122, 7, 8, 1, 'optionb'),
(122, 7, 10, 1, 'optionc'),
(122, 7, 11, 1, 'optiona'),
(122, 7, 12, -0.33, 'optiona'),
(122, 7, 14, 1, 'optionc'),
(122, 7, 15, 1, 'optionb'),
(122, 7, 16, 1, 'optiona'),
(122, 7, 17, 1, 'optionc'),
(122, 7, 18, 1, 'optiona'),
(122, 7, 19, 1, 'optiond'),
(122, 7, 24, 1, 'optiona'),
(122, 7, 26, -0.66, 'optiond'),
(122, 7, 27, -0.66, 'optiona'),
(122, 7, 28, 2, 'optiona'),
(122, 7, 31, 2, 'optiona'),
(122, 7, 34, 2, 'optione'),
(122, 7, 35, 2, 'optionc'),
(122, 7, 36, 2, 'optionc'),
(122, 7, 37, -0.66, 'optiona'),
(122, 7, 40, 2, 'optionb'),
(122, 7, 41, 2, 'optionc'),
(122, 7, 42, 2, 'optionc'),
(122, 7, 43, 2, 'optionb'),
(122, 7, 44, 2, 'optionb'),
(122, 7, 45, 2, 'optiond'),
(122, 7, 46, -0.66, 'optiona'),
(122, 7, 47, 2, 'optionb'),
(122, 7, 50, 2, 'optionc'),
(122, 7, 51, 2, 'optionb'),
(122, 7, 54, 2, 'optiond'),
(122, 7, 58, 1, 'optionb'),
(122, 7, 59, 1, 'optiond'),
(122, 7, 60, 1, 'optionc'),
(122, 7, 61, -0.66, 'optiona'),
(122, 7, 63, 2, 'optiond'),
(122, 7, 65, 2, 'optionb'),
(122, 8, 1, -0.33, 'optiona'),
(122, 8, 2, -0.33, 'optiond'),
(122, 8, 3, -0.33, 'optionc'),
(122, 8, 4, -0.33, 'optionb'),
(122, 8, 5, -0.33, 'optiona'),
(122, 8, 6, 1, 'optiond'),
(122, 8, 8, -0.33, 'optionc'),
(122, 8, 9, -0.33, 'optiona'),
(122, 8, 11, 1, 'optiond'),
(122, 8, 12, -0.33, 'optionb'),
(122, 8, 13, 1, 'optionb'),
(122, 8, 15, 1, 'optionc'),
(122, 8, 16, 1, 'optionc'),
(122, 8, 17, -0.33, 'optionb'),
(122, 8, 18, -0.33, 'optiond'),
(122, 8, 19, 1, 'optiona'),
(122, 8, 21, 1, 'optiona'),
(122, 8, 22, -0.33, 'optionc'),
(122, 8, 25, 1, 'optiond'),
(122, 8, 26, 1, 'optiond'),
(122, 8, 27, 1, 'optiond'),
(122, 8, 30, 1, 'optionc'),
(122, 8, 31, 1, 'optionc'),
(122, 8, 32, 1, 'optionb'),
(122, 8, 33, 1, 'optiona'),
(122, 8, 34, 1, 'optiond'),
(122, 8, 35, 1, 'optionc'),
(122, 8, 36, -0.33, 'optiona'),
(122, 8, 37, 1, 'optiond'),
(122, 8, 38, 1, 'optionb'),
(122, 8, 39, 1, 'optiond'),
(122, 8, 42, 1, 'optiond'),
(122, 8, 43, 1, 'optionb'),
(122, 8, 44, -0.33, 'optiona'),
(122, 8, 45, 1, 'optiond'),
(122, 9, 2, 2, 'optionb'),
(122, 9, 3, -0.66, 'optionb'),
(122, 9, 7, -0.66, 'optiona'),
(122, 9, 14, 2, 'optionb'),
(122, 9, 17, 2, 'optionb'),
(122, 9, 22, -0.66, 'optiond'),
(122, 9, 25, -0.66, 'optionb'),
(122, 9, 26, 2, 'optionc'),
(122, 9, 28, -0.66, 'optionc'),
(122, 9, 29, -0.66, 'optiona'),
(122, 9, 30, 2, 'optionb'),
(122, 9, 31, -0.66, 'optionc'),
(122, 9, 34, 2, 'optiond'),
(122, 9, 36, -0.66, 'optionb'),
(122, 9, 37, 2, 'optionb'),
(122, 10, 1, 2, 'optione'),
(122, 10, 2, 2, 'optionb'),
(122, 10, 3, 2, 'optiond'),
(122, 10, 5, 2, 'optionb'),
(122, 10, 6, 2, 'optionb'),
(122, 10, 8, 2, 'optione'),
(122, 10, 9, 2, 'optionc'),
(122, 10, 10, 2, 'optiond'),
(122, 10, 11, 2, 'optionc'),
(122, 10, 12, 2, 'optionb');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(122, 10, 13, 2, 'optionc'),
(122, 10, 15, -0.66, 'optiona'),
(122, 10, 16, 2, 'optiona'),
(122, 10, 17, 2, 'optionb'),
(122, 10, 19, 2, 'optiona'),
(122, 10, 21, 2, 'optionb'),
(122, 10, 22, -0.66, 'optiona'),
(122, 10, 23, -0.66, 'optionc'),
(122, 11, 1, 2, 'optionb'),
(122, 11, 2, 2, 'optionc'),
(122, 11, 3, -0.66, 'optiond'),
(122, 11, 4, 2, 'optiond'),
(122, 11, 5, 2, 'optionb'),
(122, 11, 6, 2, 'optionb'),
(122, 11, 7, 2, 'optionb'),
(122, 11, 8, 2, 'optiona'),
(122, 11, 9, 2, 'optionc'),
(122, 11, 10, -0.66, 'optionb'),
(122, 11, 11, 2, 'optiona'),
(122, 11, 12, 2, 'optiona'),
(122, 11, 13, 2, 'optionb'),
(122, 11, 14, -0.66, 'optiond'),
(122, 11, 15, 2, 'optionc'),
(122, 11, 17, 2, 'optiona'),
(122, 11, 18, 2, 'optionb'),
(122, 11, 19, 2, 'optionb'),
(122, 11, 20, 2, 'optiona'),
(122, 11, 21, -0.66, 'optionb'),
(122, 11, 22, -0.66, 'optionb'),
(122, 11, 24, 2, 'optiona'),
(122, 11, 25, 2, 'optionb'),
(122, 11, 26, 2, 'optionc'),
(122, 11, 27, 2, 'optione'),
(122, 11, 28, 2, 'optiona'),
(122, 11, 29, 2, 'optiond'),
(122, 11, 30, -0.66, 'optiona'),
(122, 11, 32, -0.66, 'optione'),
(122, 11, 33, -0.66, 'optione'),
(122, 11, 34, 2, 'optiond'),
(122, 11, 35, 2, 'optiond'),
(122, 11, 36, 2, 'optione'),
(122, 11, 37, 2, 'optionb'),
(122, 11, 38, 2, 'optiona'),
(122, 11, 39, 2, 'optiona'),
(122, 11, 40, 2, 'optiond'),
(122, 11, 41, 2, 'optionc'),
(122, 11, 42, -0.66, 'optionc'),
(122, 11, 43, 2, 'optiond'),
(122, 11, 44, -0.66, 'optiond'),
(122, 11, 45, 2, 'optiona'),
(122, 11, 46, 2, 'optiona'),
(122, 11, 48, 2, 'optiond'),
(122, 11, 49, 2, 'optiond'),
(122, 11, 51, 2, 'optiond'),
(122, 11, 52, 2, 'optionb'),
(122, 11, 53, 2, 'optionc'),
(122, 11, 54, -0.66, 'optione'),
(122, 11, 55, -0.66, 'optionc'),
(122, 11, 56, 2, 'optione'),
(122, 11, 57, 2, 'optionc'),
(122, 11, 58, 2, 'optione'),
(122, 11, 60, 2, 'optiond'),
(122, 12, 1, 2, 'optionc'),
(122, 12, 2, 2, 'optionc'),
(122, 12, 3, 2, 'optiond'),
(122, 12, 4, 2, 'optionc'),
(122, 12, 6, -0.66, 'optiona'),
(122, 12, 7, 2, 'optionb'),
(122, 12, 8, 2, 'optionb'),
(122, 12, 9, -0.66, 'optionc'),
(122, 12, 10, 2, 'optiond'),
(122, 12, 11, 2, 'optionb'),
(122, 12, 12, -0.66, 'optiona'),
(122, 12, 13, 2, 'optionb'),
(122, 12, 14, 2, 'optiona'),
(122, 12, 15, 2, 'optiond'),
(122, 12, 16, -0.66, 'optiond'),
(122, 12, 17, 2, 'optionc'),
(122, 12, 18, 2, 'optiond'),
(122, 12, 20, 2, 'optionb'),
(122, 12, 21, 2, 'optiona'),
(122, 12, 22, 2, 'optiond'),
(122, 12, 23, 2, 'optionb'),
(122, 12, 24, 2, 'optiona'),
(122, 12, 25, 2, 'optionc'),
(122, 12, 26, -0.66, 'optiona'),
(122, 12, 27, 2, 'optionc'),
(122, 12, 28, 2, 'optiond'),
(122, 12, 29, 2, 'optiona'),
(122, 12, 30, 2, 'optionb'),
(122, 12, 31, 2, 'optionc'),
(122, 12, 32, 2, 'optionc'),
(122, 12, 33, -0.66, 'optionb'),
(122, 12, 34, -0.66, 'optionb'),
(122, 12, 36, -0.66, 'optiona'),
(122, 12, 37, 2, 'optiona'),
(122, 12, 38, 2, 'optionc'),
(122, 12, 40, 2, 'optiona'),
(122, 12, 41, 2, 'optionb'),
(122, 12, 43, -0.66, 'optionc'),
(122, 12, 44, 2, 'optionb'),
(122, 12, 45, 2, 'optiond'),
(122, 12, 46, 2, 'optiond'),
(122, 12, 47, -0.66, 'optionb'),
(122, 12, 48, 2, 'optiona'),
(122, 12, 50, -0.66, 'optiona'),
(122, 12, 51, 2, 'optionc'),
(122, 12, 52, 2, 'optionb'),
(122, 12, 53, 2, 'optiona'),
(122, 12, 54, 2, 'optiona'),
(122, 13, 1, -0.66, 'optiond'),
(122, 13, 3, -0.66, 'optiond'),
(122, 13, 5, 2, 'optionc'),
(122, 13, 8, 2, 'optionc'),
(122, 13, 10, 2, 'optione'),
(122, 13, 11, 2, 'optiond'),
(122, 13, 12, 2, 'optiona'),
(122, 13, 13, 2, 'optiond'),
(122, 13, 14, -0.66, 'optione'),
(122, 13, 15, 2, 'optionc'),
(122, 13, 18, -0.66, 'optione'),
(122, 13, 19, 2, 'optionb'),
(122, 13, 20, 2, 'optiona'),
(122, 13, 22, 2, 'optiona'),
(122, 13, 23, 2, 'optiona'),
(122, 13, 24, 2, 'optionc'),
(122, 13, 25, 2, 'optiona'),
(122, 13, 26, 2, 'optiond'),
(122, 13, 27, 2, 'optiond'),
(122, 13, 28, 2, 'optionc'),
(122, 13, 29, 2, 'optionc'),
(122, 13, 30, -0.66, 'optionc'),
(122, 13, 32, -0.66, 'optionc'),
(122, 13, 35, 2, 'optionc'),
(122, 13, 36, 2, 'optionc'),
(122, 13, 38, 2, 'optionb'),
(122, 13, 39, 2, 'optiona'),
(122, 13, 40, 2, 'optiond'),
(122, 15, 2, 1, 'optiond'),
(122, 15, 3, -0.33, 'optiond'),
(122, 15, 4, 1, 'optiona'),
(122, 15, 5, -0.33, 'optionc'),
(122, 15, 6, 1, 'optiona'),
(122, 15, 7, -0.33, 'optionc'),
(122, 15, 9, -0.33, 'optionc'),
(122, 15, 11, 1, 'optiond'),
(122, 15, 13, 1, 'optionb'),
(122, 15, 14, 1, 'optionc'),
(122, 15, 15, 1, 'optiond'),
(122, 15, 16, -0.33, 'optiona'),
(122, 15, 17, 1, 'optionb'),
(122, 15, 18, 1, 'optionb'),
(122, 15, 19, 1, 'optionc'),
(122, 15, 20, 1, 'optionb'),
(122, 15, 21, 1, 'optiona'),
(122, 15, 22, 1, 'optionb'),
(122, 15, 23, 1, 'optiona'),
(122, 15, 24, 1, 'optiona'),
(122, 15, 25, -0.33, 'optionb'),
(122, 15, 26, 2, 'optiona'),
(122, 15, 29, 2, 'optiond'),
(122, 15, 30, 2, 'optionb'),
(122, 15, 31, 2, 'optiona'),
(122, 15, 32, 2, 'optiona'),
(122, 15, 33, -0.66, 'optionb'),
(122, 15, 35, 2, 'optionc'),
(122, 15, 36, 2, 'optiond'),
(122, 15, 37, 2, 'optionb'),
(122, 15, 39, 2, 'optionb'),
(122, 15, 40, 2, 'optiond'),
(122, 15, 41, -0.66, 'optionb'),
(122, 15, 42, 2, 'optiona'),
(122, 15, 43, 2, 'optiona'),
(122, 15, 44, 2, 'optiond'),
(122, 15, 45, 2, 'optiona'),
(122, 15, 47, -0.66, 'optionc'),
(122, 15, 48, 2, 'optionc'),
(122, 15, 49, -0.66, 'optiona'),
(122, 15, 52, 2, 'optionc'),
(122, 15, 53, 2, 'optionc'),
(122, 15, 54, 2, 'optionc'),
(122, 15, 56, -0.33, 'optionb'),
(122, 15, 57, -0.33, 'optiona'),
(122, 15, 58, 1, 'optiond'),
(122, 15, 59, 1, 'optiond'),
(122, 15, 60, -0.33, 'optiond'),
(122, 15, 64, -0.66, 'optionb'),
(122, 16, 1, 1, 'optionc'),
(122, 16, 2, 1, 'optionb'),
(122, 16, 3, 1, 'optiond'),
(122, 16, 5, 1, 'optiond'),
(122, 16, 6, 1, 'optionb'),
(122, 16, 8, 1, 'optiona'),
(122, 16, 9, -0.33, 'optiona'),
(122, 16, 10, 1, 'optionc'),
(122, 16, 12, -0.33, 'optionc'),
(122, 16, 14, 1, 'optiond'),
(122, 16, 15, 1, 'optionc'),
(122, 16, 16, 1, 'optiond'),
(122, 16, 17, -0.33, 'optiond'),
(122, 16, 19, 1, 'optiond'),
(122, 16, 20, 1, 'optiona'),
(122, 16, 22, 1, 'optionb'),
(122, 16, 23, -0.33, 'optiona'),
(122, 16, 28, -0.66, 'optiona'),
(122, 16, 29, 2, 'optiond'),
(122, 16, 30, 2, 'optiond'),
(122, 16, 32, -0.66, 'optionb'),
(122, 16, 33, 2, 'optiond'),
(122, 16, 35, 2, 'optionb'),
(122, 16, 37, 2, 'optionb'),
(122, 16, 38, -0.66, 'optiona'),
(122, 16, 39, -0.66, 'optiona'),
(122, 16, 40, 2, 'optiona'),
(122, 16, 41, -0.66, 'optiond'),
(122, 16, 43, 2, 'optiona'),
(122, 16, 44, 2, 'optiond'),
(122, 16, 45, 2, 'optiona'),
(122, 16, 46, -0.66, 'optiond'),
(122, 16, 50, 2, 'optiona'),
(122, 16, 51, 2, 'optiona'),
(122, 16, 53, 2, 'optionb'),
(122, 16, 59, 1, 'optionc'),
(122, 16, 61, 2, 'optionb'),
(122, 17, 1, -0.33, 'optionb'),
(122, 17, 2, 1, 'optionb'),
(122, 17, 3, 1, 'optionb'),
(122, 17, 5, 1, 'optionc'),
(122, 17, 6, 1, 'optiona'),
(122, 17, 7, 1, 'optionc'),
(122, 17, 8, 1, 'optiona'),
(122, 17, 9, 1, 'optionb'),
(122, 17, 10, -0.33, 'optionc'),
(122, 17, 11, -0.33, 'optionb'),
(122, 17, 12, 1, 'optiona'),
(122, 17, 13, 1, 'optionb'),
(122, 17, 17, -0.33, 'optionc'),
(122, 17, 18, 1, 'optionb'),
(122, 17, 19, 1, 'optionb'),
(122, 17, 20, -0.33, 'optionb'),
(122, 17, 22, 1, 'optionb'),
(122, 17, 23, 1, 'optiond'),
(122, 17, 24, 1, 'optionb'),
(122, 17, 25, 1, 'optionb'),
(122, 17, 26, 2, 'optionc'),
(122, 17, 27, 2, 'optionc'),
(122, 17, 28, -0.66, 'optionb'),
(122, 17, 29, -0.66, 'optiona'),
(122, 17, 31, 2, 'optiond'),
(122, 17, 32, 2, 'optiona'),
(122, 17, 33, 2, 'optiona'),
(122, 17, 35, -0.66, 'optionc'),
(122, 17, 36, 2, 'optiond'),
(122, 17, 37, 2, 'optionc'),
(122, 17, 38, -0.66, 'optiona'),
(122, 17, 40, -0.66, 'optiona'),
(122, 17, 41, 2, 'optionc'),
(122, 17, 44, 2, 'optionb'),
(122, 17, 45, 2, 'optionb'),
(122, 17, 46, 2, 'optionb'),
(122, 17, 47, -0.66, 'optionb'),
(122, 17, 48, 2, 'optiond'),
(122, 17, 49, -0.66, 'optiond'),
(122, 17, 50, -0.66, 'optionc'),
(122, 17, 52, 2, 'optiond'),
(122, 17, 53, 2, 'optiona'),
(122, 17, 54, 2, 'optiond'),
(122, 17, 55, 2, 'optiona'),
(122, 17, 57, 1, 'optionb'),
(122, 17, 58, 1, 'optionc'),
(122, 17, 59, -0.33, 'optionc'),
(122, 17, 61, 2, 'optionb'),
(122, 17, 65, 2, 'optiond'),
(122, 18, 1, 1, 'optiona'),
(122, 18, 2, 1, 'optiond'),
(122, 18, 3, 1, 'optionb'),
(122, 18, 4, 1, 'optiona'),
(122, 18, 5, -0.33, 'optionc'),
(122, 18, 6, -0.33, 'optiona'),
(122, 18, 8, -0.33, 'optionc'),
(122, 18, 9, 1, 'optiond'),
(122, 18, 10, 1, 'optionb'),
(122, 18, 11, -0.33, 'optionc'),
(122, 18, 12, -0.33, 'optionb'),
(122, 18, 13, -0.33, 'optionb'),
(122, 18, 14, 1, 'optionc'),
(122, 18, 15, 1, 'optionc'),
(122, 18, 17, 1, 'optionb'),
(122, 18, 18, -0.33, 'optiond'),
(122, 18, 19, 1, 'optionc'),
(122, 18, 20, -0.33, 'optionc'),
(122, 18, 21, 1, 'optiond'),
(122, 18, 22, 1, 'optiond'),
(122, 18, 23, 1, 'optiond'),
(122, 18, 24, 1, 'optionc'),
(122, 18, 25, 1, 'optionc'),
(122, 18, 26, 2, 'optionb'),
(122, 18, 27, 2, 'optiond'),
(122, 18, 29, 2, 'optiond'),
(122, 18, 30, 2, 'optionc'),
(122, 18, 31, 2, 'optiona'),
(122, 18, 33, 2, 'optiond'),
(122, 18, 34, 2, 'optiona'),
(122, 18, 35, -0.66, 'optionc'),
(122, 18, 37, 2, 'optionc'),
(122, 18, 38, 2, 'optionb'),
(122, 18, 42, 2, 'optionb'),
(122, 18, 43, -0.66, 'optiona'),
(122, 18, 44, 2, 'optionc'),
(122, 18, 45, -0.66, 'optionc'),
(122, 18, 47, 2, 'optiond'),
(122, 18, 48, -0.66, 'optiond'),
(122, 18, 49, 2, 'optionc'),
(122, 18, 50, 2, 'optionc'),
(122, 18, 51, -0.66, 'optiond'),
(122, 18, 52, 2, 'optiona'),
(122, 18, 54, 2, 'optiona'),
(122, 18, 55, -0.66, 'optionc'),
(122, 18, 56, 1, 'optione'),
(122, 18, 57, -0.33, 'optiond'),
(122, 18, 58, 1, 'optionc'),
(122, 18, 60, 1, 'optiona'),
(122, 18, 61, 2, 'optionb'),
(122, 18, 62, -0.66, 'optionb'),
(123, 8, 1, 1, 'optione'),
(123, 8, 2, -0.33, 'optionc'),
(123, 8, 3, 1, 'optionb'),
(123, 8, 4, -0.33, 'optionb'),
(123, 8, 5, -0.33, 'optiona'),
(123, 8, 6, 1, 'optiond'),
(123, 8, 7, 1, 'optionb'),
(123, 8, 9, 1, 'optiond'),
(123, 8, 10, 1, 'optionc'),
(123, 8, 11, 1, 'optiond'),
(123, 8, 12, 1, 'optiona'),
(123, 8, 13, 1, 'optionb'),
(123, 8, 14, 1, 'optiona'),
(123, 8, 15, 1, 'optionc'),
(123, 8, 16, 1, 'optionc'),
(123, 8, 18, -0.33, 'optionb'),
(123, 8, 19, 1, 'optiona'),
(123, 8, 25, -0.33, 'optione'),
(123, 8, 26, 1, 'optiond'),
(123, 8, 27, 1, 'optiond'),
(123, 8, 29, 1, 'optionb'),
(123, 8, 30, 1, 'optionc'),
(123, 8, 31, 1, 'optionc'),
(123, 8, 32, 1, 'optionb'),
(123, 8, 33, 1, 'optiona'),
(123, 8, 34, 1, 'optiond'),
(123, 8, 35, 1, 'optionc'),
(123, 8, 36, 1, 'optionc'),
(123, 8, 37, 1, 'optiond'),
(123, 8, 38, 1, 'optionb'),
(123, 8, 39, 1, 'optiond'),
(123, 8, 41, 1, 'optiona'),
(123, 8, 42, 1, 'optiond'),
(123, 8, 43, 1, 'optionb'),
(123, 8, 44, -0.33, 'optiona'),
(123, 8, 45, 1, 'optiond'),
(123, 9, 2, 2, 'optionb'),
(123, 9, 4, 2, 'optiona'),
(123, 9, 5, -0.66, 'optionc'),
(123, 9, 6, 2, 'optiond'),
(123, 9, 7, -0.66, 'optionb'),
(123, 9, 9, 2, 'optionb'),
(123, 9, 10, 2, 'optionc'),
(123, 9, 12, 2, 'optiona'),
(123, 9, 18, 2, 'optionb'),
(123, 9, 21, 2, 'optionc'),
(123, 9, 24, 2, 'optionc'),
(123, 9, 26, 2, 'optionc'),
(123, 9, 29, 2, 'optionc'),
(123, 9, 30, 2, 'optionb'),
(123, 9, 31, -0.66, 'optionc'),
(123, 9, 32, 2, 'optionb'),
(123, 9, 33, -0.66, 'optiona'),
(123, 9, 35, 2, 'optionb'),
(123, 9, 39, -0.66, 'optiona'),
(123, 9, 47, -0.66, 'optionb'),
(123, 9, 50, 2, 'optionb'),
(123, 9, 52, 2, 'optionb'),
(123, 9, 54, 2, 'optione'),
(123, 10, 1, -0.66, 'optionc'),
(123, 10, 2, 2, 'optionb'),
(123, 10, 5, 2, 'optionb'),
(123, 10, 6, 2, 'optionb'),
(123, 10, 7, 2, 'optiona'),
(123, 10, 9, -0.66, 'optiond'),
(123, 10, 10, 2, 'optiond'),
(123, 10, 11, 2, 'optionc'),
(123, 10, 12, 2, 'optionb'),
(123, 10, 14, 2, 'optionb'),
(123, 10, 15, -0.66, 'optiona'),
(123, 10, 16, 2, 'optiona'),
(123, 10, 17, 2, 'optionb'),
(123, 10, 19, 2, 'optiona'),
(123, 10, 20, 2, 'optionc'),
(123, 10, 21, 2, 'optionb'),
(123, 10, 22, 2, 'optionb'),
(123, 10, 23, 2, 'optiond'),
(123, 10, 24, 2, 'optiona'),
(123, 11, 1, -0.66, 'optionc'),
(123, 11, 2, 2, 'optionc'),
(123, 11, 3, 2, 'optiona'),
(123, 11, 4, 2, 'optiond'),
(123, 11, 5, 2, 'optionb'),
(123, 11, 6, 2, 'optionb'),
(123, 11, 7, 2, 'optionb'),
(123, 11, 8, 2, 'optiona'),
(123, 11, 9, 2, 'optionc'),
(123, 11, 11, 2, 'optiona'),
(123, 11, 12, 2, 'optiona'),
(123, 11, 13, 2, 'optionb'),
(123, 11, 15, 2, 'optionc'),
(123, 11, 16, 2, 'optionb'),
(123, 11, 17, 2, 'optiona'),
(123, 11, 18, 2, 'optionb'),
(123, 11, 19, 2, 'optionb'),
(123, 11, 20, -0.66, 'optionc'),
(123, 11, 21, 2, 'optionc'),
(123, 11, 24, 2, 'optiona'),
(123, 11, 25, 2, 'optionb'),
(123, 11, 26, 2, 'optionc'),
(123, 11, 27, 2, 'optione'),
(123, 11, 28, 2, 'optiona'),
(123, 11, 29, 2, 'optiond'),
(123, 11, 30, -0.66, 'optiona'),
(123, 11, 31, 2, 'optione'),
(123, 11, 32, 2, 'optionc'),
(123, 11, 34, 2, 'optiond'),
(123, 11, 35, 2, 'optiond'),
(123, 11, 36, 2, 'optione'),
(123, 11, 37, 2, 'optionb'),
(123, 11, 38, 2, 'optiona'),
(123, 11, 39, -0.66, 'optionb'),
(123, 11, 41, 2, 'optionc'),
(123, 11, 43, 2, 'optiond'),
(123, 11, 46, 2, 'optiona'),
(123, 11, 48, 2, 'optiond'),
(123, 11, 49, 2, 'optiond'),
(123, 11, 51, 2, 'optiond'),
(123, 11, 52, 2, 'optionb'),
(123, 11, 53, 2, 'optionc'),
(123, 11, 54, 2, 'optionb'),
(123, 11, 55, -0.66, 'optionc'),
(123, 11, 56, 2, 'optione'),
(123, 11, 57, 2, 'optionc'),
(123, 11, 58, 2, 'optione'),
(123, 11, 60, 2, 'optiond'),
(123, 12, 1, 2, 'optionc'),
(123, 12, 2, -0.66, 'optiond'),
(123, 12, 3, 2, 'optiond'),
(123, 12, 4, -0.66, 'optiona'),
(123, 12, 5, 2, 'optiona'),
(123, 12, 6, -0.66, 'optiona'),
(123, 12, 7, 2, 'optionb'),
(123, 12, 8, -0.66, 'optiona'),
(123, 12, 10, -0.66, 'optionc'),
(123, 12, 11, -0.66, 'optiond'),
(123, 12, 12, 2, 'optionb'),
(123, 12, 14, 2, 'optiona'),
(123, 12, 15, 2, 'optiond'),
(123, 12, 16, 2, 'optionc'),
(123, 12, 20, 2, 'optionb'),
(123, 12, 21, 2, 'optiona'),
(123, 12, 22, 2, 'optiond'),
(123, 12, 23, 2, 'optionb'),
(123, 12, 26, 2, 'optionb'),
(123, 12, 29, -0.66, 'optiond'),
(123, 12, 30, -0.66, 'optiona'),
(123, 12, 31, 2, 'optionc'),
(123, 12, 32, 2, 'optionc'),
(123, 12, 34, 2, 'optiond'),
(123, 12, 38, 2, 'optionc'),
(123, 12, 40, 2, 'optiona'),
(123, 12, 41, 2, 'optionb'),
(123, 12, 43, 2, 'optiond'),
(123, 12, 45, 2, 'optiond'),
(123, 12, 46, 2, 'optiond'),
(123, 12, 47, 2, 'optionc'),
(123, 12, 50, 2, 'optionb'),
(123, 12, 51, 2, 'optionc'),
(123, 12, 52, 2, 'optionb'),
(123, 12, 53, 2, 'optiona'),
(123, 12, 54, -0.66, 'optionb'),
(123, 13, 1, -0.66, 'optiond'),
(123, 13, 3, -0.66, 'optiond'),
(123, 13, 6, -0.66, 'optiona'),
(123, 13, 8, 2, 'optionc'),
(123, 13, 9, 2, 'optione'),
(123, 13, 11, 2, 'optiond'),
(123, 13, 12, -0.66, 'optionc'),
(123, 13, 13, -0.66, 'optiona'),
(123, 13, 20, -0.66, 'optiond'),
(123, 13, 22, 2, 'optiona'),
(123, 13, 23, 2, 'optiona'),
(123, 13, 25, -0.66, 'optionc'),
(123, 13, 26, 2, 'optiond'),
(123, 13, 28, 2, 'optionc'),
(123, 13, 30, 2, 'optiona'),
(123, 13, 40, 2, 'optiond'),
(123, 15, 2, 1, 'optiond'),
(123, 15, 3, -0.33, 'optiond'),
(123, 15, 6, 1, 'optiona'),
(123, 15, 8, 1, 'optiona'),
(123, 15, 9, 1, 'optionb'),
(123, 15, 11, -0.33, 'optionb'),
(123, 15, 12, 1, 'optionc'),
(123, 15, 13, 1, 'optionb'),
(123, 15, 14, 1, 'optionc'),
(123, 15, 15, 1, 'optiond'),
(123, 15, 16, 1, 'optiond'),
(123, 15, 17, 1, 'optionb'),
(123, 15, 18, 1, 'optionb'),
(123, 15, 19, 1, 'optionc'),
(123, 15, 20, 1, 'optionb'),
(123, 15, 21, 1, 'optiona'),
(123, 15, 22, 1, 'optionb'),
(123, 15, 23, 1, 'optiona'),
(123, 15, 24, 1, 'optiona'),
(123, 15, 25, 1, 'optiond'),
(123, 15, 26, 2, 'optiona'),
(123, 15, 27, 2, 'optiona'),
(123, 15, 28, -0.66, 'optiona'),
(123, 15, 29, 2, 'optiond'),
(123, 15, 30, 2, 'optionb'),
(123, 15, 31, 2, 'optiona'),
(123, 15, 32, 2, 'optiona'),
(123, 15, 33, -0.66, 'optionb'),
(123, 15, 35, 2, 'optionc'),
(123, 15, 36, 2, 'optiond'),
(123, 15, 37, -0.66, 'optiona'),
(123, 15, 38, 2, 'optionc'),
(123, 15, 39, 2, 'optionb'),
(123, 15, 40, 2, 'optiond'),
(123, 15, 41, 2, 'optionc'),
(123, 15, 42, 2, 'optiona'),
(123, 15, 43, 2, 'optiona'),
(123, 15, 44, 2, 'optiond'),
(123, 15, 45, -0.66, 'optiond'),
(123, 15, 47, 2, 'optiond'),
(123, 15, 48, 2, 'optionc'),
(123, 15, 49, 2, 'optionc'),
(123, 15, 50, 2, 'optiond'),
(123, 15, 51, -0.66, 'optionc'),
(123, 15, 52, 2, 'optionc'),
(123, 15, 54, 2, 'optionc'),
(123, 15, 55, 2, 'optionb'),
(123, 15, 57, 1, 'optionb'),
(123, 15, 58, 1, 'optiond'),
(123, 15, 59, 1, 'optiond'),
(123, 15, 62, 2, 'optionb'),
(123, 15, 63, 2, 'optiond'),
(123, 15, 64, -0.66, 'optionc'),
(123, 16, 1, 1, 'optionc'),
(123, 16, 3, 1, 'optiond'),
(123, 16, 4, 1, 'optiond'),
(123, 16, 6, 1, 'optionb'),
(123, 16, 8, 1, 'optiona'),
(123, 16, 9, 1, 'optionc'),
(123, 16, 10, 1, 'optionc'),
(123, 16, 11, -0.33, 'optiona'),
(123, 16, 12, 1, 'optiond'),
(123, 16, 14, 1, 'optiond'),
(123, 16, 16, -0.33, 'optionb'),
(123, 16, 19, 1, 'optiond'),
(123, 16, 20, 1, 'optiona'),
(123, 16, 21, 1, 'optiond'),
(123, 16, 22, 1, 'optionb'),
(123, 16, 25, -0.33, 'optiond'),
(123, 16, 28, -0.66, 'optionc'),
(123, 16, 29, 2, 'optiond'),
(123, 16, 30, 2, 'optiond'),
(123, 16, 32, 2, 'optiond'),
(123, 16, 33, 2, 'optiond'),
(123, 16, 35, -0.66, 'optionc'),
(123, 16, 37, -0.66, 'optionc'),
(123, 16, 40, 2, 'optiona'),
(123, 16, 43, 2, 'optiona'),
(123, 16, 44, 2, 'optiond'),
(123, 16, 45, 2, 'optiona'),
(123, 16, 47, 2, 'optionc'),
(123, 16, 48, 2, 'optiona'),
(123, 16, 50, 2, 'optiona'),
(123, 16, 51, -0.66, 'optionb'),
(123, 16, 52, 2, 'optiona'),
(123, 16, 53, -0.66, 'optiond'),
(123, 16, 54, -0.66, 'optiona'),
(123, 16, 59, 1, 'optionc'),
(123, 16, 60, 1, 'optionc'),
(123, 16, 61, -0.66, 'optiond'),
(123, 16, 64, -0.66, 'optiona'),
(123, 17, 1, -0.33, 'optionb'),
(123, 17, 2, 1, 'optionb'),
(123, 17, 3, 1, 'optionb'),
(123, 17, 4, -0.33, 'optiona'),
(123, 17, 5, 1, 'optionc'),
(123, 17, 6, 1, 'optiona'),
(123, 17, 7, 1, 'optionc'),
(123, 17, 8, -0.33, 'optionb'),
(123, 17, 9, 1, 'optionb'),
(123, 17, 11, 1, 'optiond'),
(123, 17, 14, 1, 'optionc'),
(123, 17, 18, -0.33, 'optiond'),
(123, 17, 19, 1, 'optionb'),
(123, 17, 20, -0.33, 'optionb'),
(123, 17, 21, 1, 'optionc'),
(123, 17, 22, 1, 'optionb'),
(123, 17, 24, -0.33, 'optionc'),
(123, 17, 25, 1, 'optionb'),
(123, 17, 26, 2, 'optionc'),
(123, 17, 27, 2, 'optionc'),
(123, 17, 28, 2, 'optiond'),
(123, 17, 29, -0.66, 'optionb'),
(123, 17, 30, -0.66, 'optiond'),
(123, 17, 31, 2, 'optiond'),
(123, 17, 32, 2, 'optiona'),
(123, 17, 33, 2, 'optiona'),
(123, 17, 35, 2, 'optionb'),
(123, 17, 37, 2, 'optionc'),
(123, 17, 38, 2, 'optionc'),
(123, 17, 40, -0.66, 'optionc'),
(123, 17, 41, -0.66, 'optionb'),
(123, 17, 42, 2, 'optionb'),
(123, 17, 44, 2, 'optionb'),
(123, 17, 45, 2, 'optionb'),
(123, 17, 46, 2, 'optionb'),
(123, 17, 47, -0.66, 'optionb'),
(123, 17, 48, 2, 'optiond'),
(123, 17, 50, -0.66, 'optionb'),
(123, 17, 52, 2, 'optiond'),
(123, 17, 53, -0.66, 'optiond'),
(123, 17, 54, 2, 'optiond'),
(123, 17, 55, 2, 'optiona'),
(123, 17, 57, -0.33, 'optiond'),
(123, 17, 58, 1, 'optionc'),
(123, 17, 59, 1, 'optiond'),
(123, 17, 60, 1, 'optiond'),
(123, 17, 61, 2, 'optionb'),
(123, 17, 62, 2, 'optionc'),
(123, 17, 63, -0.66, 'optionb'),
(123, 17, 65, -0.66, 'optionb'),
(123, 18, 2, 1, 'optiond'),
(123, 18, 3, 1, 'optionb'),
(123, 18, 4, 1, 'optiona'),
(123, 18, 6, -0.33, 'optionb'),
(123, 18, 7, -0.33, 'optionc'),
(123, 18, 8, -0.33, 'optiond'),
(123, 18, 9, 1, 'optiond'),
(123, 18, 10, 1, 'optionb'),
(123, 18, 11, 1, 'optionb'),
(123, 18, 12, 1, 'optiona'),
(123, 18, 13, -0.33, 'optionb'),
(123, 18, 14, 1, 'optionc'),
(123, 18, 15, 1, 'optionc'),
(123, 18, 17, -0.33, 'optionc'),
(123, 18, 19, 1, 'optionc'),
(123, 18, 20, 1, 'optionb'),
(123, 18, 21, -0.33, 'optionc'),
(123, 18, 22, 1, 'optiond'),
(123, 18, 23, -0.33, 'optionc'),
(123, 18, 24, 1, 'optionc'),
(123, 18, 25, 1, 'optionc'),
(123, 18, 26, 2, 'optionb'),
(123, 18, 27, 2, 'optiond'),
(123, 18, 28, 2, 'optiona'),
(123, 18, 29, 2, 'optiond'),
(123, 18, 30, 2, 'optionc'),
(123, 18, 32, 2, 'optionb'),
(123, 18, 33, 2, 'optiond'),
(123, 18, 34, 2, 'optiona'),
(123, 18, 36, 2, 'optiona'),
(123, 18, 37, 2, 'optionc'),
(123, 18, 38, 2, 'optionb'),
(123, 18, 41, -0.66, 'optionc'),
(123, 18, 42, 2, 'optionb'),
(123, 18, 45, -0.66, 'optionc'),
(123, 18, 47, 2, 'optiond'),
(123, 18, 48, 2, 'optionb'),
(123, 18, 49, 2, 'optionc'),
(123, 18, 50, 2, 'optionc'),
(123, 18, 51, -0.66, 'optionc'),
(123, 18, 52, 2, 'optiona'),
(123, 18, 53, -0.66, 'optiond'),
(123, 18, 54, 2, 'optiona'),
(123, 18, 56, 1, 'optione'),
(123, 18, 57, -0.33, 'optionc'),
(123, 18, 58, 1, 'optionc'),
(123, 18, 60, 1, 'optiona'),
(123, 18, 61, 2, 'optionb'),
(123, 18, 62, 2, 'optiond'),
(123, 18, 64, -0.66, 'optionc'),
(124, 7, 1, 1, 'optionc'),
(124, 7, 2, 1, 'optiond'),
(124, 7, 3, -0.33, 'optiond'),
(124, 7, 4, 1, 'optiond'),
(124, 7, 5, -0.33, 'optionc'),
(124, 7, 6, -0.33, 'optiona'),
(124, 7, 9, 1, 'optiona'),
(124, 7, 10, 1, 'optionc'),
(124, 7, 12, -0.33, 'optiona'),
(124, 7, 14, -0.33, 'optiona'),
(124, 7, 15, -0.33, 'optiona'),
(124, 7, 16, 1, 'optiona'),
(124, 7, 17, 1, 'optionc'),
(124, 7, 18, 1, 'optiona'),
(124, 7, 19, 1, 'optiond'),
(124, 7, 21, -0.33, 'optionc'),
(124, 7, 22, 1, 'optiond'),
(124, 7, 23, -0.33, 'optionc'),
(124, 7, 24, 1, 'optiona'),
(124, 7, 25, 1, 'optionc'),
(124, 7, 28, -0.66, 'optionc'),
(124, 7, 30, -0.66, 'optiond'),
(124, 7, 35, -0.66, 'optiond'),
(124, 7, 36, 2, 'optionc'),
(124, 7, 37, -0.66, 'optiona'),
(124, 7, 40, 2, 'optionb'),
(124, 7, 41, -0.66, 'optiond'),
(124, 7, 42, -0.66, 'optiond'),
(124, 7, 43, 2, 'optionb'),
(124, 7, 44, -0.66, 'optiona'),
(124, 7, 45, 2, 'optiond'),
(124, 7, 47, 2, 'optionb'),
(124, 7, 50, 2, 'optionc'),
(124, 7, 51, 2, 'optionb'),
(124, 7, 54, 2, 'optiond'),
(124, 7, 56, 1, 'optiona'),
(124, 7, 58, -0.33, 'optiona'),
(124, 7, 59, 1, 'optiond'),
(124, 7, 60, 1, 'optionc'),
(124, 7, 63, -0.66, 'optiona'),
(124, 7, 65, 2, 'optionb'),
(124, 8, 1, 1, 'optione'),
(124, 8, 2, -0.33, 'optionb'),
(124, 8, 3, -0.33, 'optionc'),
(124, 8, 5, -0.33, 'optiona'),
(124, 8, 6, 1, 'optiond'),
(124, 8, 7, -0.33, 'optionc'),
(124, 8, 8, -0.33, 'optionc'),
(124, 8, 9, 1, 'optiond'),
(124, 8, 10, 1, 'optionc'),
(124, 8, 11, 1, 'optiond'),
(124, 8, 12, 1, 'optiona'),
(124, 8, 13, 1, 'optionb'),
(124, 8, 14, -0.33, 'optiond'),
(124, 8, 15, 1, 'optionc'),
(124, 8, 17, 1, 'optione'),
(124, 8, 19, 1, 'optiona'),
(124, 8, 26, -0.33, 'optionc'),
(124, 8, 27, 1, 'optiond'),
(124, 8, 28, 1, 'optionc'),
(124, 8, 29, -0.33, 'optiona'),
(124, 8, 30, 1, 'optionc'),
(124, 8, 31, 1, 'optionc'),
(124, 8, 32, 1, 'optionb'),
(124, 8, 34, 1, 'optiond'),
(124, 8, 35, 1, 'optionc'),
(124, 8, 36, 1, 'optionc'),
(124, 8, 37, -0.33, 'optionc'),
(124, 8, 38, -0.33, 'optiond'),
(124, 8, 39, -0.33, 'optiona'),
(124, 8, 41, 1, 'optiona'),
(124, 8, 42, 1, 'optiond'),
(124, 8, 43, 1, 'optionb'),
(124, 8, 45, 1, 'optiond'),
(124, 10, 1, 2, 'optione'),
(124, 10, 2, 2, 'optionb'),
(124, 10, 3, -0.66, 'optionb'),
(124, 10, 4, 2, 'optionc'),
(124, 10, 5, 2, 'optionb'),
(124, 10, 6, -0.66, 'optionc'),
(124, 10, 9, 2, 'optionc'),
(124, 10, 10, 2, 'optiond'),
(124, 10, 11, 2, 'optionc'),
(124, 10, 13, 2, 'optionc'),
(124, 10, 14, 2, 'optionb'),
(124, 10, 16, 2, 'optiona'),
(124, 10, 17, 2, 'optionb'),
(124, 10, 19, 2, 'optiona'),
(124, 10, 21, 2, 'optionb'),
(124, 10, 22, 2, 'optionb'),
(124, 10, 23, -0.66, 'optionc'),
(124, 11, 1, 2, 'optionb'),
(124, 11, 2, 2, 'optionc'),
(124, 11, 3, -0.66, 'optionc'),
(124, 11, 4, 2, 'optiond'),
(124, 11, 5, 2, 'optionb'),
(124, 11, 7, 2, 'optionb'),
(124, 11, 8, 2, 'optiona'),
(124, 11, 9, 2, 'optionc'),
(124, 11, 10, 2, 'optiona'),
(124, 11, 11, 2, 'optiona'),
(124, 11, 12, 2, 'optiona'),
(124, 11, 13, 2, 'optionb'),
(124, 11, 14, 2, 'optionc'),
(124, 11, 15, 2, 'optionc'),
(124, 11, 17, 2, 'optiona'),
(124, 11, 18, 2, 'optionb'),
(124, 11, 19, -0.66, 'optionc'),
(124, 11, 20, 2, 'optiona'),
(124, 11, 21, 2, 'optionc'),
(124, 11, 22, 2, 'optiona'),
(124, 11, 24, 2, 'optiona'),
(124, 11, 25, 2, 'optionb'),
(124, 11, 26, -0.66, 'optiona'),
(124, 11, 27, 2, 'optione'),
(124, 11, 29, 2, 'optiond'),
(124, 11, 30, -0.66, 'optiona'),
(124, 11, 32, 2, 'optionc'),
(124, 11, 33, 2, 'optiond'),
(124, 11, 35, 2, 'optiond'),
(124, 11, 37, 2, 'optionb'),
(124, 11, 38, 2, 'optiona'),
(124, 11, 39, 2, 'optiona'),
(124, 11, 40, 2, 'optiond'),
(124, 11, 41, 2, 'optionc'),
(124, 11, 42, -0.66, 'optionc'),
(124, 11, 44, -0.66, 'optionc'),
(124, 11, 45, 2, 'optiona'),
(124, 11, 46, 2, 'optiona'),
(124, 11, 48, 2, 'optiond'),
(124, 11, 49, 2, 'optiond'),
(124, 11, 51, -0.66, 'optionc'),
(124, 11, 53, -0.66, 'optione'),
(124, 11, 54, -0.66, 'optione'),
(124, 11, 55, -0.66, 'optionc'),
(124, 11, 56, 2, 'optione'),
(124, 11, 57, 2, 'optionc'),
(124, 11, 58, -0.66, 'optionc'),
(124, 11, 60, -0.66, 'optione'),
(124, 12, 1, -0.66, 'optiona'),
(124, 12, 3, -0.66, 'optiona'),
(124, 12, 4, -0.66, 'optiona'),
(124, 12, 5, 2, 'optiona'),
(124, 12, 6, 2, 'optiond'),
(124, 12, 7, 2, 'optionb'),
(124, 12, 8, -0.66, 'optiona'),
(124, 12, 9, -0.66, 'optionc'),
(124, 12, 12, -0.66, 'optiona'),
(124, 12, 14, 2, 'optiona'),
(124, 12, 15, 2, 'optiond'),
(124, 12, 17, 2, 'optionc'),
(124, 12, 23, -0.66, 'optiona'),
(124, 12, 26, 2, 'optionb'),
(124, 12, 27, -0.66, 'optionb'),
(124, 12, 28, -0.66, 'optiona'),
(124, 12, 29, -0.66, 'optiond'),
(124, 12, 30, -0.66, 'optionc'),
(124, 12, 31, -0.66, 'optione'),
(124, 12, 34, -0.66, 'optiona'),
(124, 12, 35, -0.66, 'optiona'),
(124, 12, 37, -0.66, 'optionb'),
(124, 12, 38, -0.66, 'optiona'),
(124, 12, 40, -0.66, 'optionc'),
(124, 12, 41, -0.66, 'optiond'),
(124, 12, 43, 2, 'optiond'),
(124, 12, 44, -0.66, 'optionc'),
(124, 12, 45, 2, 'optiond'),
(124, 12, 46, 2, 'optiond'),
(124, 12, 47, 2, 'optionc'),
(124, 12, 48, -0.66, 'optionc'),
(124, 12, 50, 2, 'optionb'),
(124, 12, 51, 2, 'optionc'),
(124, 12, 52, 2, 'optionb'),
(124, 12, 53, 2, 'optiona'),
(124, 12, 54, 2, 'optiona'),
(124, 13, 1, -0.66, 'optiond'),
(124, 13, 2, 2, 'optionb'),
(124, 13, 3, -0.66, 'optiond'),
(124, 13, 5, 2, 'optionc'),
(124, 13, 6, -0.66, 'optiona'),
(124, 13, 7, 2, 'optionb'),
(124, 13, 8, 2, 'optionc'),
(124, 13, 9, 2, 'optione'),
(124, 13, 10, 2, 'optione'),
(124, 13, 11, 2, 'optiond'),
(124, 13, 12, 2, 'optiona'),
(124, 13, 13, 2, 'optiond'),
(124, 13, 14, 2, 'optionb'),
(124, 13, 15, 2, 'optionc'),
(124, 13, 22, 2, 'optiona'),
(124, 13, 24, -0.66, 'optionb'),
(124, 13, 25, 2, 'optiona'),
(124, 13, 26, 2, 'optiond'),
(124, 13, 27, 2, 'optiond'),
(124, 13, 28, 2, 'optionc'),
(124, 13, 30, 2, 'optiona'),
(124, 13, 31, 2, 'optiond'),
(124, 13, 32, -0.66, 'optionc'),
(124, 13, 34, 2, 'optiona'),
(124, 13, 36, 2, 'optionc'),
(124, 13, 39, 2, 'optiona'),
(124, 13, 40, 2, 'optiond'),
(124, 15, 2, 1, 'optiond'),
(124, 15, 7, -0.33, 'optionc'),
(124, 15, 9, 1, 'optionb'),
(124, 15, 11, -0.33, 'optiona'),
(124, 15, 13, 1, 'optionb'),
(124, 15, 14, 1, 'optionc'),
(124, 15, 15, 1, 'optiond'),
(124, 15, 16, -0.33, 'optionc'),
(124, 15, 18, -0.33, 'optiond'),
(124, 15, 19, 1, 'optionc'),
(124, 15, 21, 1, 'optiona'),
(124, 15, 22, -0.33, 'optiond'),
(124, 15, 24, 1, 'optiona'),
(124, 15, 25, 1, 'optiond'),
(124, 15, 26, 2, 'optiona'),
(124, 15, 28, 2, 'optiond'),
(124, 15, 30, -0.66, 'optiond'),
(124, 15, 31, 2, 'optiona'),
(124, 15, 33, 2, 'optionc'),
(124, 15, 35, 2, 'optionc'),
(124, 15, 36, 2, 'optiond'),
(124, 15, 37, 2, 'optionb'),
(124, 15, 39, 2, 'optionb'),
(124, 15, 40, -0.66, 'optiona'),
(124, 15, 41, 2, 'optionc'),
(124, 15, 42, 2, 'optiona'),
(124, 15, 43, 2, 'optiona'),
(124, 15, 44, 2, 'optiond'),
(124, 15, 45, 2, 'optiona'),
(124, 15, 47, 2, 'optiond'),
(124, 15, 48, -0.66, 'optiond'),
(124, 15, 49, -0.66, 'optionb'),
(124, 15, 50, -0.66, 'optionc'),
(124, 15, 51, -0.66, 'optionc'),
(124, 15, 52, 2, 'optionc'),
(124, 15, 53, 2, 'optionc'),
(124, 15, 54, -0.66, 'optiona'),
(124, 15, 55, 2, 'optionb'),
(124, 15, 56, -0.33, 'optionb'),
(124, 15, 57, -0.33, 'optiona'),
(124, 15, 58, 1, 'optiond'),
(124, 15, 59, 1, 'optiond'),
(124, 15, 62, -0.66, 'optionc'),
(124, 15, 63, 2, 'optiond'),
(124, 15, 64, -0.66, 'optionc'),
(124, 16, 1, 1, 'optionc'),
(124, 16, 3, -0.33, 'optionc'),
(124, 16, 5, 1, 'optiond'),
(124, 16, 6, 1, 'optionb'),
(124, 16, 12, -0.33, 'optionc'),
(124, 16, 13, 1, 'optionb'),
(124, 16, 14, -0.33, 'optiona'),
(124, 16, 16, 1, 'optiond'),
(124, 16, 18, -0.33, 'optiona'),
(124, 16, 19, 1, 'optiond'),
(124, 16, 21, -0.33, 'optiona'),
(124, 16, 22, 1, 'optionb'),
(124, 16, 25, -0.33, 'optiond'),
(124, 16, 29, -0.66, 'optionb'),
(124, 16, 30, 2, 'optiond'),
(124, 16, 31, -0.66, 'optionb'),
(124, 16, 32, -0.66, 'optionc'),
(124, 16, 33, 2, 'optiond'),
(124, 16, 35, 2, 'optionb'),
(124, 16, 36, 2, 'optionc'),
(124, 16, 37, 2, 'optionb'),
(124, 16, 38, 2, 'optionb'),
(124, 16, 39, -0.66, 'optiona'),
(124, 16, 40, -0.66, 'optionb'),
(124, 16, 44, 2, 'optiond'),
(124, 16, 45, 2, 'optiona'),
(124, 16, 46, -0.66, 'optiond'),
(124, 16, 47, 2, 'optionc'),
(124, 16, 50, -0.66, 'optionc'),
(124, 16, 51, 2, 'optiona'),
(124, 16, 56, 1, 'optiond'),
(124, 16, 59, 1, 'optionc'),
(124, 16, 61, 2, 'optionb'),
(124, 16, 64, -0.66, 'optionc'),
(124, 17, 1, 1, 'optiona'),
(124, 17, 3, 1, 'optionb'),
(124, 17, 5, 1, 'optionc'),
(124, 17, 6, 1, 'optiona'),
(124, 17, 8, -0.33, 'optiond'),
(124, 17, 9, -0.33, 'optiona'),
(124, 17, 10, 1, 'optiona'),
(124, 17, 11, 1, 'optiond'),
(124, 17, 13, 1, 'optionb'),
(124, 17, 20, -0.33, 'optionb'),
(124, 17, 22, 1, 'optionb'),
(124, 17, 23, -0.33, 'optiona'),
(124, 17, 24, -0.33, 'optionc'),
(124, 17, 25, -0.33, 'optiond'),
(124, 17, 26, 2, 'optionc'),
(124, 17, 28, -0.66, 'optionb'),
(124, 17, 30, -0.66, 'optiond'),
(124, 17, 32, 2, 'optiona'),
(124, 17, 33, 2, 'optiona'),
(124, 17, 34, 2, 'optiond'),
(124, 17, 35, 2, 'optionb'),
(124, 17, 37, 2, 'optionc'),
(124, 17, 38, -0.66, 'optiona'),
(124, 17, 39, 2, 'optionb'),
(124, 17, 41, 2, 'optionc'),
(124, 17, 42, -0.66, 'optiona'),
(124, 17, 44, 2, 'optionb'),
(124, 17, 45, -0.66, 'optiona'),
(124, 17, 46, -0.66, 'optionc'),
(124, 17, 48, 2, 'optiond'),
(124, 17, 51, 2, 'optionc'),
(124, 17, 52, -0.66, 'optiona'),
(124, 17, 53, 2, 'optiona'),
(124, 17, 57, 1, 'optionb'),
(124, 17, 61, -0.66, 'optiond'),
(124, 17, 62, -0.66, 'optionb'),
(124, 17, 63, 2, 'optiona'),
(124, 18, 1, 1, 'optiona'),
(124, 18, 2, 1, 'optiond'),
(124, 18, 3, 1, 'optionb'),
(124, 18, 4, 1, 'optiona'),
(124, 18, 6, 1, 'optionc'),
(124, 18, 7, 1, 'optionb'),
(124, 18, 10, 1, 'optionb'),
(124, 18, 11, -0.33, 'optionc'),
(124, 18, 12, 1, 'optiona'),
(124, 18, 14, -0.33, 'optiona'),
(124, 18, 15, 1, 'optionc'),
(124, 18, 18, 1, 'optiona'),
(124, 18, 19, 1, 'optionc'),
(124, 18, 20, 1, 'optionb'),
(124, 18, 21, -0.33, 'optiona'),
(124, 18, 22, 1, 'optiond'),
(124, 18, 24, 1, 'optionc'),
(124, 18, 26, 2, 'optionb'),
(124, 18, 27, -0.66, 'optiona'),
(124, 18, 29, 2, 'optiond'),
(124, 18, 30, 2, 'optionc'),
(124, 18, 31, 2, 'optiona'),
(124, 18, 32, -0.66, 'optiond'),
(124, 18, 37, 2, 'optionc'),
(124, 18, 38, -0.66, 'optiona'),
(124, 18, 42, 2, 'optionb'),
(124, 18, 45, -0.66, 'optiond'),
(124, 18, 46, 2, 'optionc'),
(124, 18, 47, 2, 'optiond'),
(124, 18, 48, 2, 'optionb'),
(124, 18, 49, 2, 'optionc'),
(124, 18, 52, 2, 'optiona'),
(124, 18, 53, -0.66, 'optiond'),
(124, 18, 56, -0.33, 'optiona'),
(124, 18, 60, 1, 'optiona'),
(124, 18, 61, 2, 'optionb'),
(124, 18, 65, 2, 'optiond'),
(125, 7, 1, -0.33, 'optionc'),
(125, 7, 2, 1, 'optiond'),
(125, 7, 3, -0.33, 'optiond'),
(125, 7, 4, 1, 'optiond'),
(125, 7, 5, -0.33, 'optiond'),
(125, 7, 7, -0.33, 'optionc'),
(125, 7, 9, 1, 'optiona'),
(125, 7, 10, 1, 'optionc'),
(125, 7, 11, 1, 'optiona'),
(125, 7, 12, -0.33, 'optionc'),
(125, 7, 14, 1, 'optionc'),
(125, 7, 16, 1, 'optiona'),
(125, 7, 17, 1, 'optionc'),
(125, 7, 19, 1, 'optiond'),
(125, 7, 20, 1, 'optiona'),
(125, 7, 22, -0.33, 'optionb'),
(125, 7, 24, 1, 'optiona'),
(125, 7, 25, 1, 'optionc'),
(125, 7, 26, -0.66, 'optiond'),
(125, 7, 28, 2, 'optiona'),
(125, 7, 29, 2, 'optiond'),
(125, 7, 31, 2, 'optiona'),
(125, 7, 33, 2, 'optiond'),
(125, 7, 34, -0.66, 'optionc'),
(125, 7, 35, 2, 'optionc'),
(125, 7, 36, 2, 'optionc'),
(125, 7, 38, -0.66, 'optionc'),
(125, 7, 40, 2, 'optionb'),
(125, 7, 41, 2, 'optionc'),
(125, 7, 44, 2, 'optionb'),
(125, 7, 45, 2, 'optiond'),
(125, 7, 47, 2, 'optionb'),
(125, 7, 48, 2, 'optionb'),
(125, 7, 52, -0.66, 'optionb'),
(125, 7, 53, -0.66, 'optiona'),
(125, 7, 54, 2, 'optiond'),
(125, 7, 56, -0.33, 'optiona'),
(125, 7, 57, 1, 'optionc'),
(125, 7, 58, -0.33, 'optiona'),
(125, 7, 59, -0.33, 'optionc'),
(125, 7, 61, -0.66, 'optiond'),
(125, 7, 62, 2, 'optionc'),
(125, 7, 63, 2, 'optiond'),
(125, 7, 64, 2, 'optionc'),
(125, 7, 65, -0.66, 'optiond'),
(125, 8, 1, 1, 'optione'),
(125, 8, 2, 1, 'optiona'),
(125, 8, 3, 1, 'optionb'),
(125, 8, 4, 1, 'optiond'),
(125, 8, 5, -0.33, 'optiona'),
(125, 8, 6, 1, 'optiond'),
(125, 8, 7, -0.33, 'optiond'),
(125, 8, 8, 1, 'optionb'),
(125, 8, 9, 1, 'optiond'),
(125, 8, 10, 1, 'optionc'),
(125, 8, 11, 1, 'optiond'),
(125, 8, 12, -0.33, 'optionc'),
(125, 8, 13, 1, 'optionb'),
(125, 8, 14, 1, 'optiona'),
(125, 8, 16, 1, 'optionc'),
(125, 8, 17, -0.33, 'optionb'),
(125, 8, 18, -0.33, 'optiond'),
(125, 8, 19, 1, 'optiona'),
(125, 8, 25, 1, 'optiond'),
(125, 8, 27, 1, 'optiond'),
(125, 8, 31, 1, 'optionc'),
(125, 8, 32, 1, 'optionb'),
(125, 8, 33, 1, 'optiona'),
(125, 8, 34, 1, 'optiond'),
(125, 8, 35, 1, 'optionc'),
(125, 8, 36, 1, 'optionc'),
(125, 8, 37, 1, 'optiond'),
(125, 8, 38, 1, 'optionb'),
(125, 8, 39, 1, 'optiond'),
(125, 8, 40, -0.33, 'optiona'),
(125, 8, 41, 1, 'optiona'),
(125, 8, 42, 1, 'optiond'),
(125, 8, 43, 1, 'optionb'),
(125, 8, 44, -0.33, 'optiona'),
(125, 8, 45, -0.33, 'optionc'),
(125, 11, 1, 2, 'optionb'),
(125, 11, 2, 2, 'optionc'),
(125, 11, 3, 2, 'optiona'),
(125, 11, 4, 2, 'optiond'),
(125, 11, 5, 2, 'optionb'),
(125, 11, 6, 2, 'optionb'),
(125, 11, 7, 2, 'optionb'),
(125, 11, 8, 2, 'optiona'),
(125, 11, 9, 2, 'optionc'),
(125, 11, 11, 2, 'optiona'),
(125, 11, 12, 2, 'optiona'),
(125, 11, 13, -0.66, 'optiona'),
(125, 11, 14, 2, 'optionc'),
(125, 11, 15, 2, 'optionc'),
(125, 11, 17, 2, 'optiona'),
(125, 11, 18, 2, 'optionb'),
(125, 11, 19, 2, 'optionb'),
(125, 11, 21, 2, 'optionc'),
(125, 11, 22, 2, 'optiona'),
(125, 11, 24, 2, 'optiona'),
(125, 11, 26, 2, 'optionc'),
(125, 11, 27, 2, 'optione'),
(125, 11, 28, -0.66, 'optionc'),
(125, 11, 29, 2, 'optiond'),
(125, 11, 30, 2, 'optiond'),
(125, 11, 32, 2, 'optionc'),
(125, 11, 33, -0.66, 'optione'),
(125, 11, 34, 2, 'optiond'),
(125, 11, 35, 2, 'optiond'),
(125, 11, 36, 2, 'optione'),
(125, 11, 37, 2, 'optionb'),
(125, 11, 38, 2, 'optiona'),
(125, 11, 39, 2, 'optiona'),
(125, 11, 40, 2, 'optiond'),
(125, 11, 41, 2, 'optionc'),
(125, 11, 42, -0.66, 'optionb'),
(125, 11, 43, 2, 'optiond'),
(125, 11, 44, 2, 'optionb'),
(125, 11, 46, 2, 'optiona'),
(125, 11, 47, -0.66, 'optionb'),
(125, 11, 48, 2, 'optiond'),
(125, 11, 49, 2, 'optiond'),
(125, 11, 51, 2, 'optiond'),
(125, 11, 52, 2, 'optionb'),
(125, 11, 53, 2, 'optionc'),
(125, 11, 54, 2, 'optionb'),
(125, 11, 55, -0.66, 'optione'),
(125, 11, 56, 2, 'optione'),
(125, 11, 57, 2, 'optionc'),
(125, 11, 58, 2, 'optione'),
(125, 11, 60, 2, 'optiond'),
(125, 12, 1, 2, 'optionc'),
(125, 12, 2, -0.66, 'optiona'),
(125, 12, 3, -0.66, 'optionb'),
(125, 12, 4, -0.66, 'optiond'),
(125, 12, 6, -0.66, 'optiona'),
(125, 12, 7, -0.66, 'optiona'),
(125, 12, 8, -0.66, 'optiona'),
(125, 12, 9, -0.66, 'optionc'),
(125, 12, 12, -0.66, 'optiona'),
(125, 12, 14, -0.66, 'optiond'),
(125, 12, 15, 2, 'optiond'),
(125, 12, 16, 2, 'optionc'),
(125, 12, 17, -0.66, 'optionb'),
(125, 12, 18, -0.66, 'optiona'),
(125, 12, 19, 2, 'optionb'),
(125, 12, 20, 2, 'optionb'),
(125, 12, 21, 2, 'optiona'),
(125, 12, 22, 2, 'optiond'),
(125, 12, 23, 2, 'optionb'),
(125, 12, 25, 2, 'optionc'),
(125, 12, 26, -0.66, 'optiona'),
(125, 12, 27, -0.66, 'optione'),
(125, 12, 28, -0.66, 'optiona'),
(125, 12, 29, 2, 'optiona'),
(125, 12, 31, -0.66, 'optiond'),
(125, 12, 32, 2, 'optionc'),
(125, 12, 34, 2, 'optiond'),
(125, 12, 35, -0.66, 'optionb'),
(125, 12, 36, -0.66, 'optiona'),
(125, 12, 37, 2, 'optiona'),
(125, 12, 38, -0.66, 'optionb'),
(125, 12, 39, 2, 'optiona'),
(125, 12, 40, -0.66, 'optionb'),
(125, 12, 41, -0.66, 'optiond'),
(125, 12, 42, -0.66, 'optionb'),
(125, 12, 45, -0.66, 'optionb'),
(125, 12, 46, 2, 'optiond'),
(125, 12, 47, -0.66, 'optiond'),
(125, 12, 48, -0.66, 'optionc'),
(125, 12, 50, 2, 'optionb'),
(125, 12, 51, 2, 'optionc'),
(125, 12, 52, 2, 'optionb'),
(125, 12, 53, 2, 'optiona'),
(125, 12, 54, 2, 'optiona'),
(125, 16, 2, 1, 'optionb'),
(125, 16, 3, -0.33, 'optionb'),
(125, 16, 4, 1, 'optiond'),
(125, 16, 5, -0.33, 'optionb'),
(125, 16, 6, 1, 'optionb'),
(125, 16, 8, -0.33, 'optiond'),
(125, 16, 9, -0.33, 'optiona'),
(125, 16, 10, 1, 'optionc'),
(125, 16, 12, -0.33, 'optionb'),
(125, 16, 13, 1, 'optionb'),
(125, 16, 14, -0.33, 'optionc'),
(125, 16, 15, 1, 'optionc'),
(125, 16, 16, 1, 'optiond'),
(125, 16, 17, -0.33, 'optionb'),
(125, 16, 18, -0.33, 'optiona'),
(125, 16, 19, -0.33, 'optionc'),
(125, 16, 20, 1, 'optiona'),
(125, 16, 21, 1, 'optiond'),
(125, 16, 22, 1, 'optionb'),
(125, 16, 26, -0.66, 'optionc'),
(125, 16, 28, -0.66, 'optiona'),
(125, 16, 29, -0.66, 'optiona'),
(125, 16, 32, -0.66, 'optionb'),
(125, 16, 41, 2, 'optionc'),
(125, 16, 43, 2, 'optiona'),
(125, 16, 44, 2, 'optiond'),
(125, 16, 45, 2, 'optiona'),
(125, 16, 46, -0.66, 'optiond'),
(125, 16, 48, 2, 'optiona'),
(125, 16, 49, -0.66, 'optionb'),
(125, 16, 50, -0.66, 'optionc'),
(125, 16, 52, 2, 'optiona'),
(125, 16, 60, 1, 'optionc'),
(125, 16, 61, 2, 'optionb'),
(125, 16, 62, -0.66, 'optiona'),
(125, 16, 63, 2, 'optionc'),
(125, 16, 64, -0.66, 'optionc'),
(127, 7, 1, 1, 'optionc'),
(127, 7, 2, 1, 'optiond'),
(127, 7, 3, -0.33, 'optiona'),
(127, 7, 4, 1, 'optiond'),
(127, 7, 5, -0.33, 'optionc'),
(127, 7, 6, 1, 'optionb'),
(127, 7, 10, 1, 'optionc'),
(127, 7, 11, 1, 'optiona'),
(127, 7, 12, -0.33, 'optiond'),
(127, 7, 13, 1, 'optionc'),
(127, 7, 14, 1, 'optionc'),
(127, 7, 15, 1, 'optionb'),
(127, 7, 16, 1, 'optiona'),
(127, 7, 17, 1, 'optionc'),
(127, 7, 18, 1, 'optiona'),
(127, 7, 19, 1, 'optiond'),
(127, 7, 20, 1, 'optiona'),
(127, 7, 21, 1, 'optiond'),
(127, 7, 22, -0.33, 'optionb'),
(127, 7, 23, -0.33, 'optionb'),
(127, 7, 25, 1, 'optionc'),
(127, 7, 26, 2, 'optiona'),
(127, 7, 27, -0.66, 'optionc'),
(127, 7, 28, 2, 'optiona'),
(127, 7, 30, 2, 'optionc'),
(127, 7, 31, 2, 'optiona'),
(127, 7, 33, -0.66, 'optionb'),
(127, 7, 34, -0.66, 'optiond'),
(127, 7, 35, 2, 'optionc'),
(127, 7, 36, 2, 'optionc'),
(127, 7, 37, -0.66, 'optionb'),
(127, 7, 39, 2, 'optione'),
(127, 7, 41, 2, 'optionc'),
(127, 7, 42, 2, 'optionc'),
(127, 7, 44, 2, 'optionb'),
(127, 7, 45, 2, 'optiond'),
(127, 7, 47, 2, 'optionb'),
(127, 7, 48, -0.66, 'optiona'),
(127, 7, 49, -0.66, 'optiona'),
(127, 7, 50, 2, 'optionc'),
(127, 7, 51, 2, 'optionb'),
(127, 7, 52, 2, 'optiona'),
(127, 7, 53, 2, 'optionb'),
(127, 7, 54, 2, 'optiond'),
(127, 7, 55, 2, 'optionb'),
(127, 7, 57, -0.33, 'optiona'),
(127, 7, 59, 1, 'optiond'),
(127, 7, 63, 2, 'optiond'),
(127, 7, 64, 2, 'optionc'),
(127, 7, 65, 2, 'optionb'),
(127, 8, 1, 1, 'optione'),
(127, 8, 2, -0.33, 'optiond'),
(127, 8, 3, 1, 'optionb'),
(127, 8, 4, 1, 'optiond'),
(127, 8, 5, 1, 'optionc'),
(127, 8, 6, 1, 'optiond'),
(127, 8, 7, 1, 'optionb'),
(127, 8, 8, -0.33, 'optiona'),
(127, 8, 9, 1, 'optiond'),
(127, 8, 10, 1, 'optionc'),
(127, 8, 11, 1, 'optiond'),
(127, 8, 12, 1, 'optiona'),
(127, 8, 13, 1, 'optionb'),
(127, 8, 14, 1, 'optiona'),
(127, 8, 15, 1, 'optionc'),
(127, 8, 16, 1, 'optionc'),
(127, 8, 17, -0.33, 'optiona'),
(127, 8, 18, 1, 'optione'),
(127, 8, 19, 1, 'optiona'),
(127, 8, 20, 1, 'optione'),
(127, 8, 21, 1, 'optiona'),
(127, 8, 22, -0.33, 'optionb'),
(127, 8, 24, 1, 'optiona'),
(127, 8, 25, 1, 'optiond'),
(127, 8, 26, 1, 'optiond'),
(127, 8, 27, 1, 'optiond'),
(127, 8, 29, 1, 'optionb'),
(127, 8, 30, 1, 'optionc'),
(127, 8, 31, 1, 'optionc'),
(127, 8, 32, 1, 'optionb'),
(127, 8, 33, 1, 'optiona'),
(127, 8, 34, 1, 'optiond'),
(127, 8, 35, 1, 'optionc'),
(127, 8, 36, 1, 'optionc'),
(127, 8, 37, 1, 'optiond'),
(127, 8, 38, 1, 'optionb'),
(127, 8, 39, 1, 'optiond'),
(127, 8, 40, 1, 'optionc'),
(127, 8, 41, 1, 'optiona'),
(127, 8, 42, 1, 'optiond'),
(127, 8, 43, 1, 'optionb'),
(127, 8, 44, 1, 'optionb'),
(127, 8, 45, 1, 'optiond'),
(127, 9, 1, 2, 'optionc'),
(127, 9, 2, 2, 'optionb'),
(127, 9, 3, -0.66, 'optionb'),
(127, 9, 4, 2, 'optiona'),
(127, 9, 5, 2, 'optiond'),
(127, 9, 6, 2, 'optiond'),
(127, 9, 7, 2, 'optionc'),
(127, 9, 8, -0.66, 'optiond'),
(127, 9, 9, 2, 'optionb'),
(127, 9, 10, 2, 'optionc'),
(127, 9, 11, 2, 'optiona'),
(127, 9, 12, 2, 'optiona'),
(127, 9, 14, 2, 'optionb'),
(127, 9, 15, -0.66, 'optiond'),
(127, 9, 16, 2, 'optionc'),
(127, 9, 17, 2, 'optionb'),
(127, 9, 19, 2, 'optionc'),
(127, 9, 23, 2, 'optionc'),
(127, 9, 24, 2, 'optionc'),
(127, 9, 25, 2, 'optiond'),
(127, 9, 26, 2, 'optionc'),
(127, 9, 27, 2, 'optiond'),
(127, 9, 28, 2, 'optionb'),
(127, 9, 29, 2, 'optionc'),
(127, 9, 30, 2, 'optionb'),
(127, 9, 31, -0.66, 'optiond'),
(127, 9, 32, -0.66, 'optiond'),
(127, 9, 34, 2, 'optiond'),
(127, 9, 35, 2, 'optionb'),
(127, 9, 36, -0.66, 'optiond'),
(127, 9, 37, 2, 'optionb'),
(127, 9, 42, 2, 'optionb'),
(127, 9, 43, -0.66, 'optiona'),
(127, 9, 47, 2, 'optionc'),
(127, 9, 50, 2, 'optionb'),
(127, 10, 1, 2, 'optione'),
(127, 10, 2, -0.66, 'optiona'),
(127, 10, 3, -0.66, 'optiona'),
(127, 10, 5, 2, 'optionb'),
(127, 10, 6, 2, 'optionb'),
(127, 10, 9, 2, 'optionc'),
(127, 10, 10, 2, 'optiond'),
(127, 10, 11, 2, 'optionc'),
(127, 10, 12, 2, 'optionb'),
(127, 10, 13, 2, 'optionc'),
(127, 10, 14, 2, 'optionb'),
(127, 10, 15, 2, 'optiond'),
(127, 10, 16, 2, 'optiona'),
(127, 10, 17, 2, 'optionb'),
(127, 10, 18, -0.66, 'optionb'),
(127, 10, 19, 2, 'optiona'),
(127, 10, 20, -0.66, 'optionb'),
(127, 10, 21, 2, 'optionb'),
(127, 10, 23, 2, 'optiond'),
(127, 10, 24, 2, 'optiona'),
(127, 11, 1, 2, 'optionb'),
(127, 11, 2, 2, 'optionc'),
(127, 11, 3, -0.66, 'optiond'),
(127, 11, 4, 2, 'optiond'),
(127, 11, 5, 2, 'optionb'),
(127, 11, 6, 2, 'optionb'),
(127, 11, 7, -0.66, 'optiona'),
(127, 11, 8, 2, 'optiona'),
(127, 11, 9, 2, 'optionc'),
(127, 11, 10, 2, 'optiona'),
(127, 11, 11, 2, 'optiona'),
(127, 11, 12, 2, 'optiona'),
(127, 11, 13, -0.66, 'optiona'),
(127, 11, 14, -0.66, 'optiond'),
(127, 11, 15, 2, 'optionc'),
(127, 11, 17, 2, 'optiona'),
(127, 11, 18, 2, 'optionb'),
(127, 11, 19, 2, 'optionb'),
(127, 11, 20, -0.66, 'optionb'),
(127, 11, 21, -0.66, 'optiond'),
(127, 11, 22, -0.66, 'optionb'),
(127, 11, 24, -0.66, 'optionc'),
(127, 11, 26, 2, 'optionc'),
(127, 11, 27, 2, 'optione'),
(127, 11, 28, -0.66, 'optione'),
(127, 11, 29, 2, 'optiond'),
(127, 11, 30, -0.66, 'optione'),
(127, 11, 31, -0.66, 'optionb'),
(127, 11, 32, -0.66, 'optione'),
(127, 11, 33, -0.66, 'optione'),
(127, 11, 34, -0.66, 'optionb'),
(127, 11, 35, 2, 'optiond'),
(127, 11, 36, -0.66, 'optionb'),
(127, 11, 37, -0.66, 'optiond'),
(127, 11, 38, 2, 'optiona'),
(127, 11, 41, -0.66, 'optionb'),
(127, 11, 42, 2, 'optione'),
(127, 11, 43, -0.66, 'optionb'),
(127, 11, 45, 2, 'optiona'),
(127, 11, 46, 2, 'optiona'),
(127, 11, 47, 2, 'optione'),
(127, 11, 48, 2, 'optiond'),
(127, 11, 49, 2, 'optiond'),
(127, 11, 50, 2, 'optionc'),
(127, 11, 51, -0.66, 'optionc'),
(127, 11, 52, 2, 'optionb'),
(127, 11, 53, 2, 'optionc'),
(127, 11, 55, -0.66, 'optione'),
(127, 11, 56, 2, 'optione'),
(127, 11, 57, 2, 'optionc'),
(127, 11, 58, 2, 'optione'),
(127, 11, 60, 2, 'optiond'),
(127, 12, 1, 2, 'optionc'),
(127, 12, 2, 2, 'optionc'),
(127, 12, 3, -0.66, 'optionb'),
(127, 12, 4, 2, 'optionc'),
(127, 12, 5, 2, 'optiona'),
(127, 12, 6, -0.66, 'optiona'),
(127, 12, 7, 2, 'optionb'),
(127, 12, 8, 2, 'optionb'),
(127, 12, 9, 2, 'optiona'),
(127, 12, 10, -0.66, 'optionb'),
(127, 12, 11, -0.66, 'optiona'),
(127, 12, 12, -0.66, 'optiona'),
(127, 12, 13, 2, 'optionb'),
(127, 12, 14, 2, 'optiona'),
(127, 12, 15, 2, 'optiond'),
(127, 12, 16, 2, 'optionc'),
(127, 12, 26, 2, 'optionb'),
(127, 12, 27, -0.66, 'optione'),
(127, 12, 28, -0.66, 'optionb'),
(127, 12, 29, -0.66, 'optiond'),
(127, 12, 30, -0.66, 'optiona'),
(127, 12, 31, 2, 'optionc'),
(127, 12, 32, 2, 'optionc'),
(127, 12, 34, 2, 'optiond'),
(127, 12, 35, 2, 'optiond'),
(127, 12, 36, 2, 'optionc'),
(127, 12, 37, 2, 'optiona'),
(127, 12, 38, 2, 'optionc'),
(127, 12, 41, 2, 'optionb'),
(127, 12, 42, 2, 'optiona'),
(127, 12, 43, 2, 'optiond'),
(127, 12, 44, 2, 'optionb'),
(127, 12, 45, 2, 'optiond'),
(127, 12, 46, 2, 'optiond'),
(127, 12, 47, 2, 'optionc'),
(127, 12, 48, 2, 'optiona'),
(127, 12, 50, 2, 'optionb'),
(127, 12, 51, 2, 'optionc'),
(127, 12, 52, 2, 'optionb'),
(127, 12, 53, 2, 'optiona'),
(127, 12, 54, 2, 'optiona'),
(127, 13, 1, -0.66, 'optiond'),
(127, 13, 2, -0.66, 'optiond'),
(127, 13, 3, -0.66, 'optiond'),
(127, 13, 7, 2, 'optionb'),
(127, 13, 8, 2, 'optionc'),
(127, 13, 9, 2, 'optione'),
(127, 13, 10, 2, 'optione'),
(127, 13, 11, -0.66, 'optione'),
(127, 13, 12, -0.66, 'optionb'),
(127, 13, 13, -0.66, 'optionb'),
(127, 13, 18, -0.66, 'optiond'),
(127, 13, 19, 2, 'optionb'),
(127, 13, 20, -0.66, 'optiond'),
(127, 13, 21, 2, 'optiona'),
(127, 13, 22, 2, 'optiona'),
(127, 13, 23, 2, 'optiona'),
(127, 13, 25, 2, 'optiona'),
(127, 13, 26, -0.66, 'optionc'),
(127, 13, 28, 2, 'optionc'),
(127, 13, 30, 2, 'optiona'),
(127, 13, 32, 2, 'optiona'),
(127, 13, 33, -0.66, 'optiond'),
(127, 15, 1, 1, 'optionc'),
(127, 15, 2, 1, 'optiond'),
(127, 15, 3, 1, 'optionc'),
(127, 15, 4, 1, 'optiona'),
(127, 15, 5, 1, 'optionb'),
(127, 15, 6, 1, 'optiona'),
(127, 15, 7, 1, 'optionb'),
(127, 15, 8, 1, 'optiona'),
(127, 15, 9, 1, 'optionb'),
(127, 15, 10, 1, 'optiona'),
(127, 15, 11, 1, 'optiond'),
(127, 15, 12, 1, 'optionc'),
(127, 15, 13, 1, 'optionb'),
(127, 15, 14, 1, 'optionc'),
(127, 15, 15, 1, 'optiond'),
(127, 15, 16, 1, 'optiond'),
(127, 15, 17, 1, 'optionb'),
(127, 15, 18, 1, 'optionb'),
(127, 15, 19, 1, 'optionc'),
(127, 15, 20, 1, 'optionb'),
(127, 15, 21, 1, 'optiona'),
(127, 15, 22, 1, 'optionb'),
(127, 15, 23, 1, 'optiona'),
(127, 15, 24, 1, 'optiona'),
(127, 15, 25, 1, 'optiond'),
(127, 15, 26, 2, 'optiona'),
(127, 15, 27, 2, 'optiona'),
(127, 15, 28, 2, 'optiond'),
(127, 15, 29, 2, 'optiond'),
(127, 15, 30, 2, 'optionb'),
(127, 15, 31, 2, 'optiona'),
(127, 15, 32, 2, 'optiona'),
(127, 15, 33, 2, 'optionc'),
(127, 15, 34, -0.66, 'optiond'),
(127, 15, 35, 2, 'optionc'),
(127, 15, 36, 2, 'optiond'),
(127, 15, 37, 2, 'optionb'),
(127, 15, 38, 2, 'optionc'),
(127, 15, 39, 2, 'optionb'),
(127, 15, 40, 2, 'optiond'),
(127, 15, 41, 2, 'optionc'),
(127, 15, 42, 2, 'optiona'),
(127, 15, 43, 2, 'optiona'),
(127, 15, 44, 2, 'optiond'),
(127, 15, 45, 2, 'optiona'),
(127, 15, 46, -0.66, 'optiond'),
(127, 15, 47, 2, 'optiond'),
(127, 15, 48, 2, 'optionc'),
(127, 15, 49, 2, 'optionc'),
(127, 15, 50, -0.66, 'optionc'),
(127, 15, 51, -0.66, 'optionc'),
(127, 15, 52, 2, 'optionc'),
(127, 15, 53, 2, 'optionc'),
(127, 15, 54, -0.66, 'optionb'),
(127, 15, 55, -0.66, 'optiond'),
(127, 15, 56, 1, 'optionc'),
(127, 15, 57, -0.33, 'optiona'),
(127, 15, 58, 1, 'optiond'),
(127, 15, 59, 1, 'optiond'),
(127, 15, 60, 1, 'optiona'),
(127, 15, 63, 2, 'optiond'),
(127, 15, 64, -0.66, 'optionc'),
(127, 16, 1, 1, 'optionc'),
(127, 16, 2, 1, 'optionb'),
(127, 16, 3, 1, 'optiond'),
(127, 16, 4, 1, 'optiond'),
(127, 16, 5, 1, 'optiond'),
(127, 16, 6, 1, 'optionb'),
(127, 16, 8, 1, 'optiona'),
(127, 16, 9, 1, 'optionc'),
(127, 16, 10, -0.33, 'optionb'),
(127, 16, 11, 1, 'optionb'),
(127, 16, 12, 1, 'optiond'),
(127, 16, 13, -0.33, 'optionc'),
(127, 16, 14, 1, 'optiond'),
(127, 16, 15, -0.33, 'optiond'),
(127, 16, 16, -0.33, 'optionb'),
(127, 16, 19, 1, 'optiond'),
(127, 16, 20, 1, 'optiona'),
(127, 16, 21, 1, 'optiond'),
(127, 16, 22, 1, 'optionb'),
(127, 16, 25, -0.33, 'optionc'),
(127, 16, 26, 2, 'optiona'),
(127, 16, 27, 2, 'optionb'),
(127, 16, 28, 2, 'optiond'),
(127, 16, 29, -0.66, 'optionb'),
(127, 16, 30, -0.66, 'optionc'),
(127, 16, 32, -0.66, 'optionb'),
(127, 16, 34, 2, 'optiona'),
(127, 16, 35, 2, 'optionb'),
(127, 16, 37, 2, 'optionb'),
(127, 16, 39, 2, 'optionb'),
(127, 16, 40, 2, 'optiona'),
(127, 16, 42, 2, 'optiona'),
(127, 16, 43, 2, 'optiona'),
(127, 16, 44, 2, 'optiond'),
(127, 16, 45, 2, 'optiona'),
(127, 16, 46, 2, 'optionc'),
(127, 16, 47, 2, 'optionc'),
(127, 16, 48, 2, 'optiona'),
(127, 16, 49, 2, 'optionc'),
(127, 16, 50, 2, 'optiona'),
(127, 16, 52, 2, 'optiona'),
(127, 16, 53, 2, 'optionb'),
(127, 16, 60, -0.33, 'optiona'),
(127, 16, 61, 2, 'optionb'),
(127, 17, 1, -0.33, 'optionb'),
(127, 17, 2, 1, 'optionb'),
(127, 17, 3, 1, 'optionb'),
(127, 17, 4, 1, 'optionc'),
(127, 17, 5, 1, 'optionc'),
(127, 17, 6, 1, 'optiona'),
(127, 17, 7, 1, 'optionc'),
(127, 17, 8, 1, 'optiona'),
(127, 17, 9, 1, 'optionb'),
(127, 17, 10, 1, 'optiona'),
(127, 17, 11, 1, 'optiond'),
(127, 17, 12, 1, 'optiona'),
(127, 17, 13, 1, 'optionb'),
(127, 17, 14, 1, 'optionc'),
(127, 17, 15, 1, 'optionb'),
(127, 17, 16, 1, 'optionb'),
(127, 17, 17, 1, 'optiona'),
(127, 17, 18, 1, 'optionb'),
(127, 17, 19, 1, 'optionb'),
(127, 17, 20, 1, 'optiona'),
(127, 17, 21, -0.33, 'optiond'),
(127, 17, 22, 1, 'optionb'),
(127, 17, 23, 1, 'optiond'),
(127, 17, 25, 1, 'optionb'),
(127, 17, 26, 2, 'optionc'),
(127, 17, 27, 2, 'optionc'),
(127, 17, 28, -0.66, 'optiona'),
(127, 17, 29, 2, 'optiond'),
(127, 17, 30, 2, 'optiona'),
(127, 17, 31, 2, 'optiond'),
(127, 17, 32, 2, 'optiona'),
(127, 17, 33, 2, 'optiona'),
(127, 17, 34, 2, 'optiond'),
(127, 17, 35, 2, 'optionb'),
(127, 17, 36, 2, 'optiond'),
(127, 17, 37, 2, 'optionc'),
(127, 17, 38, 2, 'optionc'),
(127, 17, 39, 2, 'optionb'),
(127, 17, 40, 2, 'optionb'),
(127, 17, 41, 2, 'optionc'),
(127, 17, 42, 2, 'optionb'),
(127, 17, 43, -0.66, 'optionc'),
(127, 17, 44, 2, 'optionb'),
(127, 17, 45, -0.66, 'optionc'),
(127, 17, 46, 2, 'optionb'),
(127, 17, 47, -0.66, 'optionb'),
(127, 17, 48, 2, 'optiond'),
(127, 17, 49, -0.66, 'optiond'),
(127, 17, 50, 2, 'optiond'),
(127, 17, 51, 2, 'optionc'),
(127, 17, 54, 2, 'optiond'),
(127, 17, 55, 2, 'optiona'),
(127, 17, 57, -0.33, 'optiona'),
(127, 17, 59, -0.33, 'optionc'),
(127, 17, 60, 1, 'optiond'),
(127, 17, 61, -0.66, 'optionc'),
(127, 17, 63, 2, 'optiona'),
(127, 17, 65, 2, 'optiond'),
(127, 18, 1, -0.33, 'optiond'),
(127, 18, 2, 1, 'optiond'),
(127, 18, 3, 1, 'optionb'),
(127, 18, 4, 1, 'optiona'),
(127, 18, 6, 1, 'optionc'),
(127, 18, 7, 1, 'optionb'),
(127, 18, 8, 1, 'optionb'),
(127, 18, 9, -0.33, 'optiona'),
(127, 18, 10, 1, 'optionb'),
(127, 18, 11, 1, 'optionb'),
(127, 18, 12, 1, 'optiona'),
(127, 18, 13, 1, 'optiond'),
(127, 18, 14, 1, 'optionc'),
(127, 18, 15, 1, 'optionc'),
(127, 18, 16, 1, 'optionc'),
(127, 18, 17, 1, 'optionb'),
(127, 18, 19, 1, 'optionc'),
(127, 18, 20, 1, 'optionb'),
(127, 18, 21, 1, 'optiond'),
(127, 18, 22, -0.33, 'optionb'),
(127, 18, 24, 1, 'optionc'),
(127, 18, 26, 2, 'optionb'),
(127, 18, 27, 2, 'optiond'),
(127, 18, 28, 2, 'optiona'),
(127, 18, 29, 2, 'optiond'),
(127, 18, 30, 2, 'optionc'),
(127, 18, 31, 2, 'optiona'),
(127, 18, 32, 2, 'optionb'),
(127, 18, 33, 2, 'optiond'),
(127, 18, 34, 2, 'optiona'),
(127, 18, 35, -0.66, 'optionc'),
(127, 18, 36, 2, 'optiona'),
(127, 18, 37, 2, 'optionc'),
(127, 18, 38, 2, 'optionb'),
(127, 18, 39, 2, 'optiona'),
(127, 18, 42, 2, 'optionb'),
(127, 18, 43, 2, 'optionb'),
(127, 18, 45, -0.66, 'optiond'),
(127, 18, 47, 2, 'optiond'),
(127, 18, 48, -0.66, 'optionc'),
(127, 18, 49, 2, 'optionc'),
(127, 18, 52, -0.66, 'optionb'),
(127, 18, 53, -0.66, 'optiond'),
(127, 18, 54, 2, 'optiona'),
(127, 18, 56, 1, 'optione'),
(127, 18, 57, 1, 'optionb'),
(127, 18, 60, 1, 'optiona'),
(127, 18, 61, 2, 'optionb'),
(127, 18, 65, 2, 'optiond'),
(128, 7, 1, 1, 'optionc'),
(128, 7, 2, 1, 'optiond'),
(128, 7, 3, -0.33, 'optiona'),
(128, 7, 4, 1, 'optiond'),
(128, 7, 5, 1, 'optionb'),
(128, 7, 6, 1, 'optionb'),
(128, 7, 8, 1, 'optionb'),
(128, 7, 12, -0.33, 'optionc'),
(128, 7, 14, 1, 'optionc'),
(128, 7, 15, 1, 'optionb'),
(128, 7, 16, 1, 'optiona'),
(128, 7, 17, 1, 'optionc'),
(128, 7, 18, 1, 'optiona'),
(128, 7, 19, 1, 'optiond'),
(128, 7, 20, 1, 'optiona'),
(128, 7, 21, -0.33, 'optionc'),
(128, 7, 22, 1, 'optiond'),
(128, 7, 24, 1, 'optiona'),
(128, 7, 25, 1, 'optionc'),
(128, 7, 26, 2, 'optiona'),
(128, 7, 27, -0.66, 'optiond'),
(128, 7, 29, 2, 'optiond'),
(128, 7, 31, 2, 'optiona'),
(128, 7, 32, 2, 'optiona'),
(128, 7, 34, -0.66, 'optionc'),
(128, 7, 35, -0.66, 'optione'),
(128, 7, 36, 2, 'optionc'),
(128, 7, 39, -0.66, 'optiond'),
(128, 7, 40, 2, 'optionb'),
(128, 7, 41, -0.66, 'optiona'),
(128, 7, 42, -0.66, 'optiond'),
(128, 7, 43, 2, 'optionb'),
(128, 7, 44, -0.66, 'optiona'),
(128, 7, 45, 2, 'optiond'),
(128, 7, 47, 2, 'optionb'),
(128, 7, 50, 2, 'optionc'),
(128, 7, 51, 2, 'optionb'),
(128, 7, 52, 2, 'optiona'),
(128, 7, 53, 2, 'optionb'),
(128, 7, 54, 2, 'optiond'),
(128, 7, 55, 2, 'optionb'),
(128, 7, 56, 1, 'optiona'),
(128, 7, 57, 1, 'optionc'),
(128, 7, 58, 1, 'optionb'),
(128, 7, 62, 2, 'optionc'),
(128, 7, 63, -0.66, 'optiona'),
(128, 7, 65, 2, 'optionb'),
(128, 9, 1, -0.66, 'optionb'),
(128, 9, 2, 2, 'optionb'),
(128, 9, 4, 2, 'optiona'),
(128, 9, 5, 2, 'optiond'),
(128, 9, 6, 2, 'optiond'),
(128, 9, 7, 2, 'optionc'),
(128, 9, 8, 2, 'optionb'),
(128, 9, 9, -0.66, 'optionc'),
(128, 9, 11, 2, 'optiona'),
(128, 9, 12, 2, 'optiona'),
(128, 9, 14, -0.66, 'optiona'),
(128, 9, 15, -0.66, 'optiond'),
(128, 9, 18, -0.66, 'optiona'),
(128, 9, 19, -0.66, 'optiona'),
(128, 9, 21, 2, 'optionc'),
(128, 9, 22, 2, 'optiona'),
(128, 9, 23, 2, 'optionc'),
(128, 9, 24, -0.66, 'optiond'),
(128, 9, 25, -0.66, 'optionb'),
(128, 9, 26, 2, 'optionc'),
(128, 9, 29, 2, 'optionc');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(128, 9, 30, 2, 'optionb'),
(128, 9, 31, 2, 'optione'),
(128, 9, 32, 2, 'optionb'),
(128, 9, 33, -0.66, 'optiona'),
(128, 9, 34, -0.66, 'optionc'),
(128, 9, 35, 2, 'optionb'),
(128, 9, 36, 2, 'optionc'),
(128, 9, 37, 2, 'optionb'),
(128, 9, 39, 2, 'optiond'),
(128, 9, 40, -0.66, 'optionb'),
(128, 9, 41, -0.66, 'optionc'),
(128, 9, 42, -0.66, 'optiona'),
(128, 9, 43, -0.66, 'optiona'),
(128, 9, 45, 2, 'optionc'),
(128, 9, 46, 2, 'optiond'),
(128, 9, 47, 2, 'optionc'),
(128, 9, 49, 2, 'optionb'),
(128, 9, 50, 2, 'optionb'),
(128, 9, 51, 2, 'optionb'),
(128, 9, 52, 2, 'optionb'),
(128, 9, 53, 2, 'optionc'),
(128, 9, 54, 2, 'optione'),
(128, 9, 55, -0.66, 'optiona'),
(128, 10, 1, 2, 'optione'),
(128, 10, 2, -0.66, 'optiona'),
(128, 10, 4, 2, 'optionc'),
(128, 10, 5, 2, 'optionb'),
(128, 10, 6, -0.66, 'optione'),
(128, 10, 9, 2, 'optionc'),
(128, 10, 11, 2, 'optionc'),
(128, 10, 12, 2, 'optionb'),
(128, 10, 13, 2, 'optionc'),
(128, 10, 14, 2, 'optionb'),
(128, 10, 15, -0.66, 'optionc'),
(128, 10, 16, 2, 'optiona'),
(128, 10, 17, 2, 'optionb'),
(128, 10, 18, 2, 'optiona'),
(128, 10, 19, 2, 'optiona'),
(128, 10, 20, 2, 'optionc'),
(128, 10, 21, 2, 'optionb'),
(128, 10, 22, 2, 'optionb'),
(128, 10, 23, 2, 'optiond'),
(128, 11, 2, 2, 'optionc'),
(128, 11, 4, 2, 'optiond'),
(128, 11, 5, 2, 'optionb'),
(128, 11, 6, 2, 'optionb'),
(128, 11, 7, 2, 'optionb'),
(128, 11, 8, 2, 'optiona'),
(128, 11, 9, 2, 'optionc'),
(128, 11, 10, 2, 'optiona'),
(128, 11, 11, 2, 'optiona'),
(128, 11, 12, 2, 'optiona'),
(128, 11, 13, -0.66, 'optiona'),
(128, 11, 14, -0.66, 'optiond'),
(128, 11, 15, -0.66, 'optiona'),
(128, 11, 17, 2, 'optiona'),
(128, 11, 20, 2, 'optiona'),
(128, 11, 21, -0.66, 'optiond'),
(128, 11, 22, 2, 'optiona'),
(128, 11, 23, 2, 'optionc'),
(128, 11, 24, 2, 'optiona'),
(128, 11, 25, -0.66, 'optiond'),
(128, 11, 26, 2, 'optionc'),
(128, 11, 27, 2, 'optione'),
(128, 11, 28, -0.66, 'optionb'),
(128, 11, 29, 2, 'optiond'),
(128, 11, 30, -0.66, 'optionb'),
(128, 11, 31, -0.66, 'optiond'),
(128, 11, 32, 2, 'optionc'),
(128, 11, 33, -0.66, 'optione'),
(128, 11, 34, -0.66, 'optiona'),
(128, 11, 35, 2, 'optiond'),
(128, 11, 36, 2, 'optione'),
(128, 11, 37, -0.66, 'optiond'),
(128, 11, 38, -0.66, 'optionb'),
(128, 11, 39, 2, 'optiona'),
(128, 11, 40, -0.66, 'optionb'),
(128, 11, 41, 2, 'optionc'),
(128, 11, 42, -0.66, 'optionc'),
(128, 11, 43, -0.66, 'optionc'),
(128, 11, 46, 2, 'optiona'),
(128, 11, 48, 2, 'optiond'),
(128, 11, 49, -0.66, 'optione'),
(128, 11, 51, -0.66, 'optionc'),
(128, 11, 52, 2, 'optionb'),
(128, 11, 53, -0.66, 'optione'),
(128, 11, 55, -0.66, 'optione'),
(128, 11, 56, 2, 'optione'),
(128, 11, 57, 2, 'optionc'),
(128, 11, 58, 2, 'optione'),
(128, 11, 60, 2, 'optiond'),
(128, 12, 1, 2, 'optionc'),
(128, 12, 2, 2, 'optionc'),
(128, 12, 4, -0.66, 'optiona'),
(128, 12, 5, -0.66, 'optiond'),
(128, 12, 6, -0.66, 'optiona'),
(128, 12, 7, 2, 'optionb'),
(128, 12, 8, -0.66, 'optionc'),
(128, 12, 9, -0.66, 'optionb'),
(128, 12, 11, -0.66, 'optiona'),
(128, 12, 14, -0.66, 'optionb'),
(128, 12, 15, 2, 'optiond'),
(128, 12, 16, -0.66, 'optiond'),
(128, 12, 19, 2, 'optionb'),
(128, 12, 20, 2, 'optionb'),
(128, 12, 21, 2, 'optiona'),
(128, 12, 22, 2, 'optiond'),
(128, 12, 23, 2, 'optionb'),
(128, 12, 26, 2, 'optionb'),
(128, 12, 27, -0.66, 'optiond'),
(128, 12, 28, 2, 'optiond'),
(128, 12, 29, 2, 'optiona'),
(128, 12, 30, 2, 'optionb'),
(128, 12, 31, 2, 'optionc'),
(128, 12, 32, 2, 'optionc'),
(128, 12, 34, 2, 'optiond'),
(128, 12, 35, 2, 'optiond'),
(128, 12, 36, -0.66, 'optionb'),
(128, 12, 37, -0.66, 'optionb'),
(128, 12, 39, -0.66, 'optiond'),
(128, 12, 40, 2, 'optiona'),
(128, 12, 41, 2, 'optionb'),
(128, 12, 42, -0.66, 'optionc'),
(128, 12, 43, -0.66, 'optionc'),
(128, 12, 44, -0.66, 'optionc'),
(128, 12, 45, 2, 'optiond'),
(128, 12, 46, 2, 'optiond'),
(128, 12, 47, 2, 'optionc'),
(128, 12, 48, -0.66, 'optionc'),
(128, 12, 49, 2, 'optionc'),
(128, 12, 50, 2, 'optionb'),
(128, 12, 51, 2, 'optionc'),
(128, 12, 52, 2, 'optionb'),
(128, 12, 54, 2, 'optiona'),
(128, 13, 1, -0.66, 'optiond'),
(128, 13, 2, 2, 'optionb'),
(128, 13, 3, -0.66, 'optionb'),
(128, 13, 7, -0.66, 'optiond'),
(128, 13, 8, 2, 'optionc'),
(128, 13, 10, -0.66, 'optiond'),
(128, 13, 11, 2, 'optiond'),
(128, 13, 12, 2, 'optiona'),
(128, 13, 13, 2, 'optiond'),
(128, 13, 15, 2, 'optionc'),
(128, 13, 22, 2, 'optiona'),
(128, 13, 23, -0.66, 'optiond'),
(128, 13, 24, 2, 'optionc'),
(128, 13, 25, 2, 'optiona'),
(128, 13, 28, 2, 'optionc'),
(128, 13, 30, 2, 'optiona'),
(128, 13, 32, 2, 'optiona'),
(128, 13, 34, -0.66, 'optionb'),
(128, 13, 35, 2, 'optionc'),
(128, 13, 36, 2, 'optionc'),
(128, 13, 37, -0.66, 'optionc'),
(128, 13, 38, 2, 'optionb'),
(128, 13, 39, 2, 'optiona'),
(128, 13, 40, 2, 'optiond'),
(130, 7, 1, 1, 'optionc'),
(130, 7, 2, -0.33, 'optionc'),
(130, 7, 3, -0.33, 'optiond'),
(130, 7, 4, -0.33, 'optionb'),
(130, 7, 5, 1, 'optionb'),
(130, 7, 7, -0.33, 'optiond'),
(130, 7, 8, -0.33, 'optiona'),
(130, 7, 10, -0.33, 'optiond'),
(130, 7, 13, -0.33, 'optionb'),
(130, 7, 16, 1, 'optiona'),
(130, 7, 17, -0.33, 'optiona'),
(130, 7, 18, -0.33, 'optionb'),
(130, 7, 19, 1, 'optiond'),
(130, 7, 21, 1, 'optiond'),
(130, 7, 22, -0.33, 'optionb'),
(130, 7, 23, -0.33, 'optionb'),
(130, 7, 24, 1, 'optiona'),
(130, 7, 26, -0.66, 'optiond'),
(130, 7, 29, -0.66, 'optionb'),
(130, 7, 30, -0.66, 'optionb'),
(130, 7, 31, 2, 'optiona'),
(130, 7, 34, -0.66, 'optiond'),
(130, 7, 35, -0.66, 'optione'),
(130, 7, 36, 2, 'optionc'),
(130, 7, 38, -0.66, 'optione'),
(130, 7, 39, -0.66, 'optiond'),
(130, 7, 43, -0.66, 'optiona'),
(130, 7, 44, -0.66, 'optiona'),
(130, 7, 45, 2, 'optiond'),
(130, 7, 47, 2, 'optionb'),
(130, 7, 50, -0.66, 'optiond'),
(130, 7, 51, -0.66, 'optionc'),
(130, 7, 52, -0.66, 'optionb'),
(130, 7, 53, -0.66, 'optiona'),
(130, 7, 54, 2, 'optiond'),
(130, 7, 55, 2, 'optionb'),
(130, 7, 57, -0.33, 'optiond'),
(130, 8, 1, -0.33, 'optiond'),
(130, 8, 2, 1, 'optiona'),
(130, 8, 3, -0.33, 'optionc'),
(130, 8, 4, -0.33, 'optionc'),
(130, 8, 5, 1, 'optionc'),
(130, 8, 6, 1, 'optiond'),
(130, 8, 7, 1, 'optionb'),
(130, 8, 8, -0.33, 'optionc'),
(130, 8, 9, -0.33, 'optionb'),
(130, 8, 11, -0.33, 'optionc'),
(130, 8, 12, 1, 'optiona'),
(130, 8, 13, 1, 'optionb'),
(130, 8, 14, 1, 'optiona'),
(130, 8, 15, 1, 'optionc'),
(130, 8, 16, -0.33, 'optionb'),
(130, 8, 18, -0.33, 'optiond'),
(130, 8, 19, 1, 'optiona'),
(130, 8, 25, -0.33, 'optione'),
(130, 8, 27, 1, 'optiond'),
(130, 8, 30, 1, 'optionc'),
(130, 8, 31, -0.33, 'optiona'),
(130, 8, 32, 1, 'optionb'),
(130, 8, 33, -0.33, 'optiond'),
(130, 8, 34, 1, 'optiond'),
(130, 8, 35, 1, 'optionc'),
(130, 8, 36, 1, 'optionc'),
(130, 8, 37, 1, 'optiond'),
(130, 8, 38, 1, 'optionb'),
(130, 8, 39, 1, 'optiond'),
(130, 8, 40, -0.33, 'optiona'),
(130, 8, 41, 1, 'optiona'),
(130, 8, 42, -0.33, 'optionc'),
(130, 8, 43, -0.33, 'optiond'),
(130, 8, 44, 1, 'optionb'),
(130, 8, 45, 1, 'optiond'),
(130, 9, 1, 2, 'optionc'),
(130, 9, 2, 2, 'optionb'),
(130, 9, 3, -0.66, 'optionb'),
(130, 9, 4, -0.66, 'optiond'),
(130, 9, 5, 2, 'optiond'),
(130, 9, 6, -0.66, 'optiona'),
(130, 9, 25, -0.66, 'optiona'),
(130, 9, 30, 2, 'optionb'),
(130, 9, 35, 2, 'optionb'),
(130, 9, 37, 2, 'optionb'),
(130, 9, 39, 2, 'optiond'),
(130, 9, 51, 2, 'optionb'),
(130, 9, 52, 2, 'optionb'),
(130, 9, 53, -0.66, 'optionb'),
(130, 10, 1, -0.66, 'optiona'),
(130, 10, 2, 2, 'optionb'),
(130, 10, 3, 2, 'optiond'),
(130, 10, 4, -0.66, 'optione'),
(130, 10, 5, 2, 'optionb'),
(130, 10, 6, 2, 'optionb'),
(130, 10, 8, 2, 'optione'),
(130, 10, 9, -0.66, 'optione'),
(130, 10, 11, 2, 'optionc'),
(130, 10, 12, 2, 'optionb'),
(130, 10, 13, 2, 'optionc'),
(130, 10, 14, 2, 'optionb'),
(130, 10, 15, 2, 'optiond'),
(130, 10, 16, 2, 'optiona'),
(130, 10, 18, -0.66, 'optionb'),
(130, 10, 19, -0.66, 'optiond'),
(130, 10, 20, 2, 'optionc'),
(130, 10, 21, 2, 'optionb'),
(130, 10, 22, 2, 'optionb'),
(130, 10, 23, -0.66, 'optiona'),
(130, 10, 24, 2, 'optiona'),
(130, 11, 1, 2, 'optionb'),
(130, 11, 2, -0.66, 'optiond'),
(130, 11, 4, -0.66, 'optionc'),
(130, 11, 6, 2, 'optionb'),
(130, 11, 7, -0.66, 'optiona'),
(130, 11, 8, 2, 'optiona'),
(130, 11, 9, 2, 'optionc'),
(130, 11, 10, -0.66, 'optionb'),
(130, 11, 12, 2, 'optiona'),
(130, 11, 13, -0.66, 'optiona'),
(130, 11, 14, 2, 'optionc'),
(130, 11, 17, -0.66, 'optiond'),
(130, 11, 21, -0.66, 'optiond'),
(130, 11, 22, -0.66, 'optionc'),
(130, 11, 24, 2, 'optiona'),
(130, 11, 26, -0.66, 'optionb'),
(130, 11, 27, 2, 'optione'),
(130, 11, 28, -0.66, 'optionb'),
(130, 11, 29, 2, 'optiond'),
(130, 11, 30, -0.66, 'optionb'),
(130, 11, 31, -0.66, 'optionb'),
(130, 11, 32, 2, 'optionc'),
(130, 11, 33, -0.66, 'optionb'),
(130, 11, 35, -0.66, 'optione'),
(130, 11, 36, -0.66, 'optionc'),
(130, 11, 38, 2, 'optiona'),
(130, 11, 40, 2, 'optiond'),
(130, 11, 41, -0.66, 'optiond'),
(130, 11, 42, 2, 'optione'),
(130, 11, 43, -0.66, 'optiona'),
(130, 11, 44, -0.66, 'optiond'),
(130, 11, 46, 2, 'optiona'),
(130, 11, 49, -0.66, 'optionb'),
(130, 11, 51, -0.66, 'optionc'),
(130, 11, 52, 2, 'optionb'),
(130, 11, 54, 2, 'optionb'),
(130, 11, 56, 2, 'optione'),
(130, 11, 57, -0.66, 'optionb'),
(130, 11, 58, -0.66, 'optiona'),
(130, 12, 1, -0.66, 'optiona'),
(130, 12, 3, 2, 'optiond'),
(130, 12, 4, -0.66, 'optiond'),
(130, 12, 5, 2, 'optiona'),
(130, 12, 6, -0.66, 'optionb'),
(130, 12, 7, -0.66, 'optiond'),
(130, 12, 26, 2, 'optionb'),
(130, 12, 27, -0.66, 'optione'),
(130, 12, 29, 2, 'optiona'),
(130, 12, 30, 2, 'optionb'),
(130, 12, 32, -0.66, 'optione'),
(130, 12, 37, -0.66, 'optionb'),
(130, 12, 38, 2, 'optionc'),
(130, 12, 40, 2, 'optiona'),
(130, 12, 42, 2, 'optiona'),
(130, 12, 45, 2, 'optiond'),
(130, 12, 46, 2, 'optiond'),
(130, 12, 47, -0.66, 'optiona'),
(130, 12, 50, 2, 'optionb'),
(130, 12, 51, 2, 'optionc'),
(130, 12, 52, 2, 'optionb'),
(130, 12, 53, 2, 'optiona'),
(130, 12, 54, -0.66, 'optionc'),
(130, 13, 1, 2, 'optionc'),
(130, 13, 2, 2, 'optionb'),
(130, 13, 3, 2, 'optiona'),
(130, 13, 5, -0.66, 'optiona'),
(130, 13, 8, 2, 'optionc'),
(130, 13, 10, 2, 'optione'),
(130, 13, 11, -0.66, 'optione'),
(130, 13, 14, 2, 'optionb'),
(130, 13, 15, 2, 'optionc'),
(130, 13, 17, -0.66, 'optionb'),
(130, 13, 18, 2, 'optiona'),
(130, 13, 19, -0.66, 'optiona'),
(130, 13, 22, -0.66, 'optionc'),
(130, 13, 24, 2, 'optionc'),
(130, 13, 25, 2, 'optiona'),
(130, 13, 28, 2, 'optionc'),
(130, 13, 29, 2, 'optionc'),
(130, 13, 30, 2, 'optiona'),
(130, 13, 32, 2, 'optiona'),
(130, 13, 35, -0.66, 'optionb'),
(130, 13, 37, -0.66, 'optionb'),
(130, 13, 39, 2, 'optiona'),
(130, 15, 2, -0.33, 'optionc'),
(130, 15, 3, 1, 'optionc'),
(130, 15, 4, 1, 'optiona'),
(130, 15, 6, 1, 'optiona'),
(130, 15, 9, 1, 'optionb'),
(130, 15, 11, -0.33, 'optionc'),
(130, 15, 12, -0.33, 'optionb'),
(130, 15, 13, 1, 'optionb'),
(130, 15, 14, 1, 'optionc'),
(130, 15, 15, 1, 'optiond'),
(130, 15, 16, 1, 'optiond'),
(130, 15, 17, 1, 'optionb'),
(130, 15, 18, -0.33, 'optionc'),
(130, 15, 19, 1, 'optionc'),
(130, 15, 20, 1, 'optionb'),
(130, 15, 21, 1, 'optiona'),
(130, 15, 22, -0.33, 'optiona'),
(130, 15, 23, -0.33, 'optiond'),
(130, 15, 24, 1, 'optiona'),
(130, 15, 25, 1, 'optiond'),
(130, 15, 26, -0.66, 'optiond'),
(130, 15, 27, 2, 'optiona'),
(130, 15, 28, -0.66, 'optiona'),
(130, 15, 29, -0.66, 'optiona'),
(130, 15, 30, 2, 'optionb'),
(130, 15, 31, 2, 'optiona'),
(130, 15, 32, -0.66, 'optionc'),
(130, 15, 33, -0.66, 'optionb'),
(130, 15, 35, 2, 'optionc'),
(130, 15, 36, -0.66, 'optionc'),
(130, 15, 37, 2, 'optionb'),
(130, 15, 38, 2, 'optionc'),
(130, 15, 40, 2, 'optiond'),
(130, 15, 41, 2, 'optionc'),
(130, 15, 42, 2, 'optiona'),
(130, 15, 43, 2, 'optiona'),
(130, 15, 44, -0.66, 'optiona'),
(130, 15, 45, 2, 'optiona'),
(130, 15, 47, 2, 'optiond'),
(130, 15, 48, -0.66, 'optiond'),
(130, 15, 49, -0.66, 'optiond'),
(130, 15, 50, 2, 'optiond'),
(130, 15, 51, -0.66, 'optionc'),
(130, 15, 52, 2, 'optionc'),
(130, 15, 54, -0.66, 'optionb'),
(130, 15, 55, -0.66, 'optiond'),
(130, 15, 59, 1, 'optiond'),
(130, 15, 61, -0.66, 'optiona'),
(130, 16, 1, 1, 'optionc'),
(130, 16, 3, -0.33, 'optiona'),
(130, 16, 9, -0.33, 'optiona'),
(130, 16, 10, -0.33, 'optiond'),
(130, 16, 14, -0.33, 'optionb'),
(130, 16, 15, -0.33, 'optiona'),
(130, 16, 19, -0.33, 'optionb'),
(130, 16, 20, 1, 'optiona'),
(130, 16, 22, 1, 'optionb'),
(130, 16, 23, 1, 'optionc'),
(130, 16, 25, -0.33, 'optionc'),
(130, 16, 29, -0.66, 'optiona'),
(130, 16, 30, 2, 'optiond'),
(130, 16, 32, -0.66, 'optiona'),
(130, 16, 43, -0.66, 'optiond'),
(130, 16, 44, 2, 'optiond'),
(130, 16, 45, 2, 'optiona'),
(130, 16, 48, 2, 'optiona'),
(130, 16, 60, 1, 'optionc'),
(130, 16, 62, 2, 'optiond'),
(130, 16, 63, -0.66, 'optionb'),
(130, 17, 1, 1, 'optiona'),
(130, 17, 2, 1, 'optionb'),
(130, 17, 3, 1, 'optionb'),
(130, 17, 4, 1, 'optionc'),
(130, 17, 5, 1, 'optionc'),
(130, 17, 8, -0.33, 'optionb'),
(130, 17, 9, -0.33, 'optiona'),
(130, 17, 10, -0.33, 'optionb'),
(130, 17, 11, 1, 'optiond'),
(130, 17, 12, -0.33, 'optionc'),
(130, 17, 14, 1, 'optionc'),
(130, 17, 15, -0.33, 'optionc'),
(130, 17, 19, -0.33, 'optiond'),
(130, 17, 20, -0.33, 'optionb'),
(130, 17, 21, -0.33, 'optiona'),
(130, 17, 22, 1, 'optionb'),
(130, 17, 23, 1, 'optiond'),
(130, 17, 24, -0.33, 'optiona'),
(130, 17, 25, -0.33, 'optiond'),
(130, 17, 26, -0.66, 'optiond'),
(130, 17, 28, 2, 'optiond'),
(130, 17, 29, -0.66, 'optionb'),
(130, 17, 30, 2, 'optiona'),
(130, 17, 31, 2, 'optiond'),
(130, 17, 32, 2, 'optiona'),
(130, 17, 33, -0.66, 'optionc'),
(130, 17, 35, 2, 'optionb'),
(130, 17, 40, -0.66, 'optiona'),
(130, 17, 41, -0.66, 'optionb'),
(130, 17, 45, 2, 'optionb'),
(130, 17, 47, 2, 'optiona'),
(130, 17, 48, -0.66, 'optionb'),
(130, 17, 51, -0.66, 'optiona'),
(130, 17, 52, 2, 'optiond'),
(130, 17, 53, 2, 'optiona'),
(130, 17, 54, 2, 'optiond'),
(130, 18, 2, 1, 'optiond'),
(130, 18, 3, 1, 'optionb'),
(130, 18, 4, 1, 'optiona'),
(130, 18, 6, 1, 'optionc'),
(130, 18, 7, 1, 'optionb'),
(130, 18, 9, -0.33, 'optiona'),
(130, 18, 11, -0.33, 'optionc'),
(130, 18, 12, -0.33, 'optionb'),
(130, 18, 13, 1, 'optiond'),
(130, 18, 14, -0.33, 'optiond'),
(130, 18, 18, -0.33, 'optionb'),
(130, 18, 19, -0.33, 'optiona'),
(130, 18, 20, 1, 'optionb'),
(130, 18, 21, -0.33, 'optiona'),
(130, 18, 22, 1, 'optiond'),
(130, 18, 23, -0.33, 'optionc'),
(130, 18, 24, -0.33, 'optionb'),
(130, 18, 25, 1, 'optionc'),
(130, 18, 26, 2, 'optionb'),
(130, 18, 29, 2, 'optiond'),
(130, 18, 30, 2, 'optionc'),
(130, 18, 31, 2, 'optiona'),
(130, 18, 34, 2, 'optiona'),
(130, 18, 36, 2, 'optiona'),
(130, 18, 38, 2, 'optionb'),
(130, 18, 42, 2, 'optionb'),
(130, 18, 43, -0.66, 'optionc'),
(130, 18, 45, -0.66, 'optiond'),
(130, 18, 48, -0.66, 'optionc'),
(130, 18, 49, -0.66, 'optionb'),
(130, 18, 50, -0.66, 'optiona'),
(130, 18, 51, -0.66, 'optionb'),
(130, 18, 54, 2, 'optiona'),
(130, 18, 60, 1, 'optiona'),
(130, 18, 61, 2, 'optionb'),
(130, 18, 63, -0.66, 'optionb'),
(134, 7, 1, 1, 'optionc'),
(134, 7, 4, 1, 'optiond'),
(134, 7, 5, 1, 'optionb'),
(134, 7, 6, 1, 'optionb'),
(134, 7, 8, 1, 'optionb'),
(134, 7, 10, 1, 'optionc'),
(134, 7, 11, 1, 'optiona'),
(134, 7, 14, 1, 'optionc'),
(134, 7, 15, 1, 'optionb'),
(134, 7, 16, 1, 'optiona'),
(134, 7, 17, 1, 'optionc'),
(134, 7, 19, 1, 'optiond'),
(134, 7, 20, 1, 'optiona'),
(134, 7, 22, 1, 'optiond'),
(134, 7, 24, 1, 'optiona'),
(134, 7, 27, -0.66, 'optiona'),
(134, 7, 28, 2, 'optiona'),
(134, 7, 31, 2, 'optiona'),
(134, 7, 34, -0.66, 'optionc'),
(134, 7, 35, 2, 'optionc'),
(134, 7, 36, 2, 'optionc'),
(134, 7, 38, -0.66, 'optionc'),
(134, 7, 39, -0.66, 'optiona'),
(134, 7, 40, 2, 'optionb'),
(134, 7, 41, 2, 'optionc'),
(134, 7, 42, 2, 'optionc'),
(134, 7, 44, 2, 'optionb'),
(134, 7, 45, 2, 'optiond'),
(134, 7, 46, -0.66, 'optionb'),
(134, 7, 47, 2, 'optionb'),
(134, 7, 48, 2, 'optionb'),
(134, 7, 49, -0.66, 'optiona'),
(134, 7, 50, 2, 'optionc'),
(134, 7, 51, -0.66, 'optiona'),
(134, 7, 52, -0.66, 'optionb'),
(134, 7, 53, -0.66, 'optiona'),
(134, 7, 54, 2, 'optiond'),
(134, 7, 56, 1, 'optiona'),
(134, 7, 57, 1, 'optionc'),
(134, 7, 58, 1, 'optionb'),
(134, 7, 59, -0.33, 'optiona'),
(134, 7, 60, 1, 'optionc'),
(134, 7, 62, 2, 'optionc'),
(134, 7, 63, 2, 'optiond'),
(134, 7, 64, 2, 'optionc'),
(134, 7, 65, -0.66, 'optiona'),
(134, 8, 1, 1, 'optione'),
(134, 8, 2, 1, 'optiona'),
(134, 8, 3, 1, 'optionb'),
(134, 8, 4, 1, 'optiond'),
(134, 8, 5, -0.33, 'optiona'),
(134, 8, 7, -0.33, 'optiond'),
(134, 8, 8, 1, 'optionb'),
(134, 8, 9, 1, 'optiond'),
(134, 8, 10, 1, 'optionc'),
(134, 8, 11, 1, 'optiond'),
(134, 8, 12, -0.33, 'optionc'),
(134, 8, 13, 1, 'optionb'),
(134, 8, 14, 1, 'optiona'),
(134, 8, 16, 1, 'optionc'),
(134, 8, 17, -0.33, 'optionb'),
(134, 8, 18, -0.33, 'optiond'),
(134, 8, 19, 1, 'optiona'),
(134, 8, 25, 1, 'optiond'),
(134, 8, 27, 1, 'optiond'),
(134, 8, 31, 1, 'optionc'),
(134, 8, 32, 1, 'optionb'),
(134, 8, 33, 1, 'optiona'),
(134, 8, 34, 1, 'optiond'),
(134, 8, 35, 1, 'optionc'),
(134, 8, 36, 1, 'optionc'),
(134, 8, 37, 1, 'optiond'),
(134, 8, 38, 1, 'optionb'),
(134, 8, 39, 1, 'optiond'),
(134, 8, 40, -0.33, 'optiona'),
(134, 8, 41, 1, 'optiona'),
(134, 8, 42, 1, 'optiond'),
(134, 8, 43, 1, 'optionb'),
(134, 8, 44, -0.33, 'optiona'),
(134, 8, 45, -0.33, 'optionc'),
(134, 11, 1, 2, 'optionb'),
(134, 11, 2, 2, 'optionc'),
(134, 11, 3, 2, 'optiona'),
(134, 11, 4, 2, 'optiond'),
(134, 11, 5, 2, 'optionb'),
(134, 11, 6, 2, 'optionb'),
(134, 11, 7, 2, 'optionb'),
(134, 11, 8, 2, 'optiona'),
(134, 11, 9, 2, 'optionc'),
(134, 11, 11, 2, 'optiona'),
(134, 11, 12, 2, 'optiona'),
(134, 11, 13, -0.66, 'optiona'),
(134, 11, 14, -0.66, 'optiond'),
(134, 11, 15, 2, 'optionc'),
(134, 11, 17, 2, 'optiona'),
(134, 11, 18, 2, 'optionb'),
(134, 11, 19, 2, 'optionb'),
(134, 11, 21, 2, 'optionc'),
(134, 11, 22, 2, 'optiona'),
(134, 11, 24, 2, 'optiona'),
(134, 11, 26, 2, 'optionc'),
(134, 11, 27, 2, 'optione'),
(134, 11, 28, -0.66, 'optionc'),
(134, 11, 29, 2, 'optiond'),
(134, 11, 30, 2, 'optiond'),
(134, 11, 32, 2, 'optionc'),
(134, 11, 33, -0.66, 'optione'),
(134, 11, 34, 2, 'optiond'),
(134, 11, 35, 2, 'optiond'),
(134, 11, 36, 2, 'optione'),
(134, 11, 37, 2, 'optionb'),
(134, 11, 38, 2, 'optiona'),
(134, 11, 39, 2, 'optiona'),
(134, 11, 40, 2, 'optiond'),
(134, 11, 41, 2, 'optionc'),
(134, 11, 42, -0.66, 'optionb'),
(134, 11, 43, 2, 'optiond'),
(134, 11, 44, 2, 'optionb'),
(134, 11, 46, 2, 'optiona'),
(134, 11, 47, -0.66, 'optionb'),
(134, 11, 48, 2, 'optiond'),
(134, 11, 49, 2, 'optiond'),
(134, 11, 50, -0.66, 'optione'),
(134, 11, 51, 2, 'optiond'),
(134, 11, 52, 2, 'optionb'),
(134, 11, 53, 2, 'optionc'),
(134, 11, 54, 2, 'optionb'),
(134, 11, 55, -0.66, 'optione'),
(134, 11, 56, 2, 'optione'),
(134, 11, 57, 2, 'optionc'),
(134, 11, 58, 2, 'optione'),
(134, 11, 60, 2, 'optiond'),
(134, 13, 1, -0.66, 'optiond'),
(134, 13, 3, 2, 'optiona'),
(134, 13, 6, -0.66, 'optiona'),
(134, 13, 7, -0.66, 'optionc'),
(134, 13, 8, 2, 'optionc'),
(134, 13, 9, -0.66, 'optiond'),
(134, 13, 10, 2, 'optione'),
(134, 13, 11, 2, 'optiond'),
(134, 13, 12, -0.66, 'optione'),
(134, 13, 13, -0.66, 'optiona'),
(134, 13, 14, -0.66, 'optionc'),
(134, 13, 24, 2, 'optionc'),
(134, 13, 25, 2, 'optiona'),
(134, 13, 27, 2, 'optiond'),
(134, 13, 30, 2, 'optiona'),
(134, 13, 31, 2, 'optiond'),
(134, 13, 32, 2, 'optiona'),
(134, 13, 33, 2, 'optionb'),
(134, 13, 34, -0.66, 'optionb'),
(134, 13, 35, 2, 'optionc'),
(134, 13, 36, 2, 'optionc'),
(134, 13, 38, 2, 'optionb'),
(134, 13, 39, 2, 'optiona'),
(134, 13, 40, 2, 'optiond'),
(135, 7, 1, 1, 'optionc'),
(135, 7, 3, -0.33, 'optiond'),
(135, 7, 4, 1, 'optiond'),
(135, 7, 5, -0.33, 'optionc'),
(135, 7, 6, -0.33, 'optiona'),
(135, 7, 7, 1, 'optionb'),
(135, 7, 8, -0.33, 'optiona'),
(135, 7, 10, -0.33, 'optiond'),
(135, 7, 11, 1, 'optiona'),
(135, 7, 14, 1, 'optionc'),
(135, 7, 15, 1, 'optionb'),
(135, 7, 16, 1, 'optiona'),
(135, 7, 17, 1, 'optionc'),
(135, 7, 19, 1, 'optiond'),
(135, 7, 22, -0.33, 'optionb'),
(135, 7, 24, 1, 'optiona'),
(135, 7, 25, -0.33, 'optionb'),
(135, 7, 28, 2, 'optiona'),
(135, 7, 31, 2, 'optiona'),
(135, 7, 34, -0.66, 'optiond'),
(135, 7, 35, 2, 'optionc'),
(135, 7, 36, 2, 'optionc'),
(135, 7, 38, -0.66, 'optionb'),
(135, 7, 40, 2, 'optionb'),
(135, 7, 41, 2, 'optionc'),
(135, 7, 42, -0.66, 'optionb'),
(135, 7, 43, 2, 'optionb'),
(135, 7, 45, 2, 'optiond'),
(135, 7, 47, 2, 'optionb'),
(135, 7, 50, 2, 'optionc'),
(135, 7, 51, 2, 'optionb'),
(135, 7, 54, 2, 'optiond'),
(135, 7, 58, 1, 'optionb'),
(135, 7, 59, 1, 'optiond'),
(135, 7, 61, -0.66, 'optiond'),
(135, 7, 62, 2, 'optionc'),
(135, 7, 63, 2, 'optiond'),
(135, 7, 64, 2, 'optionc'),
(135, 7, 65, 2, 'optionb'),
(135, 8, 1, 1, 'optione'),
(135, 8, 2, 1, 'optiona'),
(135, 8, 3, -0.33, 'optionc'),
(135, 8, 4, 1, 'optiond'),
(135, 8, 5, -0.33, 'optiond'),
(135, 8, 6, 1, 'optiond'),
(135, 8, 7, -0.33, 'optiond'),
(135, 8, 8, -0.33, 'optiond'),
(135, 8, 9, -0.33, 'optiona'),
(135, 8, 10, 1, 'optionc'),
(135, 8, 11, 1, 'optiond'),
(135, 8, 12, 1, 'optiona'),
(135, 8, 13, 1, 'optionb'),
(135, 8, 15, 1, 'optionc'),
(135, 8, 17, -0.33, 'optionb'),
(135, 8, 18, 1, 'optione'),
(135, 8, 22, -0.33, 'optionb'),
(135, 8, 26, 1, 'optiond'),
(135, 8, 29, 1, 'optionb'),
(135, 8, 30, 1, 'optionc'),
(135, 8, 32, 1, 'optionb'),
(135, 8, 33, 1, 'optiona'),
(135, 8, 34, 1, 'optiond'),
(135, 8, 35, 1, 'optionc'),
(135, 8, 36, 1, 'optionc'),
(135, 8, 37, 1, 'optiond'),
(135, 8, 38, 1, 'optionb'),
(135, 8, 39, -0.33, 'optionc'),
(135, 8, 40, -0.33, 'optiona'),
(135, 8, 41, 1, 'optiona'),
(135, 8, 42, 1, 'optiond'),
(135, 8, 43, 1, 'optionb'),
(135, 8, 44, -0.33, 'optiond'),
(135, 8, 45, 1, 'optiond'),
(135, 9, 1, 2, 'optionc'),
(135, 9, 2, -0.66, 'optiona'),
(135, 9, 4, 2, 'optiona'),
(135, 9, 5, 2, 'optiond'),
(135, 9, 6, 2, 'optiond'),
(135, 9, 9, 2, 'optionb'),
(135, 9, 11, 2, 'optiona'),
(135, 9, 12, 2, 'optiona'),
(135, 9, 15, -0.66, 'optionb'),
(135, 9, 16, -0.66, 'optiond'),
(135, 9, 24, 2, 'optionc'),
(135, 9, 25, -0.66, 'optiona'),
(135, 9, 26, 2, 'optionc'),
(135, 9, 27, -0.66, 'optionb'),
(135, 9, 29, 2, 'optionc'),
(135, 9, 30, -0.66, 'optiond'),
(135, 9, 31, -0.66, 'optiond'),
(135, 9, 32, 2, 'optionb'),
(135, 9, 34, -0.66, 'optiona'),
(135, 9, 35, 2, 'optionb'),
(135, 9, 37, 2, 'optionb'),
(135, 9, 46, 2, 'optiond'),
(135, 9, 50, 2, 'optionb'),
(135, 9, 51, -0.66, 'optionc'),
(135, 10, 2, 2, 'optionb'),
(135, 10, 3, -0.66, 'optionc'),
(135, 10, 5, 2, 'optionb'),
(135, 10, 6, 2, 'optionb'),
(135, 10, 9, -0.66, 'optiona'),
(135, 10, 10, 2, 'optiond'),
(135, 10, 11, 2, 'optionc'),
(135, 10, 12, -0.66, 'optiond'),
(135, 10, 13, 2, 'optionc'),
(135, 10, 14, 2, 'optionb'),
(135, 10, 15, -0.66, 'optiona'),
(135, 10, 16, 2, 'optiona'),
(135, 10, 17, -0.66, 'optiona'),
(135, 10, 18, -0.66, 'optionb'),
(135, 10, 19, 2, 'optiona'),
(135, 10, 21, 2, 'optionb'),
(135, 10, 23, -0.66, 'optionc'),
(135, 11, 2, -0.66, 'optiond'),
(135, 11, 3, -0.66, 'optiond'),
(135, 11, 4, 2, 'optiond'),
(135, 11, 5, 2, 'optionb'),
(135, 11, 6, 2, 'optionb'),
(135, 11, 7, 2, 'optionb'),
(135, 11, 8, 2, 'optiona'),
(135, 11, 9, 2, 'optionc'),
(135, 11, 10, 2, 'optiona'),
(135, 11, 11, 2, 'optiona'),
(135, 11, 12, 2, 'optiona'),
(135, 11, 13, 2, 'optionb'),
(135, 11, 14, -0.66, 'optiona'),
(135, 11, 15, -0.66, 'optiona'),
(135, 11, 17, 2, 'optiona'),
(135, 11, 18, 2, 'optionb'),
(135, 11, 20, 2, 'optiona'),
(135, 11, 21, 2, 'optionc'),
(135, 11, 22, -0.66, 'optiond'),
(135, 11, 24, -0.66, 'optionc'),
(135, 11, 25, 2, 'optionb'),
(135, 11, 26, -0.66, 'optiona'),
(135, 11, 27, 2, 'optione'),
(135, 11, 28, 2, 'optiona'),
(135, 11, 29, 2, 'optiond'),
(135, 11, 32, -0.66, 'optione'),
(135, 11, 33, -0.66, 'optione'),
(135, 11, 34, -0.66, 'optiona'),
(135, 11, 35, 2, 'optiond'),
(135, 11, 36, 2, 'optione'),
(135, 11, 37, 2, 'optionb'),
(135, 11, 38, 2, 'optiona'),
(135, 11, 40, 2, 'optiond'),
(135, 11, 41, 2, 'optionc'),
(135, 11, 42, 2, 'optione'),
(135, 11, 49, -0.66, 'optione'),
(135, 11, 50, 2, 'optionc'),
(135, 11, 51, -0.66, 'optionc'),
(135, 11, 52, -0.66, 'optionc'),
(135, 11, 53, 2, 'optionc'),
(135, 11, 55, -0.66, 'optionc'),
(135, 11, 56, 2, 'optione'),
(135, 11, 57, 2, 'optionc'),
(135, 11, 58, 2, 'optione'),
(135, 11, 60, -0.66, 'optione'),
(135, 12, 1, -0.66, 'optiona'),
(135, 12, 2, -0.66, 'optionb'),
(135, 12, 5, 2, 'optiona'),
(135, 12, 6, -0.66, 'optiona'),
(135, 12, 7, 2, 'optionb'),
(135, 12, 8, -0.66, 'optionc'),
(135, 12, 9, 2, 'optiona'),
(135, 12, 11, -0.66, 'optiond'),
(135, 12, 12, 2, 'optionb'),
(135, 12, 13, 2, 'optionb'),
(135, 12, 14, 2, 'optiona'),
(135, 12, 15, 2, 'optiond'),
(135, 12, 16, 2, 'optionc'),
(135, 12, 17, 2, 'optionc'),
(135, 12, 18, 2, 'optiond'),
(135, 12, 19, 2, 'optionb'),
(135, 12, 20, 2, 'optionb'),
(135, 12, 21, 2, 'optiona'),
(135, 12, 22, 2, 'optiond'),
(135, 12, 23, 2, 'optionb'),
(135, 12, 24, 2, 'optiona'),
(135, 12, 25, 2, 'optionc'),
(135, 12, 26, 2, 'optionb'),
(135, 12, 28, -0.66, 'optionc'),
(135, 12, 29, 2, 'optiona'),
(135, 12, 30, -0.66, 'optiona'),
(135, 12, 31, 2, 'optionc'),
(135, 12, 32, 2, 'optionc'),
(135, 12, 33, -0.66, 'optionb'),
(135, 12, 34, 2, 'optiond'),
(135, 12, 35, -0.66, 'optionc'),
(135, 12, 36, 2, 'optionc'),
(135, 12, 38, 2, 'optionc'),
(135, 12, 39, -0.66, 'optionc'),
(135, 12, 40, -0.66, 'optiond'),
(135, 12, 41, 2, 'optionb'),
(135, 12, 43, 2, 'optiond'),
(135, 12, 45, 2, 'optiond'),
(135, 12, 46, 2, 'optiond'),
(135, 12, 47, 2, 'optionc'),
(135, 12, 48, -0.66, 'optionc'),
(135, 12, 50, 2, 'optionb'),
(135, 12, 51, 2, 'optionc'),
(135, 12, 52, 2, 'optionb'),
(135, 12, 53, 2, 'optiona'),
(135, 15, 6, 1, 'optiona'),
(135, 15, 7, -0.33, 'optionc'),
(135, 15, 9, 1, 'optionb'),
(135, 15, 11, 1, 'optiond'),
(135, 15, 14, -0.33, 'optiond'),
(135, 15, 15, 1, 'optiond'),
(135, 15, 17, -0.33, 'optionc'),
(135, 15, 18, 1, 'optionb'),
(135, 15, 19, 1, 'optionc'),
(135, 15, 20, 1, 'optionb'),
(135, 15, 21, 1, 'optiona'),
(135, 15, 22, 1, 'optionb'),
(135, 15, 23, 1, 'optiona'),
(135, 15, 24, 1, 'optiona'),
(135, 15, 25, 1, 'optiond'),
(135, 15, 26, -0.66, 'optiond'),
(135, 15, 29, -0.66, 'optiona'),
(135, 15, 30, -0.66, 'optiond'),
(135, 15, 33, 2, 'optionc'),
(135, 15, 35, 2, 'optionc'),
(135, 15, 37, -0.66, 'optionc'),
(135, 15, 39, 2, 'optionb'),
(135, 15, 41, 2, 'optionc'),
(135, 15, 42, 2, 'optiona'),
(135, 15, 45, -0.66, 'optionb'),
(135, 15, 48, 2, 'optionc'),
(135, 15, 50, 2, 'optiond'),
(135, 15, 51, -0.66, 'optiona'),
(135, 15, 54, 2, 'optionc'),
(135, 15, 55, -0.66, 'optionc'),
(135, 15, 59, 1, 'optiond'),
(135, 16, 1, 1, 'optionc'),
(135, 16, 3, 1, 'optiond'),
(135, 16, 9, -0.33, 'optiona'),
(135, 16, 10, -0.33, 'optionb'),
(135, 16, 14, 1, 'optiond'),
(135, 16, 15, 1, 'optionc'),
(135, 16, 16, 1, 'optiond'),
(135, 16, 17, -0.33, 'optionc'),
(135, 16, 19, 1, 'optiond'),
(135, 16, 21, 1, 'optiond'),
(135, 16, 22, 1, 'optionb'),
(135, 16, 26, -0.66, 'optionc'),
(135, 16, 30, 2, 'optiond'),
(135, 16, 32, -0.66, 'optiona'),
(135, 16, 35, 2, 'optionb'),
(135, 16, 40, 2, 'optiona'),
(135, 16, 41, 2, 'optionc'),
(135, 16, 44, 2, 'optiond'),
(135, 16, 45, 2, 'optiona'),
(135, 16, 46, -0.66, 'optionb'),
(135, 16, 47, 2, 'optionc'),
(135, 16, 49, -0.66, 'optiona'),
(135, 16, 51, -0.66, 'optionb'),
(135, 16, 52, -0.66, 'optionc'),
(135, 16, 60, -0.33, 'optiona'),
(135, 16, 61, 2, 'optionb'),
(135, 18, 2, 1, 'optiond'),
(135, 18, 3, 1, 'optionb'),
(135, 18, 4, 1, 'optiona'),
(135, 18, 6, -0.33, 'optiona'),
(135, 18, 7, 1, 'optionb'),
(135, 18, 8, -0.33, 'optiona'),
(135, 18, 10, 1, 'optionb'),
(135, 18, 11, -0.33, 'optionc'),
(135, 18, 12, 1, 'optiona'),
(135, 18, 13, -0.33, 'optionb'),
(135, 18, 16, -0.33, 'optiona'),
(135, 18, 17, 1, 'optionb'),
(135, 18, 19, 1, 'optionc'),
(135, 18, 20, 1, 'optionb'),
(135, 18, 21, -0.33, 'optiona'),
(135, 18, 22, 1, 'optiond'),
(135, 18, 23, -0.33, 'optiona'),
(135, 18, 24, 1, 'optionc'),
(135, 18, 25, 1, 'optionc'),
(135, 18, 26, -0.66, 'optionc'),
(135, 18, 29, 2, 'optiond'),
(135, 18, 30, 2, 'optionc'),
(135, 18, 31, 2, 'optiona'),
(135, 18, 32, -0.66, 'optiond'),
(135, 18, 35, 2, 'optiond'),
(135, 18, 36, -0.66, 'optiond'),
(135, 18, 38, 2, 'optionb'),
(135, 18, 42, 2, 'optionb'),
(135, 18, 45, -0.66, 'optiond'),
(135, 18, 47, 2, 'optiond'),
(135, 18, 48, 2, 'optionb'),
(135, 18, 49, -0.66, 'optiona'),
(135, 18, 50, 2, 'optionc'),
(135, 18, 51, -0.66, 'optiond'),
(135, 18, 52, 2, 'optiona'),
(135, 18, 61, 2, 'optionb'),
(135, 18, 62, 2, 'optiond'),
(135, 18, 65, 2, 'optiond'),
(136, 8, 1, -0.33, 'optiond'),
(136, 8, 2, 1, 'optiona'),
(136, 8, 3, -0.33, 'optionc'),
(136, 8, 4, 1, 'optiond'),
(136, 8, 5, 1, 'optionc'),
(136, 8, 6, 1, 'optiond'),
(136, 8, 7, 1, 'optionb'),
(136, 8, 8, 1, 'optionb'),
(136, 8, 9, 1, 'optiond'),
(136, 8, 11, -0.33, 'optionc'),
(136, 8, 12, 1, 'optiona'),
(136, 8, 13, 1, 'optionb'),
(136, 8, 14, 1, 'optiona'),
(136, 8, 15, 1, 'optionc'),
(136, 8, 16, -0.33, 'optionb'),
(136, 8, 18, -0.33, 'optiond'),
(136, 8, 19, 1, 'optiona'),
(136, 8, 25, -0.33, 'optione'),
(136, 8, 27, 1, 'optiond'),
(136, 8, 30, 1, 'optionc'),
(136, 8, 31, -0.33, 'optiona'),
(136, 8, 32, 1, 'optionb'),
(136, 8, 33, -0.33, 'optiond'),
(136, 8, 34, 1, 'optiond'),
(136, 8, 35, 1, 'optionc'),
(136, 8, 36, 1, 'optionc'),
(136, 8, 37, 1, 'optiond'),
(136, 8, 38, 1, 'optionb'),
(136, 8, 39, 1, 'optiond'),
(136, 8, 40, 1, 'optionc'),
(136, 8, 41, 1, 'optiona'),
(136, 8, 42, -0.33, 'optionc'),
(136, 8, 43, -0.33, 'optiond'),
(136, 8, 44, 1, 'optionb'),
(136, 8, 45, 1, 'optiond'),
(138, 7, 1, 1, 'optionc'),
(138, 7, 2, -0.33, 'optionc'),
(138, 7, 3, -0.33, 'optiond'),
(138, 7, 4, -0.33, 'optionb'),
(138, 7, 5, -0.33, 'optionc'),
(138, 7, 6, 1, 'optionb'),
(138, 7, 12, -0.33, 'optiond'),
(138, 7, 13, -0.33, 'optionb'),
(138, 7, 15, 1, 'optionb'),
(138, 7, 16, 1, 'optiona'),
(138, 7, 17, -0.33, 'optionb'),
(138, 7, 18, 1, 'optiona'),
(138, 7, 19, 1, 'optiond'),
(138, 7, 20, 1, 'optiona'),
(138, 7, 21, 1, 'optiond'),
(138, 7, 22, -0.33, 'optiona'),
(138, 7, 23, 1, 'optiond'),
(138, 7, 24, 1, 'optiona'),
(138, 7, 25, -0.33, 'optionb'),
(138, 7, 26, 2, 'optiona'),
(138, 7, 28, 2, 'optiona'),
(138, 7, 31, 2, 'optiona'),
(138, 7, 34, -0.66, 'optionc'),
(138, 7, 35, 2, 'optionc'),
(138, 7, 36, 2, 'optionc'),
(138, 7, 37, -0.66, 'optiona'),
(138, 7, 39, -0.66, 'optiona'),
(138, 7, 40, 2, 'optionb'),
(138, 7, 41, 2, 'optionc'),
(138, 7, 42, 2, 'optionc'),
(138, 7, 43, 2, 'optionb'),
(138, 7, 44, 2, 'optionb'),
(138, 7, 45, 2, 'optiond'),
(138, 7, 47, 2, 'optionb'),
(138, 7, 52, -0.66, 'optionb'),
(138, 7, 53, -0.66, 'optiona'),
(138, 7, 54, 2, 'optiond'),
(138, 7, 56, 1, 'optiona'),
(138, 7, 57, 1, 'optionc'),
(138, 7, 58, -0.33, 'optiond'),
(138, 7, 62, 2, 'optionc'),
(138, 7, 63, -0.66, 'optiona'),
(138, 7, 64, 2, 'optionc'),
(138, 7, 65, 2, 'optionb'),
(138, 8, 1, 1, 'optione'),
(138, 8, 2, -0.33, 'optionb'),
(138, 8, 3, 1, 'optionb'),
(138, 8, 4, 1, 'optiond'),
(138, 8, 5, 1, 'optionc'),
(138, 8, 6, 1, 'optiond'),
(138, 8, 7, 1, 'optionb'),
(138, 8, 8, -0.33, 'optiona'),
(138, 8, 9, 1, 'optiond'),
(138, 8, 10, 1, 'optionc'),
(138, 8, 11, 1, 'optiond'),
(138, 8, 12, 1, 'optiona'),
(138, 8, 13, 1, 'optionb'),
(138, 8, 14, 1, 'optiona'),
(138, 8, 15, -0.33, 'optiond'),
(138, 8, 16, 1, 'optionc'),
(138, 8, 17, -0.33, 'optiond'),
(138, 8, 18, 1, 'optione'),
(138, 8, 19, 1, 'optiona'),
(138, 8, 26, 1, 'optiond'),
(138, 8, 27, -0.33, 'optione'),
(138, 8, 29, 1, 'optionb'),
(138, 8, 30, 1, 'optionc'),
(138, 8, 31, 1, 'optionc'),
(138, 8, 32, 1, 'optionb'),
(138, 8, 33, 1, 'optiona'),
(138, 8, 34, 1, 'optiond'),
(138, 8, 35, 1, 'optionc'),
(138, 8, 36, -0.33, 'optionb'),
(138, 8, 37, -0.33, 'optionb'),
(138, 8, 38, 1, 'optionb'),
(138, 8, 39, 1, 'optiond'),
(138, 8, 40, 1, 'optionc'),
(138, 8, 41, 1, 'optiona'),
(138, 8, 42, 1, 'optiond'),
(138, 8, 43, -0.33, 'optiona'),
(138, 8, 44, 1, 'optionb'),
(138, 8, 45, 1, 'optiond'),
(138, 10, 1, 2, 'optione'),
(138, 10, 2, 2, 'optionb'),
(138, 10, 3, 2, 'optiond'),
(138, 10, 4, -0.66, 'optione'),
(138, 10, 5, 2, 'optionb'),
(138, 10, 6, 2, 'optionb'),
(138, 10, 7, 2, 'optiona'),
(138, 10, 9, -0.66, 'optiond'),
(138, 10, 10, 2, 'optiond'),
(138, 10, 11, 2, 'optionc'),
(138, 10, 12, 2, 'optionb'),
(138, 10, 13, 2, 'optionc'),
(138, 10, 14, 2, 'optionb'),
(138, 10, 15, 2, 'optiond'),
(138, 10, 16, 2, 'optiona'),
(138, 10, 18, -0.66, 'optiond'),
(138, 10, 19, 2, 'optiona'),
(138, 10, 21, 2, 'optionb'),
(138, 10, 22, 2, 'optionb'),
(138, 10, 23, -0.66, 'optionb'),
(138, 10, 24, -0.66, 'optiond'),
(138, 11, 1, 2, 'optionb'),
(138, 11, 3, -0.66, 'optionc'),
(138, 11, 4, 2, 'optiond'),
(138, 11, 5, 2, 'optionb'),
(138, 11, 6, 2, 'optionb'),
(138, 11, 8, 2, 'optiona'),
(138, 11, 9, 2, 'optionc'),
(138, 11, 10, 2, 'optiona'),
(138, 11, 11, 2, 'optiona'),
(138, 11, 12, 2, 'optiona'),
(138, 11, 15, 2, 'optionc'),
(138, 11, 17, 2, 'optiona'),
(138, 11, 18, -0.66, 'optiond'),
(138, 11, 19, -0.66, 'optiona'),
(138, 11, 21, 2, 'optionc'),
(138, 11, 22, -0.66, 'optiond'),
(138, 11, 23, 2, 'optionc'),
(138, 11, 24, -0.66, 'optionc'),
(138, 11, 25, -0.66, 'optiond'),
(138, 11, 26, 2, 'optionc'),
(138, 11, 27, 2, 'optione'),
(138, 11, 29, -0.66, 'optionc'),
(138, 11, 30, 2, 'optiond'),
(138, 11, 31, -0.66, 'optiond'),
(138, 11, 32, 2, 'optionc'),
(138, 11, 33, -0.66, 'optionc'),
(138, 11, 34, 2, 'optiond'),
(138, 11, 35, 2, 'optiond'),
(138, 11, 36, -0.66, 'optiond'),
(138, 11, 37, -0.66, 'optionc'),
(138, 11, 38, 2, 'optiona'),
(138, 11, 39, 2, 'optiona'),
(138, 11, 40, 2, 'optiond'),
(138, 11, 41, 2, 'optionc'),
(138, 11, 42, 2, 'optione'),
(138, 11, 43, 2, 'optiond'),
(138, 11, 45, 2, 'optiona'),
(138, 11, 46, 2, 'optiona'),
(138, 11, 47, -0.66, 'optionb'),
(138, 11, 48, 2, 'optiond'),
(138, 11, 49, 2, 'optiond'),
(138, 11, 50, -0.66, 'optionb'),
(138, 11, 51, 2, 'optiond'),
(138, 11, 52, 2, 'optionb'),
(138, 11, 53, 2, 'optionc'),
(138, 11, 54, 2, 'optionb'),
(138, 11, 55, -0.66, 'optione'),
(138, 11, 56, 2, 'optione'),
(138, 11, 57, -0.66, 'optionb'),
(138, 11, 58, 2, 'optione'),
(138, 11, 60, -0.66, 'optionc'),
(138, 13, 1, 2, 'optionc'),
(138, 13, 2, 2, 'optionb'),
(138, 13, 3, 2, 'optiona'),
(138, 13, 5, -0.66, 'optiond'),
(138, 13, 6, -0.66, 'optiona'),
(138, 13, 8, 2, 'optionc'),
(138, 13, 12, 2, 'optiona'),
(138, 13, 13, -0.66, 'optiona'),
(138, 13, 22, -0.66, 'optionc'),
(138, 13, 24, -0.66, 'optiond'),
(138, 13, 25, 2, 'optiona'),
(138, 13, 26, -0.66, 'optionb'),
(138, 13, 27, 2, 'optiond'),
(138, 13, 28, 2, 'optionc'),
(138, 13, 30, 2, 'optiona'),
(138, 13, 36, 2, 'optionc'),
(138, 13, 38, 2, 'optionb'),
(138, 13, 39, 2, 'optiona'),
(138, 13, 40, 2, 'optiond'),
(138, 15, 2, 1, 'optiond'),
(138, 15, 6, 1, 'optiona'),
(138, 15, 8, 1, 'optiona'),
(138, 15, 9, 1, 'optionb'),
(138, 15, 11, 1, 'optiond'),
(138, 15, 12, -0.33, 'optiona'),
(138, 15, 13, 1, 'optionb'),
(138, 15, 14, 1, 'optionc'),
(138, 15, 15, 1, 'optiond'),
(138, 15, 16, 1, 'optiond'),
(138, 15, 17, 1, 'optionb'),
(138, 15, 18, 1, 'optionb'),
(138, 15, 19, 1, 'optionc'),
(138, 15, 20, 1, 'optionb'),
(138, 15, 21, 1, 'optiona'),
(138, 15, 22, 1, 'optionb'),
(138, 15, 23, 1, 'optiona'),
(138, 15, 24, 1, 'optiona'),
(138, 15, 25, 1, 'optiond'),
(138, 15, 26, 2, 'optiona'),
(138, 15, 27, 2, 'optiona'),
(138, 15, 28, -0.66, 'optionb'),
(138, 15, 29, 2, 'optiond'),
(138, 15, 30, 2, 'optionb'),
(138, 15, 31, -0.66, 'optiond'),
(138, 15, 32, 2, 'optiona'),
(138, 15, 33, -0.66, 'optionb'),
(138, 15, 36, 2, 'optiond'),
(138, 15, 37, 2, 'optionb'),
(138, 15, 39, 2, 'optionb'),
(138, 15, 40, -0.66, 'optiona'),
(138, 15, 43, 2, 'optiona'),
(138, 15, 44, 2, 'optiond'),
(138, 15, 45, 2, 'optiona'),
(138, 15, 47, 2, 'optiond'),
(138, 15, 48, 2, 'optionc'),
(138, 15, 49, -0.66, 'optiona'),
(138, 15, 50, 2, 'optiond'),
(138, 15, 51, -0.66, 'optionc'),
(138, 15, 52, 2, 'optionc'),
(138, 15, 54, 2, 'optionc'),
(138, 15, 55, 2, 'optionb'),
(138, 15, 57, -0.33, 'optiona'),
(138, 15, 58, 1, 'optiond'),
(138, 15, 59, 1, 'optiond'),
(138, 15, 60, -0.33, 'optionc'),
(138, 15, 61, -0.66, 'optiona'),
(138, 15, 63, 2, 'optiond'),
(138, 16, 1, 1, 'optionc'),
(138, 16, 3, 1, 'optiond'),
(138, 16, 4, 1, 'optiond'),
(138, 16, 5, -0.33, 'optionb'),
(138, 16, 6, 1, 'optionb'),
(138, 16, 8, 1, 'optiona'),
(138, 16, 9, -0.33, 'optiona'),
(138, 16, 10, 1, 'optionc'),
(138, 16, 14, -0.33, 'optiona'),
(138, 16, 15, -0.33, 'optiond'),
(138, 16, 19, -0.33, 'optionb'),
(138, 16, 20, 1, 'optiona'),
(138, 16, 21, 1, 'optiond'),
(138, 16, 22, 1, 'optionb'),
(138, 16, 25, -0.33, 'optionc'),
(138, 16, 26, 2, 'optiona'),
(138, 16, 28, -0.66, 'optiona'),
(138, 16, 30, 2, 'optiond'),
(138, 16, 35, 2, 'optionb'),
(138, 16, 37, 2, 'optionb'),
(138, 16, 40, 2, 'optiona'),
(138, 16, 44, 2, 'optiond'),
(138, 16, 48, -0.66, 'optionc'),
(138, 16, 50, 2, 'optiona'),
(138, 16, 61, 2, 'optionb'),
(138, 17, 1, 1, 'optiona'),
(138, 17, 2, 1, 'optionb'),
(138, 17, 3, -0.33, 'optionc'),
(138, 17, 4, -0.33, 'optiond'),
(138, 17, 5, 1, 'optionc'),
(138, 17, 6, 1, 'optiona'),
(138, 17, 8, 1, 'optiona'),
(138, 17, 9, 1, 'optionb'),
(138, 17, 10, -0.33, 'optionb'),
(138, 17, 12, -0.33, 'optionc'),
(138, 17, 13, 1, 'optionb'),
(138, 17, 18, 1, 'optionb'),
(138, 17, 21, -0.33, 'optiona'),
(138, 17, 22, 1, 'optionb'),
(138, 17, 23, 1, 'optiond'),
(138, 17, 24, -0.33, 'optionc'),
(138, 17, 25, -0.33, 'optiond'),
(138, 17, 26, 2, 'optionc'),
(138, 17, 28, 2, 'optiond'),
(138, 17, 29, 2, 'optiond'),
(138, 17, 31, 2, 'optiond'),
(138, 17, 32, 2, 'optiona'),
(138, 17, 33, 2, 'optiona'),
(138, 17, 35, -0.66, 'optionc'),
(138, 17, 37, 2, 'optionc'),
(138, 17, 38, -0.66, 'optiona'),
(138, 17, 41, 2, 'optionc'),
(138, 17, 44, 2, 'optionb'),
(138, 17, 45, 2, 'optionb'),
(138, 17, 46, -0.66, 'optiond'),
(138, 17, 47, -0.66, 'optiond'),
(138, 17, 48, -0.66, 'optionc'),
(138, 17, 50, -0.66, 'optiona'),
(138, 17, 52, 2, 'optiond'),
(138, 17, 53, -0.66, 'optionc'),
(138, 17, 54, 2, 'optiond'),
(138, 17, 55, 2, 'optiona'),
(138, 17, 56, 1, 'optiona'),
(138, 17, 57, -0.33, 'optiona'),
(138, 17, 58, 1, 'optionc'),
(138, 17, 65, -0.66, 'optionb'),
(138, 18, 2, 1, 'optiond'),
(138, 18, 3, 1, 'optionb'),
(138, 18, 4, 1, 'optiona'),
(138, 18, 6, 1, 'optionc'),
(138, 18, 7, 1, 'optionb'),
(138, 18, 8, 1, 'optionb'),
(138, 18, 9, 1, 'optiond'),
(138, 18, 10, 1, 'optionb'),
(138, 18, 11, -0.33, 'optionc'),
(138, 18, 12, 1, 'optiona'),
(138, 18, 13, 1, 'optiond'),
(138, 18, 14, 1, 'optionc'),
(138, 18, 17, 1, 'optionb'),
(138, 18, 19, 1, 'optionc'),
(138, 18, 20, -0.33, 'optiona'),
(138, 18, 21, 1, 'optiond'),
(138, 18, 22, 1, 'optiond'),
(138, 18, 24, 1, 'optionc'),
(138, 18, 25, 1, 'optionc'),
(138, 18, 26, 2, 'optionb'),
(138, 18, 29, 2, 'optiond'),
(138, 18, 30, 2, 'optionc'),
(138, 18, 31, 2, 'optiona'),
(138, 18, 32, 2, 'optionb'),
(138, 18, 33, 2, 'optiond'),
(138, 18, 34, 2, 'optiona'),
(138, 18, 35, -0.66, 'optiona'),
(138, 18, 38, 2, 'optionb'),
(138, 18, 42, 2, 'optionb'),
(138, 18, 43, -0.66, 'optionc'),
(138, 18, 44, -0.66, 'optiona'),
(138, 18, 45, -0.66, 'optionc'),
(138, 18, 47, 2, 'optiond'),
(138, 18, 48, -0.66, 'optionc'),
(138, 18, 49, 2, 'optionc'),
(138, 18, 50, -0.66, 'optiond'),
(138, 18, 51, -0.66, 'optionc'),
(138, 18, 54, 2, 'optiona'),
(138, 18, 56, -0.33, 'optionb'),
(138, 18, 57, 1, 'optionb'),
(138, 18, 58, 1, 'optionc'),
(138, 18, 59, -0.33, 'optiond'),
(138, 18, 60, 1, 'optiona'),
(138, 18, 61, 2, 'optionb'),
(138, 18, 63, -0.66, 'optionb'),
(138, 18, 65, 2, 'optiond'),
(139, 9, 2, 2, 'optionb'),
(139, 9, 14, -0.66, 'optiona'),
(139, 9, 16, -0.66, 'optionb'),
(139, 9, 25, 2, 'optiond'),
(139, 9, 26, 2, 'optionc'),
(139, 9, 28, -0.66, 'optionc'),
(139, 9, 29, 2, 'optionc'),
(139, 9, 30, -0.66, 'optiona'),
(139, 9, 32, -0.66, 'optiona'),
(139, 9, 33, -0.66, 'optiona'),
(139, 9, 34, 2, 'optiond'),
(139, 9, 36, -0.66, 'optiond'),
(139, 9, 39, 2, 'optiond'),
(139, 9, 42, 2, 'optionb'),
(139, 9, 48, -0.66, 'optiona'),
(139, 9, 50, 2, 'optionb'),
(139, 9, 51, 2, 'optionb'),
(139, 9, 52, 2, 'optionb'),
(139, 9, 53, -0.66, 'optionb'),
(139, 9, 54, 2, 'optione'),
(139, 9, 55, -0.66, 'optiond'),
(139, 17, 1, 1, 'optiona'),
(139, 17, 2, 1, 'optionb'),
(139, 17, 3, 1, 'optionb'),
(139, 17, 8, 1, 'optiona'),
(139, 17, 9, -0.33, 'optiona'),
(139, 17, 24, -0.33, 'optiona'),
(139, 17, 25, -0.33, 'optiond'),
(139, 17, 26, 2, 'optionc'),
(139, 17, 28, 2, 'optiond'),
(139, 17, 29, -0.66, 'optionb'),
(139, 17, 33, -0.66, 'optiond'),
(139, 17, 37, -0.66, 'optiona'),
(139, 17, 38, -0.66, 'optiona'),
(139, 17, 39, -0.66, 'optionc'),
(139, 17, 42, -0.66, 'optiond'),
(139, 17, 44, -0.66, 'optiona'),
(139, 17, 45, -0.66, 'optionc'),
(139, 17, 47, 2, 'optiona'),
(139, 17, 51, -0.66, 'optiona'),
(139, 17, 52, 2, 'optiond'),
(139, 17, 53, 2, 'optiona'),
(139, 17, 58, 1, 'optionc'),
(139, 17, 59, 1, 'optiond'),
(139, 17, 60, -0.33, 'optiona'),
(139, 17, 61, 2, 'optionb'),
(139, 18, 1, -0.33, 'optionb'),
(139, 18, 2, 1, 'optiond'),
(139, 18, 3, 1, 'optionb'),
(139, 18, 4, 1, 'optiona'),
(139, 18, 14, 1, 'optionc'),
(139, 18, 16, 1, 'optionc'),
(139, 18, 17, -0.33, 'optionc'),
(139, 18, 19, 1, 'optionc'),
(139, 18, 21, -0.33, 'optiona'),
(139, 18, 22, 1, 'optiond'),
(139, 18, 24, 1, 'optionc'),
(139, 18, 26, -0.66, 'optiona'),
(139, 18, 29, -0.66, 'optiona'),
(139, 18, 31, 2, 'optiona'),
(139, 18, 35, -0.66, 'optiona'),
(139, 18, 36, -0.66, 'optionb'),
(139, 18, 42, -0.66, 'optiona'),
(139, 18, 47, -0.66, 'optiona'),
(139, 18, 49, -0.66, 'optionb'),
(139, 18, 54, 2, 'optiona'),
(139, 18, 56, 1, 'optione'),
(139, 18, 57, -0.33, 'optiona'),
(139, 18, 58, 1, 'optionc'),
(139, 18, 60, 1, 'optiona'),
(139, 18, 61, 2, 'optionb'),
(139, 18, 65, 2, 'optiond'),
(140, 8, 1, -0.33, 'optionb'),
(140, 9, 2, 2, 'optionb'),
(140, 9, 5, -0.66, 'optionc'),
(140, 9, 6, -0.66, 'optiona'),
(140, 9, 7, 2, 'optionc'),
(140, 9, 8, -0.66, 'optionc'),
(140, 9, 14, -0.66, 'optiona'),
(140, 9, 16, 2, 'optionc'),
(140, 9, 17, -0.66, 'optionc'),
(140, 9, 24, 2, 'optionc'),
(140, 9, 29, 2, 'optionc'),
(140, 9, 33, 2, 'optionc'),
(140, 9, 35, -0.66, 'optionc'),
(140, 9, 37, -0.66, 'optiond'),
(140, 9, 39, -0.66, 'optionb'),
(140, 9, 42, 2, 'optionb'),
(140, 9, 43, -0.66, 'optionb'),
(140, 9, 44, -0.66, 'optiond'),
(140, 9, 48, -0.66, 'optiona'),
(140, 9, 49, -0.66, 'optiona'),
(140, 9, 50, 2, 'optionb'),
(140, 9, 51, 2, 'optionb'),
(140, 9, 52, 2, 'optionb'),
(140, 9, 53, 2, 'optionc'),
(140, 9, 54, 2, 'optione'),
(140, 9, 55, -0.66, 'optiond'),
(141, 8, 1, 1, 'optione'),
(141, 8, 2, -0.33, 'optiond'),
(141, 8, 3, -0.33, 'optionc'),
(141, 8, 4, -0.33, 'optionb'),
(141, 8, 5, -0.33, 'optionb'),
(141, 8, 6, 1, 'optiond'),
(141, 8, 8, -0.33, 'optiond'),
(141, 8, 9, -0.33, 'optionc'),
(141, 8, 12, 1, 'optiona'),
(141, 8, 13, 1, 'optionb'),
(141, 8, 15, 1, 'optionc'),
(141, 8, 16, -0.33, 'optiona'),
(141, 8, 17, -0.33, 'optionb'),
(141, 8, 18, 1, 'optione'),
(141, 8, 19, 1, 'optiona'),
(141, 8, 25, -0.33, 'optionb'),
(141, 8, 26, 1, 'optiond'),
(141, 8, 27, 1, 'optiond'),
(141, 8, 29, 1, 'optionb'),
(141, 8, 30, 1, 'optionc'),
(141, 8, 31, 1, 'optionc'),
(141, 8, 32, 1, 'optionb'),
(141, 8, 33, -0.33, 'optiond'),
(141, 8, 34, 1, 'optiond'),
(141, 8, 35, 1, 'optionc'),
(141, 8, 36, 1, 'optionc'),
(141, 8, 37, 1, 'optiond'),
(141, 8, 38, 1, 'optionb'),
(141, 8, 39, 1, 'optiond'),
(141, 8, 40, -0.33, 'optiona'),
(141, 8, 41, 1, 'optiona'),
(141, 8, 42, 1, 'optiond'),
(141, 8, 43, 1, 'optionb'),
(141, 8, 44, 1, 'optionb'),
(141, 8, 45, 1, 'optiond'),
(141, 9, 1, -0.66, 'optionb'),
(141, 9, 2, -0.66, 'optiond'),
(141, 9, 4, 2, 'optiona'),
(141, 9, 5, 2, 'optiond'),
(141, 9, 7, -0.66, 'optionb'),
(141, 9, 10, 2, 'optionc'),
(141, 9, 12, 2, 'optiona'),
(141, 9, 17, -0.66, 'optiond'),
(141, 9, 18, -0.66, 'optiona'),
(141, 9, 21, 2, 'optionc'),
(141, 9, 22, -0.66, 'optiond'),
(141, 9, 25, -0.66, 'optionb'),
(141, 9, 29, -0.66, 'optiond'),
(141, 9, 31, -0.66, 'optionc'),
(141, 9, 34, -0.66, 'optionc'),
(141, 9, 35, 2, 'optionb'),
(141, 9, 36, 2, 'optionc'),
(141, 9, 48, -0.66, 'optionb'),
(141, 9, 49, 2, 'optionb'),
(141, 9, 50, -0.66, 'optiona'),
(141, 9, 52, 2, 'optionb'),
(141, 9, 53, -0.66, 'optionb'),
(141, 9, 55, -0.66, 'optiona'),
(141, 10, 1, 2, 'optione'),
(141, 10, 2, 2, 'optionb'),
(141, 10, 3, -0.66, 'optione'),
(141, 10, 5, 2, 'optionb'),
(141, 10, 6, -0.66, 'optiond'),
(141, 10, 7, -0.66, 'optionb'),
(141, 10, 8, 2, 'optione'),
(141, 10, 9, 2, 'optionc'),
(141, 10, 10, -0.66, 'optiona'),
(141, 10, 12, 2, 'optionb'),
(141, 10, 13, 2, 'optionc'),
(141, 10, 14, 2, 'optionb'),
(141, 10, 15, 2, 'optiond'),
(141, 10, 16, 2, 'optiona'),
(141, 10, 17, -0.66, 'optiond'),
(141, 10, 18, -0.66, 'optionb'),
(141, 10, 20, -0.66, 'optiona'),
(141, 10, 21, 2, 'optionb'),
(141, 10, 22, -0.66, 'optionc'),
(141, 10, 23, 2, 'optiond'),
(141, 11, 1, 2, 'optionb'),
(141, 11, 2, -0.66, 'optiond'),
(141, 11, 3, -0.66, 'optionc'),
(141, 11, 4, 2, 'optiond'),
(141, 11, 5, 2, 'optionb'),
(141, 11, 6, 2, 'optionb'),
(141, 11, 7, 2, 'optionb'),
(141, 11, 8, 2, 'optiona'),
(141, 11, 9, 2, 'optionc'),
(141, 11, 10, -0.66, 'optionc'),
(141, 11, 11, 2, 'optiona'),
(141, 11, 12, 2, 'optiona'),
(141, 11, 13, -0.66, 'optiona'),
(141, 11, 14, 2, 'optionc'),
(141, 11, 15, -0.66, 'optiona'),
(141, 11, 17, -0.66, 'optionb'),
(141, 11, 18, -0.66, 'optiond'),
(141, 11, 19, 2, 'optionb'),
(141, 11, 20, -0.66, 'optionb'),
(141, 11, 21, -0.66, 'optiond'),
(141, 11, 22, 2, 'optiona'),
(141, 11, 26, -0.66, 'optionb'),
(141, 11, 27, 2, 'optione'),
(141, 11, 28, -0.66, 'optionb'),
(141, 11, 29, -0.66, 'optionc'),
(141, 11, 30, 2, 'optiond'),
(141, 11, 32, 2, 'optionc'),
(141, 11, 35, 2, 'optiond'),
(141, 11, 36, 2, 'optione'),
(141, 11, 37, -0.66, 'optiond'),
(141, 11, 38, 2, 'optiona'),
(141, 11, 40, -0.66, 'optiona'),
(141, 11, 41, 2, 'optionc'),
(141, 11, 42, 2, 'optione'),
(141, 11, 43, 2, 'optiond'),
(141, 11, 46, 2, 'optiona'),
(141, 11, 48, -0.66, 'optiona'),
(141, 11, 49, 2, 'optiond'),
(141, 11, 50, -0.66, 'optione'),
(141, 11, 51, -0.66, 'optionc'),
(141, 11, 53, 2, 'optionc'),
(141, 11, 54, 2, 'optionb'),
(141, 11, 55, -0.66, 'optionc'),
(141, 11, 56, 2, 'optione'),
(141, 11, 57, 2, 'optionc'),
(141, 11, 58, -0.66, 'optiond'),
(141, 12, 1, -0.66, 'optiona'),
(141, 12, 2, 2, 'optionc'),
(141, 12, 3, -0.66, 'optionc'),
(141, 12, 4, -0.66, 'optionb'),
(141, 12, 5, -0.66, 'optiond'),
(141, 12, 7, -0.66, 'optiond'),
(141, 12, 9, 2, 'optiona'),
(141, 12, 10, 2, 'optiond'),
(141, 12, 11, -0.66, 'optiond'),
(141, 12, 12, -0.66, 'optiona'),
(141, 12, 13, -0.66, 'optionc'),
(141, 12, 14, -0.66, 'optionb'),
(141, 12, 15, 2, 'optiond'),
(141, 12, 16, 2, 'optionc'),
(141, 12, 17, -0.66, 'optiond'),
(141, 12, 18, 2, 'optiond'),
(141, 12, 19, 2, 'optionb'),
(141, 12, 20, 2, 'optionb'),
(141, 12, 21, 2, 'optiona'),
(141, 12, 22, 2, 'optiond'),
(141, 12, 23, 2, 'optionb'),
(141, 12, 26, 2, 'optionb'),
(141, 12, 27, -0.66, 'optiond'),
(141, 12, 28, -0.66, 'optiona'),
(141, 12, 30, 2, 'optionb'),
(141, 12, 31, -0.66, 'optionb'),
(141, 12, 32, 2, 'optionc'),
(141, 12, 34, 2, 'optiond'),
(141, 12, 35, -0.66, 'optiona'),
(141, 12, 37, -0.66, 'optionb'),
(141, 12, 38, 2, 'optionc'),
(141, 12, 39, -0.66, 'optione'),
(141, 12, 40, -0.66, 'optionc'),
(141, 12, 42, 2, 'optiona'),
(141, 12, 43, -0.66, 'optionb'),
(141, 12, 45, -0.66, 'optiona'),
(141, 12, 46, 2, 'optiond'),
(141, 12, 47, -0.66, 'optionb'),
(141, 12, 48, -0.66, 'optionb'),
(141, 12, 50, 2, 'optionb'),
(141, 12, 51, 2, 'optionc'),
(141, 12, 52, 2, 'optionb'),
(141, 12, 53, 2, 'optiona'),
(141, 12, 54, 2, 'optiona'),
(141, 13, 1, -0.66, 'optiona'),
(141, 13, 2, -0.66, 'optionc'),
(141, 13, 6, -0.66, 'optiona'),
(141, 13, 8, 2, 'optionc'),
(141, 13, 10, 2, 'optione'),
(141, 13, 11, -0.66, 'optione'),
(141, 13, 12, -0.66, 'optiond'),
(141, 13, 22, -0.66, 'optionc'),
(141, 13, 25, -0.66, 'optionc'),
(141, 13, 27, 2, 'optiond'),
(141, 13, 29, -0.66, 'optiona'),
(141, 13, 30, -0.66, 'optionc'),
(141, 13, 31, 2, 'optiond'),
(141, 13, 32, 2, 'optiona'),
(141, 13, 33, 2, 'optionb'),
(141, 13, 35, -0.66, 'optiona'),
(141, 13, 36, 2, 'optionc'),
(141, 13, 38, 2, 'optionb'),
(141, 13, 40, 2, 'optiond'),
(141, 15, 1, 1, 'optionc'),
(141, 15, 4, 1, 'optiona'),
(141, 15, 6, 1, 'optiona'),
(141, 15, 7, -0.33, 'optiond'),
(141, 15, 8, 1, 'optiona'),
(141, 15, 9, -0.33, 'optiona'),
(141, 15, 10, -0.33, 'optionb'),
(141, 15, 11, -0.33, 'optionb'),
(141, 15, 13, 1, 'optionb'),
(141, 15, 14, -0.33, 'optionb'),
(141, 15, 15, 1, 'optiond'),
(141, 15, 16, 1, 'optiond'),
(141, 15, 18, 1, 'optionb'),
(141, 15, 19, 1, 'optionc'),
(141, 15, 20, 1, 'optionb'),
(141, 15, 21, -0.33, 'optionb'),
(141, 15, 22, 1, 'optionb'),
(141, 15, 23, 1, 'optiona'),
(141, 15, 24, 1, 'optiona'),
(141, 15, 25, -0.33, 'optionb'),
(141, 15, 26, 2, 'optiona'),
(141, 15, 29, 2, 'optiond'),
(141, 15, 30, -0.66, 'optiond'),
(141, 15, 31, -0.66, 'optiond'),
(141, 15, 32, 2, 'optiona'),
(141, 15, 33, -0.66, 'optionb'),
(141, 15, 36, -0.66, 'optionb'),
(141, 15, 37, 2, 'optionb'),
(141, 15, 39, 2, 'optionb'),
(141, 15, 40, -0.66, 'optiona'),
(141, 15, 41, -0.66, 'optiond'),
(141, 15, 43, 2, 'optiona'),
(141, 15, 44, 2, 'optiond'),
(141, 15, 45, -0.66, 'optionc'),
(141, 15, 48, 2, 'optionc'),
(141, 15, 49, -0.66, 'optiona'),
(141, 15, 50, -0.66, 'optiona'),
(141, 15, 51, 2, 'optionb'),
(141, 15, 56, -0.33, 'optiona'),
(141, 15, 57, -0.33, 'optiona'),
(141, 15, 58, 1, 'optiond'),
(141, 15, 59, 1, 'optiond'),
(141, 15, 60, 1, 'optiona'),
(141, 15, 63, 2, 'optiond'),
(141, 15, 64, 2, 'optiond'),
(141, 17, 1, -0.33, 'optionb'),
(141, 17, 2, 1, 'optionb'),
(141, 17, 3, 1, 'optionb'),
(141, 17, 5, 1, 'optionc'),
(141, 17, 6, -0.33, 'optionb'),
(141, 17, 7, -0.33, 'optionb'),
(141, 17, 8, 1, 'optiona'),
(141, 17, 9, -0.33, 'optiona'),
(141, 17, 10, -0.33, 'optionc'),
(141, 17, 11, -0.33, 'optionb'),
(141, 17, 15, -0.33, 'optionc'),
(141, 17, 17, -0.33, 'optionc'),
(141, 17, 19, 1, 'optionb'),
(141, 17, 21, -0.33, 'optiona'),
(141, 17, 22, 1, 'optionb'),
(141, 17, 23, 1, 'optiond'),
(141, 17, 24, -0.33, 'optionc'),
(141, 17, 25, 1, 'optionb'),
(141, 17, 26, 2, 'optionc'),
(141, 17, 32, 2, 'optiona'),
(141, 17, 33, -0.66, 'optionb'),
(141, 17, 36, -0.66, 'optionc'),
(141, 17, 37, 2, 'optionc'),
(141, 17, 38, -0.66, 'optiona'),
(141, 17, 41, 2, 'optionc'),
(141, 17, 46, 2, 'optionb'),
(141, 17, 47, -0.66, 'optiond'),
(141, 17, 48, -0.66, 'optionc'),
(141, 17, 52, 2, 'optiond'),
(141, 17, 53, 2, 'optiona'),
(141, 17, 56, -0.33, 'optionb'),
(141, 17, 57, -0.33, 'optiond'),
(141, 17, 58, -0.33, 'optionb'),
(141, 17, 59, -0.33, 'optionc'),
(141, 17, 61, -0.66, 'optiond'),
(141, 17, 63, 2, 'optiona'),
(141, 17, 65, -0.66, 'optiona'),
(141, 18, 1, 1, 'optiona'),
(141, 18, 2, 1, 'optiond'),
(141, 18, 3, 1, 'optionb'),
(141, 18, 4, 1, 'optiona'),
(141, 18, 6, -0.33, 'optiona'),
(141, 18, 7, -0.33, 'optiona'),
(141, 18, 9, 1, 'optiond'),
(141, 18, 10, -0.33, 'optiona'),
(141, 18, 11, 1, 'optionb'),
(141, 18, 13, -0.33, 'optionb'),
(141, 18, 18, 1, 'optiona'),
(141, 18, 19, 1, 'optionc'),
(141, 18, 20, -0.33, 'optiona'),
(141, 18, 21, 1, 'optiond'),
(141, 18, 22, 1, 'optiond'),
(141, 18, 24, 1, 'optionc'),
(141, 18, 26, 2, 'optionb'),
(141, 18, 27, 2, 'optiond'),
(141, 18, 28, 2, 'optiona'),
(141, 18, 29, 2, 'optiond'),
(141, 18, 31, 2, 'optiona'),
(141, 18, 32, -0.66, 'optiona'),
(141, 18, 37, -0.66, 'optionb'),
(141, 18, 38, 2, 'optionb'),
(141, 18, 42, 2, 'optionb'),
(141, 18, 47, -0.66, 'optionb'),
(141, 18, 48, -0.66, 'optionc'),
(141, 18, 49, -0.66, 'optiona'),
(141, 18, 50, 2, 'optionc'),
(141, 18, 51, -0.66, 'optiond'),
(141, 18, 56, 1, 'optione'),
(141, 18, 57, 1, 'optionb'),
(141, 18, 58, 1, 'optionc'),
(141, 18, 59, 1, 'optionc'),
(141, 18, 61, 2, 'optionb'),
(141, 18, 64, 2, 'optionb'),
(141, 18, 65, 2, 'optiond'),
(142, 7, 1, 1, 'optionc'),
(142, 7, 3, -0.33, 'optiond'),
(142, 7, 4, 1, 'optiond'),
(142, 7, 5, -0.33, 'optionc'),
(142, 7, 6, -0.33, 'optiona'),
(142, 7, 7, -0.33, 'optiona'),
(142, 7, 8, 1, 'optionb'),
(142, 7, 9, 1, 'optiona'),
(142, 7, 10, 1, 'optionc'),
(142, 7, 14, 1, 'optionc'),
(142, 7, 15, 1, 'optionb'),
(142, 7, 16, 1, 'optiona'),
(142, 7, 17, 1, 'optionc'),
(142, 7, 18, 1, 'optiona'),
(142, 7, 19, 1, 'optiond'),
(142, 7, 20, 1, 'optiona'),
(142, 7, 23, -0.33, 'optionb'),
(142, 7, 24, 1, 'optiona'),
(142, 7, 25, -0.33, 'optionb'),
(142, 7, 26, 2, 'optiona'),
(142, 7, 31, 2, 'optiona'),
(142, 7, 34, -0.66, 'optiond'),
(142, 7, 35, 2, 'optionc'),
(142, 7, 36, -0.66, 'optiond'),
(142, 7, 39, 2, 'optione'),
(142, 7, 40, 2, 'optionb'),
(142, 7, 41, 2, 'optionc'),
(142, 7, 42, 2, 'optionc'),
(142, 7, 43, 2, 'optionb'),
(142, 7, 44, -0.66, 'optiona'),
(142, 7, 45, 2, 'optiond'),
(142, 7, 46, -0.66, 'optionb'),
(142, 7, 47, 2, 'optionb'),
(142, 7, 50, 2, 'optionc'),
(142, 7, 51, 2, 'optionb'),
(142, 7, 52, 2, 'optiona'),
(142, 7, 53, 2, 'optionb'),
(142, 7, 54, 2, 'optiond'),
(142, 7, 55, -0.66, 'optiond'),
(142, 7, 58, -0.33, 'optiond'),
(142, 7, 59, 1, 'optiond'),
(142, 7, 60, -0.33, 'optiond'),
(142, 7, 61, -0.66, 'optiond'),
(142, 7, 62, 2, 'optionc'),
(142, 7, 63, 2, 'optiond'),
(142, 7, 64, -0.66, 'optiona'),
(142, 7, 65, 2, 'optionb'),
(142, 8, 1, 1, 'optione'),
(142, 8, 5, 1, 'optionc'),
(142, 8, 6, 1, 'optiond'),
(142, 8, 8, 1, 'optionb'),
(142, 8, 10, 1, 'optionc'),
(142, 8, 11, 1, 'optiond'),
(142, 8, 12, 1, 'optiona'),
(142, 8, 13, 1, 'optionb'),
(142, 8, 16, 1, 'optionc'),
(142, 8, 18, 1, 'optione'),
(142, 8, 19, 1, 'optiona'),
(142, 8, 25, 1, 'optiond'),
(142, 8, 27, 1, 'optiond'),
(142, 8, 29, 1, 'optionb'),
(142, 8, 30, 1, 'optionc'),
(142, 8, 31, 1, 'optionc'),
(142, 8, 32, 1, 'optionb'),
(142, 8, 33, 1, 'optiona'),
(142, 8, 35, 1, 'optionc'),
(142, 8, 36, 1, 'optionc'),
(142, 8, 37, 1, 'optiond'),
(142, 8, 39, 1, 'optiond'),
(142, 8, 40, -0.33, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(142, 8, 41, 1, 'optiona'),
(142, 8, 42, 1, 'optiond'),
(142, 8, 44, 1, 'optionb'),
(142, 8, 45, 1, 'optiond'),
(142, 9, 1, -0.66, 'optiona'),
(142, 9, 2, -0.66, 'optionc'),
(142, 9, 5, 2, 'optiond'),
(142, 9, 6, 2, 'optiond'),
(142, 9, 7, 2, 'optionc'),
(142, 9, 8, -0.66, 'optionc'),
(142, 9, 10, 2, 'optionc'),
(142, 9, 11, 2, 'optiona'),
(142, 9, 12, -0.66, 'optionc'),
(142, 9, 14, 2, 'optionb'),
(142, 9, 16, -0.66, 'optiond'),
(142, 9, 17, 2, 'optionb'),
(142, 9, 21, 2, 'optionc'),
(142, 9, 23, 2, 'optionc'),
(142, 9, 24, 2, 'optionc'),
(142, 9, 25, -0.66, 'optionb'),
(142, 9, 26, 2, 'optionc'),
(142, 9, 29, 2, 'optionc'),
(142, 9, 30, 2, 'optionb'),
(142, 9, 31, 2, 'optione'),
(142, 9, 35, 2, 'optionb'),
(142, 9, 53, -0.66, 'optionb'),
(142, 9, 55, 2, 'optionb'),
(142, 10, 1, 2, 'optione'),
(142, 10, 2, 2, 'optionb'),
(142, 10, 3, 2, 'optiond'),
(142, 10, 5, -0.66, 'optiona'),
(142, 10, 6, 2, 'optionb'),
(142, 10, 7, -0.66, 'optiond'),
(142, 10, 8, -0.66, 'optiond'),
(142, 10, 9, 2, 'optionc'),
(142, 10, 10, 2, 'optiond'),
(142, 10, 11, 2, 'optionc'),
(142, 10, 12, 2, 'optionb'),
(142, 10, 13, 2, 'optionc'),
(142, 10, 14, 2, 'optionb'),
(142, 10, 15, 2, 'optiond'),
(142, 10, 16, 2, 'optiona'),
(142, 10, 17, 2, 'optionb'),
(142, 10, 18, 2, 'optiona'),
(142, 10, 21, 2, 'optionb'),
(142, 10, 22, 2, 'optionb'),
(142, 10, 23, -0.66, 'optionc'),
(142, 11, 1, 2, 'optionb'),
(142, 11, 2, 2, 'optionc'),
(142, 11, 4, 2, 'optiond'),
(142, 11, 5, 2, 'optionb'),
(142, 11, 6, 2, 'optionb'),
(142, 11, 7, 2, 'optionb'),
(142, 11, 8, 2, 'optiona'),
(142, 11, 9, 2, 'optionc'),
(142, 11, 10, 2, 'optiona'),
(142, 11, 11, 2, 'optiona'),
(142, 11, 12, 2, 'optiona'),
(142, 11, 13, -0.66, 'optiona'),
(142, 11, 14, 2, 'optionc'),
(142, 11, 15, 2, 'optionc'),
(142, 11, 17, 2, 'optiona'),
(142, 11, 18, 2, 'optionb'),
(142, 11, 19, 2, 'optionb'),
(142, 11, 20, -0.66, 'optionb'),
(142, 11, 21, 2, 'optionc'),
(142, 11, 22, 2, 'optiona'),
(142, 11, 24, -0.66, 'optionc'),
(142, 11, 25, 2, 'optionb'),
(142, 11, 26, -0.66, 'optiond'),
(142, 11, 27, 2, 'optione'),
(142, 11, 28, 2, 'optiona'),
(142, 11, 29, 2, 'optiond'),
(142, 11, 31, 2, 'optione'),
(142, 11, 32, 2, 'optionc'),
(142, 11, 33, -0.66, 'optione'),
(142, 11, 35, 2, 'optiond'),
(142, 11, 36, 2, 'optione'),
(142, 11, 37, 2, 'optionb'),
(142, 11, 38, 2, 'optiona'),
(142, 11, 40, 2, 'optiond'),
(142, 11, 41, 2, 'optionc'),
(142, 11, 42, 2, 'optione'),
(142, 11, 46, -0.66, 'optiond'),
(142, 11, 47, -0.66, 'optionc'),
(142, 11, 48, 2, 'optiond'),
(142, 11, 49, 2, 'optiond'),
(142, 11, 51, -0.66, 'optionc'),
(142, 11, 53, 2, 'optionc'),
(142, 11, 54, 2, 'optionb'),
(142, 11, 55, -0.66, 'optionc'),
(142, 11, 56, 2, 'optione'),
(142, 11, 58, 2, 'optione'),
(142, 11, 60, 2, 'optiond'),
(142, 12, 1, 2, 'optionc'),
(142, 12, 2, 2, 'optionc'),
(142, 12, 3, -0.66, 'optionb'),
(142, 12, 5, 2, 'optiona'),
(142, 12, 6, -0.66, 'optiona'),
(142, 12, 7, 2, 'optionb'),
(142, 12, 12, -0.66, 'optiona'),
(142, 12, 13, 2, 'optionb'),
(142, 12, 14, 2, 'optiona'),
(142, 12, 15, 2, 'optiond'),
(142, 12, 16, -0.66, 'optionb'),
(142, 12, 20, 2, 'optionb'),
(142, 12, 21, 2, 'optiona'),
(142, 12, 22, 2, 'optiond'),
(142, 12, 23, 2, 'optionb'),
(142, 12, 24, 2, 'optiona'),
(142, 12, 25, 2, 'optionc'),
(142, 12, 26, 2, 'optionb'),
(142, 12, 27, -0.66, 'optiond'),
(142, 12, 28, -0.66, 'optionc'),
(142, 12, 31, 2, 'optionc'),
(142, 12, 34, 2, 'optiond'),
(142, 12, 35, 2, 'optiond'),
(142, 12, 36, -0.66, 'optiona'),
(142, 12, 38, 2, 'optionc'),
(142, 12, 39, 2, 'optiona'),
(142, 12, 40, 2, 'optiona'),
(142, 12, 41, 2, 'optionb'),
(142, 12, 42, 2, 'optiona'),
(142, 12, 43, -0.66, 'optionc'),
(142, 12, 44, -0.66, 'optionc'),
(142, 12, 45, 2, 'optiond'),
(142, 12, 46, 2, 'optiond'),
(142, 12, 47, 2, 'optionc'),
(142, 12, 50, 2, 'optionb'),
(142, 12, 51, 2, 'optionc'),
(142, 12, 52, 2, 'optionb'),
(142, 12, 53, 2, 'optiona'),
(142, 12, 54, 2, 'optiona'),
(142, 13, 1, -0.66, 'optiond'),
(142, 13, 2, -0.66, 'optiond'),
(142, 13, 4, -0.66, 'optiona'),
(142, 13, 5, -0.66, 'optiond'),
(142, 13, 6, -0.66, 'optiona'),
(142, 13, 7, 2, 'optionb'),
(142, 13, 8, 2, 'optionc'),
(142, 13, 10, 2, 'optione'),
(142, 13, 11, 2, 'optiond'),
(142, 13, 12, 2, 'optiona'),
(142, 13, 13, 2, 'optiond'),
(142, 13, 14, -0.66, 'optiond'),
(142, 13, 15, -0.66, 'optiona'),
(142, 13, 22, 2, 'optiona'),
(142, 13, 24, -0.66, 'optiond'),
(142, 13, 25, 2, 'optiona'),
(142, 13, 26, -0.66, 'optionc'),
(142, 13, 27, 2, 'optiond'),
(142, 13, 28, 2, 'optionc'),
(142, 13, 29, 2, 'optionc'),
(142, 13, 30, 2, 'optiona'),
(142, 13, 31, 2, 'optiond'),
(142, 13, 32, 2, 'optiona'),
(142, 13, 34, 2, 'optiona'),
(142, 13, 35, 2, 'optionc'),
(142, 13, 36, 2, 'optionc'),
(142, 13, 38, 2, 'optionb'),
(142, 13, 39, 2, 'optiona'),
(142, 13, 40, 2, 'optiond'),
(142, 15, 2, 1, 'optiond'),
(142, 15, 3, -0.33, 'optiond'),
(142, 15, 4, 1, 'optiona'),
(142, 15, 5, -0.33, 'optiond'),
(142, 15, 6, 1, 'optiona'),
(142, 15, 7, -0.33, 'optiond'),
(142, 15, 9, 1, 'optionb'),
(142, 15, 10, -0.33, 'optiond'),
(142, 15, 11, 1, 'optiond'),
(142, 15, 13, 1, 'optionb'),
(142, 15, 14, 1, 'optionc'),
(142, 15, 15, 1, 'optiond'),
(142, 15, 16, -0.33, 'optiona'),
(142, 15, 17, -0.33, 'optionc'),
(142, 15, 18, 1, 'optionb'),
(142, 15, 19, 1, 'optionc'),
(142, 15, 20, 1, 'optionb'),
(142, 15, 21, 1, 'optiona'),
(142, 15, 22, 1, 'optionb'),
(142, 15, 23, 1, 'optiona'),
(142, 15, 24, 1, 'optiona'),
(142, 15, 25, -0.33, 'optionb'),
(142, 15, 26, 2, 'optiona'),
(142, 15, 27, 2, 'optiona'),
(142, 15, 28, 2, 'optiond'),
(142, 15, 29, 2, 'optiond'),
(142, 15, 30, -0.66, 'optiond'),
(142, 15, 31, 2, 'optiona'),
(142, 15, 32, 2, 'optiona'),
(142, 15, 33, 2, 'optionc'),
(142, 15, 35, 2, 'optionc'),
(142, 15, 36, 2, 'optiond'),
(142, 15, 37, 2, 'optionb'),
(142, 15, 40, 2, 'optiond'),
(142, 15, 41, -0.66, 'optiond'),
(142, 15, 42, 2, 'optiona'),
(142, 15, 43, 2, 'optiona'),
(142, 15, 45, -0.66, 'optiond'),
(142, 15, 47, -0.66, 'optiona'),
(142, 15, 48, 2, 'optionc'),
(142, 15, 49, -0.66, 'optiona'),
(142, 15, 50, -0.66, 'optiona'),
(142, 15, 51, -0.66, 'optiona'),
(142, 15, 52, 2, 'optionc'),
(142, 15, 57, -0.33, 'optiona'),
(142, 15, 58, -0.33, 'optiona'),
(142, 15, 59, 1, 'optiond'),
(142, 15, 60, 1, 'optiona'),
(142, 15, 61, -0.66, 'optiona'),
(142, 15, 63, 2, 'optiond'),
(142, 16, 1, 1, 'optionc'),
(142, 16, 2, 1, 'optionb'),
(142, 16, 3, -0.33, 'optionc'),
(142, 16, 4, 1, 'optiond'),
(142, 16, 5, 1, 'optiond'),
(142, 16, 6, -0.33, 'optiona'),
(142, 16, 8, -0.33, 'optionc'),
(142, 16, 9, -0.33, 'optionb'),
(142, 16, 10, -0.33, 'optionb'),
(142, 16, 11, 1, 'optionb'),
(142, 16, 12, 1, 'optiond'),
(142, 16, 13, -0.33, 'optiona'),
(142, 16, 14, 1, 'optiond'),
(142, 16, 15, -0.33, 'optiond'),
(142, 16, 16, 1, 'optiond'),
(142, 16, 17, -0.33, 'optionc'),
(142, 16, 18, -0.33, 'optionc'),
(142, 16, 19, 1, 'optiond'),
(142, 16, 20, 1, 'optiona'),
(142, 16, 21, -0.33, 'optiona'),
(142, 16, 22, 1, 'optionb'),
(142, 16, 23, -0.33, 'optiona'),
(142, 16, 24, 1, 'optiona'),
(142, 16, 25, -0.33, 'optiona'),
(142, 16, 26, 2, 'optiona'),
(142, 16, 28, -0.66, 'optiona'),
(142, 16, 29, 2, 'optiond'),
(142, 16, 30, 2, 'optiond'),
(142, 16, 33, -0.66, 'optionb'),
(142, 16, 34, -0.66, 'optionc'),
(142, 16, 35, -0.66, 'optiond'),
(142, 16, 36, 2, 'optionc'),
(142, 16, 37, 2, 'optionb'),
(142, 16, 39, 2, 'optionb'),
(142, 16, 40, -0.66, 'optionb'),
(142, 16, 41, -0.66, 'optiond'),
(142, 16, 43, 2, 'optiona'),
(142, 16, 44, 2, 'optiond'),
(142, 16, 45, 2, 'optiona'),
(142, 16, 50, -0.66, 'optionb'),
(142, 16, 51, -0.66, 'optiond'),
(142, 16, 56, 1, 'optiond'),
(142, 17, 1, 1, 'optiona'),
(142, 17, 2, 1, 'optionb'),
(142, 17, 3, 1, 'optionb'),
(142, 17, 4, -0.33, 'optionb'),
(142, 17, 5, 1, 'optionc'),
(142, 17, 6, 1, 'optiona'),
(142, 17, 7, -0.33, 'optionb'),
(142, 17, 8, 1, 'optiona'),
(142, 17, 9, -0.33, 'optiona'),
(142, 17, 10, 1, 'optiona'),
(142, 17, 11, 1, 'optiond'),
(142, 17, 12, -0.33, 'optionc'),
(142, 17, 13, -0.33, 'optiona'),
(142, 17, 14, 1, 'optionc'),
(142, 17, 15, -0.33, 'optionc'),
(142, 17, 17, 1, 'optiona'),
(142, 17, 18, -0.33, 'optiona'),
(142, 17, 19, 1, 'optionb'),
(142, 17, 20, -0.33, 'optionc'),
(142, 17, 21, -0.33, 'optiona'),
(142, 17, 22, -0.33, 'optiona'),
(142, 17, 23, -0.33, 'optiona'),
(142, 17, 24, -0.33, 'optiond'),
(142, 17, 25, 1, 'optionb'),
(142, 17, 26, 2, 'optionc'),
(142, 17, 28, -0.66, 'optionb'),
(142, 17, 29, -0.66, 'optiona'),
(142, 17, 30, -0.66, 'optiond'),
(142, 17, 31, 2, 'optiond'),
(142, 17, 32, 2, 'optiona'),
(142, 17, 33, 2, 'optiona'),
(142, 17, 34, 2, 'optiond'),
(142, 17, 35, 2, 'optionb'),
(142, 17, 37, 2, 'optionc'),
(142, 17, 38, -0.66, 'optiona'),
(142, 17, 39, 2, 'optionb'),
(142, 17, 41, 2, 'optionc'),
(142, 17, 45, 2, 'optionb'),
(142, 17, 46, -0.66, 'optiond'),
(142, 17, 47, -0.66, 'optionb'),
(142, 17, 48, 2, 'optiond'),
(142, 17, 49, -0.66, 'optiond'),
(142, 17, 50, -0.66, 'optiona'),
(142, 17, 51, 2, 'optionc'),
(142, 17, 52, 2, 'optiond'),
(142, 17, 53, 2, 'optiona'),
(142, 17, 56, 1, 'optiona'),
(142, 17, 59, -0.33, 'optionb'),
(142, 17, 65, -0.66, 'optionc'),
(142, 18, 1, -0.33, 'optionc'),
(142, 18, 2, 1, 'optiond'),
(142, 18, 3, 1, 'optionb'),
(142, 18, 4, 1, 'optiona'),
(142, 18, 6, -0.33, 'optiona'),
(142, 18, 7, 1, 'optionb'),
(142, 18, 8, -0.33, 'optiond'),
(142, 18, 9, 1, 'optiond'),
(142, 18, 10, 1, 'optionb'),
(142, 18, 11, -0.33, 'optiona'),
(142, 18, 12, 1, 'optiona'),
(142, 18, 13, 1, 'optiond'),
(142, 18, 14, 1, 'optionc'),
(142, 18, 16, -0.33, 'optionb'),
(142, 18, 17, -0.33, 'optiona'),
(142, 18, 18, 1, 'optiona'),
(142, 18, 19, 1, 'optionc'),
(142, 18, 20, -0.33, 'optiona'),
(142, 18, 21, 1, 'optiond'),
(142, 18, 22, 1, 'optiond'),
(142, 18, 23, -0.33, 'optiona'),
(142, 18, 24, 1, 'optionc'),
(142, 18, 25, -0.33, 'optiond'),
(142, 18, 26, 2, 'optionb'),
(142, 18, 27, 2, 'optiond'),
(142, 18, 29, 2, 'optiond'),
(142, 18, 30, 2, 'optionc'),
(142, 18, 31, 2, 'optiona'),
(142, 18, 32, 2, 'optionb'),
(142, 18, 33, -0.66, 'optiona'),
(142, 18, 35, -0.66, 'optionb'),
(142, 18, 36, 2, 'optiona'),
(142, 18, 37, -0.66, 'optiona'),
(142, 18, 38, 2, 'optionb'),
(142, 18, 42, 2, 'optionb'),
(142, 18, 44, 2, 'optionc'),
(142, 18, 45, -0.66, 'optiond'),
(142, 18, 47, 2, 'optiond'),
(142, 18, 48, -0.66, 'optionc'),
(142, 18, 49, 2, 'optionc'),
(142, 18, 50, 2, 'optionc'),
(142, 18, 51, -0.66, 'optiond'),
(142, 18, 52, -0.66, 'optionb'),
(142, 18, 53, -0.66, 'optiond'),
(142, 18, 54, 2, 'optiona'),
(142, 18, 57, -0.33, 'optionc'),
(142, 18, 58, 1, 'optionc'),
(142, 18, 60, 1, 'optiona'),
(142, 18, 61, 2, 'optionb'),
(142, 18, 62, 2, 'optiond'),
(142, 18, 64, 2, 'optionb'),
(143, 4, 1, 1, 'optiona'),
(143, 4, 2, 1, 'optiond'),
(143, 4, 3, 1, 'optionc'),
(143, 4, 4, 1, 'optionc'),
(143, 4, 5, 1, 'optionb'),
(143, 4, 6, -0.33, 'optionc'),
(143, 4, 7, -0.33, 'optionb'),
(143, 4, 9, 1, 'optionb'),
(143, 4, 10, 1, 'optionc'),
(143, 4, 12, 1, 'optionc'),
(143, 4, 13, 1, 'optionb'),
(143, 4, 14, 1, 'optiond'),
(143, 4, 16, 1, 'optiona'),
(143, 4, 17, 1, 'optiond'),
(143, 4, 18, -0.33, 'optiona'),
(143, 4, 19, 1, 'optionb'),
(143, 4, 20, 1, 'optiona'),
(143, 4, 21, 2, 'optiond'),
(143, 4, 22, 2, 'optionc'),
(143, 4, 23, 2, 'optionb'),
(143, 4, 26, -0.66, 'optiona'),
(143, 4, 27, 2, 'optionc'),
(143, 4, 28, 2, 'optiond'),
(143, 4, 30, -0.66, 'optiona'),
(143, 4, 33, 2, 'optionc'),
(143, 4, 34, 2, 'optiona'),
(143, 4, 35, 2, 'optionc'),
(143, 4, 36, 2, 'optionc'),
(143, 4, 37, 2, 'optiond'),
(143, 4, 38, 2, 'optiond'),
(143, 4, 39, 2, 'optionb'),
(143, 4, 40, 2, 'optiona'),
(143, 4, 41, 4, 'optionc'),
(143, 4, 42, 4, 'optionc'),
(143, 4, 44, 4, 'optionb'),
(143, 4, 45, 4, 'optiond'),
(143, 4, 46, 4, ''),
(143, 9, 1, -0.66, 'optionb'),
(143, 9, 2, 2, 'optionb'),
(143, 9, 4, 2, 'optiona'),
(143, 9, 5, 2, 'optiond'),
(143, 9, 6, 2, 'optiond'),
(143, 9, 7, -0.66, 'optionb'),
(143, 9, 9, 2, 'optionb'),
(143, 9, 10, 2, 'optionc'),
(143, 9, 12, 2, 'optiona'),
(143, 9, 13, 2, 'optiond'),
(143, 9, 14, -0.66, 'optiond'),
(143, 9, 17, -0.66, 'optiona'),
(143, 9, 20, 2, 'optionc'),
(143, 9, 21, 2, 'optionc'),
(143, 9, 24, -0.66, 'optionb'),
(143, 9, 25, -0.66, 'optiona'),
(143, 9, 26, -0.66, 'optiona'),
(143, 9, 28, 2, 'optionb'),
(143, 9, 30, -0.66, 'optiona'),
(143, 9, 31, -0.66, 'optionc'),
(143, 9, 34, -0.66, 'optiona'),
(143, 9, 35, 2, 'optionb'),
(143, 15, 2, 1, 'optiond'),
(143, 15, 6, 1, 'optiona'),
(143, 15, 7, -0.33, 'optionc'),
(143, 15, 8, 1, 'optiona'),
(143, 15, 9, 1, 'optionb'),
(143, 15, 10, -0.33, 'optionb'),
(143, 15, 11, 1, 'optiond'),
(143, 15, 12, 1, 'optionc'),
(143, 15, 14, 1, 'optionc'),
(143, 15, 15, 1, 'optiond'),
(143, 15, 17, -0.33, 'optionc'),
(143, 15, 18, 1, 'optionb'),
(143, 15, 19, 1, 'optionc'),
(143, 15, 20, 1, 'optionb'),
(143, 15, 21, 1, 'optiona'),
(143, 15, 22, 1, 'optionb'),
(143, 15, 23, -0.33, 'optionc'),
(143, 15, 24, 1, 'optiona'),
(143, 15, 25, -0.33, 'optiona'),
(143, 15, 29, 2, 'optiond'),
(143, 15, 30, -0.66, 'optiond'),
(143, 15, 31, 2, 'optiona'),
(143, 15, 32, 2, 'optiona'),
(143, 15, 33, -0.66, 'optionb'),
(143, 15, 35, 2, 'optionc'),
(143, 15, 36, 2, 'optiond'),
(143, 15, 37, -0.66, 'optionc'),
(143, 15, 38, 2, 'optionc'),
(143, 15, 39, 2, 'optionb'),
(143, 15, 40, -0.66, 'optiona'),
(143, 15, 42, 2, 'optiona'),
(143, 15, 43, 2, 'optiona'),
(143, 15, 44, 2, 'optiond'),
(143, 15, 47, 2, 'optiond'),
(143, 15, 48, -0.66, 'optiond'),
(143, 15, 51, 2, 'optionb'),
(143, 15, 54, -0.66, 'optionb'),
(143, 15, 55, 2, 'optionb'),
(143, 15, 57, -0.33, 'optionc'),
(143, 15, 58, 1, 'optiond'),
(143, 15, 59, 1, 'optiond'),
(143, 15, 60, -0.33, 'optionc'),
(143, 16, 1, 1, 'optionc'),
(143, 16, 3, 1, 'optiond'),
(143, 16, 5, 1, 'optiond'),
(143, 16, 6, 1, 'optionb'),
(143, 16, 9, -0.33, 'optiona'),
(143, 16, 10, 1, 'optionc'),
(143, 16, 13, -0.33, 'optionc'),
(143, 16, 14, 1, 'optiond'),
(143, 16, 16, 1, 'optiond'),
(143, 16, 18, -0.33, 'optionc'),
(143, 16, 19, -0.33, 'optionb'),
(143, 16, 20, 1, 'optiona'),
(143, 16, 21, -0.33, 'optiona'),
(143, 16, 22, 1, 'optionb'),
(143, 16, 25, -0.33, 'optiond'),
(143, 16, 26, -0.66, 'optionc'),
(143, 16, 28, -0.66, 'optiona'),
(143, 16, 29, -0.66, 'optionc'),
(143, 16, 30, -0.66, 'optiona'),
(143, 16, 31, -0.66, 'optionb'),
(143, 16, 32, -0.66, 'optionc'),
(143, 16, 35, 2, 'optionb'),
(143, 16, 36, 2, 'optionc'),
(143, 16, 37, 2, 'optionb'),
(143, 16, 39, -0.66, 'optiond'),
(143, 16, 43, 2, 'optiona'),
(143, 16, 44, 2, 'optiond'),
(143, 16, 45, 2, 'optiona'),
(143, 16, 46, -0.66, 'optiond'),
(143, 16, 47, 2, 'optionc'),
(143, 16, 48, 2, 'optiona'),
(143, 16, 50, 2, 'optiona'),
(143, 16, 58, -0.33, 'optionc'),
(143, 16, 59, -0.33, 'optiond'),
(143, 16, 60, -0.33, 'optionb'),
(143, 16, 61, 2, 'optionb'),
(143, 16, 64, -0.66, 'optiona'),
(143, 17, 1, 1, 'optiona'),
(143, 17, 2, 1, 'optionb'),
(143, 17, 3, 1, 'optionb'),
(143, 17, 5, 1, 'optionc'),
(143, 17, 6, -0.33, 'optionb'),
(143, 17, 8, 1, 'optiona'),
(143, 17, 9, 1, 'optionb'),
(143, 17, 10, -0.33, 'optionb'),
(143, 17, 11, 1, 'optiond'),
(143, 17, 12, -0.33, 'optionc'),
(143, 17, 14, -0.33, 'optionb'),
(143, 17, 15, 1, 'optionb'),
(143, 17, 18, 1, 'optionb'),
(143, 17, 19, 1, 'optionb'),
(143, 17, 20, -0.33, 'optionb'),
(143, 17, 21, 1, 'optionc'),
(143, 17, 22, 1, 'optionb'),
(143, 17, 23, 1, 'optiond'),
(143, 17, 24, 1, 'optionb'),
(143, 17, 25, -0.33, 'optiond'),
(143, 17, 26, 2, 'optionc'),
(143, 17, 28, 2, 'optiond'),
(143, 17, 29, 2, 'optiond'),
(143, 17, 30, 2, 'optiona'),
(143, 17, 31, 2, 'optiond'),
(143, 17, 33, 2, 'optiona'),
(143, 17, 34, 2, 'optiond'),
(143, 17, 35, 2, 'optionb'),
(143, 17, 37, 2, 'optionc'),
(143, 17, 38, -0.66, 'optiona'),
(143, 17, 41, 2, 'optionc'),
(143, 17, 45, 2, 'optionb'),
(143, 17, 46, -0.66, 'optiona'),
(143, 17, 47, -0.66, 'optionb'),
(143, 17, 48, 2, 'optiond'),
(143, 17, 50, 2, 'optiond'),
(143, 17, 52, 2, 'optiond'),
(143, 17, 53, 2, 'optiona'),
(143, 17, 54, -0.66, 'optiona'),
(143, 17, 58, -0.33, 'optiona'),
(143, 17, 59, -0.33, 'optionc'),
(143, 17, 61, 2, 'optionb'),
(143, 17, 65, -0.66, 'optiona'),
(143, 18, 1, 1, 'optiona'),
(143, 18, 2, 1, 'optiond'),
(143, 18, 3, 1, 'optionb'),
(143, 18, 4, 1, 'optiona'),
(143, 18, 6, 1, 'optionc'),
(143, 18, 8, 1, 'optionb'),
(143, 18, 9, 1, 'optiond'),
(143, 18, 10, 1, 'optionb'),
(143, 18, 11, 1, 'optionb'),
(143, 18, 12, 1, 'optiona'),
(143, 18, 15, 1, 'optionc'),
(143, 18, 16, -0.33, 'optiona'),
(143, 18, 17, 1, 'optionb'),
(143, 18, 19, -0.33, 'optionb'),
(143, 18, 20, -0.33, 'optiona'),
(143, 18, 21, 1, 'optiond'),
(143, 18, 22, 1, 'optiond'),
(143, 18, 24, 1, 'optionc'),
(143, 18, 25, 1, 'optionc'),
(143, 18, 26, 2, 'optionb'),
(143, 18, 27, 2, 'optiond'),
(143, 18, 29, 2, 'optiond'),
(143, 18, 30, 2, 'optionc'),
(143, 18, 31, 2, 'optiona'),
(143, 18, 32, -0.66, 'optionc'),
(143, 18, 33, 2, 'optiond'),
(143, 18, 34, 2, 'optiona'),
(143, 18, 38, -0.66, 'optiona'),
(143, 18, 39, -0.66, 'optionc'),
(143, 18, 42, 2, 'optionb'),
(143, 18, 44, -0.66, 'optionb'),
(143, 18, 45, -0.66, 'optionc'),
(143, 18, 47, 2, 'optiond'),
(143, 18, 49, 2, 'optionc'),
(143, 18, 50, 2, 'optionc'),
(143, 18, 51, -0.66, 'optiond'),
(143, 18, 54, 2, 'optiona'),
(143, 18, 56, 1, 'optione'),
(143, 18, 57, -0.33, 'optiond'),
(143, 18, 58, 1, 'optionc'),
(143, 18, 60, 1, 'optiona'),
(143, 18, 61, 2, 'optionb'),
(143, 18, 62, 2, 'optiond'),
(143, 18, 64, -0.66, 'optionc'),
(143, 18, 65, 2, 'optiond'),
(144, 15, 2, 1, 'optiond'),
(144, 15, 4, -0.33, 'optionc'),
(144, 15, 6, 1, 'optiona'),
(144, 15, 7, -0.33, 'optiond'),
(144, 15, 8, 1, 'optiona'),
(144, 15, 9, 1, 'optionb'),
(144, 15, 11, 1, 'optiond'),
(144, 15, 12, 1, 'optionc'),
(144, 15, 13, 1, 'optionb'),
(144, 15, 14, 1, 'optionc'),
(144, 15, 15, 1, 'optiond'),
(144, 15, 16, -0.33, 'optiona'),
(144, 15, 17, 1, 'optionb'),
(144, 15, 18, 1, 'optionb'),
(144, 15, 19, 1, 'optionc'),
(144, 15, 20, 1, 'optionb'),
(144, 15, 21, 1, 'optiona'),
(144, 15, 22, 1, 'optionb'),
(144, 15, 23, 1, 'optiona'),
(144, 15, 24, 1, 'optiona'),
(144, 15, 25, 1, 'optiond'),
(144, 15, 26, 2, 'optiona'),
(144, 15, 29, 2, 'optiond'),
(144, 15, 30, -0.66, 'optiond'),
(144, 15, 31, 2, 'optiona'),
(144, 15, 32, 2, 'optiona'),
(144, 15, 33, -0.66, 'optiond'),
(144, 15, 35, 2, 'optionc'),
(144, 15, 36, 2, 'optiond'),
(144, 15, 37, 2, 'optionb'),
(144, 15, 39, 2, 'optionb'),
(144, 15, 40, 2, 'optiond'),
(144, 15, 41, 2, 'optionc'),
(144, 15, 42, 2, 'optiona'),
(144, 15, 44, 2, 'optiond'),
(144, 15, 45, 2, 'optiona'),
(144, 15, 47, 2, 'optiond'),
(144, 15, 48, -0.66, 'optiond'),
(144, 15, 50, -0.66, 'optiona'),
(144, 15, 51, -0.66, 'optiona'),
(144, 15, 52, 2, 'optionc'),
(144, 15, 54, 2, 'optionc'),
(144, 15, 55, 2, 'optionb'),
(144, 15, 56, -0.33, 'optionb'),
(144, 15, 58, 1, 'optiond'),
(144, 15, 59, 1, 'optiond'),
(144, 15, 60, -0.33, 'optiond'),
(144, 15, 61, -0.66, 'optiona'),
(144, 15, 62, -0.66, 'optionc'),
(144, 15, 63, 2, 'optiond'),
(144, 16, 1, 1, 'optionc'),
(144, 16, 3, 1, 'optiond'),
(144, 16, 4, 1, 'optiond'),
(144, 16, 6, 1, 'optionb'),
(144, 16, 8, 1, 'optiona'),
(144, 16, 9, -0.33, 'optiona'),
(144, 16, 10, 1, 'optionc'),
(144, 16, 11, -0.33, 'optiond'),
(144, 16, 13, -0.33, 'optiona'),
(144, 16, 15, -0.33, 'optiond'),
(144, 16, 19, 1, 'optiond'),
(144, 16, 20, 1, 'optiona'),
(144, 16, 21, -0.33, 'optiona'),
(144, 16, 22, 1, 'optionb'),
(144, 16, 26, 2, 'optiona'),
(144, 16, 29, 2, 'optiond'),
(144, 16, 30, 2, 'optiond'),
(144, 16, 31, -0.66, 'optionb'),
(144, 16, 32, -0.66, 'optionb'),
(144, 16, 33, 2, 'optiond'),
(144, 16, 34, -0.66, 'optiond'),
(144, 16, 35, 2, 'optionb'),
(144, 16, 36, -0.66, 'optiona'),
(144, 16, 37, 2, 'optionb'),
(144, 16, 40, 2, 'optiona'),
(144, 16, 43, 2, 'optiona'),
(144, 16, 44, 2, 'optiond'),
(144, 16, 45, 2, 'optiona'),
(144, 16, 47, 2, 'optionc'),
(144, 16, 48, 2, 'optiona'),
(144, 16, 51, -0.66, 'optionb'),
(144, 16, 52, 2, 'optiona'),
(144, 16, 53, 2, 'optionb'),
(144, 16, 56, 1, 'optiond'),
(144, 16, 58, -0.33, 'optiond'),
(144, 16, 59, 1, 'optionc'),
(144, 16, 60, 1, 'optionc'),
(144, 16, 61, 2, 'optionb'),
(144, 16, 62, 2, 'optiond'),
(144, 16, 63, -0.66, 'optiond'),
(144, 17, 1, -0.33, 'optionb'),
(144, 17, 2, 1, 'optionb'),
(144, 17, 3, 1, 'optionb'),
(144, 17, 4, 1, 'optionc'),
(144, 17, 5, 1, 'optionc'),
(144, 17, 6, 1, 'optiona'),
(144, 17, 7, 1, 'optionc'),
(144, 17, 8, 1, 'optiona'),
(144, 17, 9, 1, 'optionb'),
(144, 17, 10, -0.33, 'optionc'),
(144, 17, 11, -0.33, 'optiona'),
(144, 17, 12, -0.33, 'optionc'),
(144, 17, 13, 1, 'optionb'),
(144, 17, 14, 1, 'optionc'),
(144, 17, 18, -0.33, 'optiona'),
(144, 17, 19, 1, 'optionb'),
(144, 17, 21, -0.33, 'optiona'),
(144, 17, 22, 1, 'optionb'),
(144, 17, 23, 1, 'optiond'),
(144, 17, 25, 1, 'optionb'),
(144, 17, 26, 2, 'optionc'),
(144, 17, 28, 2, 'optiond'),
(144, 17, 29, 2, 'optiond'),
(144, 17, 30, 2, 'optiona'),
(144, 17, 31, 2, 'optiond'),
(144, 17, 32, 2, 'optiona'),
(144, 17, 33, 2, 'optiona'),
(144, 17, 34, 2, 'optiond'),
(144, 17, 35, -0.66, 'optiond'),
(144, 17, 37, 2, 'optionc'),
(144, 17, 38, 2, 'optionc'),
(144, 17, 41, 2, 'optionc'),
(144, 17, 42, 2, 'optionb'),
(144, 17, 44, -0.66, 'optiond'),
(144, 17, 45, 2, 'optionb'),
(144, 17, 46, 2, 'optionb'),
(144, 17, 47, -0.66, 'optionb'),
(144, 17, 48, -0.66, 'optionc'),
(144, 17, 50, -0.66, 'optiona'),
(144, 17, 52, 2, 'optiond'),
(144, 17, 53, 2, 'optiona'),
(144, 17, 54, -0.66, 'optionb'),
(144, 17, 55, 2, 'optiona'),
(144, 17, 57, -0.33, 'optiond'),
(144, 17, 58, 1, 'optionc'),
(144, 17, 61, -0.66, 'optiona'),
(144, 17, 62, -0.66, 'optiond'),
(144, 17, 63, -0.66, 'optionb'),
(144, 17, 65, 2, 'optiond'),
(144, 18, 1, 1, 'optiona'),
(144, 18, 2, 1, 'optiond'),
(144, 18, 3, 1, 'optionb'),
(144, 18, 4, 1, 'optiona'),
(144, 18, 6, 1, 'optionc'),
(144, 18, 7, 1, 'optionb'),
(144, 18, 9, 1, 'optiond'),
(144, 18, 10, -0.33, 'optiond'),
(144, 18, 11, -0.33, 'optiond'),
(144, 18, 12, 1, 'optiona'),
(144, 18, 13, 1, 'optiond'),
(144, 18, 14, 1, 'optionc'),
(144, 18, 15, 1, 'optionc'),
(144, 18, 16, 1, 'optionc'),
(144, 18, 17, 1, 'optionb'),
(144, 18, 18, -0.33, 'optionb'),
(144, 18, 19, 1, 'optionc'),
(144, 18, 20, -0.33, 'optiona'),
(144, 18, 21, -0.33, 'optionc'),
(144, 18, 22, 1, 'optiond'),
(144, 18, 23, 1, 'optiond'),
(144, 18, 24, 1, 'optionc'),
(144, 18, 25, 1, 'optionc'),
(144, 18, 26, 2, 'optionb'),
(144, 18, 27, 2, 'optiond'),
(144, 18, 28, 2, 'optiona'),
(144, 18, 29, 2, 'optiond'),
(144, 18, 30, 2, 'optionc'),
(144, 18, 31, -0.66, 'optionb'),
(144, 18, 32, 2, 'optionb'),
(144, 18, 33, 2, 'optiond'),
(144, 18, 34, 2, 'optiona'),
(144, 18, 35, -0.66, 'optiona'),
(144, 18, 36, -0.66, 'optionb'),
(144, 18, 37, 2, 'optionc'),
(144, 18, 38, 2, 'optionb'),
(144, 18, 39, 2, 'optiona'),
(144, 18, 41, -0.66, 'optiona'),
(144, 18, 42, 2, 'optionb'),
(144, 18, 44, -0.66, 'optionb'),
(144, 18, 45, -0.66, 'optionc'),
(144, 18, 47, 2, 'optiond'),
(144, 18, 48, -0.66, 'optionc'),
(144, 18, 49, -0.66, 'optiona'),
(144, 18, 50, 2, 'optionc'),
(144, 18, 52, -0.66, 'optionc'),
(144, 18, 53, -0.66, 'optiond'),
(144, 18, 54, 2, 'optiona'),
(144, 18, 56, 1, 'optione'),
(144, 18, 58, -0.33, 'optionb'),
(144, 18, 60, 1, 'optiona'),
(144, 18, 61, 2, 'optionb'),
(144, 18, 62, 2, 'optiond'),
(144, 18, 64, 2, 'optionb'),
(144, 18, 65, 2, 'optiond'),
(145, 7, 1, 1, 'optionc'),
(145, 7, 2, 1, 'optiond'),
(145, 7, 3, 1, 'optionb'),
(145, 7, 4, 1, 'optiond'),
(145, 7, 5, -0.33, 'optiona'),
(145, 7, 6, 1, 'optionb'),
(145, 7, 8, 1, 'optionb'),
(145, 7, 9, -0.33, 'optionb'),
(145, 7, 10, 1, 'optionc'),
(145, 7, 11, 1, 'optiona'),
(145, 7, 12, -0.33, 'optiond'),
(145, 7, 13, 1, 'optionc'),
(145, 7, 14, 1, 'optionc'),
(145, 7, 15, 1, 'optionb'),
(145, 7, 16, 1, 'optiona'),
(145, 7, 17, 1, 'optionc'),
(145, 7, 18, -0.33, 'optionc'),
(145, 7, 19, 1, 'optiond'),
(145, 7, 20, 1, 'optiona'),
(145, 7, 21, 1, 'optiond'),
(145, 7, 22, -0.33, 'optiona'),
(145, 7, 25, 1, 'optionc'),
(145, 7, 26, -0.66, 'optiond'),
(145, 7, 27, -0.66, 'optiond'),
(145, 7, 28, 2, 'optiona'),
(145, 7, 29, -0.66, 'optiona'),
(145, 7, 30, -0.66, 'optiond'),
(145, 7, 31, 2, 'optiona'),
(145, 7, 32, -0.66, 'optiond'),
(145, 7, 33, -0.66, 'optionc'),
(145, 7, 35, 2, 'optionc'),
(145, 7, 36, 2, 'optionc'),
(145, 7, 37, -0.66, 'optionc'),
(145, 7, 38, -0.66, 'optionb'),
(145, 7, 39, 2, 'optione'),
(145, 7, 41, 2, 'optionc'),
(145, 7, 42, -0.66, 'optiona'),
(145, 7, 43, 2, 'optionb'),
(145, 7, 44, -0.66, 'optionc'),
(145, 7, 45, -0.66, 'optiona'),
(145, 7, 47, 2, 'optionb'),
(145, 7, 48, 2, 'optionb'),
(145, 7, 49, -0.66, 'optiona'),
(145, 7, 52, 2, 'optiona'),
(145, 7, 53, 2, 'optionb'),
(145, 7, 54, 2, 'optiond'),
(145, 7, 55, -0.66, 'optiond'),
(145, 7, 56, 1, 'optiona'),
(145, 7, 57, -0.33, 'optionb'),
(145, 7, 58, 1, 'optionb'),
(145, 7, 59, 1, 'optiond'),
(145, 7, 60, 1, 'optionc'),
(145, 7, 61, -0.66, 'optiona'),
(145, 7, 62, 2, 'optionc'),
(145, 7, 63, 2, 'optiond'),
(145, 7, 64, 2, 'optionc'),
(145, 7, 65, -0.66, 'optiond'),
(145, 9, 1, -0.66, 'optionb'),
(145, 9, 2, 2, 'optionb'),
(145, 9, 4, 2, 'optiona'),
(145, 9, 5, 2, 'optiond'),
(145, 9, 6, 2, 'optiond'),
(145, 9, 7, -0.66, 'optiona'),
(145, 9, 9, 2, 'optionb'),
(145, 9, 10, 2, 'optionc'),
(145, 9, 11, 2, 'optiona'),
(145, 9, 12, 2, 'optiona'),
(145, 9, 14, -0.66, 'optiond'),
(145, 9, 16, -0.66, 'optiond'),
(145, 9, 17, 2, 'optionb'),
(145, 9, 18, 2, 'optionb'),
(145, 9, 19, 2, 'optionc'),
(145, 9, 21, -0.66, 'optionb'),
(145, 9, 23, -0.66, 'optiona'),
(145, 9, 25, 2, 'optiond'),
(145, 9, 26, 2, 'optionc'),
(145, 9, 28, 2, 'optionb'),
(145, 9, 30, 2, 'optionb'),
(145, 9, 31, -0.66, 'optionc'),
(145, 9, 32, 2, 'optionb'),
(145, 9, 34, 2, 'optiond'),
(145, 9, 35, 2, 'optionb'),
(145, 9, 37, 2, 'optionb'),
(145, 9, 41, 2, 'optionb'),
(145, 9, 47, -0.66, 'optiond'),
(145, 9, 48, -0.66, 'optiond'),
(145, 9, 50, 2, 'optionb'),
(145, 9, 53, -0.66, 'optionb'),
(145, 10, 1, -0.66, 'optionb'),
(145, 10, 2, 2, 'optionb'),
(145, 10, 3, -0.66, 'optiona'),
(145, 10, 4, -0.66, 'optiond'),
(145, 10, 5, 2, 'optionb'),
(145, 10, 6, 2, 'optionb'),
(145, 10, 8, -0.66, 'optionb'),
(145, 10, 9, 2, 'optionc'),
(145, 10, 10, -0.66, 'optionc'),
(145, 10, 11, 2, 'optionc'),
(145, 10, 12, 2, 'optionb'),
(145, 10, 13, -0.66, 'optione'),
(145, 10, 14, 2, 'optionb'),
(145, 10, 15, 2, 'optiond'),
(145, 10, 16, 2, 'optiona'),
(145, 10, 17, -0.66, 'optionc'),
(145, 10, 18, 2, 'optiona'),
(145, 10, 19, 2, 'optiona'),
(145, 10, 20, -0.66, 'optionb'),
(145, 10, 21, 2, 'optionb'),
(145, 10, 22, 2, 'optionb'),
(145, 10, 23, -0.66, 'optionc'),
(145, 10, 24, -0.66, 'optionc'),
(145, 11, 1, 2, 'optionb'),
(145, 11, 2, 2, 'optionc'),
(145, 11, 4, 2, 'optiond'),
(145, 11, 5, 2, 'optionb'),
(145, 11, 7, 2, 'optionb'),
(145, 11, 8, 2, 'optiona'),
(145, 11, 9, 2, 'optionc'),
(145, 11, 10, 2, 'optiona'),
(145, 11, 11, 2, 'optiona'),
(145, 11, 12, 2, 'optiona'),
(145, 11, 13, 2, 'optionb'),
(145, 11, 14, 2, 'optionc'),
(145, 11, 15, -0.66, 'optiona'),
(145, 11, 17, 2, 'optiona'),
(145, 11, 18, 2, 'optionb'),
(145, 11, 20, -0.66, 'optionc'),
(145, 11, 21, 2, 'optionc'),
(145, 11, 22, 2, 'optiona'),
(145, 11, 24, 2, 'optiona'),
(145, 11, 25, 2, 'optionb'),
(145, 11, 26, 2, 'optionc'),
(145, 11, 27, 2, 'optione'),
(145, 11, 28, 2, 'optiona'),
(145, 11, 29, 2, 'optiond'),
(145, 11, 31, 2, 'optione'),
(145, 11, 32, 2, 'optionc'),
(145, 11, 33, 2, 'optiond'),
(145, 11, 34, 2, 'optiond'),
(145, 11, 35, 2, 'optiond'),
(145, 11, 36, 2, 'optione'),
(145, 11, 37, 2, 'optionb'),
(145, 11, 38, 2, 'optiona'),
(145, 11, 39, 2, 'optiona'),
(145, 11, 41, -0.66, 'optione'),
(145, 11, 42, 2, 'optione'),
(145, 11, 44, -0.66, 'optionc'),
(145, 11, 45, 2, 'optiona'),
(145, 11, 46, 2, 'optiona'),
(145, 11, 47, -0.66, 'optiona'),
(145, 11, 48, 2, 'optiond'),
(145, 11, 49, -0.66, 'optione'),
(145, 11, 51, 2, 'optiond'),
(145, 11, 52, 2, 'optionb'),
(145, 11, 53, 2, 'optionc'),
(145, 11, 54, 2, 'optionb'),
(145, 11, 56, 2, 'optione'),
(145, 11, 57, 2, 'optionc'),
(145, 11, 58, 2, 'optione'),
(145, 11, 59, 2, 'optiona'),
(145, 11, 60, 2, 'optiond'),
(145, 12, 1, 2, 'optionc'),
(145, 12, 2, 2, 'optionc'),
(145, 12, 3, 2, 'optiond'),
(145, 12, 4, 2, 'optionc'),
(145, 12, 5, 2, 'optiona'),
(145, 12, 6, -0.66, 'optiona'),
(145, 12, 7, 2, 'optionb'),
(145, 12, 8, 2, 'optionb'),
(145, 12, 9, 2, 'optiona'),
(145, 12, 10, 2, 'optiond'),
(145, 12, 12, 2, 'optionb'),
(145, 12, 13, 2, 'optionb'),
(145, 12, 14, -0.66, 'optiond'),
(145, 12, 15, 2, 'optiond'),
(145, 12, 16, 2, 'optionc'),
(145, 12, 17, 2, 'optionc'),
(145, 12, 18, 2, 'optiond'),
(145, 12, 20, 2, 'optionb'),
(145, 12, 21, 2, 'optiona'),
(145, 12, 22, 2, 'optiond'),
(145, 12, 23, -0.66, 'optiond'),
(145, 12, 24, 2, 'optiona'),
(145, 12, 25, 2, 'optionc'),
(145, 12, 26, 2, 'optionb'),
(145, 12, 27, -0.66, 'optiond'),
(145, 12, 28, 2, 'optiond'),
(145, 12, 29, -0.66, 'optiond'),
(145, 12, 30, -0.66, 'optiond'),
(145, 12, 31, 2, 'optionc'),
(145, 12, 32, 2, 'optionc'),
(145, 12, 33, -0.66, 'optionb'),
(145, 12, 34, 2, 'optiond'),
(145, 12, 35, -0.66, 'optionc'),
(145, 12, 36, 2, 'optionc'),
(145, 12, 38, 2, 'optionc'),
(145, 12, 40, -0.66, 'optiond'),
(145, 12, 41, 2, 'optionb'),
(145, 12, 42, 2, 'optiona'),
(145, 12, 43, -0.66, 'optionc'),
(145, 12, 45, 2, 'optiond'),
(145, 12, 46, 2, 'optiond'),
(145, 12, 47, -0.66, 'optionb'),
(145, 12, 48, 2, 'optiona'),
(145, 12, 50, 2, 'optionb'),
(145, 12, 51, 2, 'optionc'),
(145, 12, 52, 2, 'optionb'),
(145, 12, 53, 2, 'optiona'),
(145, 12, 54, 2, 'optiona'),
(145, 13, 1, 2, 'optionc'),
(145, 13, 2, 2, 'optionb'),
(145, 13, 3, 2, 'optiona'),
(145, 13, 5, 2, 'optionc'),
(145, 13, 6, -0.66, 'optionc'),
(145, 13, 7, -0.66, 'optiond'),
(145, 13, 8, 2, 'optionc'),
(145, 13, 9, -0.66, 'optiond'),
(145, 13, 10, 2, 'optione'),
(145, 13, 11, 2, 'optiond'),
(145, 13, 12, -0.66, 'optionb'),
(145, 13, 13, -0.66, 'optiona'),
(145, 13, 14, -0.66, 'optiona'),
(145, 13, 15, -0.66, 'optionb'),
(145, 13, 18, -0.66, 'optionb'),
(145, 13, 20, 2, 'optiona'),
(145, 13, 21, 2, 'optiona'),
(145, 13, 22, 2, 'optiona'),
(145, 13, 24, -0.66, 'optiond'),
(145, 13, 25, 2, 'optiona'),
(145, 13, 26, -0.66, 'optionb'),
(145, 13, 27, 2, 'optiond'),
(145, 13, 28, 2, 'optionc'),
(145, 13, 29, -0.66, 'optiond'),
(145, 13, 30, 2, 'optiona'),
(145, 13, 31, 2, 'optiond'),
(145, 13, 32, -0.66, 'optionc'),
(145, 13, 33, 2, 'optionb'),
(145, 13, 34, 2, 'optiona'),
(145, 13, 35, 2, 'optionc'),
(145, 13, 36, 2, 'optionc'),
(145, 13, 37, -0.66, 'optionb'),
(145, 13, 38, 2, 'optionb'),
(145, 13, 39, 2, 'optiona'),
(145, 13, 40, 2, 'optiond'),
(145, 15, 1, 1, 'optionc'),
(145, 15, 2, 1, 'optiond'),
(145, 15, 3, 1, 'optionc'),
(145, 15, 4, 1, 'optiona'),
(145, 15, 5, 1, 'optionb'),
(145, 15, 6, 1, 'optiona'),
(145, 15, 7, -0.33, 'optiond'),
(145, 15, 8, 1, 'optiona'),
(145, 15, 9, 1, 'optionb'),
(145, 15, 10, 1, 'optiona'),
(145, 15, 11, 1, 'optiond'),
(145, 15, 12, 1, 'optionc'),
(145, 15, 13, 1, 'optionb'),
(145, 15, 14, 1, 'optionc'),
(145, 15, 15, 1, 'optiond'),
(145, 15, 16, -0.33, 'optiona'),
(145, 15, 17, 1, 'optionb'),
(145, 15, 18, 1, 'optionb'),
(145, 15, 19, 1, 'optionc'),
(145, 15, 20, 1, 'optionb'),
(145, 15, 21, 1, 'optiona'),
(145, 15, 22, 1, 'optionb'),
(145, 15, 23, 1, 'optiona'),
(145, 15, 24, 1, 'optiona'),
(145, 15, 25, 1, 'optiond'),
(145, 15, 26, 2, 'optiona'),
(145, 15, 27, 2, 'optiona'),
(145, 15, 28, 2, 'optiond'),
(145, 15, 29, 2, 'optiond'),
(145, 15, 30, 2, 'optionb'),
(145, 15, 31, 2, 'optiona'),
(145, 15, 32, 2, 'optiona'),
(145, 15, 33, -0.66, 'optionb'),
(145, 15, 35, 2, 'optionc'),
(145, 15, 36, 2, 'optiond'),
(145, 15, 37, 2, 'optionb'),
(145, 15, 38, 2, 'optionc'),
(145, 15, 39, -0.66, 'optionc'),
(145, 15, 40, 2, 'optiond'),
(145, 15, 41, 2, 'optionc'),
(145, 15, 42, 2, 'optiona'),
(145, 15, 43, 2, 'optiona'),
(145, 15, 44, 2, 'optiond'),
(145, 15, 45, 2, 'optiona'),
(145, 15, 47, 2, 'optiond'),
(145, 15, 48, 2, 'optionc'),
(145, 15, 49, 2, 'optionc'),
(145, 15, 50, 2, 'optiond'),
(145, 15, 51, -0.66, 'optionc'),
(145, 15, 52, 2, 'optionc'),
(145, 15, 53, 2, 'optionc'),
(145, 15, 54, 2, 'optionc'),
(145, 15, 55, 2, 'optionb'),
(145, 15, 56, 1, 'optionc'),
(145, 15, 57, 1, 'optionb'),
(145, 15, 58, 1, 'optiond'),
(145, 15, 59, 1, 'optiond'),
(145, 15, 60, 1, 'optiona'),
(145, 15, 61, -0.66, 'optiona'),
(145, 15, 62, 2, 'optionb'),
(145, 15, 63, 2, 'optiond'),
(145, 15, 64, -0.66, 'optionc'),
(145, 16, 1, 1, 'optionc'),
(145, 16, 3, 1, 'optiond'),
(145, 16, 6, -0.33, 'optionc'),
(145, 16, 8, 1, 'optiona'),
(145, 16, 9, 1, 'optionc'),
(145, 16, 10, 1, 'optionc'),
(145, 16, 11, -0.33, 'optiona'),
(145, 16, 12, -0.33, 'optionc'),
(145, 16, 13, 1, 'optionb'),
(145, 16, 14, 1, 'optiond'),
(145, 16, 15, 1, 'optionc'),
(145, 16, 16, 1, 'optiond'),
(145, 16, 17, -0.33, 'optiond'),
(145, 16, 19, 1, 'optiond'),
(145, 16, 21, -0.33, 'optiona'),
(145, 16, 22, 1, 'optionb'),
(145, 16, 23, 1, 'optionc'),
(145, 16, 25, -0.33, 'optiona'),
(145, 16, 27, 2, 'optionb'),
(145, 16, 28, 2, 'optiond'),
(145, 16, 29, 2, 'optiond'),
(145, 16, 30, 2, 'optiond'),
(145, 16, 31, 2, 'optiond'),
(145, 16, 33, 2, 'optiond'),
(145, 16, 35, -0.66, 'optiona'),
(145, 16, 37, 2, 'optionb'),
(145, 16, 40, 2, 'optiona'),
(145, 16, 42, -0.66, 'optiond'),
(145, 16, 43, 2, 'optiona'),
(145, 16, 44, 2, 'optiond'),
(145, 16, 45, 2, 'optiona'),
(145, 16, 48, -0.66, 'optiond'),
(145, 16, 49, 2, 'optionc'),
(145, 16, 50, 2, 'optiona'),
(145, 16, 51, 2, 'optiona'),
(145, 16, 53, 2, 'optionb'),
(145, 16, 60, 1, 'optionc'),
(145, 16, 61, 2, 'optionb'),
(145, 16, 62, 2, 'optiond'),
(145, 16, 64, 2, 'optionb'),
(145, 16, 65, 2, 'optiona'),
(145, 17, 1, -0.33, 'optionb'),
(145, 17, 2, 1, 'optionb'),
(145, 17, 3, -0.33, 'optiond'),
(145, 17, 4, -0.33, 'optiona'),
(145, 17, 5, 1, 'optionc'),
(145, 17, 7, 1, 'optionc'),
(145, 17, 8, 1, 'optiona'),
(145, 17, 9, 1, 'optionb'),
(145, 17, 10, 1, 'optiona'),
(145, 17, 11, -0.33, 'optionb'),
(145, 17, 12, -0.33, 'optionc'),
(145, 17, 13, 1, 'optionb'),
(145, 17, 14, 1, 'optionc'),
(145, 17, 15, -0.33, 'optiond'),
(145, 17, 18, 1, 'optionb'),
(145, 17, 19, 1, 'optionb'),
(145, 17, 20, -0.33, 'optionb'),
(145, 17, 21, 1, 'optionc'),
(145, 17, 22, 1, 'optionb'),
(145, 17, 23, 1, 'optiond'),
(145, 17, 25, -0.33, 'optionc'),
(145, 17, 26, 2, 'optionc'),
(145, 17, 27, -0.66, 'optiond'),
(145, 17, 28, 2, 'optiond'),
(145, 17, 30, 2, 'optiona'),
(145, 17, 31, 2, 'optiond'),
(145, 17, 32, 2, 'optiona'),
(145, 17, 33, 2, 'optiona'),
(145, 17, 35, -0.66, 'optiond'),
(145, 17, 37, 2, 'optionc'),
(145, 17, 38, 2, 'optionc'),
(145, 17, 42, 2, 'optionb'),
(145, 17, 44, 2, 'optionb'),
(145, 17, 45, 2, 'optionb'),
(145, 17, 47, -0.66, 'optionb'),
(145, 17, 48, 2, 'optiond'),
(145, 17, 49, 2, 'optionb'),
(145, 17, 50, 2, 'optiond'),
(145, 17, 52, 2, 'optiond'),
(145, 17, 53, 2, 'optiona'),
(145, 17, 54, 2, 'optiond'),
(145, 17, 55, 2, 'optiona'),
(145, 17, 57, -0.33, 'optiond'),
(145, 17, 58, 1, 'optionc'),
(145, 17, 59, -0.33, 'optionc'),
(145, 17, 60, 1, 'optiond'),
(145, 17, 61, 2, 'optionb'),
(145, 17, 62, 2, 'optionc'),
(145, 17, 63, 2, 'optiona'),
(145, 17, 65, 2, 'optiond'),
(145, 18, 1, -0.33, 'optionc'),
(145, 18, 2, 1, 'optiond'),
(145, 18, 3, 1, 'optionb'),
(145, 18, 4, 1, 'optiona'),
(145, 18, 5, 1, 'optiond'),
(145, 18, 6, 1, 'optionc'),
(145, 18, 7, 1, 'optionb'),
(145, 18, 8, 1, 'optionb'),
(145, 18, 9, -0.33, 'optiona'),
(145, 18, 10, -0.33, 'optiond'),
(145, 18, 11, 1, 'optionb'),
(145, 18, 12, 1, 'optiona'),
(145, 18, 14, 1, 'optionc'),
(145, 18, 15, 1, 'optionc'),
(145, 18, 16, 1, 'optionc'),
(145, 18, 17, 1, 'optionb'),
(145, 18, 18, 1, 'optiona'),
(145, 18, 19, 1, 'optionc'),
(145, 18, 20, 1, 'optionb'),
(145, 18, 21, 1, 'optiond'),
(145, 18, 22, 1, 'optiond'),
(145, 18, 23, 1, 'optiond'),
(145, 18, 24, 1, 'optionc'),
(145, 18, 25, 1, 'optionc'),
(145, 18, 26, 2, 'optionb'),
(145, 18, 27, 2, 'optiond'),
(145, 18, 28, 2, 'optiona'),
(145, 18, 29, 2, 'optiond'),
(145, 18, 30, 2, 'optionc'),
(145, 18, 31, 2, 'optiona'),
(145, 18, 32, 2, 'optionb'),
(145, 18, 33, 2, 'optiond'),
(145, 18, 35, 2, 'optiond'),
(145, 18, 36, 2, 'optiona'),
(145, 18, 37, 2, 'optionc'),
(145, 18, 38, 2, 'optionb'),
(145, 18, 42, 2, 'optionb'),
(145, 18, 43, -0.66, 'optionc'),
(145, 18, 45, -0.66, 'optionc'),
(145, 18, 47, 2, 'optiond'),
(145, 18, 48, 2, 'optionb'),
(145, 18, 49, 2, 'optionc'),
(145, 18, 50, 2, 'optionc'),
(145, 18, 51, -0.66, 'optionc'),
(145, 18, 53, -0.66, 'optiond'),
(145, 18, 54, 2, 'optiona'),
(145, 18, 56, 1, 'optione'),
(145, 18, 57, 1, 'optionb'),
(145, 18, 58, 1, 'optionc'),
(145, 18, 59, 1, 'optionc'),
(145, 18, 60, 1, 'optiona'),
(145, 18, 61, 2, 'optionb'),
(145, 18, 62, 2, 'optiond'),
(145, 18, 64, 2, 'optionb'),
(145, 18, 65, 2, 'optiond'),
(146, 9, 1, 2, 'optionc'),
(146, 9, 2, 2, 'optionb'),
(146, 9, 3, 2, 'optiona'),
(146, 9, 4, 2, 'optiona'),
(146, 9, 5, 2, 'optiond'),
(146, 9, 6, -0.66, 'optionb'),
(146, 9, 7, -0.66, 'optionb'),
(146, 9, 8, 2, 'optionb'),
(146, 9, 9, 2, 'optionb'),
(146, 9, 10, 2, 'optionc'),
(146, 9, 11, 2, 'optiona'),
(146, 9, 12, 2, 'optiona'),
(146, 9, 13, 2, 'optiond'),
(146, 9, 14, 2, 'optionb'),
(146, 9, 15, 2, 'optiona'),
(146, 9, 16, -0.66, 'optionb'),
(146, 9, 17, 2, 'optionb'),
(146, 9, 18, 2, 'optionb'),
(146, 9, 19, 2, 'optionc'),
(146, 9, 21, 2, 'optionc'),
(146, 9, 25, 2, 'optiond'),
(146, 9, 26, 2, 'optionc'),
(146, 9, 28, -0.66, 'optionc'),
(146, 9, 29, 2, 'optionc'),
(146, 9, 30, -0.66, 'optiona'),
(146, 9, 39, 2, 'optiond'),
(146, 9, 41, -0.66, 'optionc'),
(146, 9, 42, 2, 'optionb'),
(146, 9, 48, -0.66, 'optiona'),
(146, 9, 49, -0.66, 'optiona'),
(146, 9, 50, 2, 'optionb'),
(146, 9, 51, 2, 'optionb'),
(146, 9, 52, 2, 'optionb'),
(146, 9, 53, -0.66, 'optionb'),
(146, 9, 54, 2, 'optione'),
(146, 9, 55, -0.66, 'optiond'),
(148, 9, 2, -0.66, 'optiond'),
(148, 9, 4, 2, 'optiona'),
(148, 9, 5, -0.66, 'optionc'),
(148, 9, 6, 2, 'optiond'),
(148, 9, 10, 2, 'optionc'),
(148, 9, 11, 2, 'optiona'),
(148, 9, 12, 2, 'optiona'),
(148, 12, 2, 2, 'optionc'),
(148, 12, 3, -0.66, 'optionc'),
(148, 12, 4, -0.66, 'optiona'),
(148, 12, 5, 2, 'optiona'),
(148, 12, 6, -0.66, 'optionb'),
(148, 12, 7, 2, 'optionb'),
(148, 12, 8, 2, 'optionb'),
(148, 12, 9, -0.66, 'optionc'),
(148, 12, 12, 2, 'optionb'),
(148, 12, 15, 2, 'optiond'),
(148, 12, 16, 2, 'optionc'),
(148, 12, 17, -0.66, 'optionb'),
(148, 12, 18, -0.66, 'optionc'),
(148, 12, 19, 2, 'optionb'),
(148, 12, 20, 2, 'optionb'),
(148, 12, 21, 2, 'optiona'),
(148, 12, 22, 2, 'optiond'),
(148, 12, 23, -0.66, 'optiona'),
(148, 12, 24, 2, 'optiona'),
(148, 12, 25, -0.66, 'optiona'),
(148, 12, 26, 2, 'optionb'),
(148, 12, 28, -0.66, 'optionc'),
(148, 12, 29, -0.66, 'optiond'),
(148, 12, 30, 2, 'optionb'),
(148, 12, 31, -0.66, 'optionb'),
(148, 12, 32, 2, 'optionc'),
(148, 12, 34, -0.66, 'optionb'),
(148, 12, 35, -0.66, 'optionc'),
(148, 12, 36, -0.66, 'optionb'),
(148, 12, 37, 2, 'optiona'),
(148, 12, 38, 2, 'optionc'),
(148, 12, 39, -0.66, 'optione'),
(148, 12, 40, 2, 'optiona'),
(148, 12, 41, -0.66, 'optiond'),
(148, 12, 43, -0.66, 'optionc'),
(148, 12, 45, 2, 'optiond'),
(148, 12, 46, 2, 'optiond'),
(148, 12, 48, 2, 'optiona'),
(149, 10, 1, 2, 'optione'),
(149, 10, 2, 2, 'optionb'),
(149, 10, 3, -0.66, 'optione'),
(149, 10, 4, -0.66, 'optiona'),
(149, 10, 5, -0.66, 'optionc'),
(149, 10, 6, 2, 'optionb'),
(149, 10, 7, -0.66, 'optionb'),
(149, 10, 8, -0.66, 'optionb'),
(149, 10, 9, -0.66, 'optione'),
(149, 10, 10, 2, 'optiond'),
(149, 10, 11, 2, 'optionc'),
(149, 10, 12, -0.66, 'optione'),
(149, 10, 13, 2, 'optionc'),
(149, 10, 14, 2, 'optionb'),
(149, 10, 15, 2, 'optiond'),
(149, 10, 16, 2, 'optiona'),
(149, 10, 17, -0.66, 'optiond'),
(149, 10, 18, -0.66, 'optionc'),
(149, 10, 19, -0.66, 'optionc'),
(149, 10, 21, 2, 'optionb'),
(149, 10, 22, -0.66, 'optiona'),
(149, 10, 23, -0.66, 'optionc'),
(149, 10, 24, -0.66, 'optionc'),
(149, 13, 1, -0.66, 'optiond'),
(149, 13, 3, -0.66, 'optiond'),
(149, 13, 6, -0.66, 'optiona'),
(149, 13, 8, 2, 'optionc'),
(149, 13, 10, 2, 'optione'),
(149, 13, 11, 2, 'optiond'),
(149, 13, 12, -0.66, 'optiond'),
(149, 13, 14, -0.66, 'optione'),
(149, 13, 18, -0.66, 'optiond'),
(149, 13, 19, -0.66, 'optiona'),
(149, 13, 24, 2, 'optionc'),
(149, 13, 25, 2, 'optiona'),
(149, 13, 26, -0.66, 'optionb'),
(149, 13, 27, 2, 'optiond'),
(149, 13, 28, 2, 'optionc'),
(149, 13, 30, 2, 'optiona'),
(149, 13, 31, 2, 'optiond'),
(149, 13, 32, -0.66, 'optiond'),
(149, 13, 33, 2, 'optionb'),
(149, 13, 36, 2, 'optionc'),
(149, 13, 37, -0.66, 'optiond'),
(149, 13, 38, -0.66, 'optiona'),
(149, 13, 39, 2, 'optiona'),
(149, 13, 40, 2, 'optiond'),
(149, 18, 2, 1, 'optiond'),
(149, 18, 3, 1, 'optionb'),
(149, 18, 6, 1, 'optionc'),
(149, 18, 7, -0.33, 'optionc'),
(149, 18, 11, 1, 'optionb'),
(149, 18, 12, 1, 'optiona'),
(149, 18, 15, -0.33, 'optiona'),
(149, 18, 22, 1, 'optiond'),
(149, 18, 24, 1, 'optionc'),
(149, 18, 25, 1, 'optionc'),
(149, 18, 27, -0.66, 'optionc'),
(149, 18, 36, 2, 'optiona'),
(149, 18, 37, -0.66, 'optiona'),
(149, 18, 42, 2, 'optionb'),
(149, 18, 47, -0.66, 'optionb'),
(149, 18, 57, -0.33, 'optiond'),
(149, 18, 60, 1, 'optiona'),
(149, 18, 61, 2, 'optionb'),
(150, 7, 1, 1, 'optionc'),
(150, 7, 3, 1, 'optionb'),
(150, 7, 4, 1, 'optiond'),
(150, 7, 7, -0.33, 'optionc'),
(150, 7, 8, -0.33, 'optionc'),
(150, 7, 9, 1, 'optiona'),
(150, 7, 10, 1, 'optionc'),
(150, 7, 11, 1, 'optiona'),
(150, 7, 13, -0.33, 'optionb'),
(150, 7, 14, 1, 'optionc'),
(150, 7, 15, 1, 'optionb'),
(150, 7, 16, 1, 'optiona'),
(150, 7, 17, 1, 'optionc'),
(150, 7, 18, 1, 'optiona'),
(150, 7, 19, 1, 'optiond'),
(150, 7, 20, 1, 'optiona'),
(150, 7, 21, -0.33, 'optionc'),
(150, 7, 22, 1, 'optiond'),
(150, 7, 23, -0.33, 'optionb'),
(150, 7, 24, 1, 'optiona'),
(150, 7, 26, -0.66, 'optiond'),
(150, 7, 30, -0.66, 'optiond'),
(150, 7, 31, -0.66, 'optionb'),
(150, 7, 35, 2, 'optionc'),
(150, 7, 36, -0.66, 'optione'),
(150, 7, 37, 2, 'optione'),
(150, 7, 38, 2, 'optiona'),
(150, 7, 39, -0.66, 'optiond'),
(150, 7, 40, 2, 'optionb'),
(150, 7, 41, 2, 'optionc'),
(150, 7, 42, 2, 'optionc'),
(150, 7, 44, -0.66, 'optiona'),
(150, 7, 45, 2, 'optiond'),
(150, 7, 48, 2, 'optionb'),
(150, 7, 49, -0.66, 'optiona'),
(150, 7, 52, 2, 'optiona'),
(150, 7, 53, 2, 'optionb'),
(150, 7, 54, -0.66, 'optionb'),
(150, 7, 56, 1, 'optiona'),
(150, 7, 58, 1, 'optionb'),
(150, 7, 59, 1, 'optiond'),
(150, 7, 60, 1, 'optionc'),
(150, 7, 61, 2, 'optionb'),
(150, 7, 62, 2, 'optionc'),
(150, 7, 63, 2, 'optiond'),
(150, 7, 65, -0.66, 'optiona'),
(150, 10, 1, 2, 'optione'),
(150, 10, 2, 2, 'optionb'),
(150, 10, 3, -0.66, 'optionc'),
(150, 10, 4, 2, 'optionc'),
(150, 10, 5, -0.66, 'optiona'),
(150, 10, 6, 2, 'optionb'),
(150, 10, 7, -0.66, 'optiond'),
(150, 10, 8, 2, 'optione'),
(150, 10, 9, 2, 'optionc'),
(150, 10, 10, 2, 'optiond'),
(150, 10, 11, 2, 'optionc'),
(150, 10, 12, 2, 'optionb'),
(150, 10, 13, -0.66, 'optione'),
(150, 10, 14, 2, 'optionb'),
(150, 10, 15, -0.66, 'optionb'),
(150, 10, 16, 2, 'optiona'),
(150, 10, 17, -0.66, 'optiond'),
(150, 10, 18, -0.66, 'optiond'),
(150, 10, 19, 2, 'optiona'),
(150, 10, 21, 2, 'optionb'),
(150, 10, 22, 2, 'optionb'),
(150, 10, 23, -0.66, 'optionc'),
(150, 11, 1, 2, 'optionb'),
(150, 11, 2, 2, 'optionc'),
(150, 11, 3, 2, 'optiona'),
(150, 11, 4, 2, 'optiond'),
(150, 11, 5, 2, 'optionb'),
(150, 11, 6, -0.66, 'optionc'),
(150, 11, 7, 2, 'optionb'),
(150, 11, 8, 2, 'optiona'),
(150, 11, 9, 2, 'optionc'),
(150, 11, 11, 2, 'optiona'),
(150, 11, 12, 2, 'optiona'),
(150, 11, 15, -0.66, 'optiona'),
(150, 11, 17, -0.66, 'optiond'),
(150, 11, 18, 2, 'optionb'),
(150, 11, 21, 2, 'optionc'),
(150, 11, 22, 2, 'optiona'),
(150, 11, 24, 2, 'optiona'),
(150, 11, 25, 2, 'optionb'),
(150, 11, 27, 2, 'optione'),
(150, 11, 28, 2, 'optiona'),
(150, 11, 29, 2, 'optiond'),
(150, 11, 30, 2, 'optiond'),
(150, 11, 31, 2, 'optione'),
(150, 11, 32, -0.66, 'optione'),
(150, 11, 33, -0.66, 'optione'),
(150, 11, 35, 2, 'optiond'),
(150, 11, 36, 2, 'optione'),
(150, 11, 37, 2, 'optionb'),
(150, 11, 38, 2, 'optiona'),
(150, 11, 39, 2, 'optiona'),
(150, 11, 40, 2, 'optiond'),
(150, 11, 41, 2, 'optionc'),
(150, 11, 43, -0.66, 'optionb'),
(150, 11, 44, 2, 'optionb'),
(150, 11, 46, 2, 'optiona'),
(150, 11, 48, -0.66, 'optionc'),
(150, 11, 49, -0.66, 'optione'),
(150, 11, 50, -0.66, 'optiona'),
(150, 11, 51, -0.66, 'optionc'),
(150, 11, 52, -0.66, 'optionc'),
(150, 11, 53, -0.66, 'optione'),
(150, 11, 55, -0.66, 'optiona'),
(150, 11, 56, 2, 'optione'),
(150, 11, 57, -0.66, 'optiona'),
(150, 11, 58, -0.66, 'optionb'),
(150, 12, 1, 2, 'optionc'),
(150, 12, 2, 2, 'optionc'),
(150, 12, 3, -0.66, 'optionb'),
(150, 12, 4, -0.66, 'optiona'),
(150, 12, 6, -0.66, 'optiona'),
(150, 12, 7, 2, 'optionb'),
(150, 12, 8, 2, 'optionb'),
(150, 12, 9, 2, 'optiona'),
(150, 12, 11, -0.66, 'optionc'),
(150, 12, 12, 2, 'optionb'),
(150, 12, 13, -0.66, 'optiond'),
(150, 12, 14, -0.66, 'optionc'),
(150, 12, 15, -0.66, 'optiona'),
(150, 12, 16, 2, 'optionc'),
(150, 12, 19, 2, 'optionb'),
(150, 12, 22, 2, 'optiond'),
(150, 12, 26, 2, 'optionb'),
(150, 12, 29, 2, 'optiona'),
(150, 12, 30, 2, 'optionb'),
(150, 12, 34, -0.66, 'optionb'),
(150, 12, 36, 2, 'optionc'),
(150, 12, 37, -0.66, 'optionb'),
(150, 12, 38, 2, 'optionc'),
(150, 12, 40, 2, 'optiona'),
(150, 12, 41, 2, 'optionb'),
(150, 12, 42, 2, 'optiona'),
(150, 12, 43, 2, 'optiond'),
(150, 12, 44, -0.66, 'optionc'),
(150, 12, 45, 2, 'optiond'),
(150, 12, 47, 2, 'optionc'),
(150, 12, 48, -0.66, 'optiond'),
(150, 12, 50, 2, 'optionb'),
(150, 12, 51, 2, 'optionc'),
(150, 12, 52, 2, 'optionb'),
(150, 12, 53, -0.66, 'optionb'),
(151, 7, 1, 1, 'optionc'),
(151, 7, 3, -0.33, 'optiond'),
(151, 7, 4, 1, 'optiond'),
(151, 7, 5, -0.33, 'optionc'),
(151, 7, 6, -0.33, 'optiona'),
(151, 7, 7, -0.33, 'optionc'),
(151, 7, 8, -0.33, 'optionc'),
(151, 7, 9, 1, 'optiona'),
(151, 7, 10, 1, 'optionc'),
(151, 7, 11, 1, 'optiona'),
(151, 7, 12, -0.33, 'optiona'),
(151, 7, 13, -0.33, 'optionb'),
(151, 7, 14, 1, 'optionc'),
(151, 7, 15, 1, 'optionb'),
(151, 7, 16, -0.33, 'optionb'),
(151, 7, 17, 1, 'optionc'),
(151, 7, 18, -0.33, 'optionb'),
(151, 7, 19, 1, 'optiond'),
(151, 7, 20, 1, 'optiona'),
(151, 7, 22, 1, 'optiond'),
(151, 7, 23, -0.33, 'optionb'),
(151, 7, 24, 1, 'optiona'),
(151, 7, 28, -0.66, 'optiond'),
(151, 7, 29, -0.66, 'optiona'),
(151, 7, 31, -0.66, 'optionc'),
(151, 7, 36, -0.66, 'optione'),
(151, 7, 38, 2, 'optiona'),
(151, 7, 39, -0.66, 'optiond'),
(151, 7, 40, 2, 'optionb'),
(151, 7, 41, 2, 'optionc'),
(151, 7, 42, 2, 'optionc'),
(151, 7, 43, 2, 'optionb'),
(151, 7, 44, 2, 'optionb'),
(151, 7, 46, -0.66, 'optionb'),
(151, 7, 47, 2, 'optionb'),
(151, 7, 48, 2, 'optionb'),
(151, 7, 49, -0.66, 'optiona'),
(151, 7, 52, -0.66, 'optionb'),
(151, 7, 53, -0.66, 'optionc'),
(151, 7, 54, 2, 'optiond'),
(151, 7, 56, 1, 'optiona'),
(151, 7, 57, 1, 'optionc'),
(151, 7, 58, 1, 'optionb'),
(151, 7, 59, 1, 'optiond'),
(151, 7, 60, -0.33, 'optiona'),
(151, 7, 62, 2, 'optionc'),
(151, 7, 63, 2, 'optiond'),
(151, 7, 65, 2, 'optionb'),
(151, 10, 1, 2, 'optione'),
(151, 10, 2, 2, 'optionb'),
(151, 10, 3, -0.66, 'optiona'),
(151, 10, 4, 2, 'optionc'),
(151, 10, 5, -0.66, 'optiona'),
(151, 10, 6, 2, 'optionb'),
(151, 10, 7, 2, 'optiona'),
(151, 10, 8, -0.66, 'optiond'),
(151, 10, 9, 2, 'optionc'),
(151, 10, 10, 2, 'optiond'),
(151, 10, 11, 2, 'optionc'),
(151, 10, 12, 2, 'optionb'),
(151, 10, 13, -0.66, 'optione'),
(151, 10, 14, 2, 'optionb'),
(151, 10, 15, 2, 'optiond'),
(151, 10, 16, 2, 'optiona'),
(151, 10, 17, -0.66, 'optiond'),
(151, 10, 18, 2, 'optiona'),
(151, 10, 19, 2, 'optiona'),
(151, 10, 21, 2, 'optionb'),
(151, 10, 23, -0.66, 'optionc'),
(151, 11, 1, 2, 'optionb'),
(151, 11, 3, -0.66, 'optionc'),
(151, 11, 4, 2, 'optiond'),
(151, 11, 5, 2, 'optionb'),
(151, 11, 6, 2, 'optionb'),
(151, 11, 7, 2, 'optionb'),
(151, 11, 8, 2, 'optiona'),
(151, 11, 9, 2, 'optionc'),
(151, 11, 10, -0.66, 'optionc'),
(151, 11, 11, -0.66, 'optiond'),
(151, 11, 12, 2, 'optiona'),
(151, 11, 13, 2, 'optionb'),
(151, 11, 14, -0.66, 'optiond'),
(151, 11, 15, 2, 'optionc'),
(151, 11, 16, 2, 'optionb'),
(151, 11, 17, 2, 'optiona'),
(151, 11, 18, 2, 'optionb'),
(151, 11, 21, 2, 'optionc'),
(151, 11, 22, 2, 'optiona'),
(151, 11, 23, 2, 'optionc'),
(151, 11, 25, 2, 'optionb'),
(151, 11, 27, 2, 'optione'),
(151, 11, 28, 2, 'optiona'),
(151, 11, 29, 2, 'optiond'),
(151, 11, 30, 2, 'optiond'),
(151, 11, 31, 2, 'optione'),
(151, 11, 32, -0.66, 'optione'),
(151, 11, 33, -0.66, 'optione'),
(151, 11, 35, 2, 'optiond'),
(151, 11, 36, 2, 'optione'),
(151, 11, 37, 2, 'optionb'),
(151, 11, 38, 2, 'optiona'),
(151, 11, 39, 2, 'optiona'),
(151, 11, 40, 2, 'optiond'),
(151, 11, 41, 2, 'optionc'),
(151, 11, 42, -0.66, 'optiona'),
(151, 11, 43, -0.66, 'optionb'),
(151, 11, 46, 2, 'optiona'),
(151, 11, 47, -0.66, 'optionb'),
(151, 11, 48, 2, 'optiond'),
(151, 11, 51, -0.66, 'optionc'),
(151, 11, 52, -0.66, 'optionc'),
(151, 11, 53, 2, 'optionc'),
(151, 11, 54, -0.66, 'optione'),
(151, 11, 55, -0.66, 'optiona'),
(151, 11, 56, 2, 'optione'),
(151, 11, 57, 2, 'optionc'),
(151, 11, 58, 2, 'optione'),
(151, 12, 2, -0.66, 'optiona'),
(151, 12, 3, -0.66, 'optionb'),
(151, 12, 5, 2, 'optiona'),
(151, 12, 7, -0.66, 'optiond'),
(151, 12, 9, 2, 'optiona'),
(151, 12, 10, -0.66, 'optionc'),
(151, 12, 12, -0.66, 'optiona'),
(151, 12, 14, 2, 'optiona'),
(151, 12, 15, 2, 'optiond'),
(151, 12, 16, -0.66, 'optiona'),
(151, 12, 17, -0.66, 'optionb'),
(151, 12, 18, -0.66, 'optiona'),
(151, 12, 19, 2, 'optionb'),
(151, 12, 20, -0.66, 'optiond'),
(151, 12, 23, 2, 'optionb'),
(151, 12, 26, -0.66, 'optiond'),
(151, 12, 27, -0.66, 'optiond'),
(151, 12, 38, 2, 'optionc'),
(151, 12, 40, -0.66, 'optionc'),
(151, 12, 41, -0.66, 'optiona'),
(151, 12, 42, 2, 'optiona'),
(151, 12, 43, -0.66, 'optionc'),
(151, 12, 45, 2, 'optiond'),
(151, 12, 46, 2, 'optiond'),
(151, 12, 48, -0.66, 'optionb'),
(151, 12, 51, 2, 'optionc'),
(151, 12, 52, 2, 'optionb'),
(151, 12, 53, 2, 'optiona'),
(151, 13, 1, -0.66, 'optiond'),
(151, 13, 3, -0.66, 'optionb'),
(151, 13, 5, 2, 'optionc'),
(151, 13, 6, -0.66, 'optiona'),
(151, 13, 8, 2, 'optionc'),
(151, 13, 10, -0.66, 'optiona'),
(151, 13, 11, 2, 'optiond'),
(151, 13, 12, -0.66, 'optionc'),
(151, 13, 13, -0.66, 'optione'),
(151, 13, 14, 2, 'optionb'),
(151, 13, 18, -0.66, 'optione'),
(151, 13, 19, 2, 'optionb'),
(151, 13, 22, -0.66, 'optionc'),
(151, 13, 24, 2, 'optionc'),
(151, 13, 25, 2, 'optiona'),
(151, 13, 26, 2, 'optiond'),
(151, 13, 27, 2, 'optiond'),
(151, 13, 28, 2, 'optionc'),
(151, 13, 29, -0.66, 'optiona'),
(151, 13, 30, 2, 'optiona'),
(151, 13, 31, 2, 'optiond'),
(151, 13, 32, -0.66, 'optionc'),
(151, 13, 34, 2, 'optiona'),
(151, 13, 35, -0.66, 'optionb'),
(151, 13, 36, 2, 'optionc'),
(151, 13, 37, -0.66, 'optionc'),
(151, 13, 38, 2, 'optionb'),
(151, 13, 39, 2, 'optiona'),
(151, 13, 40, 2, 'optiond'),
(152, 7, 1, 1, 'optionc'),
(152, 7, 2, -0.33, 'optionc'),
(152, 7, 3, -0.33, 'optionc'),
(152, 7, 4, 1, 'optiond'),
(152, 7, 5, -0.33, 'optionc'),
(152, 7, 7, 1, 'optionb'),
(152, 7, 8, -0.33, 'optiona'),
(152, 7, 10, 1, 'optionc'),
(152, 7, 11, 1, 'optiona'),
(152, 7, 15, 1, 'optionb'),
(152, 7, 16, -0.33, 'optionb'),
(152, 7, 17, 1, 'optionc'),
(152, 7, 18, -0.33, 'optiond'),
(152, 7, 19, 1, 'optiond'),
(152, 7, 21, 1, 'optiond'),
(152, 7, 22, -0.33, 'optionb'),
(152, 7, 23, 1, 'optiond'),
(152, 7, 24, 1, 'optiona'),
(152, 7, 26, 2, 'optiona'),
(152, 7, 28, 2, 'optiona'),
(152, 7, 31, 2, 'optiona'),
(152, 7, 34, -0.66, 'optionc'),
(152, 7, 35, 2, 'optionc'),
(152, 7, 36, 2, 'optionc'),
(152, 7, 38, -0.66, 'optionc'),
(152, 7, 39, -0.66, 'optiond'),
(152, 7, 40, 2, 'optionb'),
(152, 7, 41, -0.66, 'optiona'),
(152, 7, 42, 2, 'optionc'),
(152, 7, 43, 2, 'optionb'),
(152, 7, 44, 2, 'optionb'),
(152, 7, 45, 2, 'optiond'),
(152, 7, 47, 2, 'optionb'),
(152, 7, 52, -0.66, 'optionb'),
(152, 7, 53, -0.66, 'optiona'),
(152, 7, 54, 2, 'optiond'),
(152, 7, 55, -0.66, 'optiond'),
(152, 7, 56, -0.33, 'optiona'),
(152, 7, 62, 2, 'optionc'),
(152, 7, 63, -0.66, 'optiona'),
(152, 7, 64, 2, 'optionc'),
(152, 10, 1, -0.66, 'optionc'),
(152, 10, 2, 2, 'optionb'),
(152, 10, 3, -0.66, 'optione'),
(152, 10, 9, -0.66, 'optiona'),
(152, 10, 10, -0.66, 'optionc'),
(152, 10, 11, 2, 'optionc'),
(152, 10, 12, -0.66, 'optiond'),
(152, 10, 13, 2, 'optionc'),
(152, 10, 14, 2, 'optionb'),
(152, 10, 15, -0.66, 'optiona'),
(152, 10, 16, 2, 'optiona'),
(152, 10, 17, -0.66, 'optiona'),
(152, 10, 18, -0.66, 'optionb'),
(152, 10, 19, 2, 'optiona'),
(152, 10, 21, 2, 'optionb'),
(152, 10, 23, -0.66, 'optionc'),
(152, 11, 2, -0.66, 'optiond'),
(152, 11, 4, 2, 'optiond'),
(152, 11, 5, 2, 'optionb'),
(152, 11, 6, 2, 'optionb'),
(152, 11, 7, 2, 'optionb'),
(152, 11, 8, 2, 'optiona'),
(152, 11, 9, 2, 'optionc'),
(152, 11, 10, 2, 'optiona'),
(152, 11, 11, 2, 'optiona'),
(152, 11, 12, 2, 'optiona'),
(152, 11, 13, 2, 'optionb'),
(152, 11, 14, 2, 'optionc'),
(152, 11, 15, -0.66, 'optiona'),
(152, 11, 17, 2, 'optiona'),
(152, 11, 18, 2, 'optionb'),
(152, 11, 21, 2, 'optionc'),
(152, 11, 22, -0.66, 'optionc'),
(152, 11, 24, -0.66, 'optionc'),
(152, 11, 26, -0.66, 'optiona'),
(152, 11, 27, 2, 'optione'),
(152, 11, 32, -0.66, 'optionb'),
(152, 11, 33, -0.66, 'optione'),
(152, 11, 34, -0.66, 'optiona'),
(152, 11, 35, 2, 'optiond'),
(152, 11, 36, 2, 'optione'),
(152, 11, 37, 2, 'optionb'),
(152, 11, 38, 2, 'optiona'),
(152, 11, 41, 2, 'optionc'),
(152, 11, 44, -0.66, 'optionc'),
(152, 11, 46, 2, 'optiona'),
(152, 11, 49, -0.66, 'optione'),
(152, 11, 50, 2, 'optionc'),
(152, 11, 51, -0.66, 'optionc'),
(152, 11, 52, -0.66, 'optionc'),
(152, 11, 53, 2, 'optionc'),
(152, 11, 55, -0.66, 'optionc'),
(152, 11, 56, 2, 'optione'),
(152, 11, 57, 2, 'optionc'),
(152, 11, 58, 2, 'optione'),
(152, 13, 1, 2, 'optionc');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(152, 13, 2, 2, 'optionb'),
(152, 13, 3, -0.66, 'optiond'),
(152, 13, 5, -0.66, 'optiond'),
(152, 13, 6, -0.66, 'optiona'),
(152, 13, 8, 2, 'optionc'),
(152, 13, 11, 2, 'optiond'),
(152, 13, 12, -0.66, 'optionc'),
(152, 13, 13, -0.66, 'optiona'),
(152, 13, 20, -0.66, 'optiond'),
(152, 13, 22, -0.66, 'optionc'),
(152, 13, 24, -0.66, 'optiond'),
(152, 13, 25, 2, 'optiona'),
(152, 13, 26, -0.66, 'optionb'),
(152, 13, 27, 2, 'optiond'),
(152, 13, 28, 2, 'optionc'),
(152, 13, 29, 2, 'optionc'),
(152, 13, 30, 2, 'optiona'),
(152, 13, 32, 2, 'optiona'),
(152, 13, 35, -0.66, 'optiond'),
(152, 13, 36, 2, 'optionc'),
(152, 13, 38, 2, 'optionb'),
(152, 13, 39, 2, 'optiona'),
(152, 13, 40, 2, 'optiond'),
(152, 15, 2, 1, 'optiond'),
(152, 15, 4, 1, 'optiona'),
(152, 15, 6, 1, 'optiona'),
(152, 15, 7, -0.33, 'optionc'),
(152, 15, 8, 1, 'optiona'),
(152, 15, 9, 1, 'optionb'),
(152, 15, 11, 1, 'optiond'),
(152, 15, 12, -0.33, 'optionb'),
(152, 15, 13, 1, 'optionb'),
(152, 15, 14, -0.33, 'optionb'),
(152, 15, 15, 1, 'optiond'),
(152, 15, 16, 1, 'optiond'),
(152, 15, 17, 1, 'optionb'),
(152, 15, 18, -0.33, 'optiond'),
(152, 15, 19, 1, 'optionc'),
(152, 15, 20, 1, 'optionb'),
(152, 15, 21, 1, 'optiona'),
(152, 15, 22, 1, 'optionb'),
(152, 15, 23, 1, 'optiona'),
(152, 15, 24, 1, 'optiona'),
(152, 15, 25, 1, 'optiond'),
(152, 15, 26, 2, 'optiona'),
(152, 15, 27, 2, 'optiona'),
(152, 15, 28, -0.66, 'optionb'),
(152, 15, 29, 2, 'optiond'),
(152, 15, 30, 2, 'optionb'),
(152, 15, 31, -0.66, 'optiond'),
(152, 15, 32, 2, 'optiona'),
(152, 15, 33, -0.66, 'optionb'),
(152, 15, 36, 2, 'optiond'),
(152, 15, 37, 2, 'optionb'),
(152, 15, 39, 2, 'optionb'),
(152, 15, 40, -0.66, 'optiona'),
(152, 15, 43, 2, 'optiona'),
(152, 15, 45, 2, 'optiona'),
(152, 15, 47, 2, 'optiond'),
(152, 15, 48, 2, 'optionc'),
(152, 15, 49, -0.66, 'optiona'),
(152, 15, 50, 2, 'optiond'),
(152, 15, 51, -0.66, 'optionc'),
(152, 15, 52, 2, 'optionc'),
(152, 15, 54, 2, 'optionc'),
(152, 15, 55, 2, 'optionb'),
(152, 15, 57, -0.33, 'optiona'),
(152, 15, 58, 1, 'optiond'),
(152, 15, 59, 1, 'optiond'),
(152, 15, 60, -0.33, 'optionc'),
(152, 15, 61, -0.66, 'optiona'),
(152, 15, 63, 2, 'optiond'),
(152, 17, 1, 1, 'optiona'),
(152, 17, 2, 1, 'optionb'),
(152, 17, 3, 1, 'optionb'),
(152, 17, 4, -0.33, 'optiona'),
(152, 17, 5, 1, 'optionc'),
(152, 17, 6, 1, 'optiona'),
(152, 17, 8, -0.33, 'optionb'),
(152, 17, 9, -0.33, 'optiona'),
(152, 17, 10, -0.33, 'optionb'),
(152, 17, 11, -0.33, 'optionc'),
(152, 17, 12, -0.33, 'optionc'),
(152, 17, 14, 1, 'optionc'),
(152, 17, 18, 1, 'optionb'),
(152, 17, 19, -0.33, 'optiona'),
(152, 17, 21, 1, 'optionc'),
(152, 17, 22, 1, 'optionb'),
(152, 17, 23, 1, 'optiond'),
(152, 17, 25, -0.33, 'optiona'),
(152, 17, 26, 2, 'optionc'),
(152, 17, 28, -0.66, 'optionb'),
(152, 17, 29, 2, 'optiond'),
(152, 17, 30, -0.66, 'optiond'),
(152, 17, 32, 2, 'optiona'),
(152, 17, 33, -0.66, 'optiond'),
(152, 17, 38, -0.66, 'optiona'),
(152, 17, 41, 2, 'optionc'),
(152, 17, 45, 2, 'optionb'),
(152, 17, 50, -0.66, 'optionb'),
(152, 17, 52, 2, 'optiond'),
(152, 17, 53, -0.66, 'optiond'),
(152, 17, 54, -0.66, 'optiona'),
(152, 17, 55, 2, 'optiona'),
(152, 17, 57, -0.33, 'optiond'),
(152, 17, 64, -0.66, 'optiona'),
(152, 17, 65, 2, 'optiond'),
(153, 7, 1, 1, 'optionc'),
(153, 7, 3, -0.33, 'optiond'),
(153, 7, 4, 1, 'optiond'),
(153, 7, 5, 1, 'optionb'),
(153, 7, 6, -0.33, 'optiona'),
(153, 7, 7, -0.33, 'optionc'),
(153, 7, 8, 1, 'optionb'),
(153, 7, 9, 1, 'optiona'),
(153, 7, 10, 1, 'optionc'),
(153, 7, 11, 1, 'optiona'),
(153, 7, 13, 1, 'optionc'),
(153, 7, 14, 1, 'optionc'),
(153, 7, 15, 1, 'optionb'),
(153, 7, 16, 1, 'optiona'),
(153, 7, 17, 1, 'optionc'),
(153, 7, 19, 1, 'optiond'),
(153, 7, 22, 1, 'optiond'),
(153, 7, 23, 1, 'optiond'),
(153, 7, 24, 1, 'optiona'),
(153, 7, 25, -0.33, 'optionb'),
(153, 7, 26, 2, 'optiona'),
(153, 7, 27, -0.66, 'optionc'),
(153, 7, 29, -0.66, 'optionc'),
(153, 7, 30, -0.66, 'optionb'),
(153, 7, 31, 2, 'optiona'),
(153, 7, 32, -0.66, 'optionb'),
(153, 7, 33, 2, 'optiond'),
(153, 7, 34, -0.66, 'optiond'),
(153, 7, 35, 2, 'optionc'),
(153, 7, 36, 2, 'optionc'),
(153, 7, 38, -0.66, 'optione'),
(153, 7, 40, 2, 'optionb'),
(153, 7, 41, 2, 'optionc'),
(153, 7, 42, 2, 'optionc'),
(153, 7, 43, 2, 'optionb'),
(153, 7, 44, 2, 'optionb'),
(153, 7, 45, 2, 'optiond'),
(153, 7, 47, 2, 'optionb'),
(153, 7, 50, -0.66, 'optionb'),
(153, 7, 51, -0.66, 'optionc'),
(153, 7, 52, 2, 'optiona'),
(153, 7, 53, 2, 'optionb'),
(153, 7, 54, 2, 'optiond'),
(153, 7, 55, -0.66, 'optiond'),
(153, 7, 56, 1, 'optiona'),
(153, 7, 57, -0.33, 'optionb'),
(153, 7, 58, -0.33, 'optiond'),
(153, 7, 59, -0.33, 'optionc'),
(153, 7, 60, -0.33, 'optiond'),
(153, 7, 61, -0.66, 'optiona'),
(153, 7, 63, -0.66, 'optiona'),
(153, 7, 64, 2, 'optionc'),
(153, 7, 65, -0.66, 'optiond'),
(153, 8, 1, 1, 'optione'),
(153, 8, 2, 1, 'optiona'),
(153, 8, 3, 1, 'optionb'),
(153, 8, 5, 1, 'optionc'),
(153, 8, 6, 1, 'optiond'),
(153, 8, 8, -0.33, 'optiond'),
(153, 8, 9, 1, 'optiond'),
(153, 8, 10, 1, 'optionc'),
(153, 8, 11, 1, 'optiond'),
(153, 8, 12, 1, 'optiona'),
(153, 8, 13, 1, 'optionb'),
(153, 8, 14, -0.33, 'optiond'),
(153, 8, 15, 1, 'optionc'),
(153, 8, 16, 1, 'optionc'),
(153, 8, 17, -0.33, 'optionb'),
(153, 8, 18, -0.33, 'optionb'),
(153, 8, 19, -0.33, 'optionb'),
(153, 8, 20, -0.33, 'optiona'),
(153, 8, 21, -0.33, 'optiond'),
(153, 8, 22, -0.33, 'optiond'),
(153, 8, 23, 1, 'optiona'),
(153, 8, 24, -0.33, 'optiond'),
(153, 8, 25, -0.33, 'optione'),
(153, 8, 26, 1, 'optiond'),
(153, 8, 27, 1, 'optiond'),
(153, 8, 30, 1, 'optionc'),
(153, 8, 31, 1, 'optionc'),
(153, 8, 32, 1, 'optionb'),
(153, 8, 33, 1, 'optiona'),
(153, 8, 34, 1, 'optiond'),
(153, 8, 35, 1, 'optionc'),
(153, 8, 36, 1, 'optionc'),
(153, 8, 37, 1, 'optiond'),
(153, 8, 38, 1, 'optionb'),
(153, 8, 39, 1, 'optiond'),
(153, 8, 40, -0.33, 'optiona'),
(153, 8, 41, 1, 'optiona'),
(153, 8, 42, 1, 'optiond'),
(153, 8, 43, 1, 'optionb'),
(153, 8, 44, 1, 'optionb'),
(153, 8, 45, -0.33, 'optiona'),
(153, 9, 1, -0.66, 'optiona'),
(153, 9, 4, 2, 'optiona'),
(153, 9, 5, 2, 'optiond'),
(153, 9, 6, -0.66, 'optiona'),
(153, 9, 7, -0.66, 'optionb'),
(153, 9, 9, 2, 'optionb'),
(153, 9, 10, 2, 'optionc'),
(153, 9, 11, 2, 'optiona'),
(153, 9, 12, 2, 'optiona'),
(153, 9, 14, -0.66, 'optiond'),
(153, 9, 17, 2, 'optionb'),
(153, 9, 18, -0.66, 'optiona'),
(153, 9, 23, 2, 'optionc'),
(153, 9, 25, 2, 'optiond'),
(153, 9, 26, 2, 'optionc'),
(153, 9, 27, -0.66, 'optiona'),
(153, 9, 29, 2, 'optionc'),
(153, 9, 30, 2, 'optionb'),
(153, 9, 31, 2, 'optione'),
(153, 9, 32, 2, 'optionb'),
(153, 9, 35, 2, 'optionb'),
(153, 9, 37, 2, 'optionb'),
(153, 9, 42, -0.66, 'optiona'),
(153, 9, 43, -0.66, 'optiona'),
(153, 9, 44, 2, 'optionc'),
(153, 9, 47, -0.66, 'optionb'),
(153, 9, 48, -0.66, 'optiond'),
(153, 9, 49, 2, 'optionb'),
(153, 9, 50, 2, 'optionb'),
(153, 9, 51, 2, 'optionb'),
(153, 9, 53, -0.66, 'optionb'),
(153, 9, 54, -0.66, 'optionb'),
(153, 10, 1, 2, 'optione'),
(153, 10, 2, -0.66, 'optiona'),
(153, 10, 5, 2, 'optionb'),
(153, 10, 6, 2, 'optionb'),
(153, 10, 8, -0.66, 'optionb'),
(153, 10, 9, 2, 'optionc'),
(153, 10, 10, 2, 'optiond'),
(153, 10, 11, 2, 'optionc'),
(153, 10, 13, 2, 'optionc'),
(153, 10, 14, 2, 'optionb'),
(153, 10, 15, 2, 'optiond'),
(153, 10, 16, 2, 'optiona'),
(153, 10, 17, 2, 'optionb'),
(153, 10, 18, -0.66, 'optionc'),
(153, 10, 19, 2, 'optiona'),
(153, 10, 20, -0.66, 'optionb'),
(153, 10, 21, 2, 'optionb'),
(153, 10, 22, 2, 'optionb'),
(153, 10, 23, 2, 'optiond'),
(153, 10, 24, 2, 'optiona'),
(153, 12, 1, 2, 'optionc'),
(153, 12, 3, 2, 'optiond'),
(153, 12, 4, -0.66, 'optionb'),
(153, 12, 5, -0.66, 'optionb'),
(153, 12, 6, 2, 'optiond'),
(153, 12, 7, 2, 'optionb'),
(153, 12, 8, -0.66, 'optiona'),
(153, 12, 9, -0.66, 'optionb'),
(153, 12, 12, -0.66, 'optiona'),
(153, 12, 13, 2, 'optionb'),
(153, 12, 14, 2, 'optiona'),
(153, 12, 15, 2, 'optiond'),
(153, 12, 16, 2, 'optionc'),
(153, 12, 19, 2, 'optionb'),
(153, 12, 20, 2, 'optionb'),
(153, 12, 21, 2, 'optiona'),
(153, 12, 22, 2, 'optiond'),
(153, 12, 23, 2, 'optionb'),
(153, 12, 24, 2, 'optiona'),
(153, 12, 25, 2, 'optionc'),
(153, 12, 26, -0.66, 'optionc'),
(153, 12, 27, -0.66, 'optiond'),
(153, 12, 28, 2, 'optiond'),
(153, 12, 31, 2, 'optionc'),
(153, 12, 32, 2, 'optionc'),
(153, 12, 34, 2, 'optiond'),
(153, 12, 35, -0.66, 'optionc'),
(153, 12, 37, -0.66, 'optionc'),
(153, 12, 38, 2, 'optionc'),
(153, 12, 40, 2, 'optiona'),
(153, 12, 41, -0.66, 'optionc'),
(153, 12, 42, 2, 'optiona'),
(153, 12, 43, 2, 'optiond'),
(153, 12, 45, 2, 'optiond'),
(153, 12, 46, -0.66, 'optionb'),
(153, 12, 47, -0.66, 'optionb'),
(153, 12, 50, -0.66, 'optionc'),
(153, 12, 52, -0.66, 'optiona'),
(153, 12, 53, 2, 'optiona'),
(153, 12, 54, 2, 'optiona'),
(153, 13, 1, -0.66, 'optiond'),
(153, 13, 2, 2, 'optionb'),
(153, 13, 3, 2, 'optiona'),
(153, 13, 5, -0.66, 'optiond'),
(153, 13, 6, -0.66, 'optiona'),
(153, 13, 7, 2, 'optionb'),
(153, 13, 8, 2, 'optionc'),
(153, 13, 9, -0.66, 'optionb'),
(153, 13, 10, -0.66, 'optiona'),
(153, 13, 11, 2, 'optiond'),
(153, 13, 12, -0.66, 'optiond'),
(153, 13, 13, 2, 'optiond'),
(153, 13, 14, 2, 'optionb'),
(153, 13, 22, -0.66, 'optionc'),
(153, 13, 24, -0.66, 'optiond'),
(153, 13, 25, 2, 'optiona'),
(153, 13, 27, 2, 'optiond'),
(153, 13, 28, 2, 'optionc'),
(153, 13, 30, 2, 'optiona'),
(153, 13, 31, 2, 'optiond'),
(153, 13, 32, 2, 'optiona'),
(153, 13, 33, -0.66, 'optiond'),
(153, 13, 34, 2, 'optiona'),
(153, 13, 35, 2, 'optionc'),
(153, 13, 36, 2, 'optionc'),
(153, 13, 39, 2, 'optiona'),
(153, 13, 40, 2, 'optiond'),
(153, 15, 2, 1, 'optiond'),
(153, 15, 3, 1, 'optionc'),
(153, 15, 4, 1, 'optiona'),
(153, 15, 5, 1, 'optionb'),
(153, 15, 6, 1, 'optiona'),
(153, 15, 8, 1, 'optiona'),
(153, 15, 9, 1, 'optionb'),
(153, 15, 10, 1, 'optiona'),
(153, 15, 11, 1, 'optiond'),
(153, 15, 12, -0.33, 'optiond'),
(153, 15, 13, 1, 'optionb'),
(153, 15, 14, -0.33, 'optionb'),
(153, 15, 15, 1, 'optiond'),
(153, 15, 16, 1, 'optiond'),
(153, 15, 17, 1, 'optionb'),
(153, 15, 18, 1, 'optionb'),
(153, 15, 19, 1, 'optionc'),
(153, 15, 20, 1, 'optionb'),
(153, 15, 21, -0.33, 'optionb'),
(153, 15, 22, 1, 'optionb'),
(153, 15, 23, 1, 'optiona'),
(153, 15, 24, 1, 'optiona'),
(153, 15, 25, 1, 'optiond'),
(153, 15, 26, 2, 'optiona'),
(153, 15, 27, 2, 'optiona'),
(153, 15, 29, 2, 'optiond'),
(153, 15, 31, -0.66, 'optiond'),
(153, 15, 32, 2, 'optiona'),
(153, 15, 33, -0.66, 'optionb'),
(153, 15, 35, 2, 'optionc'),
(153, 15, 36, -0.66, 'optionb'),
(153, 15, 37, 2, 'optionb'),
(153, 15, 38, 2, 'optionc'),
(153, 15, 39, 2, 'optionb'),
(153, 15, 40, 2, 'optiond'),
(153, 15, 41, -0.66, 'optiond'),
(153, 15, 43, 2, 'optiona'),
(153, 15, 44, 2, 'optiond'),
(153, 15, 45, -0.66, 'optiond'),
(153, 15, 47, 2, 'optiond'),
(153, 15, 48, 2, 'optionc'),
(153, 15, 49, -0.66, 'optiona'),
(153, 15, 50, -0.66, 'optiona'),
(153, 15, 51, -0.66, 'optiona'),
(153, 15, 52, 2, 'optionc'),
(153, 15, 54, 2, 'optionc'),
(153, 15, 55, 2, 'optionb'),
(153, 15, 56, -0.33, 'optionb'),
(153, 15, 57, -0.33, 'optiona'),
(153, 15, 58, -0.33, 'optionb'),
(153, 15, 59, 1, 'optiond'),
(153, 15, 60, -0.33, 'optionc'),
(153, 15, 61, 2, 'optionc'),
(153, 15, 62, -0.66, 'optionc'),
(153, 15, 63, -0.66, 'optiona'),
(153, 15, 64, -0.66, 'optionb'),
(153, 15, 65, -0.66, 'optiond'),
(153, 16, 1, 1, 'optionc'),
(153, 16, 3, 1, 'optiond'),
(153, 16, 4, 1, 'optiond'),
(153, 16, 6, 1, 'optionb'),
(153, 16, 8, -0.33, 'optionc'),
(153, 16, 9, 1, 'optionc'),
(153, 16, 10, 1, 'optionc'),
(153, 16, 12, -0.33, 'optionc'),
(153, 16, 13, 1, 'optionb'),
(153, 16, 14, 1, 'optiond'),
(153, 16, 15, 1, 'optionc'),
(153, 16, 16, 1, 'optiond'),
(153, 16, 17, -0.33, 'optiond'),
(153, 16, 19, 1, 'optiond'),
(153, 16, 21, -0.33, 'optiona'),
(153, 16, 22, 1, 'optionb'),
(153, 16, 24, -0.33, 'optiond'),
(153, 16, 25, 1, 'optionb'),
(153, 16, 28, -0.66, 'optiona'),
(153, 16, 29, -0.66, 'optionb'),
(153, 16, 30, 2, 'optiond'),
(153, 16, 32, 2, 'optiond'),
(153, 16, 37, 2, 'optionb'),
(153, 16, 38, -0.66, 'optiond'),
(153, 16, 43, 2, 'optiona'),
(153, 16, 44, 2, 'optiond'),
(153, 16, 45, 2, 'optiona'),
(153, 16, 46, -0.66, 'optionb'),
(153, 16, 48, 2, 'optiona'),
(153, 16, 49, 2, 'optionc'),
(153, 16, 51, 2, 'optiona'),
(153, 16, 52, 2, 'optiona'),
(153, 16, 53, 2, 'optionb'),
(153, 16, 56, -0.33, 'optionc'),
(153, 16, 57, -0.33, 'optiona'),
(153, 16, 60, 1, 'optionc'),
(153, 16, 61, 2, 'optionb'),
(153, 16, 62, -0.66, 'optionb'),
(153, 16, 63, -0.66, 'optionb'),
(153, 16, 64, -0.66, 'optionc'),
(153, 16, 65, -0.66, 'optionc'),
(153, 17, 1, 1, 'optiona'),
(153, 17, 3, 1, 'optionb'),
(153, 17, 4, 1, 'optionc'),
(153, 17, 5, 1, 'optionc'),
(153, 17, 6, 1, 'optiona'),
(153, 17, 7, -0.33, 'optiond'),
(153, 17, 8, 1, 'optiona'),
(153, 17, 9, -0.33, 'optiona'),
(153, 17, 10, 1, 'optiona'),
(153, 17, 11, 1, 'optiond'),
(153, 17, 12, -0.33, 'optionc'),
(153, 17, 13, 1, 'optionb'),
(153, 17, 14, 1, 'optionc'),
(153, 17, 15, -0.33, 'optionc'),
(153, 17, 18, 1, 'optionb'),
(153, 17, 19, 1, 'optionb'),
(153, 17, 20, -0.33, 'optionb'),
(153, 17, 21, 1, 'optionc'),
(153, 17, 22, 1, 'optionb'),
(153, 17, 23, -0.33, 'optionc'),
(153, 17, 24, 1, 'optionb'),
(153, 17, 25, 1, 'optionb'),
(153, 17, 26, 2, 'optionc'),
(153, 17, 27, -0.66, 'optiona'),
(153, 17, 28, 2, 'optiond'),
(153, 17, 29, -0.66, 'optionb'),
(153, 17, 30, 2, 'optiona'),
(153, 17, 31, -0.66, 'optionc'),
(153, 17, 32, 2, 'optiona'),
(153, 17, 33, 2, 'optiona'),
(153, 17, 34, 2, 'optiond'),
(153, 17, 35, 2, 'optionb'),
(153, 17, 38, -0.66, 'optiona'),
(153, 17, 39, 2, 'optionb'),
(153, 17, 40, -0.66, 'optiona'),
(153, 17, 41, 2, 'optionc'),
(153, 17, 42, 2, 'optionb'),
(153, 17, 44, -0.66, 'optionc'),
(153, 17, 48, -0.66, 'optionc'),
(153, 17, 50, 2, 'optiond'),
(153, 17, 51, -0.66, 'optiona'),
(153, 17, 52, 2, 'optiond'),
(153, 17, 53, 2, 'optiona'),
(153, 17, 54, 2, 'optiond'),
(153, 17, 58, -0.33, 'optionb'),
(153, 17, 59, -0.33, 'optionb'),
(153, 17, 60, 1, 'optiond'),
(153, 17, 61, -0.66, 'optiond'),
(153, 17, 62, 2, 'optionc'),
(153, 17, 63, -0.66, 'optionb'),
(153, 17, 65, -0.66, 'optionb'),
(153, 18, 1, -0.33, 'optionc'),
(153, 18, 2, 1, 'optiond'),
(153, 18, 3, 1, 'optionb'),
(153, 18, 4, 1, 'optiona'),
(153, 18, 6, 1, 'optionc'),
(153, 18, 7, -0.33, 'optionc'),
(153, 18, 8, 1, 'optionb'),
(153, 18, 9, -0.33, 'optiona'),
(153, 18, 10, 1, 'optionb'),
(153, 18, 11, -0.33, 'optionc'),
(153, 18, 12, 1, 'optiona'),
(153, 18, 14, 1, 'optionc'),
(153, 18, 15, 1, 'optionc'),
(153, 18, 16, 1, 'optionc'),
(153, 18, 17, -0.33, 'optiona'),
(153, 18, 18, 1, 'optiona'),
(153, 18, 19, 1, 'optionc'),
(153, 18, 20, 1, 'optionb'),
(153, 18, 21, 1, 'optiond'),
(153, 18, 22, -0.33, 'optiona'),
(153, 18, 24, 1, 'optionc'),
(153, 18, 25, 1, 'optionc'),
(153, 18, 26, 2, 'optionb'),
(153, 18, 27, -0.66, 'optiona'),
(153, 18, 29, 2, 'optiond'),
(153, 18, 30, 2, 'optionc'),
(153, 18, 31, 2, 'optiona'),
(153, 18, 32, 2, 'optionb'),
(153, 18, 33, 2, 'optiond'),
(153, 18, 36, -0.66, 'optiond'),
(153, 18, 37, 2, 'optionc'),
(153, 18, 42, 2, 'optionb'),
(153, 18, 44, -0.66, 'optionb'),
(153, 18, 45, -0.66, 'optionc'),
(153, 18, 47, 2, 'optiond'),
(153, 18, 49, -0.66, 'optiona'),
(153, 18, 51, -0.66, 'optiond'),
(153, 18, 52, 2, 'optiona'),
(153, 18, 53, -0.66, 'optiond'),
(153, 18, 54, 2, 'optiona'),
(153, 18, 58, 1, 'optionc'),
(153, 18, 60, 1, 'optiona'),
(153, 18, 61, 2, 'optionb'),
(153, 18, 62, -0.66, 'optiona'),
(153, 18, 63, -0.66, 'optiond'),
(153, 18, 65, 2, 'optiond'),
(154, 7, 1, -0.33, 'optionc'),
(154, 7, 3, -0.33, 'optiond'),
(154, 7, 4, 1, 'optiond'),
(154, 7, 5, 1, 'optionc'),
(154, 7, 6, 1, 'optionb'),
(154, 7, 7, -0.33, 'optionc'),
(154, 7, 8, -0.33, 'optionc'),
(154, 7, 10, 1, 'optionc'),
(154, 7, 11, 1, 'optiona'),
(154, 7, 13, 1, 'optionc'),
(154, 7, 14, 1, 'optionc'),
(154, 7, 15, -0.33, 'optiona'),
(154, 7, 16, 1, 'optiona'),
(154, 7, 17, 1, 'optionc'),
(154, 7, 19, 1, 'optiond'),
(154, 7, 22, -0.33, 'optiona'),
(154, 7, 23, 1, 'optiond'),
(154, 7, 24, 1, 'optiona'),
(154, 7, 25, -0.33, 'optionb'),
(154, 7, 26, 2, 'optiona'),
(154, 7, 27, -0.66, 'optiond'),
(154, 7, 28, 2, 'optiona'),
(154, 7, 29, 2, 'optiond'),
(154, 7, 31, 2, 'optiona'),
(154, 7, 33, 2, 'optiond'),
(154, 7, 35, 2, 'optionc'),
(154, 7, 36, 2, 'optionc'),
(154, 7, 39, -0.66, 'optiona'),
(154, 7, 40, 2, 'optionb'),
(154, 7, 41, 2, 'optionc'),
(154, 7, 42, 2, 'optionc'),
(154, 7, 43, 2, 'optionb'),
(154, 7, 44, -0.66, 'optionc'),
(154, 7, 45, 2, 'optiond'),
(154, 7, 46, 2, 'optiond'),
(154, 7, 47, -0.66, 'optiona'),
(154, 7, 50, -0.66, 'optionb'),
(154, 7, 51, 2, 'optionb'),
(154, 7, 54, 2, 'optiond'),
(154, 7, 55, 2, 'optiond'),
(154, 7, 56, -0.33, 'optiona'),
(154, 7, 61, -0.66, 'optiond'),
(154, 7, 62, 2, 'optionc'),
(154, 7, 63, 2, 'optiond'),
(154, 7, 65, -0.66, 'optionc'),
(154, 10, 1, -0.66, 'optiond'),
(154, 10, 2, 2, 'optionb'),
(154, 10, 3, -0.66, 'optiona'),
(154, 10, 4, -0.66, 'optiond'),
(154, 10, 5, 2, 'optionb'),
(154, 10, 6, 2, 'optionb'),
(154, 10, 7, -0.66, 'optionc'),
(154, 10, 8, -0.66, 'optionb'),
(154, 10, 9, 2, 'optionc'),
(154, 10, 10, 2, 'optiond'),
(154, 10, 11, 2, 'optionc'),
(154, 10, 12, -0.66, 'optionc'),
(154, 10, 13, -0.66, 'optiond'),
(154, 10, 14, 2, 'optionb'),
(154, 10, 15, -0.66, 'optiona'),
(154, 10, 16, 2, 'optiona'),
(154, 10, 17, -0.66, 'optiond'),
(154, 10, 18, -0.66, 'optionb'),
(154, 10, 19, 2, 'optiona'),
(154, 10, 20, 2, 'optionc'),
(154, 10, 21, 2, 'optionb'),
(154, 10, 22, 2, 'optionb'),
(154, 10, 23, 2, 'optiond'),
(154, 10, 24, 2, 'optiona'),
(154, 12, 1, 2, 'optionc'),
(154, 12, 4, -0.66, 'optionb'),
(154, 12, 6, -0.66, 'optionb'),
(154, 12, 7, -0.66, 'optiond'),
(154, 12, 8, -0.66, 'optiona'),
(154, 12, 9, -0.66, 'optionb'),
(154, 12, 12, 2, 'optionb'),
(154, 12, 13, -0.66, 'optionc'),
(154, 12, 14, 2, 'optiona'),
(154, 12, 15, 2, 'optiond'),
(154, 12, 16, 2, 'optionc'),
(154, 12, 17, 2, 'optionc'),
(154, 12, 18, 2, 'optiond'),
(154, 12, 19, 2, 'optionb'),
(154, 12, 20, 2, 'optionb'),
(154, 12, 21, 2, 'optiona'),
(154, 12, 22, 2, 'optiond'),
(154, 12, 23, -0.66, 'optiond'),
(154, 12, 24, -0.66, 'optionb'),
(154, 12, 25, -0.66, 'optiona'),
(154, 12, 26, 2, 'optionb'),
(154, 12, 27, -0.66, 'optiond'),
(154, 12, 28, 2, 'optiond'),
(154, 12, 29, 2, 'optiona'),
(154, 12, 30, 2, 'optionb'),
(154, 12, 31, 2, 'optionc'),
(154, 12, 32, 2, 'optionc'),
(154, 12, 35, 2, 'optiond'),
(154, 12, 36, 2, 'optionc'),
(154, 12, 37, -0.66, 'optiond'),
(154, 12, 38, 2, 'optionc'),
(154, 12, 39, 2, 'optiona'),
(154, 12, 40, -0.66, 'optionc'),
(154, 12, 41, -0.66, 'optiond'),
(154, 12, 42, -0.66, 'optiond'),
(154, 12, 43, -0.66, 'optiona'),
(154, 12, 44, -0.66, 'optionc'),
(154, 12, 45, -0.66, 'optiona'),
(154, 12, 46, -0.66, 'optionc'),
(154, 12, 48, -0.66, 'optionb'),
(154, 12, 50, 2, 'optionb'),
(154, 12, 51, 2, 'optionc'),
(154, 12, 52, -0.66, 'optionc'),
(154, 12, 54, -0.66, 'optiond'),
(154, 13, 1, -0.66, 'optiond'),
(154, 13, 2, -0.66, 'optionc'),
(154, 13, 3, -0.66, 'optiond'),
(154, 13, 8, 2, 'optionc'),
(154, 13, 10, 2, 'optione'),
(154, 13, 11, 2, 'optiond'),
(154, 13, 12, 2, 'optiona'),
(154, 13, 13, 2, 'optiond'),
(154, 13, 14, 2, 'optionb'),
(154, 13, 24, -0.66, 'optiond'),
(154, 13, 25, 2, 'optiona'),
(154, 13, 26, -0.66, 'optiona'),
(154, 13, 27, 2, 'optiond'),
(154, 13, 28, 2, 'optionc'),
(154, 13, 30, 2, 'optiona'),
(154, 13, 31, 2, 'optiond'),
(154, 13, 32, 2, 'optiona'),
(154, 13, 34, -0.66, 'optiond'),
(154, 13, 36, 2, 'optionc'),
(154, 13, 38, 2, 'optionb'),
(154, 15, 1, 1, 'optionc'),
(154, 15, 2, 1, 'optiond'),
(154, 15, 3, 1, 'optionc'),
(154, 15, 4, -0.33, 'optiond'),
(154, 15, 5, 1, 'optionb'),
(154, 15, 6, 1, 'optiona'),
(154, 15, 7, -0.33, 'optiond'),
(154, 15, 9, 1, 'optionb'),
(154, 15, 11, 1, 'optiond'),
(154, 15, 12, -0.33, 'optiond'),
(154, 15, 13, 1, 'optionb'),
(154, 15, 14, 1, 'optionc'),
(154, 15, 15, 1, 'optiond'),
(154, 15, 16, 1, 'optiond'),
(154, 15, 17, 1, 'optionb'),
(154, 15, 18, 1, 'optionb'),
(154, 15, 19, 1, 'optionc'),
(154, 15, 20, 1, 'optionb'),
(154, 15, 21, -0.33, 'optionb'),
(154, 15, 22, 1, 'optionb'),
(154, 15, 23, 1, 'optiona'),
(154, 15, 24, 1, 'optiona'),
(154, 15, 25, -0.33, 'optionb'),
(154, 15, 26, 2, 'optiona'),
(154, 15, 27, 2, 'optiona'),
(154, 15, 28, 2, 'optiond'),
(154, 15, 29, 2, 'optiond'),
(154, 15, 30, -0.66, 'optiond'),
(154, 15, 31, 2, 'optiona'),
(154, 15, 33, 2, 'optionc'),
(154, 15, 35, 2, 'optionc'),
(154, 15, 36, 2, 'optiond'),
(154, 15, 37, 2, 'optionb'),
(154, 15, 39, 2, 'optionb'),
(154, 15, 40, 2, 'optiond'),
(154, 15, 41, 2, 'optionc'),
(154, 15, 43, 2, 'optiona'),
(154, 15, 44, 2, 'optiond'),
(154, 15, 47, -0.66, 'optionc'),
(154, 15, 48, 2, 'optionc'),
(154, 15, 49, -0.66, 'optiona'),
(154, 15, 50, -0.66, 'optiona'),
(154, 15, 51, 2, 'optionb'),
(154, 15, 52, 2, 'optionc'),
(154, 15, 56, -0.33, 'optiond'),
(154, 15, 57, -0.33, 'optiona'),
(154, 15, 58, -0.33, 'optionb'),
(154, 15, 59, 1, 'optiond'),
(154, 15, 60, -0.33, 'optionc'),
(154, 15, 62, 2, 'optionb'),
(154, 15, 63, 2, 'optiond'),
(154, 15, 64, -0.66, 'optionc'),
(154, 16, 1, 1, 'optionc'),
(154, 16, 3, 1, 'optiond'),
(154, 16, 4, 1, 'optiond'),
(154, 16, 6, 1, 'optionb'),
(154, 16, 8, 1, 'optiona'),
(154, 16, 9, -0.33, 'optiond'),
(154, 16, 10, -0.33, 'optiona'),
(154, 16, 13, -0.33, 'optionc'),
(154, 16, 14, -0.33, 'optionc'),
(154, 16, 15, 1, 'optionc'),
(154, 16, 16, -0.33, 'optionc'),
(154, 16, 18, -0.33, 'optiona'),
(154, 16, 19, -0.33, 'optionb'),
(154, 16, 20, 1, 'optiona'),
(154, 16, 21, 1, 'optiond'),
(154, 16, 22, 1, 'optionb'),
(154, 16, 24, 1, 'optiona'),
(154, 16, 25, 1, 'optionb'),
(154, 16, 26, -0.66, 'optiond'),
(154, 16, 28, -0.66, 'optionc'),
(154, 16, 29, -0.66, 'optionb'),
(154, 16, 30, 2, 'optiond'),
(154, 16, 32, 2, 'optiond'),
(154, 16, 33, 2, 'optiond'),
(154, 16, 34, -0.66, 'optiond'),
(154, 16, 35, 2, 'optionb'),
(154, 16, 36, 2, 'optionc'),
(154, 16, 37, -0.66, 'optionc'),
(154, 16, 38, -0.66, 'optiona'),
(154, 16, 40, 2, 'optiona'),
(154, 16, 43, 2, 'optiona'),
(154, 16, 44, 2, 'optiond'),
(154, 16, 45, 2, 'optiona'),
(154, 16, 46, -0.66, 'optionb'),
(154, 16, 48, 2, 'optiona'),
(154, 16, 49, 2, 'optionc'),
(154, 16, 50, 2, 'optiona'),
(154, 16, 52, 2, 'optiona'),
(154, 16, 53, 2, 'optionb'),
(154, 16, 61, -0.66, 'optiond'),
(154, 16, 62, 2, 'optiond'),
(154, 17, 1, -0.33, 'optionb'),
(154, 17, 2, 1, 'optionb'),
(154, 17, 3, -0.33, 'optiond'),
(154, 17, 4, -0.33, 'optiona'),
(154, 17, 5, -0.33, 'optionb'),
(154, 17, 6, 1, 'optiona'),
(154, 17, 8, 1, 'optiona'),
(154, 17, 9, 1, 'optionb'),
(154, 17, 10, -0.33, 'optionb'),
(154, 17, 11, -0.33, 'optionc'),
(154, 17, 13, -0.33, 'optiona'),
(154, 17, 18, -0.33, 'optiond'),
(154, 17, 19, -0.33, 'optiond'),
(154, 17, 20, -0.33, 'optionb'),
(154, 17, 22, -0.33, 'optionc'),
(154, 17, 23, 1, 'optiond'),
(154, 17, 25, 1, 'optionb'),
(154, 17, 26, 2, 'optionc'),
(154, 17, 28, -0.66, 'optiona'),
(154, 17, 29, 2, 'optiond'),
(154, 17, 30, 2, 'optiona'),
(154, 17, 31, 2, 'optiond'),
(154, 17, 32, 2, 'optiona'),
(154, 17, 33, 2, 'optiona'),
(154, 17, 34, 2, 'optiond'),
(154, 17, 35, 2, 'optionb'),
(154, 17, 37, 2, 'optionc'),
(154, 17, 38, -0.66, 'optiona'),
(154, 17, 39, 2, 'optionb'),
(154, 17, 41, -0.66, 'optionb'),
(154, 17, 44, 2, 'optionb'),
(154, 17, 45, 2, 'optionb'),
(154, 17, 46, 2, 'optionb'),
(154, 17, 51, -0.66, 'optiona'),
(154, 17, 52, 2, 'optiond'),
(154, 17, 53, -0.66, 'optionc'),
(154, 17, 57, -0.33, 'optiona'),
(154, 17, 60, 1, 'optiond'),
(154, 17, 61, 2, 'optionb'),
(154, 17, 63, -0.66, 'optionb'),
(154, 17, 65, -0.66, 'optionc'),
(154, 18, 1, 1, 'optiona'),
(154, 18, 2, 1, 'optiond'),
(154, 18, 3, 1, 'optionb'),
(154, 18, 4, 1, 'optiona'),
(154, 18, 6, -0.33, 'optionb'),
(154, 18, 7, -0.33, 'optionc'),
(154, 18, 8, 1, 'optionb'),
(154, 18, 9, 1, 'optiond'),
(154, 18, 11, -0.33, 'optionc'),
(154, 18, 12, -0.33, 'optionb'),
(154, 18, 14, 1, 'optionc'),
(154, 18, 15, 1, 'optionc'),
(154, 18, 17, 1, 'optionb'),
(154, 18, 18, 1, 'optiona'),
(154, 18, 19, 1, 'optionc'),
(154, 18, 20, 1, 'optionb'),
(154, 18, 21, 1, 'optiond'),
(154, 18, 22, 1, 'optiond'),
(154, 18, 23, -0.33, 'optiona'),
(154, 18, 24, 1, 'optionc'),
(154, 18, 25, 1, 'optionc'),
(154, 18, 26, 2, 'optionb'),
(154, 18, 27, 2, 'optiond'),
(154, 18, 28, 2, 'optiona'),
(154, 18, 29, 2, 'optiond'),
(154, 18, 30, 2, 'optionc'),
(154, 18, 32, 2, 'optionb'),
(154, 18, 33, 2, 'optiond'),
(154, 18, 34, 2, 'optiona'),
(154, 18, 37, 2, 'optionc'),
(154, 18, 38, 2, 'optionb'),
(154, 18, 42, 2, 'optionb'),
(154, 18, 44, 2, 'optionc'),
(154, 18, 45, -0.66, 'optionc'),
(154, 18, 47, 2, 'optiond'),
(154, 18, 48, 2, 'optionb'),
(154, 18, 51, -0.66, 'optionb'),
(154, 18, 54, 2, 'optiona'),
(154, 18, 60, 1, 'optiona'),
(154, 18, 61, 2, 'optionb'),
(154, 18, 62, 2, 'optiond'),
(154, 18, 65, 2, 'optiond'),
(156, 7, 1, 1, 'optionc'),
(156, 7, 5, -0.33, 'optionc'),
(156, 7, 6, -0.33, 'optiona'),
(156, 7, 7, 1, 'optionb'),
(156, 7, 9, 1, 'optiona'),
(156, 7, 11, 1, 'optiona'),
(156, 7, 12, 1, 'optionb'),
(156, 7, 15, 1, 'optionb'),
(156, 7, 16, 1, 'optiona'),
(156, 7, 17, 1, 'optionc'),
(156, 7, 19, 1, 'optiond'),
(156, 7, 21, -0.33, 'optionc'),
(156, 7, 24, 1, 'optiona'),
(156, 7, 31, 2, 'optiona'),
(156, 7, 36, -0.66, 'optiond'),
(156, 7, 40, 2, 'optionb'),
(156, 7, 43, 2, 'optionb'),
(156, 7, 44, 2, 'optionb'),
(156, 7, 45, 2, 'optiond'),
(156, 7, 47, -0.66, 'optiona'),
(156, 7, 48, -0.66, 'optionc'),
(156, 7, 52, -0.66, 'optionb'),
(156, 7, 53, -0.66, 'optiona'),
(156, 7, 54, 2, 'optiond'),
(156, 7, 57, -0.33, 'optiond'),
(156, 7, 62, 2, 'optionc'),
(156, 7, 63, -0.66, 'optiona'),
(158, 15, 2, 1, 'optiond'),
(158, 15, 3, 1, 'optionc'),
(158, 15, 5, -0.33, 'optiond'),
(158, 15, 6, 1, 'optiona'),
(158, 15, 7, 1, 'optionb'),
(158, 15, 8, 1, 'optiona'),
(158, 15, 9, -0.33, 'optiona'),
(158, 15, 10, -0.33, 'optionc'),
(158, 15, 11, -0.33, 'optionb'),
(158, 15, 12, 1, 'optionc'),
(158, 15, 13, 1, 'optionb'),
(158, 15, 14, 1, 'optionc'),
(158, 15, 15, 1, 'optiond'),
(158, 15, 16, 1, 'optiond'),
(158, 15, 17, 1, 'optionb'),
(158, 15, 18, 1, 'optionb'),
(158, 15, 19, 1, 'optionc'),
(158, 15, 20, 1, 'optionb'),
(158, 15, 21, 1, 'optiona'),
(158, 15, 22, 1, 'optionb'),
(158, 15, 23, 1, 'optiona'),
(158, 15, 24, 1, 'optiona'),
(158, 15, 25, 1, 'optiond'),
(158, 15, 26, 2, 'optiona'),
(158, 15, 27, 2, 'optiona'),
(158, 15, 28, 2, 'optiond'),
(158, 15, 29, 2, 'optiond'),
(158, 15, 31, -0.66, 'optiond'),
(158, 15, 32, 2, 'optiona'),
(158, 15, 33, 2, 'optionc'),
(158, 15, 35, 2, 'optionc'),
(158, 15, 36, 2, 'optiond'),
(158, 15, 37, -0.66, 'optionc'),
(158, 15, 39, 2, 'optionb'),
(158, 15, 40, -0.66, 'optionc'),
(158, 15, 41, 2, 'optionc'),
(158, 15, 42, 2, 'optiona'),
(158, 15, 43, 2, 'optiona'),
(158, 15, 45, 2, 'optiona'),
(158, 15, 48, -0.66, 'optiond'),
(158, 15, 50, -0.66, 'optiona'),
(158, 15, 51, -0.66, 'optiona'),
(158, 15, 52, 2, 'optionc'),
(158, 15, 53, 2, 'optionc'),
(158, 15, 54, -0.66, 'optionb'),
(158, 15, 55, -0.66, 'optiond'),
(158, 15, 57, -0.33, 'optiona'),
(158, 15, 58, 1, 'optiond'),
(158, 15, 59, 1, 'optiond'),
(158, 15, 61, 2, 'optionc'),
(158, 15, 63, -0.66, 'optionc'),
(158, 15, 64, 2, 'optiond'),
(158, 15, 65, 2, 'optionb'),
(158, 17, 1, -0.33, 'optionb'),
(158, 17, 2, 1, 'optionb'),
(158, 17, 3, 1, 'optionb'),
(158, 17, 4, -0.33, 'optiona'),
(158, 17, 5, 1, 'optionc'),
(158, 17, 6, 1, 'optiona'),
(158, 17, 7, 1, 'optionc'),
(158, 17, 8, 1, 'optiona'),
(158, 17, 9, 1, 'optionb'),
(158, 17, 10, -0.33, 'optionb'),
(158, 17, 11, -0.33, 'optiona'),
(158, 17, 12, 1, 'optiona'),
(158, 17, 13, 1, 'optionb'),
(158, 17, 14, 1, 'optionc'),
(158, 17, 18, -0.33, 'optiond'),
(158, 17, 19, -0.33, 'optiond'),
(158, 17, 20, -0.33, 'optionb'),
(158, 17, 21, 1, 'optionc'),
(158, 17, 22, 1, 'optionb'),
(158, 17, 23, 1, 'optiond'),
(158, 17, 25, -0.33, 'optiond'),
(158, 17, 26, 2, 'optionc'),
(158, 17, 28, 2, 'optiond'),
(158, 17, 29, 2, 'optiond'),
(158, 17, 30, 2, 'optiona'),
(158, 17, 31, 2, 'optiond'),
(158, 17, 32, 2, 'optiona'),
(158, 17, 33, 2, 'optiona'),
(158, 17, 34, 2, 'optiond'),
(158, 17, 35, 2, 'optionb'),
(158, 17, 37, 2, 'optionc'),
(158, 17, 38, 2, 'optionc'),
(158, 17, 41, 2, 'optionc'),
(158, 17, 42, 2, 'optionb'),
(158, 17, 44, -0.66, 'optionc'),
(158, 17, 45, -0.66, 'optiond'),
(158, 17, 46, -0.66, 'optionc'),
(158, 17, 47, -0.66, 'optionb'),
(158, 17, 48, 2, 'optiond'),
(158, 17, 50, 2, 'optiond'),
(158, 17, 51, 2, 'optionc'),
(158, 17, 52, 2, 'optiond'),
(158, 17, 53, 2, 'optiona'),
(158, 17, 54, 2, 'optiond'),
(158, 17, 55, 2, 'optiona'),
(158, 17, 58, 1, 'optionc'),
(158, 17, 60, 1, 'optiond'),
(158, 17, 61, 2, 'optionb'),
(158, 17, 62, 2, 'optionc'),
(158, 17, 63, 2, 'optiona'),
(158, 17, 65, -0.66, 'optiona'),
(159, 15, 4, 1, 'optiona'),
(159, 15, 6, 1, 'optiona'),
(159, 15, 7, 1, 'optionb'),
(159, 15, 8, -0.33, 'optionc'),
(159, 15, 9, 1, 'optionb'),
(159, 15, 10, -0.33, 'optionb'),
(159, 15, 11, 1, 'optiond'),
(159, 15, 13, 1, 'optionb'),
(159, 15, 14, 1, 'optionc'),
(159, 15, 15, 1, 'optiond'),
(159, 15, 16, 1, 'optiond'),
(159, 15, 17, -0.33, 'optionc'),
(159, 15, 18, 1, 'optionb'),
(159, 15, 19, 1, 'optionc'),
(159, 15, 20, 1, 'optionb'),
(159, 15, 21, 1, 'optiona'),
(159, 15, 22, 1, 'optionb'),
(159, 15, 24, 1, 'optiona'),
(159, 15, 25, 1, 'optiond'),
(159, 15, 26, 2, 'optiona'),
(159, 15, 28, -0.66, 'optiona'),
(159, 15, 29, 2, 'optiond'),
(159, 15, 30, 2, 'optionb'),
(159, 15, 31, 2, 'optiona'),
(159, 15, 33, 2, 'optionc'),
(159, 15, 35, -0.66, 'optiona'),
(159, 15, 37, 2, 'optionb'),
(159, 15, 38, 2, 'optionc'),
(159, 15, 39, 2, 'optionb'),
(159, 15, 40, -0.66, 'optionb'),
(159, 15, 41, 2, 'optionc'),
(159, 15, 42, 2, 'optiona'),
(159, 15, 43, -0.66, 'optionb'),
(159, 15, 44, -0.66, 'optionc'),
(159, 15, 45, -0.66, 'optiond'),
(159, 15, 47, -0.66, 'optiona'),
(159, 15, 48, 2, 'optionc'),
(159, 15, 49, -0.66, 'optionb'),
(159, 15, 50, -0.66, 'optionb'),
(159, 15, 52, 2, 'optionc'),
(159, 15, 54, -0.66, 'optionb'),
(159, 15, 57, -0.33, 'optiona'),
(159, 15, 59, 1, 'optiond'),
(159, 15, 62, -0.66, 'optiona'),
(159, 16, 1, 1, 'optionc'),
(159, 16, 6, -0.33, 'optiona'),
(159, 16, 8, 1, 'optiona'),
(159, 16, 9, 1, 'optionc'),
(159, 16, 10, -0.33, 'optiona'),
(159, 16, 13, -0.33, 'optionc'),
(159, 16, 15, 1, 'optionc'),
(159, 16, 16, 1, 'optiond'),
(159, 16, 17, -0.33, 'optionb'),
(159, 16, 18, 1, 'optiond'),
(159, 16, 19, -0.33, 'optionb'),
(159, 16, 20, 1, 'optiona'),
(159, 16, 21, 1, 'optiond'),
(159, 16, 22, -0.33, 'optiona'),
(159, 16, 26, -0.66, 'optiond'),
(159, 16, 27, 2, 'optionb'),
(159, 16, 28, -0.66, 'optiona'),
(159, 16, 29, -0.66, 'optionb'),
(159, 16, 30, 2, 'optiond'),
(159, 16, 32, -0.66, 'optionb'),
(159, 16, 35, -0.66, 'optiond'),
(159, 16, 36, -0.66, 'optiona'),
(159, 16, 37, 2, 'optionb'),
(159, 16, 43, -0.66, 'optionb'),
(159, 16, 44, 2, 'optiond'),
(159, 16, 45, 2, 'optiona'),
(159, 16, 46, -0.66, 'optiond'),
(159, 16, 47, -0.66, 'optiond'),
(159, 16, 50, 2, 'optiona'),
(159, 16, 51, 2, 'optiona'),
(159, 16, 61, 2, 'optionb'),
(159, 17, 1, -0.33, 'optionb'),
(159, 17, 2, 1, 'optionb'),
(159, 17, 3, 1, 'optionb'),
(159, 17, 4, -0.33, 'optionb'),
(159, 17, 5, 1, 'optionc'),
(159, 17, 6, 1, 'optiona'),
(159, 17, 8, 1, 'optiona'),
(159, 17, 9, -0.33, 'optiona'),
(159, 17, 10, -0.33, 'optionc'),
(159, 17, 12, -0.33, 'optionc'),
(159, 17, 13, -0.33, 'optiona'),
(159, 17, 14, 1, 'optionc'),
(159, 17, 21, -0.33, 'optiona'),
(159, 17, 22, 1, 'optionb'),
(159, 17, 23, 1, 'optiond'),
(159, 17, 24, -0.33, 'optionc'),
(159, 17, 25, -0.33, 'optiond'),
(159, 17, 26, 2, 'optionc'),
(159, 17, 28, -0.66, 'optionb'),
(159, 17, 29, -0.66, 'optionb'),
(159, 17, 30, -0.66, 'optiond'),
(159, 17, 33, 2, 'optiona'),
(159, 17, 34, 2, 'optiond'),
(159, 17, 37, -0.66, 'optionb'),
(159, 17, 38, -0.66, 'optiona'),
(159, 17, 39, 2, 'optionb'),
(159, 17, 41, 2, 'optionc'),
(159, 17, 42, 2, 'optionb'),
(159, 17, 45, 2, 'optionb'),
(159, 17, 47, -0.66, 'optionb'),
(159, 17, 52, 2, 'optiond'),
(159, 17, 53, -0.66, 'optionb'),
(159, 17, 61, 2, 'optionb'),
(159, 17, 65, 2, 'optiond'),
(160, 8, 1, 1, 'optione'),
(160, 8, 2, -0.33, 'optionc'),
(160, 8, 3, -0.33, 'optionc'),
(160, 8, 4, -0.33, 'optionb'),
(160, 8, 6, 1, 'optiond'),
(160, 8, 7, 1, 'optionb'),
(160, 8, 8, -0.33, 'optionc'),
(160, 8, 9, -0.33, 'optionb'),
(160, 8, 10, 1, 'optionc'),
(160, 8, 11, 1, 'optiond'),
(160, 8, 12, 1, 'optiona'),
(160, 8, 13, 1, 'optionb'),
(160, 8, 15, 1, 'optionc'),
(160, 8, 17, 1, 'optione'),
(160, 8, 18, 1, 'optione'),
(160, 8, 19, 1, 'optiona'),
(160, 8, 20, -0.33, 'optiona'),
(160, 8, 25, -0.33, 'optionc'),
(160, 8, 26, 1, 'optiond'),
(160, 8, 30, 1, 'optionc'),
(160, 8, 31, -0.33, 'optiona'),
(160, 8, 32, 1, 'optionb'),
(160, 8, 33, 1, 'optiona'),
(160, 8, 34, 1, 'optiond'),
(160, 8, 35, 1, 'optionc'),
(160, 8, 36, 1, 'optionc'),
(160, 8, 37, -0.33, 'optionc'),
(160, 8, 38, -0.33, 'optionc'),
(160, 8, 39, 1, 'optiond'),
(160, 8, 41, 1, 'optiona'),
(160, 8, 42, -0.33, 'optionc'),
(160, 8, 43, -0.33, 'optiond'),
(160, 8, 45, 1, 'optiond'),
(160, 15, 2, 1, 'optiond'),
(160, 15, 6, 1, 'optiona'),
(160, 15, 8, 1, 'optiona'),
(160, 15, 9, -0.33, 'optiona'),
(160, 15, 11, 1, 'optiond'),
(160, 15, 13, 1, 'optionb'),
(160, 15, 14, 1, 'optionc'),
(160, 15, 15, 1, 'optiond'),
(160, 15, 16, -0.33, 'optiona'),
(160, 15, 17, -0.33, 'optionc'),
(160, 15, 18, 1, 'optionb'),
(160, 15, 19, 1, 'optionc'),
(160, 15, 20, 1, 'optionb'),
(160, 15, 21, 1, 'optiona'),
(160, 15, 22, 1, 'optionb'),
(160, 15, 23, -0.33, 'optiond'),
(160, 15, 25, 1, 'optiond'),
(160, 15, 26, 2, 'optiona'),
(160, 15, 29, 2, 'optiond'),
(160, 15, 30, -0.66, 'optiond'),
(160, 15, 31, 2, 'optiona'),
(160, 15, 32, 2, 'optiona'),
(160, 15, 35, 2, 'optionc'),
(160, 15, 37, 2, 'optionb'),
(160, 15, 39, -0.66, 'optionc'),
(160, 15, 41, 2, 'optionc'),
(160, 15, 42, 2, 'optiona'),
(160, 15, 43, 2, 'optiona'),
(160, 15, 56, 1, 'optionc'),
(160, 15, 58, 1, 'optiond'),
(160, 15, 59, 1, 'optiond'),
(160, 15, 60, -0.33, 'optiond'),
(160, 15, 61, -0.66, 'optiona'),
(160, 15, 62, -0.66, 'optiona'),
(161, 15, 10, -0.33, 'optiond'),
(161, 15, 11, 1, 'optiond'),
(161, 15, 13, 1, 'optionb'),
(161, 15, 14, 1, 'optionc'),
(161, 15, 16, 1, 'optiond'),
(161, 15, 18, 1, 'optionb'),
(161, 15, 19, 1, 'optionc'),
(161, 15, 22, -0.33, 'optiond'),
(161, 15, 23, -0.33, 'optionc'),
(161, 15, 24, -0.33, 'optionb'),
(161, 15, 30, 2, 'optionb'),
(161, 15, 43, -0.66, 'optionb'),
(161, 15, 44, -0.66, 'optionc'),
(161, 15, 56, 1, 'optionc'),
(161, 15, 57, -0.33, 'optiona'),
(161, 15, 58, 1, 'optiond'),
(161, 15, 60, -0.33, 'optiond'),
(161, 15, 61, -0.66, 'optiona'),
(161, 15, 62, -0.66, 'optiona'),
(161, 15, 64, -0.66, 'optionb'),
(162, 7, 1, 1, 'optionc'),
(162, 7, 2, 1, 'optiond'),
(162, 7, 3, -0.33, 'optiona'),
(162, 7, 4, 1, 'optiond'),
(162, 7, 5, 1, 'optionb'),
(162, 7, 6, -0.33, 'optiona'),
(162, 7, 7, 1, 'optionb'),
(162, 7, 8, 1, 'optionb'),
(162, 7, 9, 1, 'optiona'),
(162, 7, 10, 1, 'optionc'),
(162, 7, 11, 1, 'optiona'),
(162, 7, 13, -0.33, 'optionb'),
(162, 7, 14, 1, 'optionc'),
(162, 7, 15, 1, 'optionb'),
(162, 7, 16, 1, 'optiona'),
(162, 7, 17, 1, 'optionc'),
(162, 7, 18, 1, 'optiona'),
(162, 7, 19, 1, 'optiond'),
(162, 7, 22, -0.33, 'optionb'),
(162, 7, 23, 1, 'optiond'),
(162, 7, 24, 1, 'optiona'),
(162, 7, 26, 2, 'optiona'),
(162, 7, 27, -0.66, 'optionc'),
(162, 7, 28, 2, 'optiona'),
(162, 7, 31, 2, 'optiona'),
(162, 7, 35, 2, 'optionc'),
(162, 7, 36, 2, 'optionc'),
(162, 7, 39, 2, 'optione'),
(162, 7, 40, 2, 'optionb'),
(162, 7, 41, 2, 'optionc'),
(162, 7, 42, 2, 'optionc'),
(162, 7, 45, 2, 'optiond'),
(162, 7, 46, -0.66, 'optiona'),
(162, 7, 47, 2, 'optionb'),
(162, 7, 48, -0.66, 'optiona'),
(162, 7, 49, -0.66, 'optiona'),
(162, 7, 52, 2, 'optiona'),
(162, 7, 53, 2, 'optionb'),
(162, 7, 54, 2, 'optiond'),
(162, 7, 56, 1, 'optiona'),
(162, 7, 58, -0.33, 'optiona'),
(162, 7, 59, -0.33, 'optionb'),
(162, 7, 60, 1, 'optionc'),
(162, 7, 61, -0.66, 'optiona'),
(162, 7, 63, 2, 'optiond'),
(162, 9, 2, -0.66, 'optiond'),
(162, 9, 4, 2, 'optiona'),
(162, 9, 5, 2, 'optiond'),
(162, 9, 6, 2, 'optiond'),
(162, 9, 7, -0.66, 'optionb'),
(162, 9, 8, 2, 'optionb'),
(162, 9, 17, 2, 'optionb'),
(162, 9, 18, 2, 'optionb'),
(162, 9, 24, 2, 'optionc'),
(162, 9, 26, 2, 'optionc'),
(162, 9, 29, 2, 'optionc'),
(162, 9, 30, -0.66, 'optiona'),
(162, 9, 31, -0.66, 'optiond'),
(162, 9, 32, 2, 'optionb'),
(162, 9, 35, 2, 'optionb'),
(162, 9, 37, 2, 'optionb'),
(162, 9, 41, 2, 'optionb'),
(162, 9, 43, -0.66, 'optiona'),
(162, 9, 46, 2, 'optiond'),
(162, 9, 47, -0.66, 'optiona'),
(162, 9, 48, 2, 'optionc'),
(162, 9, 49, 2, 'optionb'),
(162, 9, 50, 2, 'optionb'),
(162, 9, 53, -0.66, 'optionb'),
(162, 9, 55, 2, 'optionb'),
(162, 11, 1, -0.66, 'optionc'),
(162, 11, 2, -0.66, 'optiond'),
(162, 11, 3, -0.66, 'optiond'),
(162, 11, 4, 2, 'optiond'),
(162, 11, 5, 2, 'optionb'),
(162, 11, 6, 2, 'optionb'),
(162, 11, 7, 2, 'optionb'),
(162, 11, 8, 2, 'optiona'),
(162, 11, 9, 2, 'optionc'),
(162, 11, 11, 2, 'optiona'),
(162, 11, 12, 2, 'optiona'),
(162, 11, 13, 2, 'optionb'),
(162, 11, 14, 2, 'optionc'),
(162, 11, 15, 2, 'optionc'),
(162, 11, 18, 2, 'optionb'),
(162, 11, 19, 2, 'optionb'),
(162, 11, 20, 2, 'optiona'),
(162, 11, 21, 2, 'optionc'),
(162, 11, 22, 2, 'optiona'),
(162, 11, 24, 2, 'optiona'),
(162, 11, 25, 2, 'optionb'),
(162, 11, 26, 2, 'optionc'),
(162, 11, 27, 2, 'optione'),
(162, 11, 28, -0.66, 'optiond'),
(162, 11, 29, 2, 'optiond'),
(162, 11, 31, 2, 'optione'),
(162, 11, 32, 2, 'optionc'),
(162, 11, 33, -0.66, 'optione'),
(162, 11, 34, 2, 'optiond'),
(162, 11, 35, 2, 'optiond'),
(162, 11, 36, 2, 'optione'),
(162, 11, 37, 2, 'optionb'),
(162, 11, 38, 2, 'optiona'),
(162, 11, 40, 2, 'optiond'),
(162, 11, 41, 2, 'optionc'),
(162, 11, 43, 2, 'optiond'),
(162, 11, 45, 2, 'optiona'),
(162, 11, 46, 2, 'optiona'),
(162, 11, 48, 2, 'optiond'),
(162, 11, 49, 2, 'optiond'),
(162, 11, 52, -0.66, 'optionc'),
(162, 11, 53, 2, 'optionc'),
(162, 11, 55, -0.66, 'optionc'),
(162, 11, 56, 2, 'optione'),
(162, 11, 57, 2, 'optionc'),
(162, 11, 58, 2, 'optione'),
(162, 11, 59, -0.66, 'optiond'),
(162, 11, 60, 2, 'optiond'),
(162, 12, 2, 2, 'optionc'),
(162, 12, 4, 2, 'optionc'),
(162, 12, 6, -0.66, 'optiona'),
(162, 12, 7, 2, 'optionb'),
(162, 12, 8, 2, 'optionb'),
(162, 12, 9, 2, 'optiona'),
(162, 12, 10, 2, 'optiond'),
(162, 12, 11, 2, 'optionb'),
(162, 12, 12, -0.66, 'optiona'),
(162, 12, 13, 2, 'optionb'),
(162, 12, 14, 2, 'optiona'),
(162, 12, 15, 2, 'optiond'),
(162, 12, 16, 2, 'optionc'),
(162, 12, 17, 2, 'optionc'),
(162, 12, 18, 2, 'optiond'),
(162, 12, 19, 2, 'optionb'),
(162, 12, 20, 2, 'optionb'),
(162, 12, 21, 2, 'optiona'),
(162, 12, 22, 2, 'optiond'),
(162, 12, 23, 2, 'optionb'),
(162, 12, 24, 2, 'optiona'),
(162, 12, 26, 2, 'optionb'),
(162, 12, 27, -0.66, 'optione'),
(162, 12, 28, -0.66, 'optionc'),
(162, 12, 31, 2, 'optionc'),
(162, 12, 32, 2, 'optionc'),
(162, 12, 34, 2, 'optiond'),
(162, 12, 35, -0.66, 'optionb'),
(162, 12, 36, -0.66, 'optionb'),
(162, 12, 38, 2, 'optionc'),
(162, 12, 41, 2, 'optionb'),
(162, 12, 43, 2, 'optiond'),
(162, 12, 44, 2, 'optionb'),
(162, 12, 45, 2, 'optiond'),
(162, 12, 46, -0.66, 'optionb'),
(162, 12, 48, -0.66, 'optionc'),
(162, 12, 50, 2, 'optionb'),
(162, 12, 51, 2, 'optionc'),
(162, 12, 52, 2, 'optionb'),
(162, 12, 53, 2, 'optiona'),
(162, 12, 54, 2, 'optiona'),
(162, 13, 1, 2, 'optionc'),
(162, 13, 2, -0.66, 'optiond'),
(162, 13, 3, -0.66, 'optionb'),
(162, 13, 5, 2, 'optionc'),
(162, 13, 6, -0.66, 'optiona'),
(162, 13, 8, 2, 'optionc'),
(162, 13, 9, 2, 'optione'),
(162, 13, 10, 2, 'optione'),
(162, 13, 11, 2, 'optiond'),
(162, 13, 12, 2, 'optiona'),
(162, 13, 13, 2, 'optiond'),
(162, 13, 15, -0.66, 'optiona'),
(162, 13, 20, 2, 'optiona'),
(162, 13, 22, 2, 'optiona'),
(162, 13, 23, 2, 'optiona'),
(162, 13, 24, -0.66, 'optiond'),
(162, 13, 25, 2, 'optiona'),
(162, 13, 26, -0.66, 'optionb'),
(162, 13, 27, 2, 'optiond'),
(162, 13, 28, 2, 'optionc'),
(162, 13, 29, -0.66, 'optiond'),
(162, 13, 30, 2, 'optiona'),
(162, 13, 31, 2, 'optiond'),
(162, 13, 32, -0.66, 'optionc'),
(162, 13, 34, 2, 'optiona'),
(162, 13, 36, 2, 'optionc'),
(162, 13, 38, 2, 'optionb'),
(162, 13, 39, 2, 'optiona'),
(162, 13, 40, 2, 'optiond'),
(162, 15, 2, 1, 'optiond'),
(162, 15, 6, 1, 'optiona'),
(162, 15, 8, 1, 'optiona'),
(162, 15, 9, 1, 'optionb'),
(162, 15, 10, 1, 'optiona'),
(162, 15, 11, -0.33, 'optiona'),
(162, 15, 12, -0.33, 'optiond'),
(162, 15, 13, 1, 'optionb'),
(162, 15, 14, 1, 'optionc'),
(162, 15, 15, 1, 'optiond'),
(162, 15, 16, -0.33, 'optionc'),
(162, 15, 18, 1, 'optionb'),
(162, 15, 19, 1, 'optionc'),
(162, 15, 21, 1, 'optiona'),
(162, 15, 22, 1, 'optionb'),
(162, 15, 23, 1, 'optiona'),
(162, 15, 24, 1, 'optiona'),
(162, 15, 25, 1, 'optiond'),
(162, 15, 26, 2, 'optiona'),
(162, 15, 27, 2, 'optiona'),
(162, 15, 30, 2, 'optionb'),
(162, 15, 31, 2, 'optiona'),
(162, 15, 32, 2, 'optiona'),
(162, 15, 33, -0.66, 'optionb'),
(162, 15, 37, 2, 'optionb'),
(162, 15, 41, 2, 'optionc'),
(162, 15, 43, 2, 'optiona'),
(162, 15, 44, 2, 'optiond'),
(162, 15, 45, 2, 'optiona'),
(162, 15, 47, 2, 'optiond'),
(162, 15, 48, 2, 'optionc'),
(162, 15, 49, 2, 'optionc'),
(162, 15, 50, -0.66, 'optiona'),
(162, 15, 51, -0.66, 'optiona'),
(162, 15, 52, 2, 'optionc'),
(162, 15, 54, 2, 'optionc'),
(162, 15, 55, 2, 'optionb'),
(162, 15, 58, 1, 'optiond'),
(162, 15, 59, 1, 'optiond'),
(162, 15, 61, -0.66, 'optiona'),
(162, 16, 1, 1, 'optionc'),
(162, 16, 3, 1, 'optiond'),
(162, 16, 6, -0.33, 'optionc'),
(162, 16, 8, 1, 'optiona'),
(162, 16, 10, 1, 'optionc'),
(162, 16, 12, -0.33, 'optionc'),
(162, 16, 16, 1, 'optiond'),
(162, 16, 17, -0.33, 'optiond'),
(162, 16, 19, 1, 'optiond'),
(162, 16, 20, -0.33, 'optionb'),
(162, 16, 21, 1, 'optiond'),
(162, 16, 22, 1, 'optionb'),
(162, 16, 28, 2, 'optiond'),
(162, 16, 30, -0.66, 'optionb'),
(162, 16, 31, -0.66, 'optionc'),
(162, 16, 32, -0.66, 'optionc'),
(162, 16, 33, 2, 'optiond'),
(162, 16, 35, 2, 'optionb'),
(162, 16, 37, 2, 'optionb'),
(162, 16, 38, 2, 'optionb'),
(162, 16, 40, 2, 'optiona'),
(162, 16, 43, 2, 'optiona'),
(162, 16, 44, 2, 'optiond'),
(162, 16, 45, 2, 'optiona'),
(162, 16, 48, 2, 'optiona'),
(162, 16, 50, -0.66, 'optionc'),
(162, 16, 51, -0.66, 'optionb'),
(162, 16, 53, 2, 'optionb'),
(162, 16, 59, 1, 'optionc'),
(162, 16, 60, 1, 'optionc'),
(162, 16, 62, -0.66, 'optionc'),
(162, 16, 64, -0.66, 'optionc'),
(162, 16, 65, 2, 'optiona'),
(162, 17, 2, 1, 'optionb'),
(162, 17, 3, 1, 'optionb'),
(162, 17, 4, -0.33, 'optiona'),
(162, 17, 5, 1, 'optionc'),
(162, 17, 6, 1, 'optiona'),
(162, 17, 7, -0.33, 'optionb'),
(162, 17, 8, 1, 'optiona'),
(162, 17, 9, 1, 'optionb'),
(162, 17, 10, 1, 'optiona'),
(162, 17, 11, 1, 'optiond'),
(162, 17, 12, -0.33, 'optionc'),
(162, 17, 14, 1, 'optionc'),
(162, 17, 18, 1, 'optionb'),
(162, 17, 19, 1, 'optionb'),
(162, 17, 20, -0.33, 'optionb'),
(162, 17, 22, 1, 'optionb'),
(162, 17, 23, 1, 'optiond'),
(162, 17, 24, 1, 'optionb'),
(162, 17, 25, 1, 'optionb'),
(162, 17, 26, 2, 'optionc'),
(162, 17, 28, 2, 'optiond'),
(162, 17, 30, 2, 'optiona'),
(162, 17, 32, 2, 'optiona'),
(162, 17, 33, 2, 'optiona'),
(162, 17, 34, 2, 'optiond'),
(162, 17, 35, 2, 'optionb'),
(162, 17, 36, 2, 'optiond'),
(162, 17, 37, 2, 'optionc'),
(162, 17, 38, 2, 'optionc'),
(162, 17, 41, 2, 'optionc'),
(162, 17, 42, 2, 'optionb'),
(162, 17, 45, 2, 'optionb'),
(162, 17, 47, -0.66, 'optionb'),
(162, 17, 50, 2, 'optiond'),
(162, 17, 52, 2, 'optiond'),
(162, 17, 54, 2, 'optiond'),
(162, 17, 55, 2, 'optiona'),
(162, 17, 58, 1, 'optionc'),
(162, 17, 62, -0.66, 'optiona'),
(162, 17, 65, 2, 'optiond'),
(162, 18, 2, 1, 'optiond'),
(162, 18, 3, 1, 'optionb'),
(162, 18, 4, 1, 'optiona'),
(162, 18, 6, 1, 'optionc'),
(162, 18, 7, 1, 'optionb'),
(162, 18, 8, 1, 'optionb'),
(162, 18, 9, 1, 'optiond'),
(162, 18, 10, -0.33, 'optiond'),
(162, 18, 11, 1, 'optionb'),
(162, 18, 12, 1, 'optiona'),
(162, 18, 14, 1, 'optionc'),
(162, 18, 15, 1, 'optionc'),
(162, 18, 17, 1, 'optionb'),
(162, 18, 19, 1, 'optionc'),
(162, 18, 21, 1, 'optiond'),
(162, 18, 22, 1, 'optiond'),
(162, 18, 23, 1, 'optiond'),
(162, 18, 24, 1, 'optionc'),
(162, 18, 25, 1, 'optionc'),
(162, 18, 26, 2, 'optionb'),
(162, 18, 27, 2, 'optiond'),
(162, 18, 28, 2, 'optiona'),
(162, 18, 29, 2, 'optiond'),
(162, 18, 30, 2, 'optionc'),
(162, 18, 31, 2, 'optiona'),
(162, 18, 32, 2, 'optionb'),
(162, 18, 33, 2, 'optiond'),
(162, 18, 34, 2, 'optiona'),
(162, 18, 35, 2, 'optiond'),
(162, 18, 36, 2, 'optiona'),
(162, 18, 37, 2, 'optionc'),
(162, 18, 38, 2, 'optionb'),
(162, 18, 42, 2, 'optionb'),
(162, 18, 45, -0.66, 'optiond'),
(162, 18, 47, 2, 'optiond'),
(162, 18, 49, 2, 'optionc'),
(162, 18, 50, 2, 'optionc'),
(162, 18, 51, -0.66, 'optiond'),
(162, 18, 54, 2, 'optiona'),
(162, 18, 56, 1, 'optione'),
(162, 18, 57, 1, 'optionb'),
(162, 18, 58, 1, 'optionc'),
(162, 18, 59, 1, 'optionc'),
(162, 18, 60, 1, 'optiona'),
(162, 18, 61, 2, 'optionb'),
(162, 18, 62, -0.66, 'optiona'),
(162, 18, 65, 2, 'optiond'),
(163, 15, 1, 1, 'optionc'),
(163, 16, 18, -0.33, 'optiona'),
(145, 8, 1, 1, 'optione'),
(145, 8, 2, 1, 'optiona'),
(145, 8, 3, -0.33, 'optionc'),
(145, 8, 4, -0.33, 'optionb'),
(145, 8, 5, 1, 'optionc'),
(145, 8, 6, 1, 'optiond'),
(145, 8, 7, 1, 'optionb'),
(145, 8, 8, 1, 'optionb'),
(145, 8, 9, 1, 'optiond'),
(145, 8, 10, 1, 'optionc'),
(145, 8, 11, 1, 'optiond'),
(145, 8, 12, 1, 'optiona'),
(145, 8, 13, 1, 'optionb'),
(145, 8, 15, -0.33, 'optiona'),
(145, 8, 16, 1, 'optionc'),
(145, 8, 17, 1, 'optione'),
(145, 8, 18, -0.33, 'optiona'),
(145, 8, 19, 1, 'optiona'),
(160, 11, 1, -0.66, 'optiond'),
(160, 11, 2, 2, 'optionc'),
(160, 11, 3, -0.66, 'optionc'),
(160, 11, 4, 2, 'optiond'),
(160, 11, 5, 2, 'optionb'),
(160, 11, 6, 2, 'optionb'),
(160, 11, 11, -0.66, 'optiond'),
(160, 11, 12, -0.66, 'optiond'),
(160, 11, 15, -0.66, 'optiona'),
(160, 11, 17, 2, 'optiona'),
(160, 11, 18, 2, 'optionb'),
(160, 11, 19, -0.66, 'optiona'),
(160, 11, 20, -0.66, 'optiond'),
(160, 11, 21, 2, 'optionc'),
(160, 11, 22, 2, 'optiona'),
(160, 11, 23, -0.66, 'optionb'),
(160, 11, 24, -0.66, 'optiond'),
(160, 11, 25, 2, 'optionb'),
(160, 11, 26, 2, 'optionc'),
(160, 11, 27, 2, 'optione'),
(160, 11, 28, -0.66, 'optiond'),
(160, 11, 29, 2, 'optiond'),
(160, 11, 31, -0.66, 'optiond'),
(160, 11, 32, 2, 'optionc'),
(160, 11, 33, -0.66, 'optione'),
(160, 11, 34, 2, 'optiond'),
(160, 11, 35, 2, 'optiond'),
(160, 11, 36, 2, 'optione'),
(160, 11, 37, -0.66, 'optiond'),
(160, 11, 38, 2, 'optiona'),
(160, 11, 39, 2, 'optiona'),
(160, 11, 40, 2, 'optiond'),
(160, 11, 41, 2, 'optionc'),
(160, 11, 42, 2, 'optione'),
(160, 11, 43, -0.66, 'optiona'),
(160, 11, 44, -0.66, 'optiond'),
(160, 11, 45, 2, 'optiona'),
(160, 11, 46, 2, 'optiona'),
(160, 11, 48, 2, 'optiond'),
(160, 11, 49, 2, 'optiond'),
(160, 11, 50, -0.66, 'optione'),
(160, 11, 51, -0.66, 'optionc'),
(160, 11, 52, -0.66, 'optionc'),
(160, 11, 53, 2, 'optionc'),
(160, 11, 54, 2, 'optionb'),
(160, 11, 55, -0.66, 'optionc'),
(160, 11, 56, 2, 'optione'),
(160, 11, 57, 2, 'optionc'),
(160, 11, 58, 2, 'optione'),
(160, 11, 60, -0.66, 'optione'),
(108, 10, 1, 2, 'optione'),
(108, 10, 2, 2, 'optionb'),
(108, 10, 3, 2, 'optiond'),
(108, 10, 4, 2, 'optionc'),
(108, 10, 5, 2, 'optionb'),
(108, 10, 6, 2, 'optionb'),
(108, 10, 8, 2, 'optione'),
(108, 10, 9, 2, 'optionc'),
(108, 10, 10, 2, 'optiond'),
(108, 10, 11, 2, 'optionc'),
(108, 10, 12, 2, 'optionb'),
(108, 10, 13, 2, 'optionc'),
(108, 10, 14, 2, 'optionb'),
(108, 10, 15, 2, 'optiond'),
(108, 10, 16, 2, 'optiona'),
(108, 10, 17, 2, 'optionb'),
(108, 10, 19, 2, 'optiona'),
(108, 10, 21, 2, 'optionb'),
(108, 10, 23, 2, 'optiond'),
(160, 16, 1, 1, 'optionc'),
(160, 16, 3, 1, 'optiond'),
(160, 16, 9, -0.33, 'optiona'),
(160, 16, 10, 1, 'optionc'),
(160, 16, 14, -0.33, 'optionc'),
(160, 16, 15, -0.33, 'optiond'),
(160, 16, 16, 1, 'optiond'),
(160, 16, 19, -0.33, 'optionb'),
(160, 16, 20, 1, 'optiona'),
(160, 16, 21, -0.33, 'optiona'),
(160, 16, 22, 1, 'optionb'),
(160, 16, 28, -0.66, 'optionc'),
(160, 16, 29, -0.66, 'optiona'),
(160, 16, 30, -0.66, 'optiond'),
(160, 16, 31, 2, 'optiond'),
(160, 16, 32, -0.66, 'optionb'),
(160, 16, 34, 2, 'optiona'),
(160, 16, 35, 2, 'optionb'),
(160, 16, 36, 2, 'optionc'),
(160, 16, 37, 2, 'optionb'),
(160, 16, 41, -0.66, 'optiond'),
(160, 16, 44, -0.66, 'optionb'),
(160, 16, 45, -0.66, 'optiond'),
(160, 16, 47, -0.66, 'optiond'),
(160, 16, 48, 2, 'optiona'),
(160, 16, 49, -0.66, 'optiona'),
(160, 16, 51, 2, 'optiona'),
(160, 16, 60, -0.33, 'optiona'),
(160, 16, 61, -0.66, 'optiona'),
(160, 16, 62, 2, 'optiond'),
(166, 11, 1, -0.66, 'optiond'),
(166, 11, 2, -0.66, 'optiond'),
(166, 11, 3, -0.66, 'optionc'),
(166, 11, 4, 2, 'optiond'),
(166, 11, 5, 2, 'optionb'),
(160, 17, 1, -0.33, 'optionb'),
(160, 17, 2, 1, 'optionb'),
(160, 17, 3, 1, 'optionb'),
(160, 17, 4, -0.33, 'optiona'),
(160, 17, 5, 1, 'optionc'),
(160, 17, 6, 1, 'optiona'),
(160, 17, 8, 1, 'optiona'),
(160, 17, 10, -0.33, 'optionc'),
(160, 17, 11, -0.33, 'optionb'),
(160, 17, 12, 1, 'optiona'),
(160, 17, 13, -0.33, 'optiond'),
(160, 17, 14, 1, 'optionc'),
(160, 17, 17, -0.33, 'optionc'),
(160, 17, 18, -0.33, 'optiona'),
(160, 17, 20, -0.33, 'optionb'),
(160, 17, 21, -0.33, 'optiona'),
(160, 17, 22, -0.33, 'optionc'),
(160, 17, 23, 1, 'optiond'),
(160, 17, 24, -0.33, 'optiona'),
(160, 17, 25, 1, 'optionb'),
(160, 17, 26, 2, 'optionc'),
(160, 17, 28, 2, 'optiond'),
(160, 17, 30, -0.66, 'optionc'),
(160, 17, 31, 2, 'optiond'),
(160, 17, 33, 2, 'optiona'),
(160, 17, 35, 2, 'optionb'),
(160, 17, 37, 2, 'optionc'),
(160, 17, 38, -0.66, 'optiona'),
(160, 17, 41, 2, 'optionc'),
(160, 17, 43, -0.66, 'optiona'),
(160, 17, 45, -0.66, 'optionc'),
(160, 17, 47, -0.66, 'optionb'),
(160, 17, 48, 2, 'optiond'),
(160, 17, 56, 1, 'optiona'),
(160, 17, 58, -0.33, 'optiona'),
(160, 17, 59, -0.33, 'optiona'),
(160, 17, 61, -0.66, 'optiona'),
(160, 17, 63, 2, 'optiona'),
(160, 17, 65, 2, 'optiond'),
(160, 4, 1, 1, 'optiona'),
(160, 4, 3, 1, 'optionc'),
(160, 4, 4, 1, 'optionc'),
(160, 4, 5, -0.33, 'optionc'),
(160, 4, 6, 1, 'optiond'),
(160, 4, 7, -0.33, 'optionc'),
(160, 4, 9, -0.33, 'optionc'),
(160, 4, 10, 1, 'optionc'),
(160, 4, 12, 1, 'optionc'),
(160, 4, 13, 1, 'optionb'),
(160, 4, 14, 1, 'optiond'),
(160, 4, 15, 1, 'optiona'),
(160, 4, 16, 1, 'optiona'),
(160, 4, 17, 1, 'optiond'),
(160, 4, 18, 1, 'optionc'),
(160, 4, 20, 1, 'optiona'),
(160, 4, 21, -0.66, 'optionc'),
(160, 4, 22, 2, 'optionc'),
(160, 4, 24, 2, 'optionc'),
(160, 4, 25, 2, 'optiona'),
(160, 4, 28, 2, 'optiond'),
(160, 4, 29, -0.66, 'optiond'),
(160, 4, 31, -0.66, 'optiona'),
(160, 4, 32, 2, 'optiond'),
(160, 4, 33, 2, 'optionc'),
(160, 4, 34, 2, 'optiona'),
(160, 4, 36, 2, 'optionc'),
(160, 4, 37, 2, 'optiond'),
(160, 4, 38, 2, 'optiond'),
(160, 4, 39, 2, 'optionb'),
(160, 4, 40, -0.66, 'optiond'),
(177, 8, 1, -0.33, 'optionc'),
(177, 8, 2, 1, 'optiona'),
(177, 8, 3, -0.33, 'optionc'),
(177, 8, 4, -0.33, 'optionc'),
(177, 8, 5, 1, 'optionc'),
(177, 8, 6, 1, 'optiond'),
(177, 8, 7, -0.33, 'optiona'),
(177, 8, 8, -0.33, 'optiond'),
(177, 8, 9, 1, 'optiond'),
(177, 8, 10, -0.33, 'optiona'),
(177, 8, 11, 1, 'optiond'),
(177, 8, 12, 1, 'optiona'),
(177, 8, 13, 1, 'optionb'),
(177, 8, 14, 1, 'optiona'),
(177, 8, 15, -0.33, 'optiona'),
(177, 8, 17, -0.33, 'optionb'),
(177, 8, 18, -0.33, 'optiond'),
(177, 8, 19, 1, 'optiona'),
(177, 8, 20, -0.33, 'optionc'),
(177, 8, 26, 1, 'optiond'),
(177, 8, 27, 1, 'optiond'),
(177, 8, 29, 1, 'optionb'),
(177, 8, 30, 1, 'optionc'),
(177, 8, 31, 1, 'optionc'),
(177, 8, 32, 1, 'optionb'),
(177, 8, 34, 1, 'optiond'),
(177, 8, 35, 1, 'optionc'),
(177, 8, 36, 1, 'optionc'),
(177, 8, 37, -0.33, 'optionb'),
(177, 8, 38, -0.33, 'optionc'),
(177, 8, 39, 1, 'optiond'),
(177, 8, 40, 1, 'optionc'),
(177, 8, 41, 1, 'optiona'),
(177, 8, 42, 1, 'optiond'),
(177, 8, 43, 1, 'optionb'),
(177, 8, 44, -0.33, 'optiona'),
(177, 8, 45, -0.33, 'optionc'),
(72, 18, 1, -0.33, 'optionc'),
(72, 18, 2, 1, 'optiond'),
(72, 18, 3, 1, 'optionb'),
(72, 18, 4, 1, 'optiona'),
(72, 18, 6, 1, 'optionc'),
(72, 18, 8, -0.33, 'optiona'),
(72, 18, 9, 1, 'optiond'),
(72, 18, 10, 1, 'optionb'),
(72, 18, 11, -0.33, 'optionc'),
(72, 18, 12, 1, 'optiona'),
(72, 18, 13, 1, 'optiond'),
(72, 18, 14, 1, 'optionc'),
(72, 18, 15, 1, 'optionc'),
(72, 18, 18, -0.33, 'optionb'),
(72, 18, 19, 1, 'optionc'),
(72, 18, 20, -0.33, 'optiona'),
(72, 18, 21, 1, 'optiond'),
(72, 18, 22, 1, 'optiond'),
(72, 18, 23, 1, 'optiond'),
(72, 18, 24, 1, 'optionc'),
(72, 18, 25, 1, 'optionc'),
(72, 18, 26, 2, 'optionb'),
(72, 18, 29, 2, 'optiond'),
(72, 18, 30, 2, 'optionc'),
(72, 18, 31, 2, 'optiona'),
(72, 18, 32, 2, 'optionb'),
(72, 18, 33, 2, 'optiond'),
(72, 18, 34, 2, 'optiona'),
(72, 18, 36, 2, 'optiona'),
(72, 18, 38, 2, 'optionb'),
(72, 18, 39, -0.66, 'optionc'),
(72, 18, 40, -0.66, 'optionc'),
(72, 18, 42, 2, 'optionb'),
(72, 18, 45, -0.66, 'optionc'),
(72, 18, 46, -0.66, 'optionb'),
(72, 18, 47, 2, 'optiond'),
(72, 18, 48, 2, 'optionb'),
(72, 18, 49, 2, 'optionc'),
(72, 18, 50, 2, 'optionc'),
(72, 18, 51, -0.66, 'optiond'),
(72, 18, 52, 2, 'optiona'),
(72, 18, 53, 2, 'optiona'),
(72, 18, 54, 2, 'optiona'),
(72, 18, 56, 1, 'optione'),
(72, 18, 57, 1, 'optionb'),
(72, 18, 59, 1, 'optionc'),
(72, 18, 61, 2, 'optionb'),
(72, 18, 62, 2, 'optiond'),
(72, 18, 63, 2, 'optiona'),
(72, 18, 64, 2, 'optionb'),
(72, 18, 65, 2, 'optiond'),
(72, 4, 1, 1, 'optiona'),
(72, 4, 2, 1, 'optiond'),
(72, 4, 3, 1, 'optionc'),
(72, 4, 4, 1, 'optionc'),
(72, 4, 5, -0.33, 'optionc'),
(72, 4, 6, -0.33, 'optionc'),
(72, 4, 8, 1, 'optionb'),
(72, 4, 9, 1, 'optionb'),
(72, 4, 10, 1, 'optionc'),
(72, 4, 12, 1, 'optionc'),
(72, 4, 13, 1, 'optionb'),
(72, 4, 14, 1, 'optiond');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(72, 4, 15, 1, 'optiona'),
(72, 4, 16, 1, 'optiona'),
(72, 4, 17, 1, 'optiond'),
(72, 4, 18, 1, 'optionc'),
(72, 4, 19, 1, 'optionb'),
(72, 4, 20, 1, 'optiona'),
(72, 4, 23, 2, 'optionb'),
(72, 4, 24, 2, 'optionc'),
(72, 4, 25, 2, 'optiona'),
(72, 4, 28, -0.66, 'optiona'),
(72, 4, 29, 2, 'optionb'),
(72, 4, 32, 2, 'optiond'),
(72, 4, 33, 2, 'optionc'),
(72, 4, 34, 2, 'optiona'),
(72, 4, 36, -0.66, 'optionb'),
(72, 4, 37, 2, 'optiond'),
(72, 4, 38, 2, 'optiond'),
(72, 4, 39, 2, 'optionb'),
(72, 4, 40, 2, 'optiona'),
(72, 4, 41, 4, 'optionc'),
(72, 4, 46, -1.33, 'optiond'),
(72, 4, 50, -1.33, 'optionb'),
(160, 9, 2, 2, 'optionb'),
(160, 9, 5, 2, 'optiond'),
(160, 9, 7, -0.66, 'optionb'),
(160, 9, 9, 2, 'optionb'),
(160, 9, 10, 2, 'optionc'),
(160, 9, 11, 2, 'optiona'),
(160, 9, 12, -0.66, 'optionc'),
(160, 9, 15, -0.66, 'optiond'),
(160, 9, 21, 2, 'optionc'),
(160, 9, 25, -0.66, 'optionb'),
(160, 9, 26, -0.66, 'optiona'),
(160, 9, 28, -0.66, 'optiona'),
(160, 9, 29, 2, 'optionc'),
(160, 9, 30, 2, 'optionb'),
(160, 9, 31, 2, 'optione'),
(160, 9, 34, 2, 'optiond'),
(160, 9, 35, 2, 'optionb'),
(160, 9, 37, 2, 'optionb'),
(160, 9, 39, -0.66, 'optiona'),
(160, 9, 45, 2, 'optionc'),
(160, 9, 46, 2, 'optiond'),
(160, 9, 47, 2, 'optionc'),
(160, 9, 48, 2, 'optionc'),
(68, 9, 2, 2, 'optionb'),
(68, 9, 4, 2, 'optiona'),
(68, 9, 5, 2, 'optiond'),
(68, 9, 6, 2, 'optiond'),
(68, 9, 7, 2, 'optionc'),
(68, 9, 10, 2, 'optionc'),
(68, 9, 12, 2, 'optiona'),
(68, 9, 17, -0.66, 'optiond'),
(68, 9, 19, 2, 'optionc'),
(68, 9, 21, -0.66, 'optiona'),
(68, 9, 25, 2, 'optiond'),
(68, 9, 26, 2, 'optionc'),
(68, 9, 27, 2, 'optionb'),
(68, 9, 28, 2, 'optionb'),
(68, 9, 29, 2, 'optionc'),
(68, 9, 30, 2, 'optionb'),
(68, 9, 31, -0.66, 'optiond'),
(68, 9, 32, 2, 'optionb'),
(68, 9, 34, 2, 'optiond'),
(68, 9, 35, 2, 'optionb'),
(68, 9, 37, 2, 'optionb'),
(68, 9, 39, 2, 'optiond'),
(68, 9, 42, 2, 'optionb'),
(68, 9, 43, -0.66, 'optiona'),
(68, 9, 45, 2, 'optionc'),
(68, 9, 46, 2, 'optiond'),
(68, 9, 47, -0.66, 'optiond'),
(68, 9, 48, -0.66, 'optiond'),
(68, 9, 50, 2, 'optionb'),
(108, 18, 2, 1, 'optiond'),
(108, 18, 3, 1, 'optionb'),
(108, 18, 4, 1, 'optiona'),
(108, 18, 6, -0.33, 'optiona'),
(108, 18, 7, 1, 'optionb'),
(108, 18, 9, 1, 'optiond'),
(108, 18, 10, -0.33, 'optiond'),
(108, 18, 11, 1, 'optionb'),
(108, 18, 12, 1, 'optiona'),
(108, 18, 13, 1, 'optiond'),
(108, 18, 14, 1, 'optionc'),
(108, 18, 15, 1, 'optionc'),
(108, 18, 17, 1, 'optionb'),
(108, 18, 18, -0.33, 'optionb'),
(108, 18, 19, -0.33, 'optiona'),
(108, 18, 20, 1, 'optionb'),
(108, 18, 21, 1, 'optiond'),
(108, 18, 23, -0.33, 'optiona'),
(108, 18, 24, 1, 'optionc'),
(108, 18, 25, 1, 'optionc'),
(108, 18, 26, 2, 'optionb'),
(108, 18, 27, 2, 'optiond'),
(108, 18, 29, 2, 'optiond'),
(108, 18, 30, -0.66, 'optionb'),
(108, 18, 32, 2, 'optionb'),
(108, 18, 33, 2, 'optiond'),
(108, 18, 34, 2, 'optiona'),
(108, 18, 37, 2, 'optionc'),
(108, 18, 38, 2, 'optionb'),
(108, 18, 42, 2, 'optionb'),
(108, 18, 45, -0.66, 'optionc'),
(108, 18, 47, 2, 'optiond'),
(108, 18, 49, 2, 'optionc'),
(108, 18, 51, -0.66, 'optionc'),
(108, 18, 56, 1, 'optione'),
(108, 18, 58, 1, 'optionc'),
(108, 18, 59, 1, 'optionc'),
(108, 18, 60, 1, 'optiona'),
(108, 18, 61, 2, 'optionb'),
(108, 18, 62, 2, 'optiond'),
(108, 18, 64, 2, 'optionb'),
(108, 18, 65, 2, 'optiond'),
(108, 17, 2, 1, 'optionb'),
(108, 17, 3, 1, 'optionb'),
(108, 17, 5, 1, 'optionc'),
(108, 17, 6, 1, 'optiona'),
(108, 17, 7, 1, 'optionc'),
(108, 17, 8, -0.33, 'optionb'),
(108, 17, 12, 1, 'optiona'),
(108, 17, 13, 1, 'optionb'),
(108, 17, 14, 1, 'optionc'),
(108, 17, 19, 1, 'optionb'),
(108, 17, 21, 1, 'optionc'),
(108, 17, 22, 1, 'optionb'),
(108, 17, 23, 1, 'optiond'),
(108, 17, 25, -0.33, 'optionc'),
(108, 17, 26, 2, 'optionc'),
(108, 17, 28, 2, 'optiond'),
(108, 17, 29, 2, 'optiond'),
(108, 17, 30, 2, 'optiona'),
(108, 17, 32, 2, 'optiona'),
(108, 17, 33, 2, 'optiona'),
(108, 17, 34, 2, 'optiond'),
(108, 17, 37, 2, 'optionc'),
(108, 17, 40, 2, 'optionb'),
(108, 17, 41, 2, 'optionc'),
(108, 17, 42, 2, 'optionb'),
(108, 17, 47, -0.66, 'optionb'),
(108, 17, 48, -0.66, 'optionc'),
(108, 17, 50, -0.66, 'optionb'),
(108, 17, 52, 2, 'optiond'),
(108, 17, 53, -0.66, 'optiond'),
(108, 17, 54, 2, 'optiond'),
(108, 17, 55, 2, 'optiona'),
(108, 17, 56, 1, 'optiona'),
(108, 17, 57, -0.33, 'optionc'),
(108, 17, 58, 1, 'optionc'),
(108, 17, 59, 1, 'optiond'),
(108, 17, 61, 2, 'optionb'),
(108, 17, 63, 2, 'optiona'),
(108, 17, 65, -0.66, 'optionb'),
(111, 18, 1, -0.33, 'optionb'),
(111, 18, 2, 1, 'optiond'),
(111, 18, 3, -0.33, 'optiona'),
(111, 18, 4, 1, 'optiona'),
(111, 18, 6, -0.33, 'optiona'),
(111, 18, 7, 1, 'optionb'),
(111, 18, 9, -0.33, 'optionb'),
(111, 18, 10, -0.33, 'optionc'),
(111, 18, 11, -0.33, 'optionc'),
(111, 18, 13, -0.33, 'optionb'),
(111, 18, 14, 1, 'optionc'),
(111, 18, 19, -0.33, 'optiona'),
(111, 18, 20, -0.33, 'optionc'),
(111, 18, 23, -0.33, 'optiona'),
(111, 18, 24, 1, 'optionc'),
(111, 18, 25, -0.33, 'optiond'),
(111, 18, 26, 2, 'optionb'),
(111, 18, 27, -0.66, 'optiona'),
(111, 18, 29, 2, 'optiond'),
(111, 18, 30, -0.66, 'optionb'),
(111, 18, 31, 2, 'optiona'),
(111, 18, 32, -0.66, 'optionc'),
(111, 18, 35, -0.66, 'optionb'),
(111, 18, 36, -0.66, 'optionb'),
(111, 18, 37, 2, 'optionc'),
(111, 18, 38, 2, 'optionb'),
(111, 18, 42, 2, 'optionb'),
(111, 18, 45, -0.66, 'optionc'),
(111, 18, 49, -0.66, 'optionb'),
(111, 18, 50, 2, 'optionc'),
(111, 18, 51, -0.66, 'optionb'),
(111, 18, 56, 1, 'optione'),
(111, 18, 58, 1, 'optionc'),
(111, 18, 60, 1, 'optiona'),
(111, 18, 61, 2, 'optionb'),
(111, 18, 64, 2, 'optionb'),
(111, 18, 65, 2, 'optiond'),
(123, 7, 1, 1, 'optionc'),
(123, 7, 2, 1, 'optiond'),
(123, 7, 3, -0.33, 'optiond'),
(123, 7, 4, 1, 'optiond'),
(123, 7, 5, 1, 'optionc'),
(123, 7, 7, -0.33, 'optionc'),
(123, 7, 8, 1, 'optionb'),
(123, 7, 9, 1, 'optiona'),
(123, 7, 10, 1, 'optionc'),
(123, 7, 11, 1, 'optiona'),
(123, 7, 12, -0.33, 'optiond'),
(123, 7, 14, 1, 'optionc'),
(123, 7, 15, 1, 'optionb'),
(123, 7, 16, -0.33, 'optionb'),
(123, 7, 17, -0.33, 'optionb'),
(123, 7, 18, 1, 'optiona'),
(123, 7, 19, -0.33, 'optionc'),
(123, 7, 20, 1, 'optiona'),
(123, 7, 21, -0.33, 'optionc'),
(123, 7, 22, 1, 'optiond'),
(123, 7, 23, 1, 'optiond'),
(123, 7, 24, 1, 'optiona'),
(123, 7, 25, -0.33, 'optiond'),
(123, 7, 26, 2, 'optiona'),
(123, 7, 27, -0.66, 'optiond'),
(123, 7, 28, 2, 'optiona'),
(123, 7, 30, 2, 'optionc'),
(123, 7, 31, 2, 'optiona'),
(123, 7, 32, -0.66, 'optionb'),
(123, 7, 33, 2, 'optiond'),
(123, 7, 34, 2, 'optiond'),
(123, 7, 35, 2, 'optionc'),
(123, 7, 36, 2, 'optionc'),
(123, 7, 37, 2, 'optionc'),
(123, 7, 38, -0.66, 'optionb'),
(123, 7, 39, -0.66, 'optiona'),
(123, 7, 40, 2, 'optionb'),
(123, 7, 41, 2, 'optionc'),
(123, 7, 42, -0.66, 'optiona'),
(123, 7, 43, 2, 'optionb'),
(123, 7, 44, -0.66, 'optionc'),
(123, 7, 45, 2, 'optiond'),
(123, 7, 46, -0.66, 'optionc'),
(123, 7, 47, 2, 'optionb'),
(123, 7, 50, 2, 'optionc'),
(123, 7, 51, 2, 'optionb'),
(123, 7, 52, 2, 'optiona'),
(123, 7, 53, 2, 'optionb'),
(123, 7, 54, 2, 'optiond'),
(123, 7, 56, 1, 'optiona'),
(123, 7, 57, 1, 'optionc'),
(123, 7, 58, -0.33, 'optionc'),
(123, 7, 59, 1, 'optiond'),
(123, 7, 60, 1, 'optionc'),
(123, 7, 62, 2, 'optionc'),
(123, 7, 63, 2, 'optiond'),
(123, 7, 64, 2, 'optionc'),
(123, 7, 65, 2, 'optionb'),
(44, 4, 1, 1, 'optiona'),
(44, 4, 2, 1, 'optiond'),
(44, 4, 3, 1, 'optionc'),
(44, 4, 4, 1, 'optionc'),
(44, 4, 5, -0.33, 'optionc'),
(44, 4, 6, -0.33, 'optionc'),
(44, 4, 7, 1, 'optiond'),
(44, 4, 8, -0.33, 'optiona'),
(44, 4, 9, 1, 'optionb'),
(44, 4, 10, -0.33, 'optionb'),
(44, 4, 12, 1, 'optionc'),
(44, 4, 13, -0.33, 'optionc'),
(44, 4, 14, 1, 'optiond'),
(44, 4, 15, 1, 'optiona'),
(44, 4, 17, 1, 'optiond'),
(44, 4, 18, 1, 'optionc'),
(44, 4, 19, 1, 'optionb'),
(44, 4, 20, -0.33, 'optiond'),
(44, 4, 21, -0.66, 'optiona'),
(44, 4, 22, 2, 'optionc'),
(44, 4, 23, -0.66, 'optione'),
(44, 4, 24, 2, 'optionc'),
(44, 4, 25, 2, 'optiona'),
(44, 4, 28, 2, 'optiond'),
(44, 4, 29, 2, 'optionb'),
(44, 4, 30, 2, 'optionc'),
(44, 4, 32, 2, 'optiond'),
(44, 4, 33, 2, 'optionc'),
(44, 4, 34, -0.66, 'optiond'),
(44, 4, 35, -0.66, 'optionb'),
(44, 4, 36, 2, 'optionc'),
(44, 4, 37, -0.66, 'optionb'),
(44, 4, 39, 2, 'optionb'),
(44, 4, 40, 2, 'optiona'),
(44, 4, 44, -1.33, 'optionc'),
(44, 4, 50, -1.33, 'optionb'),
(69, 15, 2, 1, 'optiond'),
(69, 15, 3, -0.33, 'optiona'),
(69, 15, 6, 1, 'optiona'),
(69, 15, 10, -0.33, 'optionb'),
(69, 15, 11, 1, 'optiond'),
(69, 15, 13, 1, 'optionb'),
(69, 15, 14, 1, 'optionc'),
(69, 15, 15, 1, 'optiond'),
(69, 15, 16, -0.33, 'optiona'),
(69, 15, 17, 1, 'optionb'),
(69, 15, 18, 1, 'optionb'),
(69, 15, 19, 1, 'optionc'),
(69, 15, 20, 1, 'optionb'),
(69, 15, 21, -0.33, 'optionc'),
(69, 15, 22, 1, 'optionb'),
(69, 15, 23, 1, 'optiona'),
(69, 15, 24, 1, 'optiona'),
(69, 15, 25, 1, 'optiond'),
(69, 15, 27, 2, 'optiona'),
(69, 15, 30, 2, 'optionb'),
(69, 15, 31, 2, 'optiona'),
(69, 15, 32, 2, 'optiona'),
(69, 15, 33, -0.66, 'optionb'),
(69, 15, 34, -0.66, 'optiond'),
(69, 15, 35, 2, 'optionc'),
(69, 15, 36, 2, 'optiond'),
(69, 15, 37, 2, 'optionb'),
(69, 15, 38, -0.66, 'optiona'),
(69, 15, 39, 2, 'optionb'),
(69, 15, 40, 2, 'optiond'),
(69, 15, 41, 2, 'optionc'),
(69, 15, 43, 2, 'optiona'),
(69, 15, 44, 2, 'optiond'),
(69, 15, 45, 2, 'optiona'),
(69, 15, 47, -0.66, 'optiona'),
(69, 15, 48, 2, 'optionc'),
(69, 15, 49, -0.66, 'optiona'),
(69, 15, 50, -0.66, 'optionb'),
(69, 15, 51, -0.66, 'optiona'),
(69, 15, 52, 2, 'optionc'),
(69, 15, 54, -0.66, 'optionb'),
(69, 15, 55, -0.66, 'optiond'),
(69, 15, 56, -0.33, 'optiona'),
(69, 15, 57, -0.33, 'optionc'),
(69, 15, 58, -0.33, 'optiona'),
(69, 15, 59, 1, 'optiond'),
(69, 15, 62, 2, 'optionb'),
(160, 10, 1, 2, 'optione'),
(160, 10, 2, 2, 'optionb'),
(160, 10, 5, 2, 'optionb'),
(160, 10, 6, 2, 'optionb'),
(160, 10, 7, 2, 'optiona'),
(160, 10, 8, -0.66, 'optionb'),
(160, 10, 9, 2, 'optionc'),
(160, 10, 10, 2, 'optiond'),
(160, 10, 11, 2, 'optionc'),
(160, 10, 12, 2, 'optionb'),
(160, 10, 13, 2, 'optionc'),
(160, 10, 14, 2, 'optionb'),
(160, 10, 15, -0.66, 'optiona'),
(160, 10, 16, 2, 'optiona'),
(160, 10, 17, 2, 'optionb'),
(160, 10, 19, 2, 'optiona'),
(160, 10, 21, 2, 'optionb'),
(160, 10, 22, 2, 'optionb'),
(160, 10, 23, -0.66, 'optionc'),
(164, 7, 1, 1, 'optionc'),
(164, 7, 2, 1, 'optiond'),
(164, 7, 3, -0.33, 'optiona'),
(164, 7, 4, 1, 'optiond'),
(164, 7, 5, -0.33, 'optiona'),
(164, 7, 6, -0.33, 'optione'),
(164, 7, 7, 1, 'optionb'),
(164, 7, 8, 1, 'optionb'),
(164, 7, 9, 1, 'optiona'),
(164, 7, 10, -0.33, 'optionb'),
(164, 7, 11, 1, 'optiona'),
(164, 7, 13, 1, 'optionc'),
(164, 7, 15, 1, 'optionb'),
(164, 7, 16, 1, 'optiona'),
(164, 7, 17, 1, 'optionc'),
(164, 7, 18, 1, 'optiona'),
(164, 7, 19, 1, 'optiond'),
(164, 7, 20, 1, 'optiona'),
(164, 7, 21, -0.33, 'optionc'),
(164, 7, 23, -0.33, 'optionb'),
(164, 7, 24, 1, 'optiona'),
(93, 7, 1, 1, 'optionc'),
(93, 7, 2, 1, 'optiond'),
(93, 7, 3, -0.33, 'optiond'),
(93, 7, 4, 1, 'optiond'),
(93, 7, 5, -0.33, 'optiona'),
(93, 7, 7, -0.33, 'optionc'),
(93, 7, 8, -0.33, 'optiona'),
(93, 7, 9, -0.33, 'optionc'),
(93, 7, 10, 1, 'optionc'),
(93, 7, 11, 1, 'optiona'),
(93, 7, 12, -0.33, 'optionc'),
(93, 7, 14, 1, 'optionc'),
(93, 7, 15, 1, 'optionb'),
(93, 7, 16, 1, 'optiona'),
(93, 7, 17, 1, 'optionc'),
(93, 7, 18, -0.33, 'optionc'),
(93, 7, 19, -0.33, 'optionc'),
(93, 7, 20, 1, 'optiona'),
(93, 7, 21, -0.33, 'optionc'),
(93, 7, 22, -0.33, 'optiona'),
(93, 7, 23, -0.33, 'optionc'),
(93, 7, 24, 1, 'optiona'),
(93, 7, 25, 1, 'optionc'),
(93, 7, 26, 2, 'optiona'),
(93, 7, 30, -0.66, 'optiond'),
(93, 7, 31, 2, 'optiona'),
(93, 7, 33, 2, 'optiond'),
(93, 7, 35, 2, 'optionc'),
(93, 7, 36, -0.66, 'optione'),
(93, 7, 40, 2, 'optionb'),
(93, 7, 41, 2, 'optionc'),
(93, 7, 42, -0.66, 'optiond'),
(93, 7, 44, 2, 'optionb'),
(93, 7, 45, 2, 'optiond'),
(93, 7, 47, 2, 'optionb'),
(93, 7, 48, 2, 'optionb'),
(93, 7, 49, -0.66, 'optiona'),
(93, 7, 50, 2, 'optionc'),
(93, 7, 51, -0.66, 'optiona'),
(93, 7, 52, 2, 'optiona'),
(93, 7, 53, 2, 'optionb'),
(93, 7, 54, 2, 'optiond'),
(93, 7, 55, -0.66, 'optiond'),
(93, 7, 56, 1, 'optiona'),
(93, 7, 59, -0.33, 'optionb'),
(93, 7, 61, 2, 'optionb'),
(93, 7, 62, 2, 'optionc'),
(93, 7, 63, 2, 'optiond'),
(93, 7, 65, 2, 'optionb'),
(160, 19, 2, -0.33, 'optionb'),
(160, 19, 3, 1, 'optiona'),
(160, 19, 4, -0.33, 'optionb'),
(160, 19, 5, -0.33, 'optionc'),
(160, 19, 6, 1, 'optiona'),
(160, 19, 7, 1, 'optionc'),
(160, 19, 13, -0.33, 'optionb'),
(160, 19, 15, -0.33, 'optiond'),
(160, 19, 16, 1, 'optiond'),
(160, 19, 17, 1, 'optiond'),
(160, 19, 19, -0.33, 'optionb'),
(160, 19, 21, 1, 'optiond'),
(160, 19, 22, -0.33, 'optiond'),
(160, 19, 24, 1, 'optionb'),
(160, 19, 25, 1, 'optionb'),
(160, 19, 32, 2, 'optiond'),
(160, 19, 35, 2, 'optionb'),
(160, 19, 39, 2, 'optionb'),
(160, 19, 40, -0.66, 'optionc'),
(160, 19, 43, -0.66, 'optiond'),
(160, 19, 44, 2, 'optionc'),
(160, 19, 45, 2, 'optionc'),
(160, 19, 48, 2, 'optiond'),
(160, 19, 49, -0.66, 'optiond'),
(160, 19, 50, 2, 'optionb'),
(160, 19, 58, 1, 'optionc'),
(160, 19, 59, 1, 'optionc'),
(160, 19, 61, 2, 'optionb'),
(160, 19, 62, 2, 'optionc'),
(160, 19, 63, -0.66, 'optionb'),
(160, 19, 64, -0.66, 'optiond'),
(85, 19, 2, 1, 'optiona'),
(85, 19, 3, 1, 'optiona'),
(85, 19, 4, -0.33, 'optionc'),
(85, 19, 5, -0.33, 'optionc'),
(85, 19, 6, 1, 'optiona'),
(85, 19, 7, -0.33, 'optiond'),
(85, 19, 9, -0.33, 'optiond'),
(85, 19, 11, -0.33, 'optionb'),
(85, 19, 12, -0.33, 'optiond'),
(85, 19, 14, -0.33, 'optionb'),
(85, 19, 15, -0.33, 'optiond'),
(85, 19, 16, 1, 'optiond'),
(85, 19, 18, 1, 'optionc'),
(85, 19, 21, 1, 'optiond'),
(85, 19, 22, -0.33, 'optiona'),
(85, 19, 23, -0.33, 'optionb'),
(85, 19, 24, -0.33, 'optiona'),
(85, 19, 27, 2, 'optionb'),
(85, 19, 38, 2, 'optionb'),
(85, 19, 40, 2, 'optionb'),
(85, 19, 41, -0.66, 'optiond'),
(85, 19, 43, 2, 'optionb'),
(85, 19, 45, 2, 'optionc'),
(85, 19, 47, 2, 'optionc'),
(85, 19, 48, 2, 'optiond'),
(85, 19, 50, 2, 'optionb'),
(85, 19, 59, -0.33, 'optiond'),
(85, 19, 61, 2, 'optionb'),
(85, 19, 64, -0.66, 'optiond'),
(85, 19, 65, 2, 'optionb'),
(144, 19, 2, 1, 'optiona'),
(144, 19, 3, -0.33, 'optionc'),
(144, 19, 4, 1, 'optiond'),
(144, 19, 5, 1, 'optionb'),
(144, 19, 6, -0.33, 'optiond'),
(144, 19, 7, 1, 'optionc'),
(144, 19, 12, 1, 'optionc'),
(144, 19, 13, -0.33, 'optiona'),
(144, 19, 15, -0.33, 'optiond'),
(144, 19, 16, 1, 'optiond'),
(144, 19, 17, 1, 'optiond'),
(144, 19, 19, 1, 'optiona'),
(144, 19, 21, 1, 'optiond'),
(144, 19, 22, 1, 'optionc'),
(144, 19, 23, 1, 'optiond'),
(144, 19, 24, 1, 'optionb'),
(144, 19, 25, 1, 'optionb'),
(144, 19, 30, 2, 'optionb'),
(144, 19, 32, -0.66, 'optiona'),
(144, 19, 33, -0.66, 'optionb'),
(144, 19, 34, -0.66, 'optionc'),
(144, 19, 35, 2, 'optionb'),
(144, 19, 39, 2, 'optionb'),
(144, 19, 40, 2, 'optionb'),
(144, 19, 41, -0.66, 'optionc'),
(144, 19, 42, -0.66, 'optiona'),
(144, 19, 43, -0.66, 'optiona'),
(144, 19, 44, 2, 'optionc'),
(144, 19, 45, 2, 'optionc'),
(144, 19, 48, 2, 'optiond'),
(144, 19, 49, -0.66, 'optiond'),
(144, 19, 50, 2, 'optionb'),
(144, 19, 58, -0.33, 'optiona'),
(144, 19, 59, 1, 'optionc'),
(144, 19, 60, 1, 'optiona'),
(144, 19, 61, 2, 'optionb'),
(144, 19, 63, 2, 'optiona'),
(144, 19, 64, 2, 'optionc'),
(144, 19, 65, -0.66, 'optionc'),
(77, 19, 2, 1, 'optiona'),
(77, 19, 3, -0.33, 'optionc'),
(77, 19, 4, -0.33, 'optionc'),
(77, 19, 5, -0.33, 'optionc'),
(77, 19, 6, -0.33, 'optiond'),
(77, 19, 10, -0.33, 'optionb'),
(77, 19, 12, 1, 'optionc'),
(77, 19, 14, -0.33, 'optionc'),
(77, 19, 15, 1, 'optiona'),
(77, 19, 16, 1, 'optiond'),
(77, 19, 17, 1, 'optiond'),
(77, 19, 18, -0.33, 'optionb'),
(77, 19, 21, 1, 'optiond'),
(77, 19, 22, 1, 'optionc'),
(77, 19, 24, 1, 'optionb'),
(77, 19, 25, 1, 'optionb'),
(77, 19, 26, -0.66, 'optiona'),
(77, 19, 27, -0.66, 'optionc'),
(77, 19, 32, -0.66, 'optionc'),
(77, 19, 34, 2, 'optiond'),
(77, 19, 35, -0.66, 'optiond'),
(77, 19, 38, -0.66, 'optiona'),
(77, 19, 39, 2, 'optionb'),
(77, 19, 40, 2, 'optionb'),
(77, 19, 41, -0.66, 'optionc'),
(77, 19, 43, 2, 'optionb'),
(77, 19, 44, 2, 'optionc'),
(77, 19, 46, -0.66, 'optiond'),
(77, 19, 48, 2, 'optiond'),
(77, 19, 49, -0.66, 'optiond'),
(77, 19, 50, 2, 'optionb'),
(77, 19, 53, 2, 'optiond'),
(77, 19, 56, 1, 'optiond'),
(77, 19, 57, -0.33, 'optiond'),
(77, 19, 58, 1, 'optionc'),
(77, 19, 59, -0.33, 'optionb'),
(77, 19, 62, 2, 'optionc'),
(77, 19, 63, -0.66, 'optionb'),
(77, 19, 64, 2, 'optionc'),
(77, 19, 65, 2, 'optionb'),
(74, 19, 2, -0.33, 'optionc'),
(74, 19, 3, -0.33, 'optionb'),
(74, 19, 4, 1, 'optiond'),
(74, 19, 5, -0.33, 'optionc'),
(74, 19, 6, -0.33, 'optiond'),
(74, 19, 7, 1, 'optionc'),
(74, 19, 10, 1, 'optionc'),
(74, 19, 13, -0.33, 'optiond'),
(74, 19, 15, -0.33, 'optionb'),
(74, 19, 16, 1, 'optiond'),
(74, 19, 17, 1, 'optiond'),
(74, 19, 18, 1, 'optionc'),
(74, 19, 19, 1, 'optiona'),
(74, 19, 20, 1, 'optiona'),
(74, 19, 21, 1, 'optiond'),
(74, 19, 22, 1, 'optionc'),
(74, 19, 23, -0.33, 'optiona'),
(74, 19, 24, 1, 'optionb'),
(74, 19, 26, 2, 'optionc'),
(74, 19, 34, -0.66, 'optiona'),
(74, 19, 35, -0.66, 'optiond'),
(74, 19, 37, 2, 'optiond'),
(74, 19, 38, -0.66, 'optiond'),
(74, 19, 41, -0.66, 'optiond'),
(74, 19, 43, 2, 'optionb'),
(74, 19, 44, 2, 'optionc'),
(74, 19, 45, 2, 'optionc'),
(74, 19, 46, 2, 'optionc'),
(74, 19, 48, -0.66, 'optiona'),
(74, 19, 57, -0.33, 'optiond'),
(74, 19, 58, -0.33, 'optionb'),
(74, 19, 59, -0.33, 'optiond'),
(74, 19, 60, -0.33, 'optiond'),
(74, 19, 61, 2, 'optionb'),
(74, 19, 64, -0.66, 'optiond'),
(74, 19, 65, -0.66, 'optionc'),
(33, 19, 1, -0.33, 'optiona'),
(33, 19, 2, 1, 'optiona'),
(33, 19, 3, 1, 'optiona'),
(33, 19, 4, -0.33, 'optiona'),
(33, 19, 5, -0.33, 'optionc'),
(33, 19, 6, 1, 'optiona'),
(33, 19, 7, 1, 'optionc'),
(33, 19, 12, 1, 'optionc'),
(33, 19, 14, -0.33, 'optionb'),
(33, 19, 15, 1, 'optiona'),
(33, 19, 16, 1, 'optiond'),
(33, 19, 17, 1, 'optiond'),
(33, 19, 19, 1, 'optiona'),
(33, 19, 20, -0.33, 'optionc'),
(33, 19, 21, 1, 'optiond'),
(33, 19, 22, -0.33, 'optionb'),
(33, 19, 23, 1, 'optiond'),
(33, 19, 24, 1, 'optionb'),
(33, 19, 25, -0.33, 'optionc'),
(33, 19, 26, 2, 'optionc'),
(33, 19, 30, 2, 'optionb'),
(33, 19, 31, -0.66, 'optionc'),
(33, 19, 33, -0.66, 'optionb'),
(33, 19, 35, 2, 'optionb'),
(33, 19, 39, 2, 'optionb'),
(33, 19, 40, 2, 'optionb'),
(33, 19, 43, 2, 'optionb'),
(33, 19, 44, 2, 'optionc'),
(33, 19, 45, 2, 'optionc'),
(33, 19, 48, 2, 'optiond'),
(33, 19, 49, -0.66, 'optiond'),
(33, 19, 50, 2, 'optionb'),
(33, 19, 56, 1, 'optiond'),
(33, 19, 57, -0.33, 'optionb'),
(33, 19, 58, -0.33, 'optionb'),
(33, 19, 59, 1, 'optionc'),
(33, 19, 60, -0.33, 'optiond'),
(33, 19, 61, 2, 'optionb'),
(33, 19, 62, 2, 'optionc'),
(33, 19, 63, 2, 'optiona'),
(33, 19, 64, 2, 'optionc'),
(33, 19, 65, 2, 'optionb'),
(63, 19, 1, 1, 'optionb'),
(63, 19, 2, -0.33, 'optiond'),
(63, 19, 3, -0.33, 'optionb'),
(63, 19, 4, -0.33, 'optionb'),
(63, 19, 6, -0.33, 'optiond'),
(63, 19, 7, 1, 'optionc'),
(63, 19, 9, -0.33, 'optiona'),
(63, 19, 10, 1, 'optionc'),
(63, 19, 12, 1, 'optionc'),
(63, 19, 14, 1, 'optiond'),
(63, 19, 15, -0.33, 'optiond'),
(63, 19, 16, 1, 'optiond'),
(63, 19, 17, 1, 'optiond'),
(63, 19, 18, 1, 'optionc'),
(63, 19, 19, 1, 'optiona'),
(63, 19, 20, -0.33, 'optiond'),
(63, 19, 21, 1, 'optiond'),
(63, 19, 22, 1, 'optionc'),
(63, 19, 23, -0.33, 'optionb'),
(63, 19, 24, 1, 'optionb'),
(63, 19, 25, 1, 'optionb'),
(63, 19, 26, -0.66, 'optiond'),
(63, 19, 27, -0.66, 'optionc'),
(63, 19, 29, 2, 'optiond'),
(63, 19, 31, 2, 'optionb'),
(63, 19, 34, -0.66, 'optionc'),
(63, 19, 35, 2, 'optionb'),
(63, 19, 37, 2, 'optiond'),
(63, 19, 40, 2, 'optionb'),
(63, 19, 41, -0.66, 'optionb'),
(63, 19, 43, 2, 'optionb'),
(63, 19, 44, -0.66, 'optiond'),
(63, 19, 45, 2, 'optionc'),
(63, 19, 46, 2, 'optionc'),
(63, 19, 47, 2, 'optionc'),
(63, 19, 48, -0.66, 'optiona'),
(63, 19, 49, -0.66, 'optiond'),
(63, 19, 50, 2, 'optionb'),
(63, 19, 57, 1, 'optiona'),
(63, 19, 58, -0.33, 'optiona'),
(63, 19, 59, 1, 'optionc'),
(63, 19, 61, 2, 'optionb'),
(63, 19, 63, 2, 'optiona'),
(63, 19, 64, -0.66, 'optiond'),
(63, 19, 65, -0.66, 'optionc'),
(114, 19, 3, -0.33, 'optionb'),
(114, 19, 4, -0.33, 'optionc'),
(114, 19, 5, -0.33, 'optionc'),
(114, 19, 6, -0.33, 'optiond'),
(114, 19, 7, -0.33, 'optiond'),
(114, 19, 9, -0.33, 'optiona'),
(114, 19, 10, 1, 'optionc'),
(114, 19, 11, 1, 'optiond'),
(114, 19, 12, 1, 'optionc'),
(114, 19, 15, -0.33, 'optiond'),
(114, 19, 16, 1, 'optiond'),
(114, 19, 18, 1, 'optionc'),
(114, 19, 19, 1, 'optiona'),
(114, 19, 21, 1, 'optiond'),
(114, 19, 22, 1, 'optionc'),
(114, 19, 24, 1, 'optionb'),
(114, 19, 26, 2, 'optionc'),
(114, 19, 29, 2, 'optiond'),
(114, 19, 40, -0.66, 'optiond'),
(114, 19, 41, 2, 'optiona'),
(114, 19, 42, 2, 'optiond'),
(114, 19, 43, 2, 'optionb'),
(114, 19, 44, 2, 'optionc'),
(114, 19, 46, 2, 'optionc'),
(114, 19, 49, -0.66, 'optiona'),
(114, 19, 50, 2, 'optionb'),
(114, 19, 51, -0.66, 'optiona'),
(114, 19, 58, -0.33, 'optiona'),
(114, 19, 59, 1, 'optionc'),
(114, 19, 61, 2, 'optionb'),
(114, 19, 62, 2, 'optionc'),
(114, 19, 63, -0.66, 'optionb'),
(114, 19, 65, 2, 'optionb'),
(60, 19, 2, 1, 'optiona'),
(60, 19, 3, -0.33, 'optionc'),
(60, 19, 4, -0.33, 'optionb'),
(60, 19, 5, 1, 'optionb'),
(60, 19, 6, 1, 'optiona'),
(60, 19, 7, 1, 'optionc'),
(60, 19, 10, -0.33, 'optionb'),
(60, 19, 11, 1, 'optiond'),
(60, 19, 14, -0.33, 'optionb'),
(60, 19, 15, -0.33, 'optiond'),
(60, 19, 16, 1, 'optiond'),
(60, 19, 19, 1, 'optiona'),
(60, 19, 21, 1, 'optiond'),
(60, 19, 22, -0.33, 'optiond'),
(60, 19, 23, -0.33, 'optionb'),
(60, 19, 24, 1, 'optionb'),
(60, 19, 25, 1, 'optionb'),
(60, 19, 29, -0.66, 'optionc'),
(60, 19, 39, 2, 'optionb'),
(60, 19, 40, 2, 'optionb'),
(60, 19, 41, -0.66, 'optionc'),
(60, 19, 43, 2, 'optionb'),
(60, 19, 44, 2, 'optionc'),
(60, 19, 45, 2, 'optionc'),
(60, 19, 46, 2, 'optionc'),
(60, 19, 47, -0.66, 'optiona'),
(60, 19, 49, -0.66, 'optionc'),
(60, 19, 50, 2, 'optionb'),
(60, 19, 51, 2, 'optionb'),
(60, 19, 56, 1, 'optiond'),
(60, 19, 57, -0.33, 'optiond'),
(60, 19, 58, 1, 'optionc'),
(60, 19, 59, -0.33, 'optionb'),
(60, 19, 61, 2, 'optionb'),
(60, 19, 65, -0.66, 'optionc'),
(130, 19, 1, 1, 'optionb'),
(130, 19, 2, -0.33, 'optionb'),
(130, 19, 3, -0.33, 'optionb'),
(130, 19, 4, -0.33, 'optionb'),
(130, 19, 5, -0.33, 'optiona'),
(130, 19, 6, 1, 'optiona'),
(130, 19, 7, 1, 'optionc'),
(130, 19, 9, -0.33, 'optionb'),
(130, 19, 11, -0.33, 'optiona'),
(130, 19, 13, -0.33, 'optionb'),
(130, 19, 14, -0.33, 'optionc'),
(130, 19, 15, -0.33, 'optionb'),
(130, 19, 16, 1, 'optiond'),
(130, 19, 17, -0.33, 'optiona'),
(130, 19, 18, -0.33, 'optionb'),
(130, 19, 20, -0.33, 'optiond'),
(130, 19, 21, -0.33, 'optiona'),
(130, 19, 22, -0.33, 'optiona'),
(130, 19, 23, -0.33, 'optionb'),
(130, 19, 24, 1, 'optionb'),
(130, 19, 26, -0.66, 'optiona'),
(130, 19, 31, -0.66, 'optiona'),
(130, 19, 32, -0.66, 'optiona'),
(130, 19, 39, -0.66, 'optionc'),
(130, 19, 40, 2, 'optionb'),
(130, 19, 42, -0.66, 'optionb'),
(130, 19, 43, 2, 'optionb'),
(130, 19, 44, 2, 'optionc'),
(130, 19, 45, -0.66, 'optiona'),
(130, 19, 46, 2, 'optionc'),
(130, 19, 49, -0.66, 'optiona'),
(130, 19, 50, 2, 'optionb'),
(130, 19, 51, -0.66, 'optiond'),
(130, 19, 53, -0.66, 'optiona'),
(130, 19, 57, -0.33, 'optionc'),
(130, 19, 59, 1, 'optionc'),
(130, 19, 61, 2, 'optionb'),
(130, 19, 65, -0.66, 'optionc'),
(94, 19, 1, -0.33, 'optiona'),
(94, 19, 2, 1, 'optiona'),
(94, 19, 3, 1, 'optiona'),
(94, 19, 5, 1, 'optionb'),
(94, 19, 6, 1, 'optiona'),
(94, 19, 7, 1, 'optionc'),
(94, 19, 9, -0.33, 'optiond'),
(94, 19, 10, 1, 'optionc'),
(94, 19, 11, 1, 'optiond'),
(94, 19, 12, 1, 'optionc'),
(94, 19, 14, 1, 'optiond'),
(94, 19, 15, -0.33, 'optiond'),
(94, 19, 16, 1, 'optiond'),
(94, 19, 19, 1, 'optiona'),
(94, 19, 21, 1, 'optiond'),
(94, 19, 22, 1, 'optionc'),
(94, 19, 24, 1, 'optionb'),
(94, 19, 26, -0.66, 'optiond'),
(94, 19, 27, -0.66, 'optiona'),
(94, 19, 29, 2, 'optiond'),
(94, 19, 31, -0.66, 'optiona'),
(94, 19, 34, -0.66, 'optionc'),
(94, 19, 35, 2, 'optionb'),
(94, 19, 36, -0.66, 'optionc'),
(94, 19, 37, 2, 'optiond'),
(94, 19, 38, -0.66, 'optiond'),
(94, 19, 39, 2, 'optionb'),
(94, 19, 40, 2, 'optionb'),
(94, 19, 41, 2, 'optiona'),
(94, 19, 43, 2, 'optionb'),
(94, 19, 44, 2, 'optionc'),
(94, 19, 46, 2, 'optionc'),
(94, 19, 48, 2, 'optiond'),
(94, 19, 49, 2, 'optionb'),
(94, 19, 50, 2, 'optionb'),
(94, 19, 51, -0.66, 'optiona'),
(94, 19, 53, 2, 'optiond'),
(94, 19, 54, -0.66, 'optiona'),
(94, 19, 55, -0.66, 'optionc'),
(94, 19, 56, 1, 'optiond'),
(94, 19, 57, -0.33, 'optiond'),
(94, 19, 58, 1, 'optionc'),
(94, 19, 59, 1, 'optionc'),
(94, 19, 61, 2, 'optionb'),
(94, 19, 62, 2, 'optionc'),
(94, 19, 63, -0.66, 'optionb'),
(94, 19, 64, 2, 'optionc'),
(94, 19, 65, 2, 'optionb'),
(108, 19, 2, 1, 'optiona'),
(108, 19, 3, -0.33, 'optionb'),
(108, 19, 5, -0.33, 'optionc'),
(108, 19, 6, -0.33, 'optiond'),
(108, 19, 7, -0.33, 'optiond'),
(108, 19, 12, 1, 'optionc'),
(108, 19, 14, 1, 'optiond'),
(108, 19, 15, -0.33, 'optiond'),
(108, 19, 16, 1, 'optiond'),
(108, 19, 18, 1, 'optionc'),
(108, 19, 19, 1, 'optiona'),
(108, 19, 21, 1, 'optiond'),
(108, 19, 22, 1, 'optionc'),
(108, 19, 23, -0.33, 'optiona'),
(108, 19, 24, 1, 'optionb'),
(108, 19, 27, -0.66, 'optiona'),
(108, 19, 32, 2, 'optiond'),
(108, 19, 39, 2, 'optionb'),
(108, 19, 40, 2, 'optionb'),
(108, 19, 41, 2, 'optiona'),
(108, 19, 43, 2, 'optionb'),
(108, 19, 44, -0.66, 'optiond'),
(108, 19, 45, 2, 'optionc'),
(108, 19, 48, 2, 'optiond'),
(108, 19, 50, -0.66, 'optionc'),
(108, 19, 51, 2, 'optionb'),
(108, 19, 57, 1, 'optiona'),
(108, 19, 58, 1, 'optionc'),
(108, 19, 59, 1, 'optionc'),
(108, 19, 61, 2, 'optionb'),
(108, 19, 63, 2, 'optiona'),
(108, 19, 64, -0.66, 'optiond'),
(108, 19, 65, -0.66, 'optionc'),
(68, 19, 2, -0.33, 'optiond'),
(68, 19, 3, -0.33, 'optionc'),
(68, 19, 4, 1, 'optiond'),
(68, 19, 5, -0.33, 'optiond'),
(68, 19, 6, 1, 'optiona'),
(68, 19, 10, 1, 'optionc'),
(68, 19, 11, -0.33, 'optionc'),
(68, 19, 12, 1, 'optionc'),
(68, 19, 13, 1, 'optionc'),
(68, 19, 14, 1, 'optiond'),
(68, 19, 15, -0.33, 'optiond'),
(68, 19, 16, 1, 'optiond'),
(68, 19, 17, 1, 'optiond'),
(68, 19, 18, -0.33, 'optionb'),
(68, 19, 19, 1, 'optiona'),
(68, 19, 20, 1, 'optiona'),
(68, 19, 21, 1, 'optiond'),
(68, 19, 22, 1, 'optionc'),
(68, 19, 23, -0.33, 'optionb'),
(68, 19, 24, 1, 'optionb'),
(68, 19, 26, 2, 'optionc'),
(68, 19, 27, 2, 'optionb'),
(68, 19, 30, -0.66, 'optiond'),
(68, 19, 32, -0.66, 'optiona'),
(68, 19, 34, -0.66, 'optionc'),
(68, 19, 35, 2, 'optionb'),
(68, 19, 38, 2, 'optionb'),
(68, 19, 39, 2, 'optionb'),
(68, 19, 40, 2, 'optionb'),
(68, 19, 41, -0.66, 'optionc'),
(68, 19, 42, 2, 'optiond'),
(68, 19, 43, -0.66, 'optiona'),
(68, 19, 44, 2, 'optionc'),
(68, 19, 45, 2, 'optionc'),
(68, 19, 46, 2, 'optionc'),
(68, 19, 48, 2, 'optiond'),
(68, 19, 50, 2, 'optionb'),
(68, 19, 53, 2, 'optiond'),
(68, 19, 57, -0.33, 'optionb'),
(68, 19, 58, 1, 'optionc'),
(68, 19, 59, 1, 'optionc'),
(68, 19, 60, 1, 'optiona'),
(68, 19, 61, 2, 'optionb'),
(68, 19, 62, 2, 'optionc'),
(68, 19, 63, 2, 'optiona'),
(68, 19, 64, 2, 'optionc'),
(68, 19, 65, -0.66, 'optionc'),
(36, 19, 1, 1, 'optionb'),
(36, 19, 2, 1, 'optiona'),
(36, 19, 3, 1, 'optiona'),
(36, 19, 4, 1, 'optiond'),
(36, 19, 5, 1, 'optionb'),
(36, 19, 6, 1, 'optiona'),
(36, 19, 7, 1, 'optionc'),
(36, 19, 10, 1, 'optionc'),
(36, 19, 11, 1, 'optiond'),
(36, 19, 12, 1, 'optionc'),
(36, 19, 13, 1, 'optionc'),
(36, 19, 14, 1, 'optiond'),
(36, 19, 15, -0.33, 'optiond'),
(36, 19, 16, 1, 'optiond'),
(36, 19, 18, -0.33, 'optiona'),
(36, 19, 19, 1, 'optiona'),
(36, 19, 20, 1, 'optiona'),
(36, 19, 21, 1, 'optiond'),
(36, 19, 22, 1, 'optionc'),
(36, 19, 23, 1, 'optiond'),
(36, 19, 24, 1, 'optionb'),
(36, 19, 25, 1, 'optionb'),
(36, 19, 26, 2, 'optionc'),
(36, 19, 27, 2, 'optionb'),
(36, 19, 28, -0.66, 'optiona'),
(36, 19, 29, 2, 'optiond'),
(36, 19, 31, 2, 'optionb'),
(36, 19, 32, -0.66, 'optionc'),
(36, 19, 34, 2, 'optiond'),
(36, 19, 35, 2, 'optionb'),
(36, 19, 37, 2, 'optiond'),
(36, 19, 38, -0.66, 'optiona'),
(36, 19, 39, 2, 'optionb'),
(36, 19, 40, 2, 'optionb'),
(36, 19, 41, 2, 'optiona'),
(36, 19, 42, -0.66, 'optiona'),
(36, 19, 43, 2, 'optionb'),
(36, 19, 44, 2, 'optionc'),
(36, 19, 45, 2, 'optionc'),
(36, 19, 46, 2, 'optionc'),
(36, 19, 47, 2, 'optionc'),
(36, 19, 48, 2, 'optiond'),
(36, 19, 49, 2, 'optionb'),
(36, 19, 50, 2, 'optionb'),
(36, 19, 51, 2, 'optionb'),
(36, 19, 52, 2, 'optionc'),
(36, 19, 53, -0.66, 'optionc'),
(36, 19, 54, -0.66, 'optiona'),
(36, 19, 55, 2, 'optiond'),
(36, 19, 56, -0.33, 'optiona'),
(36, 19, 57, -0.33, 'optionb'),
(36, 19, 58, -0.33, 'optiona'),
(36, 19, 59, 1, 'optionc'),
(36, 19, 61, 2, 'optionb'),
(36, 19, 63, -0.66, 'optionb'),
(36, 19, 65, 2, 'optionb'),
(152, 19, 1, 1, 'optionb'),
(152, 19, 2, 1, 'optiona'),
(152, 19, 3, 1, 'optiona'),
(152, 19, 4, -0.33, 'optionc'),
(152, 19, 5, 1, 'optionb'),
(152, 19, 6, 1, 'optiona'),
(152, 19, 7, 1, 'optionc'),
(152, 19, 9, -0.33, 'optiond'),
(152, 19, 11, -0.33, 'optionb'),
(152, 19, 12, -0.33, 'optiond'),
(152, 19, 14, -0.33, 'optionb'),
(152, 19, 15, 1, 'optiona'),
(152, 19, 16, 1, 'optiond'),
(152, 19, 19, -0.33, 'optiond'),
(152, 19, 20, 1, 'optiona'),
(152, 19, 21, 1, 'optiond'),
(152, 19, 22, 1, 'optionc'),
(152, 19, 23, 1, 'optiond'),
(152, 19, 24, 1, 'optionb'),
(152, 19, 26, 2, 'optionc'),
(152, 19, 27, -0.66, 'optionc'),
(152, 19, 29, 2, 'optiond'),
(152, 19, 31, -0.66, 'optiona'),
(152, 19, 34, 2, 'optiond'),
(152, 19, 35, 2, 'optionb'),
(152, 19, 39, 2, 'optionb'),
(152, 19, 40, 2, 'optionb'),
(152, 19, 41, -0.66, 'optiond'),
(152, 19, 43, 2, 'optionb'),
(152, 19, 44, 2, 'optionc'),
(152, 19, 45, -0.66, 'optiona'),
(152, 19, 59, 1, 'optionc'),
(152, 19, 65, -0.66, 'optionc'),
(158, 19, 2, -0.33, 'optiond'),
(158, 19, 5, -0.33, 'optionc'),
(158, 19, 6, 1, 'optiona'),
(158, 19, 7, -0.33, 'optiond'),
(158, 19, 11, 1, 'optiond'),
(158, 19, 12, 1, 'optionc'),
(158, 19, 14, -0.33, 'optionb'),
(158, 19, 15, -0.33, 'optiond'),
(158, 19, 19, -0.33, 'optionc'),
(158, 19, 21, 1, 'optiond'),
(158, 19, 22, 1, 'optionc'),
(158, 19, 24, 1, 'optionb'),
(158, 19, 25, 1, 'optionb'),
(158, 19, 29, 2, 'optiond'),
(158, 19, 32, -0.66, 'optionc'),
(158, 19, 35, 2, 'optionb'),
(158, 19, 39, 2, 'optionb'),
(158, 19, 40, 2, 'optionb'),
(158, 19, 41, 2, 'optiona'),
(158, 19, 43, -0.66, 'optiona'),
(158, 19, 44, 2, 'optionc'),
(158, 19, 45, 2, 'optionc'),
(158, 19, 46, 2, 'optionc'),
(158, 19, 47, 2, 'optionc'),
(158, 19, 48, 2, 'optiond'),
(158, 19, 49, -0.66, 'optiond'),
(158, 19, 50, 2, 'optionb'),
(158, 19, 53, 2, 'optiond'),
(158, 19, 58, 1, 'optionc'),
(158, 19, 59, 1, 'optionc'),
(158, 19, 61, 2, 'optionb'),
(158, 19, 63, 2, 'optiona'),
(158, 19, 65, -0.66, 'optionc'),
(70, 19, 2, 1, 'optiona'),
(70, 19, 3, -0.33, 'optionb'),
(70, 19, 4, -0.33, 'optiona'),
(70, 19, 5, -0.33, 'optionc'),
(70, 19, 6, -0.33, 'optionb'),
(70, 19, 7, -0.33, 'optiond'),
(70, 19, 8, -0.33, 'optionc'),
(70, 19, 12, 1, 'optionc'),
(70, 19, 13, -0.33, 'optiond'),
(70, 19, 14, 1, 'optiond'),
(70, 19, 15, -0.33, 'optiond'),
(70, 19, 16, 1, 'optiond'),
(70, 19, 18, -0.33, 'optionb'),
(70, 19, 19, 1, 'optiona'),
(70, 19, 21, 1, 'optiond'),
(70, 19, 22, 1, 'optionc'),
(70, 19, 23, -0.33, 'optiona'),
(70, 19, 24, 1, 'optionb'),
(70, 19, 25, -0.33, 'optiona'),
(70, 19, 31, 2, 'optionb'),
(70, 19, 36, -0.66, 'optiona'),
(70, 19, 40, 2, 'optionb'),
(70, 19, 41, 2, 'optiona'),
(70, 19, 43, 2, 'optionb'),
(70, 19, 45, 2, 'optionc'),
(70, 19, 46, 2, 'optionc'),
(70, 19, 49, -0.66, 'optiond'),
(70, 19, 50, 2, 'optionb'),
(70, 19, 51, 2, 'optionb'),
(70, 19, 52, 2, 'optionc'),
(70, 19, 59, 1, 'optionc'),
(70, 19, 61, 2, 'optionb'),
(70, 19, 65, -0.66, 'optionc'),
(80, 19, 1, 1, 'optionb'),
(80, 19, 2, -0.33, 'optionc'),
(80, 19, 3, -0.33, 'optionc'),
(80, 19, 4, 1, 'optiond'),
(80, 19, 5, 1, 'optionb'),
(80, 19, 6, -0.33, 'optiond'),
(80, 19, 7, 1, 'optionc'),
(80, 19, 10, 1, 'optionc'),
(80, 19, 12, -0.33, 'optionb'),
(80, 19, 13, 1, 'optionc'),
(80, 19, 15, 1, 'optiona'),
(80, 19, 16, 1, 'optiond'),
(80, 19, 19, 1, 'optiona'),
(80, 19, 21, 1, 'optiond'),
(80, 19, 24, -0.33, 'optiona'),
(80, 19, 26, 2, 'optionc'),
(80, 19, 27, 2, 'optionb'),
(80, 19, 29, 2, 'optiond'),
(80, 19, 32, 2, 'optiond'),
(80, 19, 34, -0.66, 'optionc'),
(80, 19, 35, -0.66, 'optiond'),
(80, 19, 37, 2, 'optiond'),
(80, 19, 38, -0.66, 'optionc'),
(80, 19, 39, 2, 'optionb'),
(80, 19, 40, 2, 'optionb'),
(80, 19, 41, -0.66, 'optionc'),
(80, 19, 43, 2, 'optionb'),
(80, 19, 44, 2, 'optionc'),
(80, 19, 45, 2, 'optionc'),
(80, 19, 46, 2, 'optionc'),
(80, 19, 49, 2, 'optionb'),
(80, 19, 50, 2, 'optionb'),
(80, 19, 59, -0.33, 'optiond'),
(80, 19, 61, 2, 'optionb'),
(80, 19, 63, 2, 'optiona'),
(80, 19, 65, 2, 'optionb'),
(28, 19, 2, -0.33, 'optionb'),
(28, 19, 3, -0.33, 'optionc'),
(28, 19, 4, 1, 'optiond'),
(28, 19, 5, -0.33, 'optionc'),
(28, 19, 6, 1, 'optiona'),
(28, 19, 11, 1, 'optiond'),
(28, 19, 12, -0.33, 'optiond'),
(28, 19, 14, -0.33, 'optionc'),
(28, 19, 15, -0.33, 'optiond'),
(28, 19, 16, 1, 'optiond'),
(28, 19, 18, 1, 'optionc'),
(28, 19, 19, 1, 'optiona'),
(28, 19, 21, 1, 'optiond'),
(28, 19, 22, -0.33, 'optiona'),
(28, 19, 24, 1, 'optionb'),
(28, 19, 25, -0.33, 'optionc'),
(28, 19, 26, 2, 'optionc'),
(28, 19, 29, 2, 'optiond'),
(28, 19, 32, -0.66, 'optionc'),
(28, 19, 34, 2, 'optiond'),
(28, 19, 38, 2, 'optionb'),
(28, 19, 39, 2, 'optionb'),
(28, 19, 40, 2, 'optionb'),
(28, 19, 41, 2, 'optiona'),
(28, 19, 43, 2, 'optionb'),
(28, 19, 44, 2, 'optionc'),
(28, 19, 45, 2, 'optionc'),
(28, 19, 46, 2, 'optionc'),
(28, 19, 47, -0.66, 'optiond'),
(28, 19, 50, 2, 'optionb'),
(28, 19, 51, 2, 'optionb'),
(28, 19, 53, -0.66, 'optionc'),
(28, 19, 54, 2, 'optionc'),
(28, 19, 59, -0.33, 'optiond'),
(28, 19, 61, 2, 'optionb'),
(28, 19, 63, -0.66, 'optionb'),
(28, 19, 64, 2, 'optionc'),
(28, 19, 65, -0.66, 'optionc'),
(87, 19, 1, 1, 'optionb'),
(87, 19, 2, -0.33, 'optiond'),
(87, 19, 3, -0.33, 'optionb'),
(87, 19, 4, -0.33, 'optionc'),
(87, 19, 5, -0.33, 'optionc'),
(87, 19, 6, 1, 'optiona'),
(87, 19, 7, -0.33, 'optiond'),
(87, 19, 10, -0.33, 'optionb'),
(87, 19, 11, 1, 'optiond'),
(87, 19, 12, 1, 'optionc'),
(87, 19, 13, 1, 'optionc'),
(87, 19, 14, -0.33, 'optionb'),
(87, 19, 15, 1, 'optiona'),
(87, 19, 16, 1, 'optiond'),
(87, 19, 17, 1, 'optiond'),
(87, 19, 18, -0.33, 'optiona'),
(87, 19, 19, -0.33, 'optionc'),
(87, 19, 21, 1, 'optiond'),
(87, 19, 22, 1, 'optionc'),
(87, 19, 23, -0.33, 'optionb'),
(87, 19, 24, 1, 'optionb'),
(87, 19, 25, 1, 'optionb'),
(87, 19, 26, -0.66, 'optiond'),
(87, 19, 27, -0.66, 'optionc'),
(87, 19, 29, 2, 'optiond'),
(87, 19, 31, -0.66, 'optiond'),
(87, 19, 32, -0.66, 'optionc'),
(87, 19, 35, -0.66, 'optiona'),
(87, 19, 39, 2, 'optionb'),
(87, 19, 40, 2, 'optionb'),
(87, 19, 41, -0.66, 'optionc'),
(87, 19, 43, -0.66, 'optiond'),
(87, 19, 45, 2, 'optionc'),
(87, 19, 46, 2, 'optionc'),
(87, 19, 48, 2, 'optiond'),
(87, 19, 49, -0.66, 'optiond'),
(87, 19, 50, 2, 'optionb'),
(87, 19, 53, -0.66, 'optionc'),
(87, 19, 57, 1, 'optiona'),
(87, 19, 58, 1, 'optionc'),
(87, 19, 59, -0.33, 'optiond'),
(87, 19, 60, -0.33, 'optionc'),
(87, 19, 61, 2, 'optionb'),
(87, 19, 64, -0.66, 'optiond'),
(87, 19, 65, -0.66, 'optiond'),
(143, 19, 2, -0.33, 'optionb'),
(143, 19, 3, 1, 'optiona'),
(143, 19, 4, 1, 'optiond'),
(143, 19, 5, 1, 'optionb'),
(143, 19, 6, -0.33, 'optiond'),
(143, 19, 7, 1, 'optionc'),
(143, 19, 11, -0.33, 'optionb'),
(143, 19, 12, 1, 'optionc'),
(143, 19, 15, -0.33, 'optionb'),
(143, 19, 16, 1, 'optiond'),
(143, 19, 17, -0.33, 'optiona'),
(143, 19, 18, -0.33, 'optiona'),
(143, 19, 19, 1, 'optiona'),
(143, 19, 21, 1, 'optiond'),
(143, 19, 22, 1, 'optionc'),
(143, 19, 23, -0.33, 'optionb'),
(143, 19, 24, 1, 'optionb'),
(143, 19, 25, 1, 'optionb'),
(143, 19, 26, -0.66, 'optiona'),
(143, 19, 27, 2, 'optionb'),
(143, 19, 28, -0.66, 'optiona'),
(143, 19, 30, 2, 'optionb'),
(143, 19, 31, -0.66, 'optiond'),
(143, 19, 32, -0.66, 'optionb'),
(143, 19, 34, 2, 'optiond'),
(143, 19, 35, 2, 'optionb'),
(143, 19, 38, -0.66, 'optiona'),
(143, 19, 39, 2, 'optionb'),
(143, 19, 40, -0.66, 'optionc'),
(143, 19, 43, 2, 'optionb'),
(143, 19, 44, 2, 'optionc'),
(143, 19, 45, 2, 'optionc'),
(143, 19, 46, 2, 'optionc'),
(143, 19, 49, -0.66, 'optionc'),
(143, 19, 50, 2, 'optionb'),
(143, 19, 53, 2, 'optiond'),
(143, 19, 58, -0.33, 'optiona'),
(143, 19, 59, -0.33, 'optiond'),
(143, 19, 62, 2, 'optionc'),
(143, 19, 63, 2, 'optiona'),
(143, 19, 65, -0.66, 'optionc'),
(99, 19, 2, -0.33, 'optionc'),
(99, 19, 3, 1, 'optiona'),
(99, 19, 4, -0.33, 'optionb'),
(99, 19, 5, 1, 'optionb'),
(99, 19, 6, -0.33, 'optionb'),
(99, 19, 7, 1, 'optionc'),
(99, 19, 9, -0.33, 'optiond'),
(99, 19, 12, -0.33, 'optiond'),
(99, 19, 13, 1, 'optionc'),
(99, 19, 14, 1, 'optiond'),
(99, 19, 15, -0.33, 'optiond'),
(99, 19, 16, 1, 'optiond'),
(99, 19, 18, 1, 'optionc'),
(99, 19, 19, -0.33, 'optionc'),
(99, 19, 20, 1, 'optiona'),
(99, 19, 21, 1, 'optiond'),
(99, 19, 22, 1, 'optionc'),
(99, 19, 24, 1, 'optionb'),
(99, 19, 28, -0.66, 'optionb'),
(99, 19, 31, -0.66, 'optiond'),
(99, 19, 34, -0.66, 'optionc'),
(99, 19, 35, 2, 'optionb'),
(99, 19, 36, 2, 'optiond'),
(99, 19, 37, 2, 'optiond'),
(99, 19, 40, 2, 'optionb'),
(99, 19, 43, 2, 'optionb'),
(99, 19, 46, -0.66, 'optiona'),
(99, 19, 49, -0.66, 'optionc'),
(99, 19, 54, 2, 'optionc'),
(99, 19, 55, 2, 'optiond'),
(99, 19, 57, -0.33, 'optiond'),
(47, 19, 2, -0.33, 'optionb'),
(47, 19, 3, -0.33, 'optionc'),
(47, 19, 4, -0.33, 'optiona'),
(47, 19, 5, 1, 'optionb'),
(47, 19, 6, 1, 'optiona'),
(47, 19, 7, -0.33, 'optiond'),
(47, 19, 10, -0.33, 'optiond'),
(47, 19, 12, -0.33, 'optiond'),
(47, 19, 14, -0.33, 'optionc'),
(47, 19, 15, -0.33, 'optiond'),
(47, 19, 16, 1, 'optiond'),
(47, 19, 18, -0.33, 'optiona'),
(47, 19, 20, 1, 'optiona'),
(47, 19, 21, -0.33, 'optionc'),
(47, 19, 22, 1, 'optionc'),
(47, 19, 24, 1, 'optionb'),
(47, 19, 26, -0.66, 'optiona'),
(47, 19, 28, -0.66, 'optiona'),
(47, 19, 30, 2, 'optionb'),
(47, 19, 32, -0.66, 'optionb'),
(47, 19, 33, -0.66, 'optionb'),
(47, 19, 35, 2, 'optionb'),
(47, 19, 38, -0.66, 'optiond'),
(47, 19, 40, 2, 'optionb'),
(47, 19, 41, -0.66, 'optiond'),
(47, 19, 43, 2, 'optionb'),
(47, 19, 44, -0.66, 'optiond'),
(47, 19, 46, -0.66, 'optionb'),
(47, 19, 50, 2, 'optionb'),
(47, 19, 51, 2, 'optionb'),
(47, 19, 53, -0.66, 'optionc'),
(47, 19, 58, 1, 'optionc'),
(47, 19, 59, -0.33, 'optiond'),
(47, 19, 62, -0.66, 'optiond'),
(47, 19, 63, 2, 'optiona'),
(47, 19, 64, -0.66, 'optiond'),
(47, 19, 65, 2, 'optionb'),
(141, 19, 1, 1, 'optionb'),
(141, 19, 2, -0.33, 'optionc'),
(141, 19, 3, 1, 'optiona'),
(141, 19, 4, -0.33, 'optionc'),
(141, 19, 5, -0.33, 'optiona'),
(141, 19, 6, -0.33, 'optionb'),
(141, 19, 7, 1, 'optionc'),
(141, 19, 12, -0.33, 'optiond'),
(141, 19, 13, -0.33, 'optiona'),
(141, 19, 16, 1, 'optiond'),
(141, 19, 18, 1, 'optionc'),
(141, 19, 21, -0.33, 'optionb'),
(141, 19, 24, -0.33, 'optiona'),
(141, 19, 26, 2, 'optionc'),
(141, 19, 34, -0.66, 'optionb'),
(141, 19, 40, -0.66, 'optiona'),
(141, 19, 43, 2, 'optionb'),
(141, 19, 44, -0.66, 'optiona'),
(141, 19, 45, 2, 'optionc'),
(141, 19, 46, 2, 'optionc'),
(141, 19, 56, -0.33, 'optiona'),
(141, 19, 57, -0.33, 'optiond'),
(141, 19, 58, -0.33, 'optiona'),
(141, 19, 59, 1, 'optionc'),
(141, 19, 60, -0.33, 'optiond'),
(141, 19, 65, -0.66, 'optionc'),
(88, 19, 1, 1, 'optionb'),
(88, 19, 2, -0.33, 'optiond'),
(88, 19, 3, -0.33, 'optiond'),
(88, 19, 4, -0.33, 'optiona'),
(88, 19, 5, -0.33, 'optionc'),
(88, 19, 6, 1, 'optiona'),
(88, 19, 7, -0.33, 'optiond'),
(88, 19, 10, -0.33, 'optionb'),
(88, 19, 11, 1, 'optiond'),
(88, 19, 12, 1, 'optionc'),
(88, 19, 13, -0.33, 'optiond'),
(88, 19, 14, -0.33, 'optionb'),
(88, 19, 16, 1, 'optiond'),
(88, 19, 17, 1, 'optiond'),
(88, 19, 18, -0.33, 'optiona'),
(88, 19, 19, -0.33, 'optionc'),
(88, 19, 20, -0.33, 'optionc'),
(88, 19, 21, 1, 'optiond'),
(88, 19, 22, 1, 'optionc'),
(88, 19, 23, -0.33, 'optionb'),
(88, 19, 24, 1, 'optionb'),
(88, 19, 25, 1, 'optionb'),
(88, 19, 26, -0.66, 'optiond'),
(88, 19, 27, -0.66, 'optionc'),
(88, 19, 29, 2, 'optiond'),
(88, 19, 31, -0.66, 'optiond'),
(88, 19, 32, -0.66, 'optionc'),
(88, 19, 35, 2, 'optionb'),
(88, 19, 39, 2, 'optionb'),
(88, 19, 40, 2, 'optionb'),
(88, 19, 41, -0.66, 'optionb'),
(88, 19, 43, -0.66, 'optiond'),
(88, 19, 45, 2, 'optionc'),
(88, 19, 46, 2, 'optionc'),
(88, 19, 48, 2, 'optiond'),
(88, 19, 49, -0.66, 'optiond'),
(88, 19, 50, 2, 'optionb'),
(88, 19, 53, -0.66, 'optionc'),
(88, 19, 57, 1, 'optiona'),
(88, 19, 58, -0.33, 'optiona'),
(88, 19, 59, -0.33, 'optiond'),
(88, 19, 60, -0.33, 'optionc'),
(88, 19, 61, 2, 'optionb'),
(88, 19, 64, -0.66, 'optiond'),
(88, 19, 65, -0.66, 'optiond'),
(64, 19, 1, 1, 'optionb'),
(64, 19, 2, 1, 'optiona'),
(64, 19, 4, -0.33, 'optionb'),
(64, 19, 5, 1, 'optionb'),
(64, 19, 6, 1, 'optiona'),
(64, 19, 7, 1, 'optionc'),
(64, 19, 11, -0.33, 'optionb'),
(64, 19, 12, -0.33, 'optiond'),
(64, 19, 15, 1, 'optiona'),
(64, 19, 16, 1, 'optiond'),
(64, 19, 18, 1, 'optionc'),
(64, 19, 19, 1, 'optiona'),
(64, 19, 21, 1, 'optiond'),
(64, 19, 22, 1, 'optionc'),
(64, 19, 23, 1, 'optiond'),
(64, 19, 24, 1, 'optionb'),
(64, 19, 25, -0.33, 'optionc'),
(64, 19, 26, 2, 'optionc'),
(64, 19, 31, -0.66, 'optiona'),
(64, 19, 35, -0.66, 'optiond'),
(64, 19, 36, -0.66, 'optionb'),
(64, 19, 37, 2, 'optiond'),
(64, 19, 40, 2, 'optionb'),
(64, 19, 41, -0.66, 'optionc'),
(64, 19, 42, -0.66, 'optionc'),
(64, 19, 43, 2, 'optionb'),
(64, 19, 48, -0.66, 'optiona'),
(64, 19, 49, -0.66, 'optiona'),
(64, 19, 50, 2, 'optionb'),
(64, 19, 51, 2, 'optionb'),
(64, 19, 53, 2, 'optiond'),
(64, 19, 57, -0.33, 'optiond'),
(64, 19, 58, -0.33, 'optionb'),
(64, 19, 59, 1, 'optionc'),
(64, 19, 61, 2, 'optionb'),
(64, 19, 63, -0.66, 'optionc'),
(64, 19, 64, -0.66, 'optiond'),
(64, 19, 65, -0.66, 'optionc'),
(117, 19, 1, 1, 'optionb'),
(117, 19, 2, 1, 'optiona'),
(117, 19, 3, 1, 'optiona'),
(117, 19, 4, 1, 'optiond'),
(117, 19, 5, 1, 'optionb'),
(117, 19, 6, 1, 'optiona'),
(117, 19, 7, -0.33, 'optiond'),
(117, 19, 10, 1, 'optionc'),
(117, 19, 11, 1, 'optiond'),
(117, 19, 12, 1, 'optionc'),
(117, 19, 15, -0.33, 'optiond'),
(117, 19, 16, 1, 'optiond'),
(117, 19, 18, 1, 'optionc'),
(117, 19, 19, 1, 'optiona'),
(117, 19, 20, 1, 'optiona'),
(117, 19, 21, 1, 'optiond'),
(117, 19, 22, 1, 'optionc'),
(117, 19, 23, 1, 'optiond'),
(117, 19, 24, 1, 'optionb'),
(117, 19, 25, 1, 'optionb'),
(117, 19, 26, 2, 'optionc'),
(117, 19, 27, 2, 'optionb'),
(117, 19, 29, 2, 'optiond'),
(117, 19, 30, 2, 'optionb'),
(117, 19, 31, 2, 'optionb'),
(117, 19, 32, 2, 'optiond'),
(117, 19, 33, -0.66, 'optiond'),
(117, 19, 34, -0.66, 'optionc'),
(117, 19, 35, -0.66, 'optiond'),
(117, 19, 37, 2, 'optiond'),
(117, 19, 38, 2, 'optionb'),
(117, 19, 39, 2, 'optionb'),
(117, 19, 40, 2, 'optionb'),
(117, 19, 41, -0.66, 'optionc'),
(117, 19, 42, 2, 'optiond'),
(117, 19, 43, 2, 'optionb'),
(117, 19, 44, 2, 'optionc'),
(117, 19, 45, 2, 'optionc'),
(117, 19, 46, 2, 'optionc'),
(117, 19, 47, 2, 'optionc'),
(117, 19, 48, 2, 'optiond'),
(117, 19, 49, -0.66, 'optiond'),
(117, 19, 50, 2, 'optionb'),
(117, 19, 51, 2, 'optionb'),
(117, 19, 52, 2, 'optionc'),
(117, 19, 53, 2, 'optiond'),
(117, 19, 54, 2, 'optionc'),
(117, 19, 55, 2, 'optiond'),
(117, 19, 57, -0.33, 'optionb'),
(117, 19, 58, 1, 'optionc'),
(117, 19, 59, -0.33, 'optiond'),
(117, 19, 61, 2, 'optionb'),
(117, 19, 63, 2, 'optiona'),
(117, 19, 64, 2, 'optionc'),
(117, 19, 65, 2, 'optionb'),
(86, 19, 1, 1, 'optionb'),
(86, 19, 2, 1, 'optiona'),
(86, 19, 5, -0.33, 'optiond'),
(86, 19, 6, 1, 'optiona'),
(86, 19, 9, -0.33, 'optiona'),
(86, 19, 10, 1, 'optionc'),
(86, 19, 11, -0.33, 'optionb'),
(86, 19, 15, -0.33, 'optionb'),
(86, 19, 16, 1, 'optiond'),
(86, 19, 17, 1, 'optiond'),
(86, 19, 18, 1, 'optionc'),
(86, 19, 19, -0.33, 'optionb'),
(86, 19, 21, 1, 'optiond'),
(86, 19, 22, 1, 'optionc'),
(86, 19, 23, 1, 'optiond'),
(86, 19, 24, 1, 'optionb'),
(86, 19, 25, 1, 'optionb'),
(86, 19, 26, 2, 'optionc'),
(86, 19, 28, -0.66, 'optionb'),
(86, 19, 30, 2, 'optionb'),
(86, 19, 38, 2, 'optionb'),
(86, 19, 40, -0.66, 'optiond'),
(86, 19, 41, -0.66, 'optionc'),
(86, 19, 44, 2, 'optionc'),
(86, 19, 45, 2, 'optionc'),
(86, 19, 46, 2, 'optionc'),
(86, 19, 48, 2, 'optiond'),
(86, 19, 50, 2, 'optionb'),
(86, 19, 51, 2, 'optionb'),
(86, 19, 52, 2, 'optionc'),
(86, 19, 53, -0.66, 'optionc'),
(86, 19, 57, 1, 'optiona'),
(86, 19, 58, 1, 'optionc'),
(86, 19, 59, 1, 'optionc'),
(86, 19, 60, -0.33, 'optiond'),
(86, 19, 61, 2, 'optionb'),
(86, 19, 62, 2, 'optionc'),
(86, 19, 63, -0.66, 'optionb'),
(86, 19, 64, -0.66, 'optiond'),
(86, 19, 65, 2, 'optionb'),
(69, 19, 2, 1, 'optiona'),
(69, 19, 3, 1, 'optiona'),
(69, 19, 4, 1, 'optiond'),
(69, 19, 5, -0.33, 'optionc'),
(69, 19, 6, 1, 'optiona'),
(69, 19, 12, 1, 'optionc'),
(69, 19, 14, 1, 'optiond'),
(69, 19, 15, -0.33, 'optiond'),
(69, 19, 16, 1, 'optiond'),
(69, 19, 17, 1, 'optiond'),
(69, 19, 18, 1, 'optionc'),
(69, 19, 19, 1, 'optiona'),
(69, 19, 20, -0.33, 'optionb'),
(69, 19, 21, 1, 'optiond'),
(69, 19, 22, -0.33, 'optiond'),
(69, 19, 24, 1, 'optionb'),
(69, 19, 25, 1, 'optionb'),
(69, 19, 26, -0.66, 'optiond'),
(69, 19, 27, -0.66, 'optiona'),
(69, 19, 32, -0.66, 'optionb'),
(69, 19, 34, 2, 'optiond'),
(69, 19, 35, -0.66, 'optiond'),
(69, 19, 36, -0.66, 'optionc'),
(69, 19, 39, 2, 'optionb'),
(69, 19, 40, 2, 'optionb'),
(69, 19, 41, -0.66, 'optionc'),
(69, 19, 43, 2, 'optionb'),
(69, 19, 44, -0.66, 'optiond'),
(69, 19, 45, 2, 'optionc'),
(69, 19, 46, 2, 'optionc'),
(69, 19, 48, -0.66, 'optiona'),
(69, 19, 49, -0.66, 'optionc'),
(69, 19, 50, 2, 'optionb'),
(69, 19, 54, 2, 'optionc'),
(69, 19, 55, -0.66, 'optionb'),
(69, 19, 57, -0.33, 'optiond'),
(69, 19, 58, 1, 'optionc'),
(69, 19, 59, -0.33, 'optiond'),
(69, 19, 61, 2, 'optionb'),
(69, 19, 64, -0.66, 'optiond'),
(69, 19, 65, -0.66, 'optionc'),
(90, 19, 2, -0.33, 'optionb'),
(90, 19, 3, 1, 'optiona'),
(90, 19, 4, -0.33, 'optiona'),
(90, 19, 5, -0.33, 'optionc'),
(90, 19, 6, 1, 'optiona'),
(90, 19, 7, 1, 'optionc'),
(90, 19, 9, -0.33, 'optiond'),
(90, 19, 10, 1, 'optionc'),
(90, 19, 11, -0.33, 'optionc'),
(90, 19, 12, 1, 'optionc'),
(90, 19, 13, -0.33, 'optiond'),
(90, 19, 14, 1, 'optiond'),
(90, 19, 15, -0.33, 'optiond'),
(90, 19, 16, 1, 'optiond'),
(90, 19, 17, 1, 'optiond'),
(90, 19, 18, 1, 'optionc'),
(90, 19, 19, 1, 'optiona'),
(90, 19, 20, 1, 'optiona'),
(90, 19, 21, 1, 'optiond'),
(90, 19, 22, 1, 'optionc'),
(90, 19, 23, 1, 'optiond'),
(90, 19, 24, 1, 'optionb'),
(90, 19, 25, 1, 'optionb'),
(90, 19, 26, 2, 'optionc'),
(90, 19, 31, -0.66, 'optionc'),
(90, 19, 34, -0.66, 'optionc'),
(90, 19, 35, -0.66, 'optiond'),
(90, 19, 37, 2, 'optiond'),
(90, 19, 38, 2, 'optionb'),
(90, 19, 39, 2, 'optionb'),
(90, 19, 40, -0.66, 'optionc'),
(90, 19, 41, 2, 'optiona'),
(90, 19, 42, -0.66, 'optionc'),
(90, 19, 43, 2, 'optionb'),
(90, 19, 44, 2, 'optionc'),
(90, 19, 45, 2, 'optionc'),
(90, 19, 46, 2, 'optionc'),
(90, 19, 47, 2, 'optionc'),
(90, 19, 48, 2, 'optiond'),
(90, 19, 49, -0.66, 'optiond'),
(90, 19, 50, 2, 'optionb'),
(90, 19, 51, -0.66, 'optiona'),
(90, 19, 55, -0.66, 'optiona'),
(90, 19, 59, 1, 'optionc'),
(90, 19, 61, 2, 'optionb'),
(90, 19, 62, 2, 'optionc'),
(90, 19, 64, -0.66, 'optionb'),
(93, 19, 2, -0.33, 'optionb'),
(93, 19, 3, 1, 'optiona'),
(93, 19, 4, -0.33, 'optionb'),
(93, 19, 5, -0.33, 'optionc'),
(93, 19, 6, -0.33, 'optiond'),
(93, 19, 7, 1, 'optionc'),
(93, 19, 10, 1, 'optionc'),
(93, 19, 12, -0.33, 'optiond'),
(93, 19, 13, -0.33, 'optiond'),
(93, 19, 14, -0.33, 'optiona'),
(93, 19, 15, -0.33, 'optiond'),
(93, 19, 16, 1, 'optiond'),
(93, 19, 18, 1, 'optionc'),
(93, 19, 19, 1, 'optiona'),
(93, 19, 21, 1, 'optiond'),
(93, 19, 22, -0.33, 'optiond'),
(93, 19, 23, -0.33, 'optionb'),
(93, 19, 24, 1, 'optionb'),
(93, 19, 26, -0.66, 'optiona'),
(93, 19, 27, 2, 'optionb'),
(93, 19, 32, -0.66, 'optiona'),
(93, 19, 34, -0.66, 'optionc'),
(93, 19, 35, -0.66, 'optiond'),
(93, 19, 37, 2, 'optiond'),
(93, 19, 38, 2, 'optionb'),
(93, 19, 39, 2, 'optionb'),
(93, 19, 40, 2, 'optionb'),
(93, 19, 41, -0.66, 'optionc'),
(93, 19, 43, 2, 'optionb'),
(93, 19, 44, -0.66, 'optiond'),
(93, 19, 45, 2, 'optionc'),
(93, 19, 46, 2, 'optionc'),
(93, 19, 49, -0.66, 'optiona'),
(93, 19, 50, 2, 'optionb'),
(93, 19, 53, -0.66, 'optiona'),
(93, 19, 59, -0.33, 'optiond'),
(93, 19, 64, 2, 'optionc'),
(93, 19, 65, -0.66, 'optionc'),
(97, 19, 3, -0.33, 'optionb'),
(97, 19, 4, 1, 'optiond'),
(97, 19, 5, -0.33, 'optiond'),
(97, 19, 6, -0.33, 'optiond'),
(97, 19, 7, -0.33, 'optiond'),
(97, 19, 9, 1, 'optionc'),
(97, 19, 10, 1, 'optionc'),
(97, 19, 12, 1, 'optionc'),
(97, 19, 14, 1, 'optiond'),
(97, 19, 15, 1, 'optiona'),
(97, 19, 16, 1, 'optiond'),
(97, 19, 18, -0.33, 'optionb'),
(97, 19, 22, 1, 'optionc'),
(97, 19, 24, 1, 'optionb'),
(97, 19, 28, -0.66, 'optionb'),
(97, 19, 32, -0.66, 'optionc'),
(97, 19, 34, -0.66, 'optionc'),
(97, 19, 35, -0.66, 'optiond'),
(97, 19, 40, 2, 'optionb'),
(97, 19, 41, 2, 'optiona'),
(97, 19, 42, 2, 'optiond'),
(97, 19, 43, 2, 'optionb'),
(97, 19, 44, -0.66, 'optiond'),
(97, 19, 45, 2, 'optionc'),
(97, 19, 49, -0.66, 'optiond'),
(97, 19, 50, 2, 'optionb'),
(97, 19, 57, -0.33, 'optiond'),
(97, 19, 58, 1, 'optionc'),
(97, 19, 59, 1, 'optionc'),
(97, 19, 60, 1, 'optiona'),
(97, 19, 61, 2, 'optionb'),
(97, 19, 62, 2, 'optionc'),
(97, 19, 63, 2, 'optiona'),
(97, 19, 64, 2, 'optionc'),
(97, 19, 65, -0.66, 'optionc'),
(100, 19, 3, 1, 'optiona'),
(100, 19, 4, -0.33, 'optionc'),
(100, 19, 12, 1, 'optionc'),
(100, 19, 14, 1, 'optiond'),
(100, 19, 15, 1, 'optiona'),
(100, 19, 19, 1, 'optiona'),
(100, 19, 21, 1, 'optiond'),
(100, 19, 22, -0.33, 'optiona'),
(100, 19, 23, -0.33, 'optionb'),
(100, 19, 24, 1, 'optionb'),
(100, 19, 26, -0.66, 'optiona'),
(100, 19, 27, 2, 'optionb'),
(100, 19, 31, -0.66, 'optiond'),
(100, 19, 32, -0.66, 'optionc'),
(100, 19, 34, -0.66, 'optionc'),
(100, 19, 35, 2, 'optionb'),
(100, 19, 39, 2, 'optionb'),
(100, 19, 40, 2, 'optionb'),
(100, 19, 41, -0.66, 'optionc'),
(100, 19, 43, 2, 'optionb'),
(100, 19, 44, 2, 'optionc'),
(100, 19, 45, 2, 'optionc'),
(100, 19, 46, 2, 'optionc'),
(100, 19, 47, -0.66, 'optiond'),
(100, 19, 54, -0.66, 'optiona'),
(100, 19, 55, -0.66, 'optiona'),
(100, 19, 58, 1, 'optionc'),
(100, 19, 59, 1, 'optionc'),
(100, 19, 61, 2, 'optionb'),
(100, 19, 65, -0.66, 'optionc'),
(44, 19, 1, -0.33, 'optiona'),
(44, 19, 2, -0.33, 'optiond'),
(44, 19, 3, 1, 'optiona'),
(44, 19, 5, 1, 'optionb'),
(44, 19, 6, -0.33, 'optionc'),
(44, 19, 7, -0.33, 'optiond'),
(44, 19, 9, -0.33, 'optiond'),
(44, 19, 10, 1, 'optionc'),
(44, 19, 11, 1, 'optiond'),
(44, 19, 12, 1, 'optionc'),
(44, 19, 13, -0.33, 'optionb'),
(44, 19, 14, 1, 'optiond'),
(44, 19, 15, -0.33, 'optiond'),
(44, 19, 16, 1, 'optiond'),
(44, 19, 19, 1, 'optiona'),
(44, 19, 21, 1, 'optiond'),
(44, 19, 23, 1, 'optiond'),
(44, 19, 24, 1, 'optionb'),
(44, 19, 25, 1, 'optionb'),
(44, 19, 26, 2, 'optionc'),
(44, 19, 27, -0.66, 'optionc'),
(44, 19, 29, 2, 'optiond'),
(44, 19, 30, 2, 'optionb'),
(44, 19, 31, -0.66, 'optionc'),
(44, 19, 34, -0.66, 'optionc'),
(44, 19, 39, -0.66, 'optionc'),
(44, 19, 40, 2, 'optionb'),
(44, 19, 43, -0.66, 'optiond'),
(44, 19, 44, -0.66, 'optiond'),
(44, 19, 45, 2, 'optionc'),
(44, 19, 50, 2, 'optionb'),
(44, 19, 56, -0.33, 'optionb'),
(44, 19, 57, -0.33, 'optiond'),
(44, 19, 59, 1, 'optionc'),
(44, 19, 60, 1, 'optiona'),
(44, 19, 61, 2, 'optionb'),
(44, 19, 64, -0.66, 'optiond'),
(44, 19, 65, 2, 'optionb'),
(39, 19, 1, 1, 'optionb'),
(39, 19, 2, 1, 'optiona'),
(39, 19, 3, 1, 'optiona'),
(39, 19, 4, 1, 'optiond'),
(39, 19, 6, 1, 'optiona'),
(39, 19, 7, -0.33, 'optiond'),
(39, 19, 10, 1, 'optionc'),
(39, 19, 11, -0.33, 'optionb'),
(39, 19, 12, 1, 'optionc'),
(39, 19, 13, 1, 'optionc'),
(39, 19, 14, 1, 'optiond'),
(39, 19, 15, 1, 'optiona'),
(39, 19, 16, 1, 'optiond'),
(39, 19, 18, 1, 'optionc'),
(39, 19, 19, 1, 'optiona'),
(39, 19, 20, 1, 'optiona'),
(39, 19, 21, 1, 'optiond'),
(39, 19, 22, -0.33, 'optionb'),
(39, 19, 23, 1, 'optiond'),
(39, 19, 24, 1, 'optionb'),
(39, 19, 25, -0.33, 'optionc'),
(39, 19, 26, 2, 'optionc'),
(39, 19, 27, 2, 'optionb'),
(39, 19, 29, 2, 'optiond'),
(39, 19, 30, 2, 'optionb'),
(39, 19, 32, -0.66, 'optionc'),
(39, 19, 34, -0.66, 'optionc'),
(39, 19, 35, 2, 'optionb'),
(39, 19, 37, 2, 'optiond'),
(39, 19, 38, -0.66, 'optionc'),
(39, 19, 39, 2, 'optionb'),
(39, 19, 40, 2, 'optionb'),
(39, 19, 41, -0.66, 'optionc'),
(39, 19, 42, -0.66, 'optiona'),
(39, 19, 43, 2, 'optionb'),
(39, 19, 44, 2, 'optionc'),
(39, 19, 45, 2, 'optionc'),
(39, 19, 46, 2, 'optionc'),
(39, 19, 47, 2, 'optionc'),
(39, 19, 49, 2, 'optionb'),
(39, 19, 50, 2, 'optionb'),
(39, 19, 51, 2, 'optionb'),
(39, 19, 53, 2, 'optiond'),
(39, 19, 54, -0.66, 'optiona'),
(39, 19, 57, 1, 'optiona'),
(39, 19, 59, 1, 'optionc'),
(39, 19, 60, -0.33, 'optiond'),
(39, 19, 61, 2, 'optionb'),
(39, 19, 62, 2, 'optionc'),
(39, 19, 63, 2, 'optiona'),
(39, 19, 64, 2, 'optionc'),
(39, 19, 65, 2, 'optionb'),
(142, 19, 1, 1, 'optionb'),
(142, 19, 2, 1, 'optiona'),
(142, 19, 3, 1, 'optiona'),
(142, 19, 4, -0.33, 'optionb'),
(142, 19, 5, 1, 'optionb'),
(142, 19, 6, -0.33, 'optionc'),
(142, 19, 7, 1, 'optionc'),
(142, 19, 9, -0.33, 'optiond'),
(142, 19, 10, -0.33, 'optiond'),
(142, 19, 12, 1, 'optionc'),
(142, 19, 13, -0.33, 'optiona'),
(142, 19, 14, -0.33, 'optionc'),
(142, 19, 15, 1, 'optiona'),
(142, 19, 16, 1, 'optiond'),
(142, 19, 17, 1, 'optiond'),
(142, 19, 18, -0.33, 'optiona'),
(142, 19, 19, 1, 'optiona'),
(142, 19, 20, 1, 'optiona'),
(142, 19, 21, 1, 'optiond'),
(142, 19, 22, 1, 'optionc'),
(142, 19, 23, -0.33, 'optiona'),
(142, 19, 24, 1, 'optionb'),
(142, 19, 25, 1, 'optionb'),
(142, 19, 26, 2, 'optionc'),
(142, 19, 27, -0.66, 'optionc'),
(142, 19, 29, 2, 'optiond');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(142, 19, 32, -0.66, 'optionc'),
(142, 19, 34, -0.66, 'optionc'),
(142, 19, 35, 2, 'optionb'),
(142, 19, 40, -0.66, 'optiond'),
(142, 19, 41, -0.66, 'optionc'),
(142, 19, 44, -0.66, 'optiond'),
(142, 19, 45, 2, 'optionc'),
(142, 19, 46, 2, 'optionc'),
(142, 19, 49, 2, 'optionb'),
(142, 19, 50, 2, 'optionb'),
(142, 19, 51, -0.66, 'optionc'),
(142, 19, 52, 2, 'optionc'),
(142, 19, 54, -0.66, 'optiona'),
(142, 19, 55, -0.66, 'optiona'),
(142, 19, 57, -0.33, 'optionb'),
(142, 19, 58, 1, 'optionc'),
(142, 19, 59, -0.33, 'optiond'),
(142, 19, 60, -0.33, 'optionb'),
(142, 19, 61, 2, 'optionb'),
(142, 19, 63, -0.66, 'optionb'),
(142, 19, 64, -0.66, 'optionb'),
(142, 19, 65, 2, 'optionb'),
(22, 19, 3, -0.33, 'optionc'),
(22, 19, 4, 1, 'optiond'),
(22, 19, 5, -0.33, 'optionc'),
(22, 19, 6, 1, 'optiona'),
(22, 19, 7, 1, 'optionc'),
(22, 19, 11, 1, 'optiond'),
(22, 19, 12, 1, 'optionc'),
(22, 19, 13, 1, 'optionc'),
(22, 19, 14, 1, 'optiond'),
(22, 19, 15, 1, 'optiona'),
(22, 19, 16, 1, 'optiond'),
(22, 19, 18, -0.33, 'optionb'),
(22, 19, 19, 1, 'optiona'),
(22, 19, 21, 1, 'optiond'),
(22, 19, 22, 1, 'optionc'),
(22, 19, 24, 1, 'optionb'),
(22, 19, 25, 1, 'optionb'),
(22, 19, 26, 2, 'optionc'),
(22, 19, 27, 2, 'optionb'),
(22, 19, 28, -0.66, 'optiona'),
(22, 19, 29, 2, 'optiond'),
(22, 19, 31, -0.66, 'optionc'),
(22, 19, 34, 2, 'optiond'),
(22, 19, 35, 2, 'optionb'),
(22, 19, 37, 2, 'optiond'),
(22, 19, 39, 2, 'optionb'),
(22, 19, 40, 2, 'optionb'),
(22, 19, 41, -0.66, 'optionc'),
(22, 19, 43, 2, 'optionb'),
(22, 19, 45, 2, 'optionc'),
(22, 19, 46, 2, 'optionc'),
(22, 19, 49, 2, 'optionb'),
(22, 19, 50, 2, 'optionb'),
(22, 19, 53, 2, 'optiond'),
(22, 19, 57, -0.33, 'optiond'),
(22, 19, 59, 1, 'optionc'),
(22, 19, 60, -0.33, 'optionb'),
(22, 19, 61, 2, 'optionb'),
(22, 19, 62, 2, 'optionc'),
(22, 19, 63, -0.66, 'optionb'),
(22, 19, 64, -0.66, 'optiond'),
(22, 19, 65, -0.66, 'optiona'),
(83, 19, 2, -0.33, 'optiond'),
(83, 19, 3, -0.33, 'optionc'),
(83, 19, 4, 1, 'optiond'),
(83, 19, 5, -0.33, 'optionc'),
(83, 19, 6, 1, 'optiona'),
(83, 19, 7, 1, 'optionc'),
(83, 19, 11, -0.33, 'optionb'),
(83, 19, 12, 1, 'optionc'),
(83, 19, 15, 1, 'optiona'),
(83, 19, 16, 1, 'optiond'),
(83, 19, 19, -0.33, 'optiond'),
(83, 19, 21, 1, 'optiond'),
(83, 19, 22, 1, 'optionc'),
(83, 19, 23, 1, 'optiond'),
(83, 19, 24, 1, 'optionb'),
(83, 19, 25, 1, 'optionb'),
(83, 19, 26, 2, 'optionc'),
(83, 19, 27, -0.66, 'optionc'),
(83, 19, 29, 2, 'optiond'),
(83, 19, 31, 2, 'optionb'),
(83, 19, 32, 2, 'optiond'),
(83, 19, 35, 2, 'optionb'),
(83, 19, 38, -0.66, 'optionc'),
(83, 19, 39, 2, 'optionb'),
(83, 19, 40, -0.66, 'optiona'),
(83, 19, 41, -0.66, 'optionb'),
(83, 19, 43, 2, 'optionb'),
(83, 19, 44, 2, 'optionc'),
(83, 19, 45, 2, 'optionc'),
(83, 19, 46, 2, 'optionc'),
(83, 19, 48, 2, 'optiond'),
(83, 19, 49, -0.66, 'optiond'),
(83, 19, 50, 2, 'optionb'),
(83, 19, 51, -0.66, 'optiona'),
(83, 19, 53, -0.66, 'optionc'),
(83, 19, 57, -0.33, 'optiond'),
(83, 19, 58, 1, 'optionc'),
(83, 19, 59, -0.33, 'optiond'),
(83, 19, 61, 2, 'optionb'),
(83, 19, 62, 2, 'optionc'),
(83, 19, 63, 2, 'optiona'),
(83, 19, 64, 2, 'optionc'),
(83, 19, 65, 2, 'optionb'),
(153, 19, 1, 1, 'optionb'),
(153, 19, 2, -0.33, 'optionb'),
(153, 19, 3, 1, 'optiona'),
(153, 19, 4, -0.33, 'optionc'),
(153, 19, 5, -0.33, 'optiond'),
(153, 19, 6, 1, 'optiona'),
(153, 19, 7, 1, 'optionc'),
(153, 19, 11, 1, 'optiond'),
(153, 19, 12, 1, 'optionc'),
(153, 19, 15, -0.33, 'optiond'),
(153, 19, 16, 1, 'optiond'),
(153, 19, 18, 1, 'optionc'),
(153, 19, 19, 1, 'optiona'),
(153, 19, 20, -0.33, 'optionb'),
(153, 19, 21, 1, 'optiond'),
(153, 19, 22, 1, 'optionc'),
(153, 19, 24, 1, 'optionb'),
(153, 19, 25, 1, 'optionb'),
(153, 19, 26, -0.66, 'optiond'),
(153, 19, 29, -0.66, 'optiona'),
(153, 19, 32, -0.66, 'optiona'),
(153, 19, 35, 2, 'optionb'),
(153, 19, 36, -0.66, 'optionc'),
(153, 19, 37, 2, 'optiond'),
(153, 19, 39, 2, 'optionb'),
(153, 19, 40, 2, 'optionb'),
(153, 19, 41, -0.66, 'optionc'),
(153, 19, 43, 2, 'optionb'),
(153, 19, 45, 2, 'optionc'),
(153, 19, 46, 2, 'optionc'),
(153, 19, 50, 2, 'optionb'),
(153, 19, 53, 2, 'optiond'),
(153, 19, 57, 1, 'optiona'),
(153, 19, 58, -0.33, 'optiona'),
(153, 19, 59, 1, 'optionc'),
(153, 19, 61, 2, 'optionb'),
(153, 19, 62, 2, 'optionc'),
(153, 19, 63, 2, 'optiona'),
(153, 19, 64, -0.66, 'optiond'),
(153, 19, 65, 2, 'optionb'),
(62, 19, 1, -0.33, 'optiona'),
(62, 19, 2, 1, 'optiona'),
(62, 19, 3, 1, 'optiona'),
(62, 19, 5, -0.33, 'optiond'),
(62, 19, 6, 1, 'optiona'),
(62, 19, 7, 1, 'optionc'),
(62, 19, 10, 1, 'optionc'),
(62, 19, 11, 1, 'optiond'),
(62, 19, 12, -0.33, 'optionb'),
(62, 19, 14, 1, 'optiond'),
(62, 19, 15, 1, 'optiona'),
(62, 19, 16, 1, 'optiond'),
(62, 19, 18, -0.33, 'optionb'),
(62, 19, 19, 1, 'optiona'),
(62, 19, 20, -0.33, 'optionc'),
(62, 19, 21, 1, 'optiond'),
(62, 19, 22, 1, 'optionc'),
(62, 19, 23, 1, 'optiond'),
(62, 19, 24, -0.33, 'optiona'),
(62, 19, 25, -0.33, 'optiona'),
(62, 19, 26, -0.66, 'optiond'),
(62, 19, 27, -0.66, 'optiona'),
(62, 19, 29, -0.66, 'optiona'),
(62, 19, 32, -0.66, 'optionc'),
(62, 19, 34, -0.66, 'optiona'),
(62, 19, 35, 2, 'optionb'),
(62, 19, 37, 2, 'optiond'),
(62, 19, 39, 2, 'optionb'),
(62, 19, 40, 2, 'optionb'),
(62, 19, 41, 2, 'optiona'),
(62, 19, 43, 2, 'optionb'),
(62, 19, 44, 2, 'optionc'),
(62, 19, 45, 2, 'optionc'),
(62, 19, 46, 2, 'optionc'),
(62, 19, 47, 2, 'optionc'),
(62, 19, 48, 2, 'optiond'),
(62, 19, 49, 2, 'optionb'),
(62, 19, 50, 2, 'optionb'),
(62, 19, 52, 2, 'optionc'),
(62, 19, 53, 2, 'optiond'),
(62, 19, 59, -0.33, 'optiond'),
(62, 19, 61, 2, 'optionb'),
(62, 19, 62, 2, 'optionc'),
(62, 19, 63, 2, 'optiona'),
(62, 19, 64, -0.66, 'optiond'),
(124, 19, 1, -0.33, 'optiona'),
(124, 19, 3, -0.33, 'optionc'),
(124, 19, 4, -0.33, 'optiona'),
(124, 19, 5, -0.33, 'optionc'),
(124, 19, 6, 1, 'optiona'),
(124, 19, 7, -0.33, 'optiona'),
(124, 19, 9, -0.33, 'optiona'),
(124, 19, 10, -0.33, 'optionb'),
(124, 19, 11, -0.33, 'optionb'),
(124, 19, 12, 1, 'optionc'),
(124, 19, 15, 1, 'optiona'),
(124, 19, 16, -0.33, 'optiona'),
(124, 19, 18, 1, 'optionc'),
(124, 19, 19, -0.33, 'optionc'),
(124, 19, 20, 1, 'optiona'),
(124, 19, 21, 1, 'optiond'),
(124, 19, 24, -0.33, 'optiona'),
(124, 19, 25, 1, 'optionb'),
(124, 19, 27, -0.66, 'optionc'),
(124, 19, 29, -0.66, 'optionb'),
(124, 19, 32, -0.66, 'optionc'),
(124, 19, 35, -0.66, 'optiond'),
(124, 19, 38, 2, 'optionb'),
(124, 19, 39, 2, 'optionb'),
(124, 19, 40, -0.66, 'optionc'),
(124, 19, 41, 2, 'optiona'),
(124, 19, 43, 2, 'optionb'),
(124, 19, 44, 2, 'optionc'),
(124, 19, 45, 2, 'optionc'),
(124, 19, 48, -0.66, 'optiona'),
(124, 19, 49, -0.66, 'optiond'),
(124, 19, 50, -0.66, 'optiond'),
(124, 19, 51, 2, 'optionb'),
(124, 19, 56, 1, 'optiond'),
(124, 19, 58, 1, 'optionc'),
(124, 19, 59, 1, 'optionc'),
(124, 19, 61, -0.66, 'optionc'),
(124, 19, 62, 2, 'optionc'),
(124, 19, 63, -0.66, 'optionc'),
(124, 19, 65, -0.66, 'optionc'),
(92, 19, 4, -0.33, 'optiona'),
(92, 19, 5, -0.33, 'optionc'),
(92, 19, 6, -0.33, 'optionc'),
(92, 19, 7, 1, 'optionc'),
(92, 19, 10, -0.33, 'optiond'),
(92, 19, 12, -0.33, 'optiond'),
(92, 19, 14, 1, 'optiond'),
(92, 19, 15, -0.33, 'optiond'),
(92, 19, 16, 1, 'optiond'),
(92, 19, 20, 1, 'optiona'),
(92, 19, 21, 1, 'optiond'),
(92, 19, 23, -0.33, 'optionb'),
(92, 19, 24, -0.33, 'optiona'),
(92, 19, 25, 1, 'optionb'),
(92, 19, 26, -0.66, 'optiond'),
(92, 19, 28, -0.66, 'optionb'),
(92, 19, 34, 2, 'optiond'),
(92, 19, 35, 2, 'optionb'),
(92, 19, 38, -0.66, 'optionc'),
(92, 19, 41, -0.66, 'optiond'),
(92, 19, 50, 2, 'optionb'),
(92, 19, 51, -0.66, 'optiona'),
(92, 19, 56, -0.33, 'optiona'),
(92, 19, 58, -0.33, 'optiona'),
(92, 19, 59, -0.33, 'optionb'),
(92, 19, 60, 1, 'optiona'),
(92, 19, 61, 2, 'optionb'),
(92, 19, 63, -0.66, 'optionc'),
(92, 19, 64, -0.66, 'optiond'),
(92, 19, 65, -0.66, 'optionc'),
(52, 19, 1, -0.33, 'optiona'),
(52, 19, 2, 1, 'optiona'),
(52, 19, 3, 1, 'optiona'),
(52, 19, 4, 1, 'optiond'),
(52, 19, 6, 1, 'optiona'),
(52, 19, 7, 1, 'optionc'),
(52, 19, 12, 1, 'optionc'),
(52, 19, 13, -0.33, 'optiona'),
(52, 19, 15, 1, 'optiona'),
(52, 19, 16, 1, 'optiond'),
(52, 19, 18, 1, 'optionc'),
(52, 19, 21, 1, 'optiond'),
(52, 19, 22, -0.33, 'optiona'),
(52, 19, 23, -0.33, 'optionb'),
(52, 19, 24, 1, 'optionb'),
(52, 19, 25, -0.33, 'optionc'),
(52, 19, 26, 2, 'optionc'),
(52, 19, 29, 2, 'optiond'),
(52, 19, 30, 2, 'optionb'),
(52, 19, 34, -0.66, 'optiona'),
(52, 19, 35, -0.66, 'optiona'),
(52, 19, 38, -0.66, 'optiond'),
(52, 19, 39, 2, 'optionb'),
(52, 19, 40, 2, 'optionb'),
(52, 19, 41, -0.66, 'optiond'),
(52, 19, 43, 2, 'optionb'),
(52, 19, 44, 2, 'optionc'),
(52, 19, 45, 2, 'optionc'),
(52, 19, 46, 2, 'optionc'),
(52, 19, 48, 2, 'optiond'),
(52, 19, 49, 2, 'optionb'),
(52, 19, 50, -0.66, 'optiond'),
(52, 19, 51, -0.66, 'optiona'),
(52, 19, 52, 2, 'optionc'),
(52, 19, 53, 2, 'optiond'),
(52, 19, 54, -0.66, 'optiona'),
(52, 19, 55, -0.66, 'optionc'),
(52, 19, 58, 1, 'optionc'),
(52, 19, 59, 1, 'optionc'),
(52, 19, 61, -0.66, 'optiond'),
(52, 19, 62, 2, 'optionc'),
(52, 19, 64, -0.66, 'optionb'),
(52, 19, 65, 2, 'optionb'),
(73, 19, 1, 1, 'optionb'),
(73, 19, 2, 1, 'optiona'),
(73, 19, 3, 1, 'optiona'),
(73, 19, 4, 1, 'optiond'),
(81, 19, 1, 1, 'optionb'),
(73, 19, 5, -0.33, 'optiond'),
(81, 19, 2, 1, 'optiona'),
(73, 19, 6, 1, 'optiona'),
(81, 19, 3, 1, 'optiona'),
(73, 19, 11, 1, 'optiond'),
(81, 19, 4, 1, 'optiond'),
(73, 19, 14, 1, 'optiond'),
(81, 19, 5, 1, 'optionb'),
(73, 19, 15, 1, 'optiona'),
(81, 19, 6, 1, 'optiona'),
(73, 19, 16, 1, 'optiond'),
(81, 19, 7, 1, 'optionc'),
(81, 19, 8, 1, 'optiona'),
(73, 19, 17, 1, 'optiond'),
(81, 19, 10, 1, 'optionc'),
(81, 19, 11, 1, 'optiond'),
(81, 19, 12, 1, 'optionc'),
(81, 19, 13, 1, 'optionc'),
(73, 19, 18, -0.33, 'optiona'),
(73, 19, 19, 1, 'optiona'),
(81, 19, 14, 1, 'optiond'),
(73, 19, 20, -0.33, 'optionb'),
(81, 19, 15, 1, 'optiona'),
(73, 19, 21, 1, 'optiond'),
(81, 19, 16, 1, 'optiond'),
(73, 19, 22, 1, 'optionc'),
(81, 19, 18, 1, 'optionc'),
(73, 19, 23, 1, 'optiond'),
(81, 19, 19, 1, 'optiona'),
(73, 19, 24, 1, 'optionb'),
(81, 19, 20, 1, 'optiona'),
(73, 19, 25, 1, 'optionb'),
(81, 19, 21, 1, 'optiond'),
(73, 19, 26, 2, 'optionc'),
(81, 19, 22, 1, 'optionc'),
(73, 19, 27, -0.66, 'optiona'),
(81, 19, 23, 1, 'optiond'),
(73, 19, 31, 2, 'optionb'),
(81, 19, 24, 1, 'optionb'),
(73, 19, 32, -0.66, 'optiona'),
(81, 19, 25, 1, 'optionb'),
(73, 19, 34, -0.66, 'optionc'),
(73, 19, 36, -0.66, 'optiona'),
(73, 19, 37, 2, 'optiond'),
(73, 19, 38, -0.66, 'optionc'),
(81, 19, 26, 2, 'optionc'),
(73, 19, 39, 2, 'optionb'),
(73, 19, 40, 2, 'optionb'),
(81, 19, 27, 2, 'optionb'),
(73, 19, 41, 2, 'optiona'),
(73, 19, 42, -0.66, 'optionc'),
(73, 19, 43, 2, 'optionb'),
(73, 19, 45, 2, 'optionc'),
(81, 19, 28, -0.66, 'optiona'),
(73, 19, 49, -0.66, 'optiond'),
(73, 19, 50, 2, 'optionb'),
(73, 19, 52, -0.66, 'optionb'),
(73, 19, 53, 2, 'optiond'),
(81, 19, 29, 2, 'optiond'),
(73, 19, 57, -0.33, 'optionb'),
(81, 19, 30, 2, 'optionb'),
(81, 19, 31, 2, 'optionb'),
(81, 19, 32, 2, 'optiond'),
(81, 19, 34, -0.66, 'optionb'),
(81, 19, 35, 2, 'optionb'),
(81, 19, 37, 2, 'optiond'),
(81, 19, 38, 2, 'optionb'),
(81, 19, 39, 2, 'optionb'),
(81, 19, 40, 2, 'optionb'),
(81, 19, 41, -0.66, 'optionc'),
(81, 19, 42, -0.66, 'optionb'),
(81, 19, 43, 2, 'optionb'),
(81, 19, 44, 2, 'optionc'),
(81, 19, 45, 2, 'optionc'),
(81, 19, 46, 2, 'optionc'),
(81, 19, 47, 2, 'optionc'),
(81, 19, 48, 2, 'optiond'),
(81, 19, 49, 2, 'optionb'),
(81, 19, 50, 2, 'optionb'),
(81, 19, 51, 2, 'optionb'),
(81, 19, 52, 2, 'optionc'),
(81, 19, 53, 2, 'optiond'),
(81, 19, 55, -0.66, 'optionb'),
(81, 19, 57, -0.33, 'optiond'),
(81, 19, 58, -0.33, 'optionb'),
(81, 19, 59, 1, 'optionc'),
(81, 19, 61, -0.66, 'optionc'),
(81, 19, 63, 2, 'optiona'),
(81, 19, 64, -0.66, 'optionb'),
(81, 19, 65, 2, 'optionb'),
(73, 19, 58, -0.33, 'optionb'),
(73, 19, 59, 1, 'optionc'),
(73, 19, 60, -0.33, 'optiond'),
(73, 19, 61, 2, 'optionb'),
(73, 19, 62, 2, 'optionc'),
(73, 19, 63, 2, 'optiona'),
(73, 19, 64, 2, 'optionc'),
(73, 19, 65, 2, 'optionb'),
(95, 19, 1, -0.33, 'optiona'),
(95, 19, 2, 1, 'optiona'),
(95, 19, 3, 1, 'optiona'),
(95, 19, 4, -0.33, 'optiona'),
(95, 19, 5, 1, 'optionb'),
(95, 19, 7, 1, 'optionc'),
(95, 19, 10, -0.33, 'optionb'),
(95, 19, 11, 1, 'optiond'),
(95, 19, 12, -0.33, 'optionb'),
(95, 19, 14, 1, 'optiond'),
(95, 19, 15, -0.33, 'optiond'),
(95, 19, 16, 1, 'optiond'),
(95, 19, 17, 1, 'optiond'),
(95, 19, 18, 1, 'optionc'),
(95, 19, 19, 1, 'optiona'),
(95, 19, 21, 1, 'optiond'),
(95, 19, 22, 1, 'optionc'),
(95, 19, 23, 1, 'optiond'),
(95, 19, 24, 1, 'optionb'),
(95, 19, 25, 1, 'optionb'),
(95, 19, 26, 2, 'optionc'),
(95, 19, 27, 2, 'optionb'),
(95, 19, 28, -0.66, 'optiona'),
(95, 19, 29, -0.66, 'optionc'),
(95, 19, 31, 2, 'optionb'),
(95, 19, 32, -0.66, 'optiona'),
(95, 19, 35, 2, 'optionb'),
(95, 19, 36, -0.66, 'optiona'),
(95, 19, 38, 2, 'optionb'),
(95, 19, 39, 2, 'optionb'),
(95, 19, 40, -0.66, 'optionc'),
(95, 19, 41, 2, 'optiona'),
(95, 19, 42, -0.66, 'optiona'),
(95, 19, 43, 2, 'optionb'),
(95, 19, 44, 2, 'optionc'),
(95, 19, 45, 2, 'optionc'),
(95, 19, 46, -0.66, 'optiona'),
(95, 19, 47, -0.66, 'optiond'),
(95, 19, 50, 2, 'optionb'),
(95, 19, 51, -0.66, 'optiona'),
(95, 19, 53, -0.66, 'optiona'),
(95, 19, 55, -0.66, 'optionc'),
(95, 19, 57, -0.33, 'optionb'),
(95, 19, 58, -0.33, 'optionb'),
(95, 19, 59, 1, 'optionc'),
(95, 19, 61, 2, 'optionb'),
(95, 19, 63, -0.66, 'optionb'),
(95, 19, 64, 2, 'optionc'),
(95, 19, 65, -0.66, 'optionc'),
(67, 19, 2, -0.33, 'optiond'),
(67, 19, 3, 1, 'optiona'),
(67, 19, 4, -0.33, 'optionb'),
(67, 19, 5, -0.33, 'optiond'),
(67, 19, 6, -0.33, 'optiond'),
(67, 19, 7, 1, 'optionc'),
(67, 19, 9, -0.33, 'optiond'),
(67, 19, 10, 1, 'optionc'),
(67, 19, 11, 1, 'optiond'),
(67, 19, 12, -0.33, 'optiond'),
(67, 19, 13, 1, 'optionc'),
(67, 19, 14, 1, 'optiond'),
(67, 19, 15, -0.33, 'optiond'),
(67, 19, 16, 1, 'optiond'),
(67, 19, 18, -0.33, 'optionb'),
(67, 19, 20, -0.33, 'optionb'),
(67, 19, 21, 1, 'optiond'),
(67, 19, 22, 1, 'optionc'),
(67, 19, 24, 1, 'optionb'),
(67, 19, 25, 1, 'optionb'),
(67, 19, 26, 2, 'optionc'),
(67, 19, 27, 2, 'optionb'),
(67, 19, 28, -0.66, 'optiona'),
(67, 19, 29, 2, 'optiond'),
(67, 19, 30, 2, 'optionb'),
(67, 19, 31, -0.66, 'optionc'),
(67, 19, 32, -0.66, 'optiona'),
(67, 19, 34, -0.66, 'optiona'),
(67, 19, 35, -0.66, 'optiond'),
(67, 19, 36, -0.66, 'optiona'),
(67, 19, 37, 2, 'optiond'),
(67, 19, 38, 2, 'optionb'),
(67, 19, 39, 2, 'optionb'),
(67, 19, 40, 2, 'optionb'),
(67, 19, 41, 2, 'optiona'),
(67, 19, 42, 2, 'optiond'),
(67, 19, 43, 2, 'optionb'),
(67, 19, 44, 2, 'optionc'),
(67, 19, 45, 2, 'optionc'),
(67, 19, 46, 2, 'optionc'),
(67, 19, 47, 2, 'optionc'),
(67, 19, 48, 2, 'optiond'),
(67, 19, 50, 2, 'optionb'),
(67, 19, 51, -0.66, 'optiona'),
(67, 19, 53, 2, 'optiond'),
(67, 19, 54, -0.66, 'optiona'),
(67, 19, 59, 1, 'optionc'),
(67, 19, 61, 2, 'optionb'),
(67, 19, 62, 2, 'optionc'),
(96, 19, 1, -0.33, 'optiona'),
(96, 19, 2, 1, 'optiona'),
(96, 19, 3, 1, 'optiona'),
(96, 19, 4, -0.33, 'optionc'),
(96, 19, 5, -0.33, 'optiond'),
(96, 19, 7, 1, 'optionc'),
(96, 19, 10, -0.33, 'optionb'),
(96, 19, 11, -0.33, 'optionc'),
(96, 19, 12, 1, 'optionc'),
(96, 19, 13, 1, 'optionc'),
(96, 19, 15, -0.33, 'optiond'),
(96, 19, 18, 1, 'optionc'),
(96, 19, 19, 1, 'optiona'),
(96, 19, 21, 1, 'optiond'),
(96, 19, 22, -0.33, 'optiona'),
(96, 19, 23, -0.33, 'optiona'),
(96, 19, 24, 1, 'optionb'),
(96, 19, 26, -0.66, 'optiona'),
(96, 19, 28, -0.66, 'optiona'),
(96, 19, 31, -0.66, 'optiond'),
(96, 19, 32, -0.66, 'optiona'),
(96, 19, 34, -0.66, 'optionc'),
(96, 19, 35, -0.66, 'optiond'),
(96, 19, 37, 2, 'optiond'),
(96, 19, 38, 2, 'optionb'),
(96, 19, 39, 2, 'optionb'),
(96, 19, 40, -0.66, 'optiond'),
(96, 19, 41, 2, 'optiona'),
(96, 19, 44, 2, 'optionc'),
(96, 19, 45, 2, 'optionc'),
(96, 19, 46, 2, 'optionc'),
(96, 19, 47, -0.66, 'optiond'),
(96, 19, 50, 2, 'optionb'),
(96, 19, 59, 1, 'optionc'),
(96, 19, 61, 2, 'optionb'),
(96, 19, 62, 2, 'optionc'),
(96, 19, 63, 2, 'optiona'),
(138, 19, 2, 1, 'optiona'),
(138, 19, 4, -0.33, 'optionb'),
(138, 19, 5, 1, 'optionb'),
(138, 19, 6, 1, 'optiona'),
(138, 19, 7, 1, 'optionc'),
(138, 19, 11, 1, 'optiond'),
(138, 19, 12, 1, 'optionc'),
(138, 19, 14, -0.33, 'optionb'),
(138, 19, 15, -0.33, 'optiond'),
(138, 19, 16, 1, 'optiond'),
(138, 19, 19, 1, 'optiona'),
(138, 19, 21, 1, 'optiond'),
(138, 19, 22, -0.33, 'optiond'),
(138, 19, 23, -0.33, 'optionb'),
(138, 19, 24, 1, 'optionb'),
(138, 19, 25, 1, 'optionb'),
(138, 19, 39, 2, 'optionb'),
(138, 19, 40, 2, 'optionb'),
(138, 19, 41, -0.66, 'optionc'),
(138, 19, 43, 2, 'optionb'),
(138, 19, 44, 2, 'optionc'),
(138, 19, 45, 2, 'optionc'),
(138, 19, 46, 2, 'optionc'),
(138, 19, 49, -0.66, 'optionc'),
(138, 19, 50, 2, 'optionb'),
(138, 19, 56, 1, 'optiond'),
(138, 19, 58, 1, 'optionc'),
(138, 19, 59, -0.33, 'optionb'),
(138, 19, 61, 2, 'optionb'),
(107, 19, 3, -0.33, 'optionc'),
(107, 19, 4, 1, 'optiond'),
(107, 19, 5, -0.33, 'optionc'),
(107, 19, 6, -0.33, 'optiond'),
(107, 19, 7, -0.33, 'optiona'),
(107, 19, 10, -0.33, 'optionb'),
(107, 19, 11, 1, 'optiond'),
(107, 19, 15, -0.33, 'optiond'),
(107, 19, 16, 1, 'optiond'),
(107, 19, 18, -0.33, 'optionb'),
(107, 19, 19, 1, 'optiona'),
(107, 19, 21, 1, 'optiond'),
(107, 19, 22, 1, 'optionc'),
(107, 19, 23, -0.33, 'optionb'),
(107, 19, 24, 1, 'optionb'),
(107, 19, 25, 1, 'optionb'),
(107, 19, 26, 2, 'optionc'),
(107, 19, 27, -0.66, 'optiona'),
(107, 19, 31, -0.66, 'optiona'),
(107, 19, 32, -0.66, 'optionc'),
(107, 19, 34, -0.66, 'optiona'),
(107, 19, 35, 2, 'optionb'),
(107, 19, 36, -0.66, 'optionc'),
(107, 19, 38, -0.66, 'optiond'),
(107, 19, 39, 2, 'optionb'),
(107, 19, 40, 2, 'optionb'),
(107, 19, 41, -0.66, 'optionc'),
(107, 19, 43, 2, 'optionb'),
(107, 19, 44, 2, 'optionc'),
(107, 19, 45, 2, 'optionc'),
(107, 19, 46, 2, 'optionc'),
(107, 19, 48, -0.66, 'optiona'),
(107, 19, 49, 2, 'optionb'),
(107, 19, 50, 2, 'optionb'),
(107, 19, 51, 2, 'optionb'),
(107, 19, 59, 1, 'optionc'),
(107, 19, 61, 2, 'optionb'),
(107, 19, 62, 2, 'optionc'),
(107, 19, 63, -0.66, 'optionb'),
(107, 19, 64, -0.66, 'optiond'),
(107, 19, 65, 2, 'optionb'),
(116, 19, 1, 1, 'optionb'),
(116, 19, 2, 1, 'optiona'),
(116, 19, 3, 1, 'optiona'),
(116, 19, 4, 1, 'optiond'),
(116, 19, 5, 1, 'optionb'),
(116, 19, 6, 1, 'optiona'),
(116, 19, 7, 1, 'optionc'),
(116, 19, 9, -0.33, 'optiond'),
(116, 19, 10, 1, 'optionc'),
(116, 19, 11, 1, 'optiond'),
(116, 19, 12, -0.33, 'optiond'),
(116, 19, 13, 1, 'optionc'),
(116, 19, 14, 1, 'optiond'),
(116, 19, 15, 1, 'optiona'),
(116, 19, 16, 1, 'optiond'),
(116, 19, 18, 1, 'optionc'),
(116, 19, 19, 1, 'optiona'),
(116, 19, 21, 1, 'optiond'),
(116, 19, 22, 1, 'optionc'),
(116, 19, 23, 1, 'optiond'),
(116, 19, 24, 1, 'optionb'),
(116, 19, 25, 1, 'optionb'),
(116, 19, 26, 2, 'optionc'),
(116, 19, 27, -0.66, 'optiona'),
(116, 19, 28, -0.66, 'optionb'),
(116, 19, 29, 2, 'optiond'),
(116, 19, 31, 2, 'optionb'),
(116, 19, 32, -0.66, 'optionc'),
(116, 19, 34, 2, 'optiond'),
(116, 19, 35, 2, 'optionb'),
(116, 19, 36, -0.66, 'optiona'),
(116, 19, 37, 2, 'optiond'),
(116, 19, 38, -0.66, 'optionc'),
(116, 19, 39, 2, 'optionb'),
(116, 19, 40, 2, 'optionb'),
(116, 19, 41, -0.66, 'optionc'),
(116, 19, 42, -0.66, 'optionc'),
(116, 19, 43, 2, 'optionb'),
(116, 19, 44, 2, 'optionc'),
(116, 19, 45, 2, 'optionc'),
(116, 19, 46, 2, 'optionc'),
(116, 19, 47, 2, 'optionc'),
(116, 19, 48, 2, 'optiond'),
(116, 19, 49, 2, 'optionb'),
(116, 19, 50, 2, 'optionb'),
(116, 19, 51, 2, 'optionb'),
(116, 19, 53, 2, 'optiond'),
(116, 19, 54, 2, 'optionc'),
(116, 19, 55, 2, 'optiond'),
(116, 19, 56, -0.33, 'optiona'),
(116, 19, 58, -0.33, 'optiona'),
(116, 19, 59, 1, 'optionc'),
(116, 19, 61, 2, 'optionb'),
(116, 19, 62, 2, 'optionc'),
(116, 19, 63, 2, 'optiona'),
(116, 19, 64, -0.66, 'optiond'),
(116, 19, 65, 2, 'optionb'),
(79, 19, 1, 1, 'optionb'),
(79, 19, 3, -0.33, 'optionb'),
(79, 19, 4, -0.33, 'optiona'),
(79, 19, 5, -0.33, 'optionc'),
(79, 19, 6, 1, 'optiona'),
(79, 19, 7, 1, 'optionc'),
(79, 19, 12, -0.33, 'optiond'),
(79, 19, 15, 1, 'optiona'),
(79, 19, 16, 1, 'optiond'),
(79, 19, 19, 1, 'optiona'),
(79, 19, 21, 1, 'optiond'),
(79, 19, 22, 1, 'optionc'),
(79, 19, 23, -0.33, 'optionb'),
(79, 19, 24, -0.33, 'optiona'),
(79, 19, 26, -0.66, 'optionb'),
(79, 19, 27, -0.66, 'optionc'),
(79, 19, 29, 2, 'optiond'),
(79, 19, 32, -0.66, 'optiona'),
(79, 19, 34, 2, 'optiond'),
(79, 19, 35, 2, 'optionb'),
(79, 19, 37, 2, 'optiond'),
(79, 19, 39, 2, 'optionb'),
(79, 19, 40, -0.66, 'optiona'),
(79, 19, 41, -0.66, 'optionc'),
(79, 19, 43, 2, 'optionb'),
(79, 19, 44, 2, 'optionc'),
(79, 19, 45, 2, 'optionc'),
(79, 19, 46, -0.66, 'optiond'),
(79, 19, 50, 2, 'optionb'),
(79, 19, 51, 2, 'optionb'),
(79, 19, 53, 2, 'optiond'),
(65, 19, 3, -0.33, 'optionc'),
(65, 19, 4, -0.33, 'optionc'),
(65, 19, 5, 1, 'optionb'),
(65, 19, 6, 1, 'optiona'),
(65, 19, 7, 1, 'optionc'),
(65, 19, 10, 1, 'optionc'),
(65, 19, 12, 1, 'optionc'),
(65, 19, 14, 1, 'optiond'),
(65, 19, 15, -0.33, 'optiond'),
(65, 19, 16, 1, 'optiond'),
(65, 19, 17, 1, 'optiond'),
(65, 19, 18, -0.33, 'optionb'),
(65, 19, 19, 1, 'optiona'),
(65, 19, 21, 1, 'optiond'),
(65, 19, 22, 1, 'optionc'),
(65, 19, 23, 1, 'optiond'),
(65, 19, 24, 1, 'optionb'),
(65, 19, 25, 1, 'optionb'),
(65, 19, 26, 2, 'optionc'),
(65, 19, 28, -0.66, 'optionb'),
(65, 19, 29, -0.66, 'optiona'),
(65, 19, 30, 2, 'optionb'),
(65, 19, 31, -0.66, 'optiona'),
(65, 19, 32, -0.66, 'optionc'),
(65, 19, 34, -0.66, 'optionc'),
(65, 19, 37, 2, 'optiond'),
(65, 19, 38, 2, 'optionb'),
(65, 19, 39, 2, 'optionb'),
(65, 19, 40, 2, 'optionb'),
(65, 19, 41, -0.66, 'optionc'),
(65, 19, 43, 2, 'optionb'),
(65, 19, 44, 2, 'optionc'),
(65, 19, 45, 2, 'optionc'),
(65, 19, 46, 2, 'optionc'),
(65, 19, 48, -0.66, 'optionc'),
(65, 19, 49, -0.66, 'optiond'),
(65, 19, 50, 2, 'optionb'),
(65, 19, 53, -0.66, 'optionb'),
(65, 19, 54, 2, 'optionc'),
(65, 19, 55, -0.66, 'optiona'),
(65, 19, 56, -0.33, 'optiona'),
(65, 19, 57, 1, 'optiona'),
(65, 19, 58, -0.33, 'optiona'),
(65, 19, 59, 1, 'optionc'),
(65, 19, 60, 1, 'optiona'),
(65, 19, 61, 2, 'optionb'),
(65, 19, 63, 2, 'optiona'),
(65, 19, 64, 2, 'optionc'),
(101, 19, 2, -0.33, 'optiond'),
(101, 19, 3, -0.33, 'optiond'),
(101, 19, 4, 1, 'optiond'),
(101, 19, 5, -0.33, 'optionc'),
(101, 19, 6, -0.33, 'optiond'),
(101, 19, 7, -0.33, 'optiond'),
(101, 19, 10, -0.33, 'optiona'),
(101, 19, 11, -0.33, 'optionb'),
(101, 19, 12, 1, 'optionc'),
(101, 19, 15, -0.33, 'optiond'),
(101, 19, 16, 1, 'optiond'),
(101, 19, 17, -0.33, 'optiona'),
(101, 19, 18, 1, 'optionc'),
(101, 19, 19, -0.33, 'optionb'),
(101, 19, 21, 1, 'optiond'),
(101, 19, 22, 1, 'optionc'),
(101, 19, 23, 1, 'optiond'),
(101, 19, 24, 1, 'optionb'),
(101, 19, 26, 2, 'optionc'),
(101, 19, 29, 2, 'optiond'),
(101, 19, 32, 2, 'optiond'),
(101, 19, 34, 2, 'optiond'),
(101, 19, 35, 2, 'optionb'),
(101, 19, 38, 2, 'optionb'),
(101, 19, 39, 2, 'optionb'),
(101, 19, 40, 2, 'optionb'),
(101, 19, 41, 2, 'optiona'),
(101, 19, 43, 2, 'optionb'),
(101, 19, 45, 2, 'optionc'),
(101, 19, 46, -0.66, 'optiond'),
(101, 19, 49, 2, 'optionb'),
(101, 19, 50, 2, 'optionb'),
(101, 19, 51, 2, 'optionb'),
(101, 19, 53, 2, 'optiond'),
(101, 19, 54, 2, 'optionc'),
(101, 19, 55, -0.66, 'optiona'),
(101, 19, 57, 1, 'optiona'),
(101, 19, 58, 1, 'optionc'),
(101, 19, 59, 1, 'optionc'),
(101, 19, 60, 1, 'optiona'),
(101, 19, 61, -0.66, 'optionc'),
(101, 19, 64, 2, 'optionc'),
(101, 19, 65, -0.66, 'optionc'),
(121, 19, 1, 1, 'optionb'),
(121, 19, 2, -0.33, 'optiond'),
(121, 19, 3, 1, 'optiona'),
(121, 19, 4, -0.33, 'optiona'),
(121, 19, 5, 1, 'optionb'),
(121, 19, 6, 1, 'optiona'),
(121, 19, 7, 1, 'optionc'),
(121, 19, 11, 1, 'optiond'),
(121, 19, 12, 1, 'optionc'),
(121, 19, 15, 1, 'optiona'),
(121, 19, 16, 1, 'optiond'),
(121, 19, 17, 1, 'optiond'),
(121, 19, 19, 1, 'optiona'),
(121, 19, 21, 1, 'optiond'),
(121, 19, 22, -0.33, 'optiona'),
(121, 19, 24, 1, 'optionb'),
(121, 19, 25, 1, 'optionb'),
(121, 19, 26, 2, 'optionc'),
(121, 19, 27, 2, 'optionb'),
(121, 19, 38, -0.66, 'optionc'),
(121, 19, 39, 2, 'optionb'),
(121, 19, 40, 2, 'optionb'),
(121, 19, 41, 2, 'optiona'),
(121, 19, 43, 2, 'optionb'),
(121, 19, 45, 2, 'optionc'),
(121, 19, 46, 2, 'optionc'),
(121, 19, 50, 2, 'optionb'),
(121, 19, 54, 2, 'optionc'),
(121, 19, 55, 2, 'optiond'),
(121, 19, 56, -0.33, 'optiona'),
(121, 19, 58, -0.33, 'optionb'),
(121, 19, 59, 1, 'optionc'),
(121, 19, 61, 2, 'optionb'),
(121, 19, 64, 2, 'optionc'),
(121, 19, 65, 2, 'optionb'),
(123, 19, 1, -0.33, 'optiona'),
(123, 19, 2, -0.33, 'optionb'),
(123, 19, 3, -0.33, 'optionb'),
(123, 19, 4, 1, 'optiond'),
(123, 19, 5, -0.33, 'optiond'),
(123, 19, 6, 1, 'optiona'),
(123, 19, 7, 1, 'optionc'),
(123, 19, 8, 1, 'optiona'),
(123, 19, 9, -0.33, 'optiona'),
(123, 19, 10, 1, 'optionc'),
(123, 19, 11, -0.33, 'optionb'),
(123, 19, 15, 1, 'optiona'),
(123, 19, 19, 1, 'optiona'),
(123, 19, 20, -0.33, 'optionb'),
(123, 19, 21, 1, 'optiond'),
(123, 19, 22, 1, 'optionc'),
(123, 19, 24, 1, 'optionb'),
(123, 19, 25, 1, 'optionb'),
(123, 19, 26, 2, 'optionc'),
(123, 19, 34, 2, 'optiond'),
(123, 19, 35, -0.66, 'optionc'),
(123, 19, 37, 2, 'optiond'),
(123, 19, 39, 2, 'optionb'),
(123, 19, 40, 2, 'optionb'),
(123, 19, 41, 2, 'optiona'),
(123, 19, 42, -0.66, 'optiona'),
(123, 19, 43, 2, 'optionb'),
(123, 19, 44, -0.66, 'optiona'),
(123, 19, 45, -0.66, 'optionb'),
(123, 19, 46, 2, 'optionc'),
(123, 19, 48, 2, 'optiond'),
(123, 19, 49, -0.66, 'optiond'),
(123, 19, 50, 2, 'optionb'),
(123, 19, 51, -0.66, 'optiona'),
(123, 19, 52, 2, 'optionc'),
(123, 19, 57, -0.33, 'optionb'),
(123, 19, 58, 1, 'optionc'),
(123, 19, 59, 1, 'optionc'),
(123, 19, 61, 2, 'optionb'),
(123, 19, 63, -0.66, 'optionc'),
(123, 19, 64, -0.66, 'optiond'),
(123, 19, 65, 2, 'optionb'),
(20, 19, 3, 1, 'optiona'),
(20, 19, 4, 1, 'optiond'),
(20, 19, 5, 1, 'optionb'),
(20, 19, 6, 1, 'optiona'),
(20, 19, 10, 1, 'optionc'),
(20, 19, 11, -0.33, 'optionc'),
(20, 19, 12, 1, 'optionc'),
(20, 19, 14, 1, 'optiond'),
(20, 19, 15, -0.33, 'optiond'),
(20, 19, 16, 1, 'optiond'),
(20, 19, 17, 1, 'optiond'),
(20, 19, 18, 1, 'optionc'),
(20, 19, 19, 1, 'optiona'),
(20, 19, 20, -0.33, 'optionc'),
(20, 19, 21, 1, 'optiond'),
(20, 19, 22, 1, 'optionc'),
(20, 19, 23, -0.33, 'optionb'),
(20, 19, 24, 1, 'optionb'),
(20, 19, 25, 1, 'optionb'),
(20, 19, 26, -0.66, 'optiona'),
(20, 19, 27, -0.66, 'optionc'),
(20, 19, 28, -0.66, 'optionb'),
(20, 19, 29, -0.66, 'optiona'),
(20, 19, 30, 2, 'optionb'),
(20, 19, 31, 2, 'optionb'),
(20, 19, 32, -0.66, 'optiona'),
(20, 19, 34, -0.66, 'optionc'),
(20, 19, 35, 2, 'optionb'),
(20, 19, 37, 2, 'optiond'),
(20, 19, 38, -0.66, 'optiond'),
(20, 19, 40, -0.66, 'optionc'),
(20, 19, 41, 2, 'optiona'),
(20, 19, 43, 2, 'optionb'),
(20, 19, 44, 2, 'optionc'),
(56, 19, 1, -0.33, 'optiona'),
(56, 19, 3, 1, 'optiona'),
(56, 19, 4, 1, 'optiond'),
(56, 19, 5, -0.33, 'optionc'),
(56, 19, 6, 1, 'optiona'),
(56, 19, 7, 1, 'optionc'),
(56, 19, 11, 1, 'optiond'),
(56, 19, 12, 1, 'optionc'),
(56, 19, 14, 1, 'optiond'),
(56, 19, 15, -0.33, 'optiond'),
(56, 19, 16, 1, 'optiond'),
(56, 19, 18, 1, 'optionc'),
(56, 19, 19, 1, 'optiona'),
(56, 19, 21, 1, 'optiond'),
(56, 19, 23, 1, 'optiond'),
(56, 19, 24, 1, 'optionb'),
(56, 19, 25, 1, 'optionb'),
(56, 19, 27, -0.66, 'optionc'),
(56, 19, 29, 2, 'optiond'),
(56, 19, 31, 2, 'optionb'),
(56, 19, 32, 2, 'optiond'),
(56, 19, 34, -0.66, 'optionc'),
(56, 19, 35, 2, 'optionb'),
(56, 19, 37, 2, 'optiond'),
(56, 19, 38, 2, 'optionb'),
(56, 19, 39, 2, 'optionb'),
(56, 19, 40, -0.66, 'optiond'),
(56, 19, 41, 2, 'optiona'),
(56, 19, 42, 2, 'optiond'),
(56, 19, 43, 2, 'optionb'),
(56, 19, 44, 2, 'optionc'),
(56, 19, 45, 2, 'optionc'),
(56, 19, 46, 2, 'optionc'),
(56, 19, 50, 2, 'optionb'),
(20, 19, 46, 2, 'optionc'),
(20, 19, 47, 2, 'optionc'),
(20, 19, 48, 2, 'optiond'),
(20, 19, 50, 2, 'optionb'),
(20, 19, 51, -0.66, 'optiona'),
(20, 19, 53, 2, 'optiond'),
(20, 19, 56, -0.33, 'optionc'),
(20, 19, 57, 1, 'optiona'),
(20, 19, 58, 1, 'optionc'),
(20, 19, 59, 1, 'optionc'),
(20, 19, 61, 2, 'optionb'),
(20, 19, 63, 2, 'optiona'),
(20, 19, 64, 2, 'optionc'),
(20, 19, 65, 2, 'optionb'),
(56, 19, 51, -0.66, 'optiona'),
(56, 19, 53, 2, 'optiond'),
(56, 19, 58, 1, 'optionc'),
(56, 19, 59, 1, 'optionc'),
(56, 19, 61, 2, 'optionb'),
(56, 19, 64, 2, 'optionc'),
(145, 19, 1, 1, 'optionb'),
(145, 19, 2, -0.33, 'optiond'),
(145, 19, 3, 1, 'optiona'),
(145, 19, 4, 1, 'optiond'),
(145, 19, 5, -0.33, 'optionc'),
(145, 19, 6, 1, 'optiona'),
(145, 19, 7, 1, 'optionc'),
(145, 19, 9, -0.33, 'optiond'),
(145, 19, 10, 1, 'optionc'),
(145, 19, 11, -0.33, 'optionb'),
(145, 19, 12, 1, 'optionc'),
(145, 19, 14, 1, 'optiond'),
(145, 19, 15, -0.33, 'optiond'),
(145, 19, 16, 1, 'optiond'),
(145, 19, 17, 1, 'optiond'),
(145, 19, 18, -0.33, 'optionb'),
(145, 19, 19, 1, 'optiona'),
(145, 19, 20, -0.33, 'optionc'),
(145, 19, 21, 1, 'optiond'),
(145, 19, 24, 1, 'optionb'),
(145, 19, 26, 2, 'optionc'),
(145, 19, 27, 2, 'optionb'),
(145, 19, 30, 2, 'optionb'),
(145, 19, 31, -0.66, 'optiond'),
(145, 19, 34, -0.66, 'optionc'),
(145, 19, 37, 2, 'optiond'),
(145, 19, 38, 2, 'optionb'),
(145, 19, 39, 2, 'optionb'),
(145, 19, 40, 2, 'optionb'),
(145, 19, 41, 2, 'optiona'),
(145, 19, 42, 2, 'optiond'),
(145, 19, 43, 2, 'optionb'),
(145, 19, 44, 2, 'optionc'),
(145, 19, 46, 2, 'optionc'),
(145, 19, 47, 2, 'optionc'),
(145, 19, 48, -0.66, 'optionc'),
(145, 19, 50, 2, 'optionb'),
(145, 19, 53, -0.66, 'optionc'),
(145, 19, 58, 1, 'optionc'),
(145, 19, 59, 1, 'optionc'),
(145, 19, 60, -0.33, 'optionb'),
(145, 19, 61, 2, 'optionb'),
(145, 19, 62, 2, 'optionc'),
(145, 19, 63, 2, 'optiona'),
(145, 19, 64, -0.66, 'optiond'),
(145, 19, 65, -0.66, 'optionc'),
(102, 19, 1, 1, 'optionb'),
(102, 19, 2, 1, 'optiona'),
(102, 19, 4, 1, 'optiond'),
(102, 19, 5, 1, 'optionb'),
(102, 19, 6, 1, 'optiona'),
(102, 19, 7, 1, 'optionc'),
(102, 19, 12, -0.33, 'optiond'),
(102, 19, 14, -0.33, 'optionc'),
(102, 19, 15, 1, 'optiona'),
(102, 19, 16, 1, 'optiond'),
(102, 19, 17, -0.33, 'optionc'),
(102, 19, 18, 1, 'optionc'),
(102, 19, 21, 1, 'optiond'),
(102, 19, 22, 1, 'optionc'),
(102, 19, 23, 1, 'optiond'),
(102, 19, 24, 1, 'optionb'),
(102, 19, 26, 2, 'optionc'),
(102, 19, 27, -0.66, 'optionc'),
(102, 19, 28, -0.66, 'optiona'),
(102, 19, 29, 2, 'optiond'),
(102, 19, 31, -0.66, 'optiona'),
(102, 19, 39, 2, 'optionb'),
(102, 19, 40, 2, 'optionb'),
(102, 19, 49, -0.66, 'optiond'),
(102, 19, 57, 1, 'optiona'),
(102, 19, 58, -0.33, 'optiona'),
(102, 19, 59, -0.33, 'optiond'),
(102, 19, 64, 2, 'optionc'),
(102, 19, 65, -0.66, 'optionc'),
(98, 19, 1, 1, 'optionb'),
(98, 19, 2, -0.33, 'optionb'),
(98, 19, 3, 1, 'optiona'),
(98, 19, 4, -0.33, 'optiona'),
(98, 19, 5, 1, 'optionb'),
(98, 19, 6, -0.33, 'optiond'),
(98, 19, 7, -0.33, 'optiond'),
(98, 19, 10, 1, 'optionc'),
(98, 19, 12, -0.33, 'optionb'),
(98, 19, 13, 1, 'optionc'),
(98, 19, 14, 1, 'optiond'),
(98, 19, 15, 1, 'optiona'),
(98, 19, 16, 1, 'optiond'),
(98, 19, 17, 1, 'optiond'),
(98, 19, 18, 1, 'optionc'),
(98, 19, 19, -0.33, 'optiond'),
(98, 19, 20, -0.33, 'optionc'),
(98, 19, 21, 1, 'optiond'),
(98, 19, 22, -0.33, 'optiond'),
(98, 19, 24, 1, 'optionb'),
(98, 19, 25, 1, 'optionb'),
(98, 19, 26, -0.66, 'optionb'),
(98, 19, 27, 2, 'optionb'),
(98, 19, 29, -0.66, 'optionc'),
(98, 19, 32, -0.66, 'optionc'),
(98, 19, 34, 2, 'optiond'),
(98, 19, 35, 2, 'optionb'),
(98, 19, 39, 2, 'optionb'),
(98, 19, 40, 2, 'optionb'),
(98, 19, 41, 2, 'optiona'),
(98, 19, 42, 2, 'optiond'),
(98, 19, 43, 2, 'optionb'),
(98, 19, 44, 2, 'optionc'),
(98, 19, 45, 2, 'optionc'),
(98, 19, 46, 2, 'optionc'),
(98, 19, 49, -0.66, 'optiond'),
(98, 19, 50, 2, 'optionb'),
(98, 19, 51, 2, 'optionb'),
(98, 19, 54, -0.66, 'optionb'),
(98, 19, 58, 1, 'optionc'),
(98, 19, 61, 2, 'optionb'),
(98, 19, 63, -0.66, 'optionb'),
(98, 19, 64, -0.66, 'optiond'),
(98, 19, 65, 2, 'optionb'),
(122, 19, 3, -0.33, 'optionc'),
(122, 19, 4, -0.33, 'optionc'),
(122, 19, 5, -0.33, 'optionc'),
(122, 19, 6, -0.33, 'optiond'),
(122, 19, 7, 1, 'optionc'),
(122, 19, 10, 1, 'optionc'),
(122, 19, 11, 1, 'optiond'),
(122, 19, 12, 1, 'optionc'),
(122, 19, 14, 1, 'optiond'),
(122, 19, 15, -0.33, 'optiond'),
(122, 19, 16, 1, 'optiond'),
(122, 19, 18, -0.33, 'optiond'),
(122, 19, 19, 1, 'optiona'),
(122, 19, 21, 1, 'optiond'),
(122, 19, 22, 1, 'optionc'),
(122, 19, 23, 1, 'optiond'),
(122, 19, 24, 1, 'optionb'),
(122, 19, 25, 1, 'optionb'),
(122, 19, 26, -0.66, 'optiona'),
(122, 19, 27, -0.66, 'optionc'),
(122, 19, 32, -0.66, 'optiona'),
(122, 19, 34, 2, 'optiond'),
(122, 19, 38, -0.66, 'optionc'),
(122, 19, 40, 2, 'optionb'),
(122, 19, 41, -0.66, 'optionc'),
(122, 19, 42, 2, 'optiond'),
(122, 19, 43, 2, 'optionb'),
(122, 19, 44, 2, 'optionc'),
(122, 19, 45, 2, 'optionc'),
(122, 19, 46, 2, 'optionc'),
(122, 19, 49, -0.66, 'optionc'),
(122, 19, 50, 2, 'optionb'),
(122, 19, 51, 2, 'optionb'),
(122, 19, 53, 2, 'optiond'),
(122, 19, 56, -0.33, 'optionb'),
(122, 19, 57, 1, 'optiona'),
(122, 19, 58, -0.33, 'optionb'),
(122, 19, 59, -0.33, 'optiona'),
(122, 19, 61, 2, 'optionb'),
(111, 19, 3, -0.33, 'optionc'),
(111, 19, 4, 1, 'optiond'),
(111, 19, 5, 1, 'optionb'),
(111, 19, 6, -0.33, 'optiond'),
(111, 19, 9, -0.33, 'optiond'),
(111, 19, 10, 1, 'optionc'),
(111, 19, 11, 1, 'optiond'),
(111, 19, 12, 1, 'optionc'),
(111, 19, 13, -0.33, 'optiond'),
(111, 19, 14, 1, 'optiond'),
(111, 19, 15, -0.33, 'optionb'),
(111, 19, 16, 1, 'optiond'),
(111, 19, 18, 1, 'optionc'),
(111, 19, 19, -0.33, 'optiond'),
(111, 19, 21, 1, 'optiond'),
(111, 19, 22, 1, 'optionc'),
(111, 19, 23, 1, 'optiond'),
(111, 19, 24, 1, 'optionb'),
(111, 19, 25, 1, 'optionb'),
(111, 19, 26, -0.66, 'optionb'),
(111, 19, 29, -0.66, 'optionb'),
(111, 19, 31, 2, 'optionb'),
(111, 19, 32, -0.66, 'optionc'),
(111, 19, 33, -0.66, 'optionb'),
(111, 19, 34, -0.66, 'optionb'),
(111, 19, 37, 2, 'optiond'),
(111, 19, 39, 2, 'optionb'),
(111, 19, 40, 2, 'optionb'),
(111, 19, 41, -0.66, 'optiond'),
(111, 19, 43, -0.66, 'optiona'),
(111, 19, 45, 2, 'optionc'),
(111, 19, 47, 2, 'optionc'),
(111, 19, 50, 2, 'optionb'),
(111, 19, 51, -0.66, 'optiona'),
(111, 19, 57, -0.33, 'optiond'),
(111, 19, 58, -0.33, 'optiona'),
(111, 19, 62, 2, 'optionc'),
(111, 19, 64, 2, 'optionc'),
(111, 19, 65, -0.66, 'optionc'),
(82, 19, 1, -0.33, 'optiond'),
(82, 19, 2, -0.33, 'optionb'),
(82, 19, 3, -0.33, 'optionc'),
(82, 19, 4, -0.33, 'optionc'),
(82, 19, 5, 1, 'optionb'),
(82, 19, 6, -0.33, 'optionb'),
(82, 19, 7, 1, 'optionc'),
(82, 19, 9, -0.33, 'optiond'),
(82, 19, 10, 1, 'optionc'),
(82, 19, 12, 1, 'optionc'),
(82, 19, 14, -0.33, 'optionb'),
(82, 19, 15, -0.33, 'optionb'),
(82, 19, 16, 1, 'optiond'),
(82, 19, 19, 1, 'optiona'),
(82, 19, 21, 1, 'optiond'),
(82, 19, 22, 1, 'optionc'),
(82, 19, 23, -0.33, 'optionb'),
(82, 19, 24, 1, 'optionb'),
(82, 19, 25, -0.33, 'optiona'),
(82, 19, 26, -0.66, 'optionb'),
(82, 19, 27, -0.66, 'optionc'),
(82, 19, 28, -0.66, 'optiona'),
(82, 19, 29, 2, 'optiond'),
(82, 19, 35, 2, 'optionb'),
(82, 19, 36, 2, 'optiond'),
(82, 19, 37, 2, 'optiond'),
(82, 19, 39, 2, 'optionb'),
(82, 19, 40, -0.66, 'optionc'),
(82, 19, 41, -0.66, 'optionc'),
(82, 19, 43, 2, 'optionb'),
(82, 19, 44, -0.66, 'optiond'),
(82, 19, 45, -0.66, 'optiona'),
(82, 19, 46, 2, 'optionc'),
(82, 19, 47, 2, 'optionc'),
(82, 19, 48, 2, 'optiond'),
(82, 19, 49, -0.66, 'optiond'),
(82, 19, 50, 2, 'optionb'),
(82, 19, 51, -0.66, 'optiona'),
(82, 19, 53, -0.66, 'optionc'),
(82, 19, 57, -0.33, 'optiond'),
(82, 19, 59, -0.33, 'optiond'),
(82, 19, 61, 2, 'optionb'),
(82, 19, 62, 2, 'optionc'),
(82, 19, 63, -0.66, 'optionb'),
(82, 19, 64, -0.66, 'optiond'),
(82, 19, 65, -0.66, 'optionc'),
(76, 19, 3, 1, 'optiona'),
(76, 19, 4, -0.33, 'optiona'),
(76, 19, 5, -0.33, 'optionc'),
(76, 19, 6, 1, 'optiona'),
(76, 19, 7, -0.33, 'optiona'),
(76, 19, 12, 1, 'optionc'),
(76, 19, 14, 1, 'optiond'),
(76, 19, 15, -0.33, 'optiond'),
(76, 19, 16, 1, 'optiond'),
(76, 19, 18, 1, 'optionc'),
(76, 19, 19, 1, 'optiona'),
(76, 19, 22, 1, 'optionc'),
(76, 19, 23, -0.33, 'optiona'),
(76, 19, 24, 1, 'optionb'),
(76, 19, 26, -0.66, 'optiond'),
(76, 19, 32, -0.66, 'optionc'),
(76, 19, 34, -0.66, 'optionb'),
(76, 19, 39, -0.66, 'optiond'),
(76, 19, 40, -0.66, 'optiond'),
(76, 19, 41, 2, 'optiona'),
(76, 19, 43, 2, 'optionb'),
(76, 19, 45, 2, 'optionc'),
(76, 19, 49, -0.66, 'optiond'),
(76, 19, 58, 1, 'optionc'),
(76, 19, 59, 1, 'optionc'),
(76, 19, 61, -0.66, 'optionc'),
(76, 19, 64, -0.66, 'optiond'),
(75, 19, 1, 1, 'optionb'),
(75, 19, 2, -0.33, 'optiond'),
(75, 19, 3, -0.33, 'optionc'),
(75, 19, 4, -0.33, 'optiona'),
(75, 19, 5, -0.33, 'optiond'),
(75, 19, 6, 1, 'optiona'),
(75, 19, 12, -0.33, 'optionb'),
(75, 19, 13, 1, 'optionc'),
(75, 19, 14, 1, 'optiond'),
(75, 19, 15, -0.33, 'optionb'),
(75, 19, 16, 1, 'optiond'),
(75, 19, 18, -0.33, 'optiona'),
(75, 19, 19, 1, 'optiona'),
(75, 19, 21, 1, 'optiond'),
(75, 19, 22, 1, 'optionc'),
(75, 19, 23, 1, 'optiond'),
(75, 19, 24, 1, 'optionb'),
(75, 19, 25, 1, 'optionb'),
(75, 19, 26, 2, 'optionc'),
(75, 19, 27, -0.66, 'optiona'),
(75, 19, 29, 2, 'optiond'),
(75, 19, 31, -0.66, 'optionc'),
(75, 19, 32, 2, 'optiond'),
(75, 19, 34, 2, 'optiond'),
(75, 19, 35, -0.66, 'optiona'),
(75, 19, 40, -0.66, 'optiona'),
(75, 19, 41, 2, 'optiona'),
(75, 19, 43, 2, 'optionb'),
(75, 19, 44, -0.66, 'optiond'),
(75, 19, 45, 2, 'optionc'),
(75, 19, 46, 2, 'optionc'),
(75, 19, 50, 2, 'optionb'),
(75, 19, 51, -0.66, 'optiona'),
(75, 19, 58, -0.33, 'optiona'),
(75, 19, 59, -0.33, 'optiond'),
(75, 19, 61, -0.66, 'optiona'),
(75, 19, 63, 2, 'optiona'),
(75, 19, 64, -0.66, 'optiond'),
(75, 19, 65, 2, 'optionb'),
(127, 19, 1, 1, 'optionb'),
(127, 19, 2, -0.33, 'optionb'),
(127, 19, 3, -0.33, 'optionc'),
(127, 19, 4, 1, 'optiond'),
(127, 19, 5, -0.33, 'optionc'),
(127, 19, 6, 1, 'optiona'),
(127, 19, 7, 1, 'optionc'),
(127, 19, 8, 1, 'optiona'),
(127, 19, 9, 1, 'optionc'),
(127, 19, 10, -0.33, 'optionb'),
(127, 19, 11, 1, 'optiond'),
(127, 19, 12, 1, 'optionc'),
(127, 19, 13, 1, 'optionc'),
(127, 19, 14, 1, 'optiond'),
(127, 19, 15, 1, 'optiona'),
(127, 19, 16, 1, 'optiond'),
(127, 19, 17, 1, 'optiond'),
(127, 19, 18, 1, 'optionc'),
(127, 19, 19, 1, 'optiona'),
(127, 19, 20, 1, 'optiona'),
(127, 19, 21, 1, 'optiond'),
(127, 19, 22, 1, 'optionc'),
(127, 19, 23, 1, 'optiond'),
(127, 19, 24, 1, 'optionb'),
(127, 19, 25, 1, 'optionb'),
(127, 19, 26, -0.66, 'optiona'),
(127, 19, 27, -0.66, 'optiona'),
(127, 19, 29, -0.66, 'optiona'),
(127, 19, 31, 2, 'optionb'),
(127, 19, 32, 2, 'optiond'),
(127, 19, 34, -0.66, 'optionc'),
(127, 19, 35, 2, 'optionb'),
(127, 19, 37, 2, 'optiond'),
(127, 19, 39, 2, 'optionb'),
(127, 19, 40, 2, 'optionb'),
(127, 19, 41, 2, 'optiona'),
(127, 19, 42, 2, 'optiond'),
(127, 19, 43, 2, 'optionb'),
(127, 19, 44, 2, 'optionc'),
(127, 19, 45, 2, 'optionc'),
(127, 19, 46, 2, 'optionc'),
(127, 19, 47, 2, 'optionc'),
(127, 19, 48, 2, 'optiond'),
(127, 19, 49, 2, 'optionb'),
(127, 19, 50, 2, 'optionb'),
(127, 19, 51, 2, 'optionb'),
(127, 19, 52, 2, 'optionc'),
(127, 19, 53, 2, 'optiond'),
(127, 19, 54, 2, 'optionc'),
(127, 19, 55, -0.66, 'optiona'),
(127, 19, 57, 1, 'optiona'),
(127, 19, 58, -0.33, 'optiona'),
(127, 19, 59, 1, 'optionc'),
(127, 19, 61, 2, 'optionb'),
(127, 19, 63, 2, 'optiona'),
(127, 19, 64, 2, 'optionc'),
(115, 19, 2, 1, 'optiona'),
(115, 19, 3, -0.33, 'optionc'),
(115, 19, 4, 1, 'optiond'),
(115, 19, 5, 1, 'optionb'),
(115, 19, 6, -0.33, 'optiond'),
(115, 19, 7, 1, 'optionc'),
(115, 19, 9, -0.33, 'optiond'),
(115, 19, 12, 1, 'optionc'),
(115, 19, 13, -0.33, 'optiona'),
(115, 19, 15, -0.33, 'optiond'),
(115, 19, 16, 1, 'optiond'),
(115, 19, 17, 1, 'optiond'),
(115, 19, 18, 1, 'optionc'),
(115, 19, 19, 1, 'optiona'),
(115, 19, 21, 1, 'optiond'),
(115, 19, 22, 1, 'optionc'),
(115, 19, 23, 1, 'optiond'),
(115, 19, 24, 1, 'optionb'),
(115, 19, 32, -0.66, 'optiona'),
(115, 19, 33, -0.66, 'optionb'),
(115, 19, 34, -0.66, 'optionc'),
(115, 19, 35, 2, 'optionb'),
(115, 19, 36, 2, 'optiond'),
(115, 19, 39, 2, 'optionb'),
(115, 19, 40, 2, 'optionb'),
(115, 19, 41, -0.66, 'optionc'),
(115, 19, 43, -0.66, 'optiona'),
(115, 19, 44, 2, 'optionc'),
(115, 19, 45, 2, 'optionc'),
(115, 19, 48, 2, 'optiond'),
(115, 19, 53, -0.66, 'optionc'),
(115, 19, 57, -0.33, 'optionb'),
(115, 19, 58, -0.33, 'optiona'),
(115, 19, 59, 1, 'optionc'),
(115, 19, 60, 1, 'optiona'),
(115, 19, 61, 2, 'optionb'),
(115, 19, 63, 2, 'optiona'),
(115, 19, 64, 2, 'optionc'),
(115, 19, 65, -0.66, 'optionc'),
(162, 19, 1, 1, 'optionb'),
(162, 19, 2, 1, 'optiona'),
(162, 19, 3, 1, 'optiona'),
(162, 19, 5, -0.33, 'optiond'),
(162, 19, 6, -0.33, 'optionb'),
(162, 19, 10, 1, 'optionc'),
(162, 19, 11, 1, 'optiond'),
(162, 19, 12, 1, 'optionc'),
(162, 19, 14, 1, 'optiond'),
(162, 19, 15, 1, 'optiona'),
(162, 19, 16, 1, 'optiond'),
(162, 19, 18, 1, 'optionc'),
(162, 19, 19, 1, 'optiona'),
(162, 19, 20, -0.33, 'optiond'),
(162, 19, 21, 1, 'optiond'),
(162, 19, 22, 1, 'optionc'),
(162, 19, 24, 1, 'optionb'),
(162, 19, 26, 2, 'optionc'),
(162, 19, 27, 2, 'optionb'),
(162, 19, 28, -0.66, 'optiona'),
(162, 19, 29, 2, 'optiond'),
(162, 19, 34, -0.66, 'optionc'),
(162, 19, 35, -0.66, 'optiond'),
(162, 19, 37, 2, 'optiond'),
(162, 19, 38, 2, 'optionb'),
(162, 19, 39, 2, 'optionb'),
(162, 19, 40, 2, 'optionb'),
(162, 19, 41, 2, 'optiona'),
(162, 19, 42, 2, 'optiond'),
(162, 19, 43, 2, 'optionb'),
(162, 19, 44, 2, 'optionc'),
(162, 19, 45, 2, 'optionc'),
(162, 19, 46, -0.66, 'optionb'),
(162, 19, 47, 2, 'optionc'),
(162, 19, 50, 2, 'optionb'),
(162, 19, 52, -0.66, 'optiona'),
(162, 19, 53, 2, 'optiond'),
(162, 19, 59, 1, 'optionc'),
(162, 19, 61, 2, 'optionb'),
(162, 19, 62, 2, 'optionc'),
(162, 19, 63, 2, 'optiona'),
(162, 19, 65, -0.66, 'optionc'),
(154, 19, 2, -0.33, 'optionc'),
(154, 19, 3, 1, 'optiona'),
(154, 19, 4, -0.33, 'optionc'),
(154, 19, 5, -0.33, 'optionc'),
(154, 19, 6, 1, 'optiona'),
(154, 19, 7, 1, 'optionc'),
(154, 19, 10, 1, 'optionc'),
(154, 19, 12, -0.33, 'optionb'),
(154, 19, 15, -0.33, 'optionb'),
(154, 19, 16, 1, 'optiond'),
(154, 19, 18, 1, 'optionc'),
(154, 19, 19, 1, 'optiona'),
(154, 19, 20, -0.33, 'optionc'),
(154, 19, 21, 1, 'optiond'),
(154, 19, 22, -0.33, 'optionb'),
(154, 19, 23, -0.33, 'optionb'),
(154, 19, 24, 1, 'optionb'),
(154, 19, 27, -0.66, 'optionc'),
(154, 19, 28, -0.66, 'optionc'),
(154, 19, 31, -0.66, 'optiona'),
(154, 19, 32, -0.66, 'optionc'),
(154, 19, 34, -0.66, 'optiona'),
(154, 19, 38, -0.66, 'optiond'),
(154, 19, 40, 2, 'optionb'),
(154, 19, 41, -0.66, 'optionc'),
(154, 19, 42, -0.66, 'optionc'),
(154, 19, 43, 2, 'optionb'),
(154, 19, 44, 2, 'optionc'),
(154, 19, 46, -0.66, 'optiona'),
(154, 19, 49, -0.66, 'optiond'),
(154, 19, 50, 2, 'optionb'),
(154, 19, 51, 2, 'optionb'),
(154, 19, 59, -0.33, 'optiond'),
(154, 19, 61, 2, 'optionb'),
(154, 19, 62, 2, 'optionc'),
(154, 19, 63, -0.66, 'optionb'),
(154, 19, 64, -0.66, 'optiond'),
(154, 19, 65, 2, 'optionb'),
(139, 19, 3, -0.33, 'optionc'),
(139, 19, 4, -0.33, 'optiona'),
(139, 19, 6, -0.33, 'optiond'),
(139, 19, 7, -0.33, 'optiond'),
(139, 19, 13, -0.33, 'optiona'),
(139, 19, 22, -0.33, 'optiond'),
(139, 19, 23, 1, 'optiond'),
(139, 19, 24, 1, 'optionb'),
(139, 19, 25, 1, 'optionb'),
(139, 19, 33, -0.66, 'optiona'),
(139, 19, 43, 2, 'optionb'),
(139, 19, 46, 2, 'optionc'),
(139, 19, 50, 2, 'optionb'),
(139, 19, 58, 1, 'optionc'),
(139, 19, 59, -0.33, 'optiond'),
(139, 19, 61, 2, 'optionb'),
(139, 19, 63, -0.66, 'optionc'),
(139, 19, 64, 2, 'optionc'),
(139, 19, 65, 2, 'optionb'),
(113, 19, 2, -0.33, 'optionc'),
(113, 19, 3, -0.33, 'optionc'),
(113, 19, 4, -0.33, 'optiona'),
(113, 19, 5, -0.33, 'optiond'),
(113, 19, 6, 1, 'optiona'),
(113, 19, 7, -0.33, 'optiond'),
(113, 19, 9, -0.33, 'optiond'),
(113, 19, 12, -0.33, 'optiona'),
(113, 19, 13, -0.33, 'optiona'),
(113, 19, 14, 1, 'optiond'),
(113, 19, 16, 1, 'optiond'),
(113, 19, 18, 1, 'optionc'),
(113, 19, 19, -0.33, 'optiond'),
(113, 19, 21, 1, 'optiond'),
(113, 19, 24, 1, 'optionb'),
(113, 19, 25, 1, 'optionb'),
(113, 19, 28, -0.66, 'optiona'),
(113, 19, 29, 2, 'optiond'),
(113, 19, 31, 2, 'optionb'),
(113, 19, 35, -0.66, 'optiond'),
(113, 19, 40, 2, 'optionb'),
(113, 19, 41, -0.66, 'optionc'),
(113, 19, 43, -0.66, 'optiond'),
(113, 19, 44, -0.66, 'optiond'),
(113, 19, 45, -0.66, 'optionb'),
(113, 19, 46, -0.66, 'optiond'),
(113, 19, 49, -0.66, 'optiond'),
(113, 19, 50, 2, 'optionb'),
(113, 19, 51, -0.66, 'optiond'),
(113, 19, 58, 1, 'optionc'),
(113, 19, 59, 1, 'optionc'),
(113, 19, 61, 2, 'optionb'),
(113, 19, 63, -0.66, 'optionc'),
(113, 19, 64, -0.66, 'optiond'),
(113, 19, 65, -0.66, 'optionc'),
(112, 19, 3, 1, 'optiona'),
(112, 19, 4, -0.33, 'optiona'),
(112, 19, 5, 1, 'optionb'),
(112, 19, 6, -0.33, 'optionc'),
(112, 19, 7, 1, 'optionc'),
(112, 19, 11, -0.33, 'optionc'),
(112, 19, 15, 1, 'optiona'),
(112, 19, 16, 1, 'optiond'),
(112, 19, 18, 1, 'optionc'),
(112, 19, 19, 1, 'optiona'),
(112, 19, 21, 1, 'optiond'),
(112, 19, 22, -0.33, 'optiona'),
(112, 19, 24, 1, 'optionb'),
(112, 19, 25, -0.33, 'optiona'),
(112, 19, 26, -0.66, 'optiond'),
(112, 19, 27, -0.66, 'optionc'),
(112, 19, 29, 2, 'optiond'),
(112, 19, 34, -0.66, 'optionc'),
(112, 19, 43, 2, 'optionb'),
(112, 19, 44, 2, 'optionc'),
(112, 19, 45, -0.66, 'optiona'),
(112, 19, 46, 2, 'optionc'),
(112, 19, 48, 2, 'optiond'),
(112, 19, 50, 2, 'optionb'),
(112, 19, 58, 1, 'optionc'),
(112, 19, 59, -0.33, 'optiond'),
(112, 19, 61, 2, 'optionb'),
(112, 19, 63, -0.66, 'optionb'),
(112, 19, 64, -0.66, 'optiond'),
(105, 15, 1, 1, 'optionc'),
(105, 15, 4, 1, 'optiona'),
(105, 15, 6, 1, 'optiona'),
(105, 15, 7, -0.33, 'optiona'),
(105, 15, 10, 1, 'optiona'),
(105, 15, 11, 1, 'optiond'),
(105, 15, 13, 1, 'optionb'),
(105, 15, 14, -0.33, 'optiond'),
(105, 15, 15, 1, 'optiond'),
(105, 15, 16, 1, 'optiond'),
(105, 15, 17, -0.33, 'optionc'),
(105, 15, 18, 1, 'optionb'),
(105, 15, 19, 1, 'optionc'),
(105, 15, 21, 1, 'optiona'),
(105, 15, 22, 1, 'optionb'),
(105, 15, 24, 1, 'optiona'),
(105, 15, 28, -0.66, 'optionb'),
(105, 15, 29, 2, 'optiond'),
(105, 15, 30, 2, 'optionb'),
(105, 15, 33, -0.66, 'optionb'),
(105, 15, 35, 2, 'optionc'),
(105, 15, 36, 2, 'optiond'),
(105, 15, 37, -0.66, 'optionc'),
(105, 15, 40, -0.66, 'optiona'),
(105, 15, 41, 2, 'optionc'),
(105, 15, 43, -0.66, 'optionc'),
(105, 15, 44, 2, 'optiond'),
(105, 15, 45, -0.66, 'optionb'),
(105, 15, 48, -0.66, 'optiond'),
(105, 15, 49, -0.66, 'optiond'),
(105, 15, 50, -0.66, 'optiona'),
(105, 15, 51, -0.66, 'optiona'),
(105, 15, 52, 2, 'optionc'),
(105, 15, 54, -0.66, 'optionb'),
(105, 15, 55, -0.66, 'optionc'),
(105, 15, 57, -0.33, 'optiona'),
(105, 15, 58, 1, 'optiond'),
(105, 15, 59, 1, 'optiond'),
(105, 15, 61, -0.66, 'optiona'),
(105, 15, 64, -0.66, 'optionb'),
(66, 19, 2, -0.33, 'optiond'),
(66, 19, 3, -0.33, 'optionc'),
(66, 19, 4, -0.33, 'optionb'),
(66, 19, 5, 1, 'optionb'),
(66, 19, 6, 1, 'optiona'),
(66, 19, 7, 1, 'optionc'),
(66, 19, 12, 1, 'optionc'),
(66, 19, 15, -0.33, 'optiond'),
(66, 19, 16, 1, 'optiond'),
(66, 19, 18, -0.33, 'optionb'),
(66, 19, 19, 1, 'optiona'),
(66, 19, 21, 1, 'optiond'),
(66, 19, 22, -0.33, 'optiona'),
(66, 19, 23, -0.33, 'optionb'),
(66, 19, 24, 1, 'optionb'),
(66, 19, 25, 1, 'optionb'),
(66, 19, 32, -0.66, 'optionc'),
(66, 19, 37, 2, 'optiond'),
(66, 19, 38, -0.66, 'optiona'),
(66, 19, 39, 2, 'optionb'),
(66, 19, 40, 2, 'optionb'),
(66, 19, 43, 2, 'optionb'),
(66, 19, 44, 2, 'optionc'),
(66, 19, 45, 2, 'optionc'),
(66, 19, 48, -0.66, 'optiona'),
(66, 19, 49, -0.66, 'optiond'),
(66, 19, 50, 2, 'optionb'),
(66, 19, 51, -0.66, 'optionc'),
(66, 19, 53, -0.66, 'optionc'),
(66, 19, 59, 1, 'optionc'),
(66, 19, 61, 2, 'optionb'),
(66, 19, 62, 2, 'optionc'),
(66, 19, 65, -0.66, 'optionc'),
(85, 16, 3, 1, 'optiond'),
(85, 16, 4, 1, 'optiond'),
(85, 16, 5, 1, 'optiond'),
(85, 16, 6, 1, 'optionb'),
(85, 16, 7, 1, 'optiond'),
(85, 16, 8, 1, 'optiona'),
(85, 16, 9, 1, 'optionc'),
(85, 16, 10, 1, 'optionc'),
(85, 16, 12, 1, 'optiond'),
(85, 16, 13, 1, 'optionb'),
(85, 16, 14, 1, 'optiond'),
(85, 16, 15, 1, 'optionc'),
(85, 16, 17, 1, 'optiona'),
(85, 16, 18, 1, 'optiond'),
(85, 16, 19, 1, 'optiond'),
(85, 16, 20, 1, 'optiona'),
(85, 16, 21, 1, 'optiond'),
(85, 16, 25, 1, 'optionb'),
(85, 16, 27, 2, 'optionb'),
(85, 16, 28, 2, 'optiond'),
(116, 20, 1, 1, 'optionb'),
(81, 20, 1, 1, 'optionb'),
(94, 20, 1, -0.33, 'optionc'),
(130, 20, 1, 1, 'optionb'),
(77, 20, 1, -0.33, 'optionc'),
(86, 20, 1, -0.33, 'optionc'),
(65, 20, 1, -0.33, 'optiond'),
(73, 20, 1, -0.33, 'optionc'),
(36, 20, 1, -0.33, 'optionc'),
(74, 20, 1, -0.33, 'optionc'),
(33, 20, 1, -0.33, 'optionc'),
(101, 20, 1, -0.33, 'optionc'),
(39, 20, 1, 1, 'optionb'),
(56, 20, 1, -0.33, 'optionc'),
(96, 20, 1, 1, 'optionb'),
(121, 20, 1, -0.33, 'optionc'),
(117, 20, 1, -0.33, 'optionc'),
(160, 20, 1, -0.33, 'optionc'),
(153, 20, 1, 1, 'optionb'),
(143, 20, 1, -0.33, 'optionc'),
(111, 20, 1, 1, 'optionb'),
(100, 20, 1, -0.33, 'optionc'),
(141, 20, 1, 1, 'optionb'),
(102, 20, 1, 1, 'optionb'),
(22, 20, 1, -0.33, 'optionc'),
(90, 20, 1, 1, 'optionb'),
(67, 20, 1, 1, 'optionb'),
(62, 20, 1, -0.33, 'optionc'),
(162, 20, 1, -0.33, 'optionc'),
(44, 20, 1, -0.33, 'optionc'),
(47, 20, 1, 1, 'optionb'),
(144, 20, 1, -0.33, 'optionc'),
(83, 20, 1, -0.33, 'optionc'),
(145, 20, 1, -0.33, 'optionc'),
(95, 20, 1, 1, 'optionb'),
(114, 20, 1, -0.33, 'optionc'),
(20, 20, 1, 1, 'optionb'),
(115, 20, 1, -0.33, 'optionc'),
(123, 20, 1, 1, 'optionb'),
(113, 20, 1, -0.33, 'optionc'),
(112, 20, 1, -0.33, 'optionc'),
(52, 20, 1, -0.33, 'optionc'),
(122, 20, 1, -0.33, 'optionc'),
(98, 20, 1, 1, 'optionb'),
(154, 20, 1, -0.33, 'optionc'),
(63, 20, 1, 1, 'optionb'),
(127, 20, 1, 1, 'optionb'),
(69, 20, 1, -0.33, 'optionc'),
(64, 20, 1, 1, 'optionb'),
(93, 20, 1, -0.33, 'optionc'),
(68, 20, 1, -0.33, 'optionc'),
(116, 20, 2, 1, 'optionc'),
(81, 20, 2, 1, 'optionc'),
(70, 20, 2, 1, 'optionc'),
(94, 20, 2, 1, 'optionc'),
(107, 20, 2, 1, 'optionc'),
(60, 20, 2, 1, 'optionc'),
(130, 20, 2, 1, 'optionc'),
(77, 20, 2, 1, 'optionc'),
(86, 20, 2, 1, 'optionc'),
(65, 20, 2, 1, 'optionc'),
(73, 20, 2, 1, 'optionc'),
(36, 20, 2, 1, 'optionc'),
(74, 20, 2, 1, 'optionc'),
(33, 20, 2, 1, 'optionc'),
(39, 20, 2, 1, 'optionc'),
(56, 20, 2, 1, 'optionc'),
(78, 20, 2, -0.33, 'optiond'),
(96, 20, 2, 1, 'optionc'),
(121, 20, 2, 1, 'optionc'),
(117, 20, 2, 1, 'optionc'),
(153, 20, 2, -0.33, 'optionb'),
(143, 20, 2, 1, 'optionc'),
(111, 20, 2, 1, 'optionc'),
(100, 20, 2, 1, 'optionc'),
(141, 20, 2, 1, 'optionc'),
(22, 20, 2, -0.33, 'optiona'),
(90, 20, 2, 1, 'optionc'),
(67, 20, 2, 1, 'optionc'),
(62, 20, 2, 1, 'optionc'),
(162, 20, 2, 1, 'optionc'),
(44, 20, 2, 1, 'optionc'),
(47, 20, 2, 1, 'optionc'),
(83, 20, 2, 1, 'optionc'),
(145, 20, 2, 1, 'optionc'),
(95, 20, 2, 1, 'optionc'),
(114, 20, 2, 1, 'optionc'),
(123, 20, 2, 1, 'optionc'),
(124, 20, 2, 1, 'optionc'),
(75, 20, 2, 1, 'optionc'),
(113, 20, 2, 1, 'optionc'),
(52, 20, 2, 1, 'optionc'),
(122, 20, 2, 1, 'optionc'),
(98, 20, 2, 1, 'optionc'),
(79, 20, 2, 1, 'optionc'),
(154, 20, 2, 1, 'optionc'),
(63, 20, 2, 1, 'optionc'),
(127, 20, 2, -0.33, 'optiona'),
(69, 20, 2, 1, 'optionc'),
(64, 20, 2, 1, 'optionc'),
(93, 20, 2, 1, 'optionc'),
(68, 20, 2, 1, 'optionc'),
(116, 20, 3, 1, 'optionc'),
(135, 20, 3, -0.33, 'optiond'),
(81, 20, 3, 1, 'optionc'),
(70, 20, 3, 1, 'optionc'),
(107, 20, 3, -0.33, 'optiond'),
(86, 20, 3, 1, 'optionc'),
(36, 20, 3, -0.33, 'optiond'),
(74, 20, 3, -0.33, 'optiond'),
(78, 20, 3, 1, 'optionc'),
(143, 20, 3, 1, 'optionc'),
(141, 20, 3, -0.33, 'optiond'),
(22, 20, 3, 1, 'optionc'),
(90, 20, 3, 1, 'optionc'),
(62, 20, 3, 1, 'optionc'),
(145, 20, 3, 1, 'optionc'),
(76, 20, 3, 1, 'optionc'),
(95, 20, 3, -0.33, 'optiond'),
(112, 20, 3, 1, 'optionc'),
(98, 20, 3, 1, 'optionc'),
(127, 20, 3, -0.33, 'optiond'),
(64, 20, 3, 1, 'optionc'),
(93, 20, 3, 1, 'optionc'),
(116, 20, 4, 1, 'optionc'),
(81, 20, 4, 1, 'optionc'),
(94, 20, 4, 1, 'optionc'),
(107, 20, 4, 1, 'optionc'),
(60, 20, 4, 1, 'optionc'),
(138, 20, 4, 1, 'optionc'),
(152, 20, 4, 1, 'optionc'),
(36, 20, 4, 1, 'optionc'),
(33, 20, 4, 1, 'optionc'),
(101, 20, 4, 1, 'optionc'),
(39, 20, 4, 1, 'optionc'),
(56, 20, 4, 1, 'optionc'),
(96, 20, 4, 1, 'optionc'),
(121, 20, 4, 1, 'optionc'),
(153, 20, 4, 1, 'optionc'),
(143, 20, 4, 1, 'optionc'),
(100, 20, 4, -0.33, 'optionb'),
(102, 20, 4, 1, 'optionc'),
(22, 20, 4, 1, 'optionc'),
(90, 20, 4, 1, 'optionc'),
(67, 20, 4, 1, 'optionc'),
(62, 20, 4, 1, 'optionc'),
(162, 20, 4, 1, 'optionc'),
(44, 20, 4, -0.33, 'optiond'),
(47, 20, 4, 1, 'optionc'),
(144, 20, 4, 1, 'optionc'),
(83, 20, 4, 1, 'optionc'),
(145, 20, 4, 1, 'optionc'),
(76, 20, 4, 1, 'optionc'),
(95, 20, 4, 1, 'optionc'),
(114, 20, 4, 1, 'optionc'),
(20, 20, 4, 1, 'optionc'),
(115, 20, 4, 1, 'optionc'),
(123, 20, 4, 1, 'optionc'),
(124, 20, 4, 1, 'optionc'),
(75, 20, 4, 1, 'optionc'),
(113, 20, 4, 1, 'optionc'),
(112, 20, 4, 1, 'optionc'),
(52, 20, 4, 1, 'optionc'),
(122, 20, 4, 1, 'optionc'),
(98, 20, 4, 1, 'optionc'),
(79, 20, 4, 1, 'optionc'),
(154, 20, 4, 1, 'optionc'),
(63, 20, 4, 1, 'optionc'),
(127, 20, 4, 1, 'optionc'),
(64, 20, 4, 1, 'optionc'),
(93, 20, 4, 1, 'optionc'),
(116, 20, 5, 1, 'optiona'),
(135, 20, 5, 1, 'optiona'),
(85, 20, 5, 1, 'optiona'),
(81, 20, 5, 1, 'optiona'),
(70, 20, 5, 1, 'optiona'),
(94, 20, 5, 1, 'optiona'),
(107, 20, 5, 1, 'optiona'),
(60, 20, 5, 1, 'optiona'),
(138, 20, 5, 1, 'optiona'),
(152, 20, 5, 1, 'optiona'),
(130, 20, 5, 1, 'optiona'),
(77, 20, 5, 1, 'optiona'),
(86, 20, 5, 1, 'optiona'),
(65, 20, 5, 1, 'optiona'),
(73, 20, 5, 1, 'optiona'),
(108, 20, 5, -0.33, 'optionb'),
(36, 20, 5, 1, 'optiona'),
(74, 20, 5, 1, 'optiona'),
(33, 20, 5, 1, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(101, 20, 5, 1, 'optiona'),
(39, 20, 5, 1, 'optiona'),
(56, 20, 5, 1, 'optiona'),
(78, 20, 5, 1, 'optiona'),
(96, 20, 5, 1, 'optiona'),
(121, 20, 5, 1, 'optiona'),
(117, 20, 5, 1, 'optiona'),
(153, 20, 5, 1, 'optiona'),
(143, 20, 5, 1, 'optiona'),
(111, 20, 5, 1, 'optiona'),
(100, 20, 5, 1, 'optiona'),
(141, 20, 5, 1, 'optiona'),
(102, 20, 5, 1, 'optiona'),
(22, 20, 5, 1, 'optiona'),
(90, 20, 5, 1, 'optiona'),
(67, 20, 5, 1, 'optiona'),
(62, 20, 5, 1, 'optiona'),
(162, 20, 5, 1, 'optiona'),
(44, 20, 5, 1, 'optiona'),
(47, 20, 5, 1, 'optiona'),
(144, 20, 5, 1, 'optiona'),
(83, 20, 5, 1, 'optiona'),
(145, 20, 5, 1, 'optiona'),
(95, 20, 5, 1, 'optiona'),
(114, 20, 5, 1, 'optiona'),
(20, 20, 5, 1, 'optiona'),
(115, 20, 5, 1, 'optiona'),
(123, 20, 5, 1, 'optiona'),
(124, 20, 5, 1, 'optiona'),
(75, 20, 5, 1, 'optiona'),
(113, 20, 5, -0.33, 'optionb'),
(112, 20, 5, 1, 'optiona'),
(52, 20, 5, 1, 'optiona'),
(122, 20, 5, 1, 'optiona'),
(98, 20, 5, 1, 'optiona'),
(79, 20, 5, 1, 'optiona'),
(154, 20, 5, 1, 'optiona'),
(63, 20, 5, 1, 'optiona'),
(127, 20, 5, 1, 'optiona'),
(69, 20, 5, 1, 'optiona'),
(93, 20, 5, 1, 'optiona'),
(68, 20, 5, 1, 'optiona'),
(116, 20, 6, 1, 'optionc'),
(85, 20, 6, 1, 'optionc'),
(81, 20, 6, 1, 'optionc'),
(70, 20, 6, 1, 'optionc'),
(94, 20, 6, 1, 'optionc'),
(60, 20, 6, 1, 'optionc'),
(138, 20, 6, 1, 'optionc'),
(152, 20, 6, 1, 'optionc'),
(130, 20, 6, 1, 'optionc'),
(77, 20, 6, 1, 'optionc'),
(86, 20, 6, 1, 'optionc'),
(65, 20, 6, 1, 'optionc'),
(73, 20, 6, 1, 'optionc'),
(108, 20, 6, 1, 'optionc'),
(36, 20, 6, 1, 'optionc'),
(74, 20, 6, 1, 'optionc'),
(33, 20, 6, 1, 'optionc'),
(101, 20, 6, 1, 'optionc'),
(39, 20, 6, 1, 'optionc'),
(56, 20, 6, 1, 'optionc'),
(78, 20, 6, 1, 'optionc'),
(96, 20, 6, 1, 'optionc'),
(121, 20, 6, 1, 'optionc'),
(117, 20, 6, 1, 'optionc'),
(160, 20, 6, 1, 'optionc'),
(153, 20, 6, 1, 'optionc'),
(143, 20, 6, 1, 'optionc'),
(111, 20, 6, 1, 'optionc'),
(100, 20, 6, 1, 'optionc'),
(141, 20, 6, 1, 'optionc'),
(22, 20, 6, 1, 'optionc'),
(90, 20, 6, 1, 'optionc'),
(67, 20, 6, 1, 'optionc'),
(62, 20, 6, 1, 'optionc'),
(162, 20, 6, 1, 'optionc'),
(44, 20, 6, 1, 'optionc'),
(47, 20, 6, 1, 'optionc'),
(144, 20, 6, 1, 'optionc'),
(83, 20, 6, 1, 'optionc'),
(145, 20, 6, 1, 'optionc'),
(95, 20, 6, 1, 'optionc'),
(114, 20, 6, 1, 'optionc'),
(20, 20, 6, 1, 'optionc'),
(115, 20, 6, 1, 'optionc'),
(123, 20, 6, 1, 'optionc'),
(124, 20, 6, 1, 'optionc'),
(75, 20, 6, 1, 'optionc'),
(113, 20, 6, 1, 'optionc'),
(112, 20, 6, 1, 'optionc'),
(52, 20, 6, 1, 'optionc'),
(122, 20, 6, 1, 'optionc'),
(98, 20, 6, 1, 'optionc'),
(79, 20, 6, 1, 'optionc'),
(154, 20, 6, 1, 'optionc'),
(63, 20, 6, 1, 'optionc'),
(127, 20, 6, 1, 'optionc'),
(69, 20, 6, 1, 'optionc'),
(64, 20, 6, 1, 'optionc'),
(93, 20, 6, 1, 'optionc'),
(68, 20, 6, 1, 'optionc'),
(116, 20, 7, 1, 'optionc'),
(135, 20, 7, 1, 'optionc'),
(85, 20, 7, 1, 'optionc'),
(81, 20, 7, 1, 'optionc'),
(70, 20, 7, 1, 'optionc'),
(94, 20, 7, 1, 'optionc'),
(107, 20, 7, 1, 'optionc'),
(60, 20, 7, -0.33, 'optiona'),
(138, 20, 7, 1, 'optionc'),
(152, 20, 7, 1, 'optionc'),
(130, 20, 7, 1, 'optionc'),
(77, 20, 7, 1, 'optionc'),
(65, 20, 7, 1, 'optionc'),
(73, 20, 7, 1, 'optionc'),
(108, 20, 7, 1, 'optionc'),
(36, 20, 7, 1, 'optionc'),
(74, 20, 7, 1, 'optionc'),
(33, 20, 7, 1, 'optionc'),
(101, 20, 7, 1, 'optionc'),
(39, 20, 7, 1, 'optionc'),
(56, 20, 7, 1, 'optionc'),
(78, 20, 7, -0.33, 'optionb'),
(96, 20, 7, 1, 'optionc'),
(121, 20, 7, 1, 'optionc'),
(117, 20, 7, 1, 'optionc'),
(160, 20, 7, 1, 'optionc'),
(153, 20, 7, 1, 'optionc'),
(143, 20, 7, 1, 'optionc'),
(111, 20, 7, -0.33, 'optionb'),
(100, 20, 7, 1, 'optionc'),
(141, 20, 7, 1, 'optionc'),
(102, 20, 7, 1, 'optionc'),
(22, 20, 7, 1, 'optionc'),
(90, 20, 7, 1, 'optionc'),
(67, 20, 7, 1, 'optionc'),
(62, 20, 7, 1, 'optionc'),
(162, 20, 7, 1, 'optionc'),
(47, 20, 7, 1, 'optionc'),
(144, 20, 7, 1, 'optionc'),
(83, 20, 7, 1, 'optionc'),
(145, 20, 7, -0.33, 'optiona'),
(95, 20, 7, 1, 'optionc'),
(115, 20, 7, 1, 'optionc'),
(123, 20, 7, 1, 'optionc'),
(124, 20, 7, 1, 'optionc'),
(75, 20, 7, 1, 'optionc'),
(112, 20, 7, 1, 'optionc'),
(52, 20, 7, 1, 'optionc'),
(122, 20, 7, 1, 'optionc'),
(98, 20, 7, 1, 'optionc'),
(79, 20, 7, 1, 'optionc'),
(154, 20, 7, 1, 'optionc'),
(63, 20, 7, 1, 'optionc'),
(127, 20, 7, 1, 'optionc'),
(64, 20, 7, -0.33, 'optiond'),
(93, 20, 7, 1, 'optionc'),
(68, 20, 7, 1, 'optionc'),
(116, 20, 8, 1, 'optionb'),
(85, 20, 8, -0.33, 'optionc'),
(81, 20, 8, -0.33, 'optionc'),
(70, 20, 8, -0.33, 'optionc'),
(94, 20, 8, -0.33, 'optionc'),
(107, 20, 8, 1, 'optionb'),
(60, 20, 8, 1, 'optionb'),
(138, 20, 8, -0.33, 'optionc'),
(152, 20, 8, -0.33, 'optionc'),
(130, 20, 8, 1, 'optionb'),
(86, 20, 8, -0.33, 'optiond'),
(65, 20, 8, 1, 'optionb'),
(73, 20, 8, -0.33, 'optionc'),
(36, 20, 8, -0.33, 'optionc'),
(74, 20, 8, -0.33, 'optionc'),
(33, 20, 8, -0.33, 'optionc'),
(101, 20, 8, -0.33, 'optiond'),
(39, 20, 8, 1, 'optionb'),
(96, 20, 8, -0.33, 'optionc'),
(121, 20, 8, -0.33, 'optionc'),
(117, 20, 8, -0.33, 'optiona'),
(160, 20, 8, -0.33, 'optionc'),
(143, 20, 8, -0.33, 'optiond'),
(111, 20, 8, -0.33, 'optionc'),
(100, 20, 8, -0.33, 'optionc'),
(141, 20, 8, 1, 'optionb'),
(102, 20, 8, -0.33, 'optionc'),
(90, 20, 8, -0.33, 'optionc'),
(67, 20, 8, -0.33, 'optionc'),
(62, 20, 8, -0.33, 'optionc'),
(162, 20, 8, -0.33, 'optionc'),
(44, 20, 8, 1, 'optionb'),
(47, 20, 8, -0.33, 'optionc'),
(144, 20, 8, -0.33, 'optionc'),
(83, 20, 8, -0.33, 'optionc'),
(145, 20, 8, -0.33, 'optionc'),
(76, 20, 8, -0.33, 'optiond'),
(95, 20, 8, -0.33, 'optiona'),
(114, 20, 8, -0.33, 'optionc'),
(20, 20, 8, 1, 'optionb'),
(123, 20, 8, 1, 'optionb'),
(75, 20, 8, -0.33, 'optionc'),
(113, 20, 8, -0.33, 'optionc'),
(112, 20, 8, -0.33, 'optionc'),
(122, 20, 8, -0.33, 'optionc'),
(98, 20, 8, -0.33, 'optionc'),
(79, 20, 8, -0.33, 'optionc'),
(154, 20, 8, -0.33, 'optionc'),
(63, 20, 8, -0.33, 'optionc'),
(127, 20, 8, -0.33, 'optionc'),
(64, 20, 8, -0.33, 'optionc'),
(93, 20, 8, -0.33, 'optionc'),
(68, 20, 8, -0.33, 'optionc'),
(116, 20, 9, 1, 'optionc'),
(135, 20, 9, 1, 'optionc'),
(85, 20, 9, 1, 'optionc'),
(81, 20, 9, 1, 'optionc'),
(70, 20, 9, 1, 'optionc'),
(94, 20, 9, 1, 'optionc'),
(107, 20, 9, 1, 'optionc'),
(60, 20, 9, 1, 'optionc'),
(138, 20, 9, 1, 'optionc'),
(152, 20, 9, 1, 'optionc'),
(130, 20, 9, -0.33, 'optiona'),
(77, 20, 9, -0.33, 'optiona'),
(65, 20, 9, 1, 'optionc'),
(73, 20, 9, 1, 'optionc'),
(108, 20, 9, 1, 'optionc'),
(36, 20, 9, 1, 'optionc'),
(74, 20, 9, 1, 'optionc'),
(33, 20, 9, 1, 'optionc'),
(101, 20, 9, 1, 'optionc'),
(39, 20, 9, 1, 'optionc'),
(56, 20, 9, 1, 'optionc'),
(96, 20, 9, 1, 'optionc'),
(121, 20, 9, 1, 'optionc'),
(117, 20, 9, 1, 'optionc'),
(160, 20, 9, 1, 'optionc'),
(153, 20, 9, 1, 'optionc'),
(143, 20, 9, 1, 'optionc'),
(111, 20, 9, 1, 'optionc'),
(100, 20, 9, 1, 'optionc'),
(141, 20, 9, 1, 'optionc'),
(102, 20, 9, 1, 'optionc'),
(22, 20, 9, 1, 'optionc'),
(90, 20, 9, 1, 'optionc'),
(67, 20, 9, 1, 'optionc'),
(62, 20, 9, 1, 'optionc'),
(162, 20, 9, 1, 'optionc'),
(44, 20, 9, 1, 'optionc'),
(47, 20, 9, 1, 'optionc'),
(144, 20, 9, 1, 'optionc'),
(83, 20, 9, 1, 'optionc'),
(145, 20, 9, 1, 'optionc'),
(76, 20, 9, 1, 'optionc'),
(95, 20, 9, 1, 'optionc'),
(114, 20, 9, 1, 'optionc'),
(20, 20, 9, 1, 'optionc'),
(115, 20, 9, 1, 'optionc'),
(123, 20, 9, 1, 'optionc'),
(124, 20, 9, 1, 'optionc'),
(75, 20, 9, 1, 'optionc'),
(113, 20, 9, 1, 'optionc'),
(122, 20, 9, 1, 'optionc'),
(98, 20, 9, 1, 'optionc'),
(79, 20, 9, 1, 'optionc'),
(154, 20, 9, 1, 'optionc'),
(63, 20, 9, 1, 'optionc'),
(127, 20, 9, 1, 'optionc'),
(69, 20, 9, 1, 'optionc'),
(64, 20, 9, 1, 'optionc'),
(93, 20, 9, 1, 'optionc'),
(68, 20, 9, 1, 'optionc'),
(116, 20, 10, 1, 'optionb'),
(135, 20, 10, 1, 'optionb'),
(85, 20, 10, -0.33, 'optiond'),
(81, 20, 10, 1, 'optionb'),
(70, 20, 10, 1, 'optionb'),
(94, 20, 10, 1, 'optionb'),
(107, 20, 10, 1, 'optionb'),
(60, 20, 10, -0.33, 'optiond'),
(138, 20, 10, -0.33, 'optiona'),
(152, 20, 10, -0.33, 'optiona'),
(130, 20, 10, -0.33, 'optiona'),
(77, 20, 10, 1, 'optionb'),
(65, 20, 10, 1, 'optionb'),
(73, 20, 10, 1, 'optionb'),
(108, 20, 10, 1, 'optionb'),
(36, 20, 10, 1, 'optionb'),
(101, 20, 10, 1, 'optionb'),
(39, 20, 10, 1, 'optionb'),
(56, 20, 10, 1, 'optionb'),
(96, 20, 10, 1, 'optionb'),
(121, 20, 10, -0.33, 'optiona'),
(117, 20, 10, 1, 'optionb'),
(153, 20, 10, 1, 'optionb'),
(143, 20, 10, 1, 'optionb'),
(100, 20, 10, 1, 'optionb'),
(102, 20, 10, 1, 'optionb'),
(22, 20, 10, -0.33, 'optionc'),
(90, 20, 10, 1, 'optionb'),
(67, 20, 10, 1, 'optionb'),
(62, 20, 10, 1, 'optionb'),
(44, 20, 10, 1, 'optionb'),
(83, 20, 10, 1, 'optionb'),
(76, 20, 10, 1, 'optionb'),
(20, 20, 10, 1, 'optionb'),
(123, 20, 10, -0.33, 'optiona'),
(113, 20, 10, 1, 'optionb'),
(112, 20, 10, 1, 'optionb'),
(52, 20, 10, -0.33, 'optiona'),
(98, 20, 10, 1, 'optionb'),
(79, 20, 10, 1, 'optionb'),
(154, 20, 10, 1, 'optionb'),
(63, 20, 10, 1, 'optionb'),
(127, 20, 10, 1, 'optionb'),
(69, 20, 10, 1, 'optionb'),
(64, 20, 10, 1, 'optionb'),
(93, 20, 10, -0.33, 'optiond'),
(68, 20, 10, 1, 'optionb'),
(81, 20, 11, 1, 'optionb'),
(60, 20, 11, 1, 'optionb'),
(86, 20, 11, 1, 'optionb'),
(65, 20, 11, 1, 'optionb'),
(36, 20, 11, 1, 'optionb'),
(74, 20, 11, 1, 'optionb'),
(33, 20, 11, 1, 'optionb'),
(101, 20, 11, 1, 'optionb'),
(39, 20, 11, 1, 'optionb'),
(56, 20, 11, -0.33, 'optiond'),
(121, 20, 11, 1, 'optionb'),
(117, 20, 11, -0.33, 'optiona'),
(153, 20, 11, 1, 'optionb'),
(90, 20, 11, -0.33, 'optiona'),
(67, 20, 11, 1, 'optionb'),
(162, 20, 11, -0.33, 'optiona'),
(44, 20, 11, -0.33, 'optiond'),
(47, 20, 11, 1, 'optionb'),
(83, 20, 11, -0.33, 'optiond'),
(145, 20, 11, 1, 'optionb'),
(114, 20, 11, -0.33, 'optiona'),
(20, 20, 11, 1, 'optionb'),
(123, 20, 11, -0.33, 'optiond'),
(124, 20, 11, 1, 'optionb'),
(113, 20, 11, -0.33, 'optiond'),
(52, 20, 11, -0.33, 'optiona'),
(98, 20, 11, 1, 'optionb'),
(79, 20, 11, 1, 'optionb'),
(63, 20, 11, 1, 'optionb'),
(127, 20, 11, 1, 'optionb'),
(64, 20, 11, -0.33, 'optiond'),
(93, 20, 11, -0.33, 'optiona'),
(116, 20, 12, 1, 'optionc'),
(135, 20, 12, -0.33, 'optiona'),
(85, 20, 12, -0.33, 'optiona'),
(81, 20, 12, 1, 'optionc'),
(70, 20, 12, -0.33, 'optiona'),
(94, 20, 12, 1, 'optionc'),
(60, 20, 12, -0.33, 'optiona'),
(138, 20, 12, -0.33, 'optiona'),
(152, 20, 12, -0.33, 'optiona'),
(130, 20, 12, -0.33, 'optiona'),
(86, 20, 12, -0.33, 'optionb'),
(65, 20, 12, -0.33, 'optionb'),
(73, 20, 12, -0.33, 'optiona'),
(36, 20, 12, 1, 'optionc'),
(74, 20, 12, 1, 'optionc'),
(33, 20, 12, -0.33, 'optionb'),
(101, 20, 12, -0.33, 'optiona'),
(39, 20, 12, 1, 'optionc'),
(56, 20, 12, 1, 'optionc'),
(96, 20, 12, -0.33, 'optiona'),
(121, 20, 12, -0.33, 'optiona'),
(117, 20, 12, 1, 'optionc'),
(160, 20, 12, -0.33, 'optiona'),
(153, 20, 12, -0.33, 'optiona'),
(143, 20, 12, 1, 'optionc'),
(111, 20, 12, -0.33, 'optiona'),
(100, 20, 12, -0.33, 'optiona'),
(141, 20, 12, -0.33, 'optiona'),
(22, 20, 12, -0.33, 'optiona'),
(90, 20, 12, -0.33, 'optiona'),
(67, 20, 12, -0.33, 'optiona'),
(62, 20, 12, -0.33, 'optiona'),
(162, 20, 12, -0.33, 'optiona'),
(44, 20, 12, -0.33, 'optiona'),
(47, 20, 12, -0.33, 'optiona'),
(144, 20, 12, -0.33, 'optiona'),
(83, 20, 12, -0.33, 'optiona'),
(145, 20, 12, -0.33, 'optiona'),
(76, 20, 12, 1, 'optionc'),
(95, 20, 12, -0.33, 'optiona'),
(114, 20, 12, 1, 'optionc'),
(20, 20, 12, -0.33, 'optiona'),
(115, 20, 12, -0.33, 'optiona'),
(75, 20, 12, -0.33, 'optiona'),
(112, 20, 12, -0.33, 'optiona'),
(52, 20, 12, -0.33, 'optiona'),
(122, 20, 12, -0.33, 'optiona'),
(98, 20, 12, 1, 'optionc'),
(79, 20, 12, -0.33, 'optiona'),
(154, 20, 12, -0.33, 'optiona'),
(63, 20, 12, -0.33, 'optiona'),
(127, 20, 12, 1, 'optionc'),
(64, 20, 12, 1, 'optionc'),
(93, 20, 12, 1, 'optionc'),
(68, 20, 12, -0.33, 'optiona'),
(116, 20, 13, 1, 'optiona'),
(135, 20, 13, -0.33, 'optiond'),
(85, 20, 13, 1, 'optiona'),
(81, 20, 13, 1, 'optiona'),
(70, 20, 13, -0.33, 'optiond'),
(94, 20, 13, 1, 'optiona'),
(107, 20, 13, 1, 'optiona'),
(60, 20, 13, 1, 'optiona'),
(138, 20, 13, 1, 'optiona'),
(152, 20, 13, 1, 'optiona'),
(130, 20, 13, 1, 'optiona'),
(77, 20, 13, 1, 'optiona'),
(86, 20, 13, 1, 'optiona'),
(65, 20, 13, 1, 'optiona'),
(73, 20, 13, 1, 'optiona'),
(108, 20, 13, 1, 'optiona'),
(36, 20, 13, 1, 'optiona'),
(74, 20, 13, -0.33, 'optionc'),
(33, 20, 13, 1, 'optiona'),
(101, 20, 13, 1, 'optiona'),
(39, 20, 13, 1, 'optiona'),
(56, 20, 13, 1, 'optiona'),
(78, 20, 13, -0.33, 'optionb'),
(96, 20, 13, 1, 'optiona'),
(121, 20, 13, 1, 'optiona'),
(117, 20, 13, 1, 'optiona'),
(160, 20, 13, 1, 'optiona'),
(153, 20, 13, 1, 'optiona'),
(143, 20, 13, 1, 'optiona'),
(111, 20, 13, 1, 'optiona'),
(100, 20, 13, 1, 'optiona'),
(141, 20, 13, 1, 'optiona'),
(22, 20, 13, 1, 'optiona'),
(90, 20, 13, 1, 'optiona'),
(67, 20, 13, 1, 'optiona'),
(62, 20, 13, 1, 'optiona'),
(162, 20, 13, 1, 'optiona'),
(44, 20, 13, 1, 'optiona'),
(47, 20, 13, -0.33, 'optiond'),
(144, 20, 13, 1, 'optiona'),
(83, 20, 13, 1, 'optiona'),
(145, 20, 13, 1, 'optiona'),
(76, 20, 13, 1, 'optiona'),
(95, 20, 13, 1, 'optiona'),
(114, 20, 13, 1, 'optiona'),
(20, 20, 13, 1, 'optiona'),
(115, 20, 13, 1, 'optiona'),
(123, 20, 13, 1, 'optiona'),
(124, 20, 13, 1, 'optiona'),
(75, 20, 13, 1, 'optiona'),
(113, 20, 13, 1, 'optiona'),
(112, 20, 13, 1, 'optiona'),
(52, 20, 13, 1, 'optiona'),
(122, 20, 13, 1, 'optiona'),
(98, 20, 13, 1, 'optiona'),
(79, 20, 13, 1, 'optiona'),
(154, 20, 13, -0.33, 'optiond'),
(63, 20, 13, 1, 'optiona'),
(127, 20, 13, 1, 'optiona'),
(69, 20, 13, 1, 'optiona'),
(64, 20, 13, 1, 'optiona'),
(93, 20, 13, 1, 'optiona'),
(68, 20, 13, 1, 'optiona'),
(116, 20, 14, 1, 'optiona'),
(85, 20, 14, -0.33, 'optionb'),
(81, 20, 14, 1, 'optiona'),
(70, 20, 14, 1, 'optiona'),
(94, 20, 14, 1, 'optiona'),
(107, 20, 14, 1, 'optiona'),
(60, 20, 14, 1, 'optiona'),
(138, 20, 14, 1, 'optiona'),
(152, 20, 14, 1, 'optiona'),
(130, 20, 14, -0.33, 'optionb'),
(77, 20, 14, 1, 'optiona'),
(86, 20, 14, -0.33, 'optiond'),
(65, 20, 14, 1, 'optiona'),
(73, 20, 14, 1, 'optiona'),
(108, 20, 14, 1, 'optiona'),
(36, 20, 14, 1, 'optiona'),
(101, 20, 14, 1, 'optiona'),
(39, 20, 14, 1, 'optiona'),
(56, 20, 14, 1, 'optiona'),
(78, 20, 14, 1, 'optiona'),
(96, 20, 14, 1, 'optiona'),
(121, 20, 14, 1, 'optiona'),
(117, 20, 14, -0.33, 'optionc'),
(153, 20, 14, 1, 'optiona'),
(143, 20, 14, 1, 'optiona'),
(111, 20, 14, 1, 'optiona'),
(100, 20, 14, 1, 'optiona'),
(141, 20, 14, -0.33, 'optiond'),
(102, 20, 14, 1, 'optiona'),
(22, 20, 14, 1, 'optiona'),
(90, 20, 14, 1, 'optiona'),
(62, 20, 14, 1, 'optiona'),
(44, 20, 14, 1, 'optiona'),
(47, 20, 14, 1, 'optiona'),
(144, 20, 14, 1, 'optiona'),
(83, 20, 14, 1, 'optiona'),
(145, 20, 14, -0.33, 'optiond'),
(95, 20, 14, 1, 'optiona'),
(114, 20, 14, 1, 'optiona'),
(20, 20, 14, 1, 'optiona'),
(115, 20, 14, 1, 'optiona'),
(75, 20, 14, 1, 'optiona'),
(112, 20, 14, 1, 'optiona'),
(52, 20, 14, 1, 'optiona'),
(122, 20, 14, 1, 'optiona'),
(98, 20, 14, 1, 'optiona'),
(79, 20, 14, 1, 'optiona'),
(154, 20, 14, 1, 'optiona'),
(63, 20, 14, -0.33, 'optiond'),
(69, 20, 14, 1, 'optiona'),
(64, 20, 14, 1, 'optiona'),
(68, 20, 14, 1, 'optiona'),
(116, 20, 15, 1, 'optionb'),
(135, 20, 15, 1, 'optionb'),
(85, 20, 15, 1, 'optionb'),
(81, 20, 15, 1, 'optionb'),
(70, 20, 15, 1, 'optionb'),
(94, 20, 15, 1, 'optionb'),
(107, 20, 15, 1, 'optionb'),
(60, 20, 15, 1, 'optionb'),
(138, 20, 15, 1, 'optionb'),
(152, 20, 15, -0.33, 'optiona'),
(77, 20, 15, -0.33, 'optiond'),
(86, 20, 15, 1, 'optionb'),
(65, 20, 15, 1, 'optionb'),
(73, 20, 15, 1, 'optionb'),
(36, 20, 15, 1, 'optionb'),
(74, 20, 15, 1, 'optionb'),
(33, 20, 15, 1, 'optionb'),
(101, 20, 15, -0.33, 'optiond'),
(39, 20, 15, 1, 'optionb'),
(56, 20, 15, 1, 'optionb'),
(96, 20, 15, 1, 'optionb'),
(121, 20, 15, -0.33, 'optiond'),
(117, 20, 15, 1, 'optionb'),
(160, 20, 15, 1, 'optionb'),
(153, 20, 15, 1, 'optionb'),
(143, 20, 15, 1, 'optionb'),
(111, 20, 15, 1, 'optionb'),
(100, 20, 15, 1, 'optionb'),
(141, 20, 15, 1, 'optionb'),
(22, 20, 15, 1, 'optionb'),
(90, 20, 15, -0.33, 'optiond'),
(67, 20, 15, 1, 'optionb'),
(62, 20, 15, 1, 'optionb'),
(162, 20, 15, 1, 'optionb'),
(44, 20, 15, -0.33, 'optiond'),
(47, 20, 15, 1, 'optionb'),
(144, 20, 15, 1, 'optionb'),
(83, 20, 15, 1, 'optionb'),
(145, 20, 15, 1, 'optionb'),
(95, 20, 15, 1, 'optionb'),
(20, 20, 15, -0.33, 'optiond'),
(115, 20, 15, 1, 'optionb'),
(123, 20, 15, 1, 'optionb'),
(124, 20, 15, 1, 'optionb'),
(75, 20, 15, 1, 'optionb'),
(113, 20, 15, -0.33, 'optiond'),
(112, 20, 15, 1, 'optionb'),
(52, 20, 15, 1, 'optionb'),
(122, 20, 15, 1, 'optionb'),
(98, 20, 15, -0.33, 'optiond'),
(79, 20, 15, 1, 'optionb'),
(154, 20, 15, 1, 'optionb'),
(63, 20, 15, -0.33, 'optiond'),
(127, 20, 15, -0.33, 'optiond'),
(69, 20, 15, -0.33, 'optiona'),
(64, 20, 15, -0.33, 'optiond'),
(93, 20, 15, 1, 'optionb'),
(68, 20, 15, 1, 'optionb'),
(116, 20, 16, 1, 'optionc'),
(81, 20, 16, 1, 'optionc'),
(70, 20, 16, 1, 'optionc'),
(60, 20, 16, 1, 'optionc'),
(138, 20, 16, 1, 'optionc'),
(152, 20, 16, 1, 'optionc'),
(130, 20, 16, 1, 'optionc'),
(86, 20, 16, 1, 'optionc'),
(65, 20, 16, 1, 'optionc'),
(73, 20, 16, 1, 'optionc'),
(101, 20, 16, 1, 'optionc'),
(56, 20, 16, 1, 'optionc'),
(78, 20, 16, 1, 'optionc'),
(96, 20, 16, 1, 'optionc'),
(117, 20, 16, -0.33, 'optionb'),
(100, 20, 16, 1, 'optionc'),
(22, 20, 16, 1, 'optionc'),
(90, 20, 16, 1, 'optionc'),
(67, 20, 16, 1, 'optionc'),
(62, 20, 16, 1, 'optionc'),
(162, 20, 16, 1, 'optionc'),
(144, 20, 16, 1, 'optionc'),
(20, 20, 16, 1, 'optionc'),
(115, 20, 16, 1, 'optionc'),
(123, 20, 16, 1, 'optionc'),
(98, 20, 16, 1, 'optionc'),
(63, 20, 16, 1, 'optionc'),
(116, 20, 17, 1, 'optionb'),
(81, 20, 17, 1, 'optionb'),
(70, 20, 17, 1, 'optionb'),
(94, 20, 17, 1, 'optionb'),
(107, 20, 17, 1, 'optionb'),
(60, 20, 17, 1, 'optionb'),
(138, 20, 17, 1, 'optionb'),
(77, 20, 17, 1, 'optionb'),
(86, 20, 17, 1, 'optionb'),
(65, 20, 17, 1, 'optionb'),
(73, 20, 17, 1, 'optionb'),
(108, 20, 17, 1, 'optionb'),
(36, 20, 17, 1, 'optionb'),
(74, 20, 17, 1, 'optionb'),
(101, 20, 17, 1, 'optionb'),
(39, 20, 17, 1, 'optionb'),
(56, 20, 17, 1, 'optionb'),
(78, 20, 17, 1, 'optionb'),
(96, 20, 17, -0.33, 'optiond'),
(121, 20, 17, 1, 'optionb'),
(117, 20, 17, 1, 'optionb'),
(160, 20, 17, -0.33, 'optionc'),
(153, 20, 17, 1, 'optionb'),
(143, 20, 17, -0.33, 'optiond'),
(111, 20, 17, 1, 'optionb'),
(100, 20, 17, 1, 'optionb'),
(141, 20, 17, 1, 'optionb'),
(102, 20, 17, -0.33, 'optionc'),
(22, 20, 17, 1, 'optionb'),
(90, 20, 17, 1, 'optionb'),
(67, 20, 17, 1, 'optionb'),
(62, 20, 17, 1, 'optionb'),
(162, 20, 17, 1, 'optionb'),
(44, 20, 17, 1, 'optionb'),
(47, 20, 17, 1, 'optionb'),
(144, 20, 17, 1, 'optionb'),
(83, 20, 17, 1, 'optionb'),
(145, 20, 17, -0.33, 'optionc'),
(95, 20, 17, 1, 'optionb'),
(114, 20, 17, 1, 'optionb'),
(20, 20, 17, 1, 'optionb'),
(115, 20, 17, 1, 'optionb'),
(123, 20, 17, 1, 'optionb'),
(75, 20, 17, -0.33, 'optionc'),
(112, 20, 17, -0.33, 'optionc'),
(52, 20, 17, 1, 'optionb'),
(122, 20, 17, 1, 'optionb'),
(98, 20, 17, 1, 'optionb'),
(79, 20, 17, 1, 'optionb'),
(154, 20, 17, -0.33, 'optiond'),
(63, 20, 17, 1, 'optionb'),
(127, 20, 17, 1, 'optionb'),
(69, 20, 17, 1, 'optionb'),
(64, 20, 17, -0.33, 'optionc'),
(93, 20, 17, 1, 'optionb'),
(116, 20, 18, 1, 'optiona'),
(135, 20, 18, -0.33, 'optionb'),
(81, 20, 18, 1, 'optiona'),
(70, 20, 18, 1, 'optiona'),
(107, 20, 18, 1, 'optiona'),
(60, 20, 18, -0.33, 'optionb'),
(138, 20, 18, -0.33, 'optionb'),
(152, 20, 18, -0.33, 'optionb'),
(77, 20, 18, -0.33, 'optionb'),
(86, 20, 18, 1, 'optiona'),
(65, 20, 18, 1, 'optiona'),
(73, 20, 18, 1, 'optiona'),
(36, 20, 18, 1, 'optiona'),
(74, 20, 18, 1, 'optiona'),
(33, 20, 18, 1, 'optiona'),
(101, 20, 18, -0.33, 'optiond'),
(39, 20, 18, -0.33, 'optionb'),
(56, 20, 18, 1, 'optiona'),
(78, 20, 18, -0.33, 'optionb'),
(96, 20, 18, 1, 'optiona'),
(121, 20, 18, -0.33, 'optionc'),
(117, 20, 18, 1, 'optiona'),
(160, 20, 18, -0.33, 'optionc'),
(153, 20, 18, 1, 'optiona'),
(143, 20, 18, 1, 'optiona'),
(111, 20, 18, 1, 'optiona'),
(100, 20, 18, 1, 'optiona'),
(102, 20, 18, 1, 'optiona'),
(22, 20, 18, 1, 'optiona'),
(90, 20, 18, 1, 'optiona'),
(67, 20, 18, 1, 'optiona'),
(62, 20, 18, 1, 'optiona'),
(44, 20, 18, 1, 'optiona'),
(144, 20, 18, 1, 'optiona'),
(95, 20, 18, 1, 'optiona'),
(20, 20, 18, 1, 'optiona'),
(115, 20, 18, 1, 'optiona'),
(123, 20, 18, 1, 'optiona'),
(124, 20, 18, -0.33, 'optionb'),
(75, 20, 18, 1, 'optiona'),
(113, 20, 18, 1, 'optiona'),
(122, 20, 18, 1, 'optiona'),
(98, 20, 18, -0.33, 'optionc'),
(79, 20, 18, -0.33, 'optionb'),
(154, 20, 18, 1, 'optiona'),
(63, 20, 18, 1, 'optiona'),
(127, 20, 18, -0.33, 'optionb'),
(69, 20, 18, 1, 'optiona'),
(64, 20, 18, 1, 'optiona'),
(93, 20, 18, 1, 'optiona'),
(68, 20, 18, 1, 'optiona'),
(116, 20, 19, 1, 'optionb'),
(135, 20, 19, 1, 'optionb'),
(81, 20, 19, 1, 'optionb'),
(70, 20, 19, 1, 'optionb'),
(94, 20, 19, -0.33, 'optionc'),
(60, 20, 19, 1, 'optionb'),
(138, 20, 19, 1, 'optionb'),
(152, 20, 19, 1, 'optionb'),
(77, 20, 19, -0.33, 'optionc'),
(86, 20, 19, -0.33, 'optionc'),
(65, 20, 19, 1, 'optionb'),
(73, 20, 19, -0.33, 'optiond'),
(108, 20, 19, 1, 'optionb'),
(36, 20, 19, 1, 'optionb'),
(74, 20, 19, -0.33, 'optiond'),
(101, 20, 19, -0.33, 'optiond'),
(39, 20, 19, 1, 'optionb'),
(56, 20, 19, 1, 'optionb'),
(78, 20, 19, 1, 'optionb'),
(121, 20, 19, 1, 'optionb'),
(117, 20, 19, 1, 'optionb'),
(160, 20, 19, -0.33, 'optionc'),
(153, 20, 19, 1, 'optionb'),
(143, 20, 19, -0.33, 'optiona'),
(111, 20, 19, -0.33, 'optiond'),
(100, 20, 19, 1, 'optionb'),
(141, 20, 19, -0.33, 'optionc'),
(102, 20, 19, 1, 'optionb'),
(22, 20, 19, 1, 'optionb'),
(90, 20, 19, 1, 'optionb'),
(67, 20, 19, 1, 'optionb'),
(62, 20, 19, -0.33, 'optiond'),
(162, 20, 19, -0.33, 'optiond'),
(44, 20, 19, 1, 'optionb'),
(83, 20, 19, -0.33, 'optionc'),
(145, 20, 19, 1, 'optionb'),
(76, 20, 19, -0.33, 'optiona'),
(95, 20, 19, 1, 'optionb'),
(20, 20, 19, 1, 'optionb'),
(123, 20, 19, 1, 'optionb'),
(75, 20, 19, 1, 'optionb'),
(122, 20, 19, 1, 'optionb'),
(79, 20, 19, -0.33, 'optiond'),
(154, 20, 19, -0.33, 'optionc'),
(127, 20, 19, -0.33, 'optiona'),
(69, 20, 19, -0.33, 'optiond'),
(64, 20, 19, 1, 'optionb'),
(93, 20, 19, 1, 'optionb'),
(116, 20, 20, 1, 'optiona'),
(135, 20, 20, 1, 'optiona'),
(85, 20, 20, -0.33, 'optiond'),
(81, 20, 20, 1, 'optiona'),
(70, 20, 20, 1, 'optiona'),
(94, 20, 20, 1, 'optiona'),
(107, 20, 20, 1, 'optiona'),
(60, 20, 20, 1, 'optiona'),
(138, 20, 20, 1, 'optiona'),
(152, 20, 20, 1, 'optiona'),
(77, 20, 20, -0.33, 'optionc'),
(86, 20, 20, 1, 'optiona'),
(73, 20, 20, 1, 'optiona'),
(36, 20, 20, 1, 'optiona'),
(74, 20, 20, -0.33, 'optionb'),
(33, 20, 20, 1, 'optiona'),
(101, 20, 20, 1, 'optiona'),
(39, 20, 20, 1, 'optiona'),
(56, 20, 20, 1, 'optiona'),
(78, 20, 20, -0.33, 'optionb'),
(96, 20, 20, 1, 'optiona'),
(121, 20, 20, 1, 'optiona'),
(153, 20, 20, 1, 'optiona'),
(143, 20, 20, 1, 'optiona'),
(111, 20, 20, 1, 'optiona'),
(100, 20, 20, 1, 'optiona'),
(102, 20, 20, 1, 'optiona'),
(22, 20, 20, 1, 'optiona'),
(90, 20, 20, -0.33, 'optionc'),
(67, 20, 20, 1, 'optiona'),
(62, 20, 20, 1, 'optiona'),
(162, 20, 20, -0.33, 'optionc'),
(44, 20, 20, -0.33, 'optionc'),
(47, 20, 20, -0.33, 'optionc'),
(83, 20, 20, 1, 'optiona'),
(145, 20, 20, 1, 'optiona'),
(95, 20, 20, 1, 'optiona'),
(114, 20, 20, 1, 'optiona'),
(20, 20, 20, -0.33, 'optionc'),
(123, 20, 20, 1, 'optiona'),
(75, 20, 20, 1, 'optiona'),
(113, 20, 20, 1, 'optiona'),
(52, 20, 20, -0.33, 'optionc'),
(122, 20, 20, 1, 'optiona'),
(98, 20, 20, 1, 'optiona'),
(79, 20, 20, 1, 'optiona'),
(154, 20, 20, 1, 'optiona'),
(63, 20, 20, 1, 'optiona'),
(127, 20, 20, -0.33, 'optionc'),
(69, 20, 20, 1, 'optiona'),
(64, 20, 20, 1, 'optiona'),
(93, 20, 20, 1, 'optiona'),
(68, 20, 20, 1, 'optiona'),
(116, 20, 21, 1, 'optionc'),
(135, 20, 21, 1, 'optionc'),
(85, 20, 21, 1, 'optionc'),
(81, 20, 21, 1, 'optionc'),
(70, 20, 21, 1, 'optionc'),
(94, 20, 21, 1, 'optionc'),
(107, 20, 21, 1, 'optionc'),
(60, 20, 21, 1, 'optionc'),
(138, 20, 21, 1, 'optionc'),
(152, 20, 21, 1, 'optionc'),
(130, 20, 21, 1, 'optionc'),
(77, 20, 21, 1, 'optionc'),
(86, 20, 21, 1, 'optionc'),
(65, 20, 21, 1, 'optionc'),
(73, 20, 21, 1, 'optionc'),
(108, 20, 21, 1, 'optionc'),
(36, 20, 21, 1, 'optionc'),
(74, 20, 21, 1, 'optionc'),
(33, 20, 21, 1, 'optionc'),
(101, 20, 21, 1, 'optionc'),
(39, 20, 21, 1, 'optionc'),
(56, 20, 21, 1, 'optionc'),
(78, 20, 21, 1, 'optionc'),
(96, 20, 21, 1, 'optionc'),
(121, 20, 21, 1, 'optionc'),
(117, 20, 21, 1, 'optionc'),
(160, 20, 21, 1, 'optionc'),
(153, 20, 21, 1, 'optionc'),
(143, 20, 21, 1, 'optionc'),
(111, 20, 21, 1, 'optionc'),
(100, 20, 21, 1, 'optionc'),
(141, 20, 21, 1, 'optionc'),
(102, 20, 21, 1, 'optionc'),
(22, 20, 21, 1, 'optionc'),
(90, 20, 21, 1, 'optionc'),
(67, 20, 21, 1, 'optionc'),
(62, 20, 21, 1, 'optionc'),
(162, 20, 21, 1, 'optionc'),
(44, 20, 21, 1, 'optionc'),
(47, 20, 21, 1, 'optionc'),
(144, 20, 21, 1, 'optionc'),
(83, 20, 21, 1, 'optionc'),
(145, 20, 21, 1, 'optionc'),
(76, 20, 21, -0.33, 'optiona'),
(95, 20, 21, 1, 'optionc'),
(114, 20, 21, 1, 'optionc'),
(20, 20, 21, 1, 'optionc'),
(115, 20, 21, 1, 'optionc'),
(123, 20, 21, 1, 'optionc'),
(124, 20, 21, 1, 'optionc'),
(75, 20, 21, 1, 'optionc'),
(113, 20, 21, 1, 'optionc'),
(52, 20, 21, 1, 'optionc'),
(122, 20, 21, 1, 'optionc'),
(98, 20, 21, 1, 'optionc'),
(79, 20, 21, 1, 'optionc'),
(154, 20, 21, 1, 'optionc'),
(63, 20, 21, 1, 'optionc'),
(127, 20, 21, 1, 'optionc'),
(69, 20, 21, 1, 'optionc'),
(64, 20, 21, 1, 'optionc'),
(93, 20, 21, 1, 'optionc'),
(68, 20, 21, 1, 'optionc'),
(85, 20, 22, 1, 'optiond'),
(81, 20, 22, 1, 'optiond'),
(107, 20, 22, 1, 'optiond'),
(60, 20, 22, -0.33, 'optionb'),
(138, 20, 22, 1, 'optiond'),
(77, 20, 22, 1, 'optiond'),
(86, 20, 22, -0.33, 'optionb'),
(65, 20, 22, 1, 'optiond'),
(108, 20, 22, 1, 'optiond'),
(36, 20, 22, 1, 'optiond'),
(74, 20, 22, -0.33, 'optiona'),
(33, 20, 22, -0.33, 'optiona'),
(101, 20, 22, 1, 'optiond'),
(39, 20, 22, -0.33, 'optiona'),
(56, 20, 22, 1, 'optiond'),
(78, 20, 22, -0.33, 'optionb'),
(121, 20, 22, 1, 'optiond'),
(117, 20, 22, -0.33, 'optionc'),
(160, 20, 22, 1, 'optiond'),
(153, 20, 22, 1, 'optiond'),
(143, 20, 22, -0.33, 'optiona'),
(111, 20, 22, -0.33, 'optionc'),
(100, 20, 22, 1, 'optiond'),
(22, 20, 22, -0.33, 'optionc'),
(90, 20, 22, 1, 'optiond'),
(62, 20, 22, 1, 'optiond'),
(162, 20, 22, 1, 'optiond'),
(47, 20, 22, 1, 'optiond'),
(144, 20, 22, -0.33, 'optiona'),
(145, 20, 22, -0.33, 'optionb'),
(20, 20, 22, -0.33, 'optionb'),
(115, 20, 22, -0.33, 'optiona'),
(75, 20, 22, 1, 'optiond'),
(52, 20, 22, -0.33, 'optionb'),
(122, 20, 22, 1, 'optiond'),
(154, 20, 22, -0.33, 'optiona'),
(69, 20, 22, -0.33, 'optiona'),
(64, 20, 22, -0.33, 'optiona'),
(93, 20, 22, -0.33, 'optionb'),
(68, 20, 22, -0.33, 'optiona'),
(116, 20, 23, 1, 'optiona'),
(81, 20, 23, 1, 'optiona'),
(70, 20, 23, -0.33, 'optiond'),
(94, 20, 23, 1, 'optiona'),
(107, 20, 23, 1, 'optiona'),
(60, 20, 23, -0.33, 'optionc'),
(138, 20, 23, 1, 'optiona'),
(152, 20, 23, 1, 'optiona'),
(130, 20, 23, -0.33, 'optiond'),
(77, 20, 23, -0.33, 'optionc'),
(86, 20, 23, -0.33, 'optionc'),
(65, 20, 23, 1, 'optiona'),
(73, 20, 23, 1, 'optiona'),
(108, 20, 23, 1, 'optiona'),
(36, 20, 23, 1, 'optiona'),
(33, 20, 23, -0.33, 'optionc'),
(101, 20, 23, 1, 'optiona'),
(39, 20, 23, -0.33, 'optiond'),
(56, 20, 23, 1, 'optiona'),
(96, 20, 23, 1, 'optiona'),
(121, 20, 23, 1, 'optiona'),
(117, 20, 23, -0.33, 'optionc'),
(160, 20, 23, 1, 'optiona'),
(153, 20, 23, -0.33, 'optionc'),
(143, 20, 23, -0.33, 'optionc'),
(111, 20, 23, 1, 'optiona'),
(100, 20, 23, 1, 'optiona'),
(141, 20, 23, -0.33, 'optionc'),
(102, 20, 23, -0.33, 'optiond'),
(22, 20, 23, 1, 'optiona'),
(90, 20, 23, 1, 'optiona'),
(67, 20, 23, 1, 'optiona'),
(62, 20, 23, -0.33, 'optionc'),
(162, 20, 23, -0.33, 'optionc'),
(44, 20, 23, -0.33, 'optionc'),
(47, 20, 23, -0.33, 'optionc'),
(144, 20, 23, 1, 'optiona'),
(83, 20, 23, 1, 'optiona'),
(145, 20, 23, 1, 'optiona'),
(76, 20, 23, 1, 'optiona'),
(95, 20, 23, -0.33, 'optionc'),
(114, 20, 23, 1, 'optiona'),
(20, 20, 23, 1, 'optiona'),
(115, 20, 23, 1, 'optiona'),
(123, 20, 23, 1, 'optiona'),
(124, 20, 23, 1, 'optiona'),
(75, 20, 23, -0.33, 'optionc'),
(112, 20, 23, -0.33, 'optionc'),
(52, 20, 23, 1, 'optiona'),
(122, 20, 23, -0.33, 'optionc'),
(98, 20, 23, 1, 'optiona'),
(79, 20, 23, 1, 'optiona'),
(154, 20, 23, 1, 'optiona'),
(63, 20, 23, 1, 'optiona'),
(127, 20, 23, 1, 'optiona'),
(69, 20, 23, -0.33, 'optionc'),
(64, 20, 23, -0.33, 'optiond'),
(93, 20, 23, 1, 'optiona'),
(68, 20, 23, 1, 'optiona'),
(116, 20, 24, 1, 'optiona'),
(135, 20, 24, 1, 'optiona'),
(85, 20, 24, 1, 'optiona'),
(81, 20, 24, 1, 'optiona'),
(70, 20, 24, 1, 'optiona'),
(94, 20, 24, 1, 'optiona'),
(107, 20, 24, 1, 'optiona'),
(60, 20, 24, 1, 'optiona'),
(138, 20, 24, 1, 'optiona'),
(152, 20, 24, 1, 'optiona'),
(130, 20, 24, 1, 'optiona'),
(77, 20, 24, 1, 'optiona'),
(86, 20, 24, 1, 'optiona'),
(65, 20, 24, 1, 'optiona'),
(73, 20, 24, 1, 'optiona'),
(108, 20, 24, 1, 'optiona'),
(36, 20, 24, 1, 'optiona'),
(74, 20, 24, 1, 'optiona'),
(33, 20, 24, 1, 'optiona'),
(101, 20, 24, 1, 'optiona'),
(39, 20, 24, 1, 'optiona'),
(56, 20, 24, 1, 'optiona'),
(96, 20, 24, 1, 'optiona'),
(121, 20, 24, 1, 'optiona'),
(117, 20, 24, 1, 'optiona'),
(160, 20, 24, 1, 'optiona'),
(153, 20, 24, 1, 'optiona'),
(143, 20, 24, 1, 'optiona'),
(111, 20, 24, 1, 'optiona'),
(100, 20, 24, 1, 'optiona'),
(102, 20, 24, 1, 'optiona'),
(22, 20, 24, 1, 'optiona'),
(90, 20, 24, 1, 'optiona'),
(67, 20, 24, 1, 'optiona'),
(62, 20, 24, 1, 'optiona'),
(162, 20, 24, 1, 'optiona'),
(44, 20, 24, 1, 'optiona'),
(47, 20, 24, 1, 'optiona'),
(144, 20, 24, 1, 'optiona'),
(83, 20, 24, -0.33, 'optionb'),
(145, 20, 24, 1, 'optiona'),
(95, 20, 24, 1, 'optiona'),
(114, 20, 24, 1, 'optiona'),
(20, 20, 24, 1, 'optiona'),
(115, 20, 24, 1, 'optiona'),
(123, 20, 24, 1, 'optiona'),
(124, 20, 24, 1, 'optiona'),
(75, 20, 24, 1, 'optiona'),
(113, 20, 24, 1, 'optiona'),
(112, 20, 24, 1, 'optiona'),
(52, 20, 24, 1, 'optiona'),
(122, 20, 24, 1, 'optiona'),
(98, 20, 24, 1, 'optiona'),
(79, 20, 24, 1, 'optiona'),
(154, 20, 24, 1, 'optiona'),
(63, 20, 24, 1, 'optiona'),
(127, 20, 24, 1, 'optiona'),
(69, 20, 24, 1, 'optiona'),
(93, 20, 24, 1, 'optiona'),
(68, 20, 24, 1, 'optiona'),
(116, 20, 25, 1, 'optionb'),
(135, 20, 25, 1, 'optionb'),
(85, 20, 25, 1, 'optionb'),
(81, 20, 25, 1, 'optionb'),
(70, 20, 25, 1, 'optionb'),
(94, 20, 25, 1, 'optionb'),
(107, 20, 25, 1, 'optionb'),
(60, 20, 25, 1, 'optionb'),
(152, 20, 25, 1, 'optionb'),
(130, 20, 25, 1, 'optionb'),
(77, 20, 25, -0.33, 'optionc'),
(86, 20, 25, 1, 'optionb'),
(65, 20, 25, 1, 'optionb'),
(73, 20, 25, 1, 'optionb'),
(108, 20, 25, 1, 'optionb'),
(36, 20, 25, 1, 'optionb'),
(74, 20, 25, 1, 'optionb'),
(33, 20, 25, 1, 'optionb'),
(101, 20, 25, 1, 'optionb'),
(39, 20, 25, 1, 'optionb'),
(56, 20, 25, 1, 'optionb'),
(78, 20, 25, 1, 'optionb'),
(96, 20, 25, 1, 'optionb'),
(121, 20, 25, 1, 'optionb'),
(117, 20, 25, 1, 'optionb'),
(160, 20, 25, 1, 'optionb'),
(153, 20, 25, 1, 'optionb'),
(143, 20, 25, 1, 'optionb'),
(111, 20, 25, 1, 'optionb'),
(100, 20, 25, 1, 'optionb'),
(141, 20, 25, 1, 'optionb'),
(102, 20, 25, 1, 'optionb'),
(22, 20, 25, 1, 'optionb'),
(90, 20, 25, 1, 'optionb'),
(67, 20, 25, 1, 'optionb'),
(62, 20, 25, 1, 'optionb'),
(162, 20, 25, 1, 'optionb'),
(44, 20, 25, 1, 'optionb'),
(47, 20, 25, 1, 'optionb'),
(144, 20, 25, 1, 'optionb'),
(83, 20, 25, 1, 'optionb'),
(145, 20, 25, 1, 'optionb'),
(76, 20, 25, 1, 'optionb'),
(95, 20, 25, 1, 'optionb'),
(114, 20, 25, 1, 'optionb'),
(20, 20, 25, 1, 'optionb'),
(115, 20, 25, 1, 'optionb'),
(123, 20, 25, 1, 'optionb'),
(124, 20, 25, 1, 'optionb'),
(75, 20, 25, -0.33, 'optiona'),
(113, 20, 25, 1, 'optionb'),
(112, 20, 25, 1, 'optionb'),
(52, 20, 25, 1, 'optionb'),
(122, 20, 25, 1, 'optionb'),
(98, 20, 25, 1, 'optionb'),
(79, 20, 25, 1, 'optionb'),
(154, 20, 25, 1, 'optionb'),
(63, 20, 25, 1, 'optionb'),
(127, 20, 25, 1, 'optionb'),
(69, 20, 25, 1, 'optionb'),
(64, 20, 25, 1, 'optionb'),
(93, 20, 25, 1, 'optionb'),
(68, 20, 25, 1, 'optionb'),
(116, 20, 26, 2, 'optionc'),
(81, 20, 26, 2, 'optionc'),
(94, 20, 26, 2, 'optionc'),
(77, 20, 26, -0.66, 'optiond'),
(65, 20, 26, 2, 'optionc'),
(73, 20, 26, 2, 'optionc'),
(36, 20, 26, 2, 'optionc'),
(33, 20, 26, 2, 'optionc'),
(101, 20, 26, 2, 'optionc'),
(39, 20, 26, 2, 'optionc'),
(56, 20, 26, 2, 'optionc'),
(96, 20, 26, 2, 'optionc'),
(121, 20, 26, 2, 'optionc'),
(117, 20, 26, 2, 'optionc'),
(100, 20, 26, 2, 'optionc'),
(22, 20, 26, 2, 'optionc'),
(62, 20, 26, -0.66, 'optiona'),
(44, 20, 26, 2, 'optionc'),
(144, 20, 26, 2, 'optionc'),
(83, 20, 26, 2, 'optionc'),
(145, 20, 26, 2, 'optionc'),
(76, 20, 26, 2, 'optionc'),
(95, 20, 26, 2, 'optionc'),
(20, 20, 26, 2, 'optionc'),
(115, 20, 26, 2, 'optionc'),
(123, 20, 26, 2, 'optionc'),
(113, 20, 26, 2, 'optionc'),
(112, 20, 26, 2, 'optionc'),
(98, 20, 26, 2, 'optionc'),
(79, 20, 26, 2, 'optionc'),
(63, 20, 26, 2, 'optionc'),
(127, 20, 26, 2, 'optionc'),
(69, 20, 26, -0.66, 'optiond'),
(64, 20, 26, -0.66, 'optionb'),
(93, 20, 26, 2, 'optionc'),
(68, 20, 26, 2, 'optionc'),
(116, 20, 27, -0.66, 'optionc'),
(81, 20, 27, 2, 'optiond'),
(39, 20, 27, 2, 'optiond'),
(67, 20, 27, 2, 'optiond'),
(62, 20, 27, 2, 'optiond'),
(20, 20, 27, 2, 'optiond'),
(112, 20, 27, 2, 'optiond'),
(52, 20, 27, 2, 'optiond'),
(127, 20, 27, 2, 'optiond'),
(69, 20, 27, -0.66, 'optiona'),
(81, 20, 28, 2, 'optionb'),
(60, 20, 28, -0.66, 'optionc'),
(36, 20, 28, 2, 'optionb'),
(74, 20, 28, -0.66, 'optionc'),
(101, 20, 28, -0.66, 'optionc'),
(141, 20, 28, -0.66, 'optionc'),
(90, 20, 28, -0.66, 'optionc'),
(47, 20, 28, 2, 'optionb'),
(95, 20, 28, 2, 'optionb'),
(98, 20, 28, -0.66, 'optionc'),
(154, 20, 28, 2, 'optionb'),
(69, 20, 28, -0.66, 'optionc'),
(64, 20, 28, -0.66, 'optionc'),
(93, 20, 28, 2, 'optionb'),
(116, 20, 29, -0.66, 'optiona'),
(81, 20, 29, 2, 'optiond'),
(94, 20, 29, -0.66, 'optiona'),
(107, 20, 29, -0.66, 'optiona'),
(130, 20, 29, -0.66, 'optionc'),
(77, 20, 29, 2, 'optiond'),
(86, 20, 29, -0.66, 'optiona'),
(73, 20, 29, 2, 'optiond'),
(108, 20, 29, 2, 'optiond'),
(36, 20, 29, -0.66, 'optiona'),
(33, 20, 29, -0.66, 'optiona'),
(101, 20, 29, 2, 'optiond'),
(56, 20, 29, 2, 'optiond'),
(96, 20, 29, 2, 'optiond'),
(121, 20, 29, 2, 'optiond'),
(117, 20, 29, -0.66, 'optiona'),
(153, 20, 29, 2, 'optiond'),
(143, 20, 29, 2, 'optiond'),
(111, 20, 29, 2, 'optiond'),
(100, 20, 29, -0.66, 'optiona'),
(141, 20, 29, -0.66, 'optiona'),
(102, 20, 29, -0.66, 'optiona'),
(22, 20, 29, 2, 'optiond'),
(90, 20, 29, 2, 'optiond'),
(67, 20, 29, -0.66, 'optiona'),
(62, 20, 29, -0.66, 'optiona'),
(162, 20, 29, 2, 'optiond'),
(44, 20, 29, -0.66, 'optiona'),
(144, 20, 29, 2, 'optiond'),
(83, 20, 29, 2, 'optiond'),
(145, 20, 29, -0.66, 'optiona'),
(76, 20, 29, -0.66, 'optiona'),
(95, 20, 29, -0.66, 'optiona'),
(114, 20, 29, 2, 'optiond'),
(20, 20, 29, 2, 'optiond'),
(115, 20, 29, 2, 'optiond'),
(123, 20, 29, 2, 'optiond'),
(124, 20, 29, 2, 'optiond'),
(75, 20, 29, 2, 'optiond'),
(52, 20, 29, 2, 'optiond'),
(98, 20, 29, -0.66, 'optiona'),
(154, 20, 29, 2, 'optiond'),
(63, 20, 29, 2, 'optiond'),
(127, 20, 29, -0.66, 'optiona'),
(69, 20, 29, -0.66, 'optiona'),
(93, 20, 29, 2, 'optiond'),
(68, 20, 29, 2, 'optiond'),
(81, 20, 30, 2, 'optionc'),
(86, 20, 30, -0.66, 'optiond'),
(78, 20, 30, -0.66, 'optiona'),
(102, 20, 30, -0.66, 'optionb'),
(90, 20, 30, -0.66, 'optiona'),
(122, 20, 30, -0.66, 'optiond'),
(154, 20, 30, -0.66, 'optiond'),
(116, 20, 31, 2, 'optionb'),
(81, 20, 31, 2, 'optionb'),
(70, 20, 31, -0.66, 'optionc'),
(94, 20, 31, -0.66, 'optionc'),
(107, 20, 31, 2, 'optionb'),
(60, 20, 31, -0.66, 'optionc'),
(130, 20, 31, 2, 'optionb'),
(77, 20, 31, 2, 'optionb'),
(86, 20, 31, -0.66, 'optiond'),
(73, 20, 31, 2, 'optionb'),
(108, 20, 31, 2, 'optionb'),
(36, 20, 31, 2, 'optionb'),
(33, 20, 31, 2, 'optionb'),
(101, 20, 31, -0.66, 'optiond'),
(39, 20, 31, 2, 'optionb'),
(56, 20, 31, 2, 'optionb'),
(78, 20, 31, 2, 'optionb'),
(96, 20, 31, -0.66, 'optionc'),
(121, 20, 31, 2, 'optionb'),
(160, 20, 31, 2, 'optionb'),
(153, 20, 31, -0.66, 'optionc'),
(111, 20, 31, 2, 'optionb'),
(100, 20, 31, 2, 'optionb'),
(22, 20, 31, 2, 'optionb'),
(90, 20, 31, 2, 'optionb'),
(67, 20, 31, 2, 'optionb'),
(162, 20, 31, 2, 'optionb'),
(44, 20, 31, -0.66, 'optiond'),
(47, 20, 31, -0.66, 'optionc'),
(83, 20, 31, -0.66, 'optiond'),
(145, 20, 31, -0.66, 'optiond'),
(95, 20, 31, 2, 'optionb'),
(20, 20, 31, -0.66, 'optionc'),
(75, 20, 31, -0.66, 'optiona'),
(122, 20, 31, -0.66, 'optiona'),
(98, 20, 31, 2, 'optionb'),
(79, 20, 31, 2, 'optionb'),
(154, 20, 31, 2, 'optionb'),
(127, 20, 31, 2, 'optionb'),
(69, 20, 31, -0.66, 'optiona'),
(68, 20, 31, -0.66, 'optionc'),
(116, 20, 32, 2, 'optionb'),
(135, 20, 32, -0.66, 'optiond'),
(85, 20, 32, -0.66, 'optiond'),
(81, 20, 32, 2, 'optionb'),
(70, 20, 32, 2, 'optionb'),
(94, 20, 32, 2, 'optionb'),
(107, 20, 32, 2, 'optionb'),
(60, 20, 32, 2, 'optionb'),
(138, 20, 32, 2, 'optionb'),
(152, 20, 32, 2, 'optionb'),
(130, 20, 32, 2, 'optionb'),
(77, 20, 32, 2, 'optionb'),
(65, 20, 32, 2, 'optionb'),
(73, 20, 32, 2, 'optionb'),
(108, 20, 32, -0.66, 'optiond'),
(36, 20, 32, 2, 'optionb'),
(74, 20, 32, 2, 'optionb'),
(33, 20, 32, -0.66, 'optiond'),
(101, 20, 32, 2, 'optionb'),
(39, 20, 32, 2, 'optionb'),
(56, 20, 32, 2, 'optionb'),
(78, 20, 32, 2, 'optionb'),
(96, 20, 32, 2, 'optionb'),
(121, 20, 32, 2, 'optionb'),
(117, 20, 32, 2, 'optionb'),
(160, 20, 32, -0.66, 'optiond'),
(153, 20, 32, 2, 'optionb'),
(143, 20, 32, 2, 'optionb'),
(100, 20, 32, 2, 'optionb'),
(141, 20, 32, 2, 'optionb'),
(102, 20, 32, 2, 'optionb'),
(22, 20, 32, 2, 'optionb'),
(90, 20, 32, 2, 'optionb'),
(67, 20, 32, 2, 'optionb'),
(62, 20, 32, 2, 'optionb'),
(162, 20, 32, 2, 'optionb'),
(44, 20, 32, 2, 'optionb'),
(47, 20, 32, 2, 'optionb'),
(144, 20, 32, 2, 'optionb'),
(83, 20, 32, -0.66, 'optiona'),
(145, 20, 32, 2, 'optionb'),
(76, 20, 32, 2, 'optionb'),
(95, 20, 32, 2, 'optionb'),
(114, 20, 32, 2, 'optionb'),
(20, 20, 32, 2, 'optionb'),
(115, 20, 32, 2, 'optionb'),
(123, 20, 32, 2, 'optionb'),
(124, 20, 32, -0.66, 'optiona'),
(75, 20, 32, -0.66, 'optiond'),
(113, 20, 32, -0.66, 'optiond'),
(112, 20, 32, -0.66, 'optiond'),
(52, 20, 32, 2, 'optionb'),
(122, 20, 32, 2, 'optionb'),
(98, 20, 32, 2, 'optionb'),
(79, 20, 32, 2, 'optionb'),
(63, 20, 32, 2, 'optionb'),
(127, 20, 32, 2, 'optionb'),
(69, 20, 32, 2, 'optionb'),
(64, 20, 32, 2, 'optionb'),
(93, 20, 32, 2, 'optionb'),
(68, 20, 32, -0.66, 'optiond'),
(116, 20, 33, 2, 'optiond'),
(135, 20, 33, 2, 'optiond'),
(81, 20, 33, 2, 'optiond'),
(70, 20, 33, 2, 'optiond'),
(107, 20, 33, 2, 'optiond'),
(60, 20, 33, 2, 'optiond'),
(138, 20, 33, 2, 'optiond'),
(152, 20, 33, 2, 'optiond'),
(130, 20, 33, 2, 'optiond'),
(77, 20, 33, 2, 'optiond'),
(86, 20, 33, 2, 'optiond'),
(65, 20, 33, 2, 'optiond'),
(73, 20, 33, 2, 'optiond'),
(36, 20, 33, 2, 'optiond'),
(33, 20, 33, 2, 'optiond'),
(101, 20, 33, 2, 'optiond'),
(39, 20, 33, 2, 'optiond'),
(56, 20, 33, 2, 'optiond'),
(78, 20, 33, 2, 'optiond'),
(96, 20, 33, 2, 'optiond'),
(121, 20, 33, 2, 'optiond'),
(117, 20, 33, 2, 'optiond'),
(153, 20, 33, 2, 'optiond'),
(143, 20, 33, -0.66, 'optionc'),
(111, 20, 33, 2, 'optiond'),
(141, 20, 33, 2, 'optiond'),
(90, 20, 33, 2, 'optiond'),
(67, 20, 33, 2, 'optiond'),
(62, 20, 33, 2, 'optiond'),
(162, 20, 33, 2, 'optiond'),
(44, 20, 33, 2, 'optiond'),
(47, 20, 33, 2, 'optiond'),
(144, 20, 33, 2, 'optiond'),
(83, 20, 33, -0.66, 'optionc'),
(145, 20, 33, 2, 'optiond'),
(95, 20, 33, 2, 'optiond'),
(114, 20, 33, 2, 'optiond'),
(20, 20, 33, 2, 'optiond'),
(115, 20, 33, 2, 'optiond'),
(123, 20, 33, 2, 'optiond'),
(75, 20, 33, 2, 'optiond'),
(122, 20, 33, 2, 'optiond'),
(98, 20, 33, 2, 'optiond'),
(79, 20, 33, 2, 'optiond'),
(63, 20, 33, 2, 'optiond'),
(127, 20, 33, 2, 'optiond'),
(69, 20, 33, 2, 'optiond'),
(64, 20, 33, -0.66, 'optiona'),
(93, 20, 33, 2, 'optiond'),
(68, 20, 33, 2, 'optiond'),
(116, 20, 34, 2, 'optionc'),
(135, 20, 34, -0.66, 'optionb'),
(81, 20, 34, 2, 'optionc'),
(70, 20, 34, 2, 'optionc'),
(94, 20, 34, 2, 'optionc'),
(60, 20, 34, 2, 'optionc'),
(138, 20, 34, 2, 'optionc'),
(152, 20, 34, 2, 'optionc'),
(77, 20, 34, 2, 'optionc'),
(86, 20, 34, -0.66, 'optiond'),
(65, 20, 34, 2, 'optionc'),
(73, 20, 34, 2, 'optionc'),
(108, 20, 34, 2, 'optionc'),
(36, 20, 34, 2, 'optionc'),
(74, 20, 34, -0.66, 'optionb'),
(33, 20, 34, 2, 'optionc'),
(101, 20, 34, 2, 'optionc'),
(39, 20, 34, 2, 'optionc'),
(56, 20, 34, 2, 'optionc'),
(96, 20, 34, 2, 'optionc'),
(121, 20, 34, 2, 'optionc'),
(117, 20, 34, 2, 'optionc'),
(160, 20, 34, 2, 'optionc'),
(153, 20, 34, 2, 'optionc'),
(111, 20, 34, 2, 'optionc'),
(100, 20, 34, 2, 'optionc'),
(141, 20, 34, -0.66, 'optionb'),
(22, 20, 34, 2, 'optionc'),
(90, 20, 34, 2, 'optionc'),
(67, 20, 34, -0.66, 'optiond'),
(62, 20, 34, 2, 'optionc'),
(162, 20, 34, -0.66, 'optiona'),
(44, 20, 34, 2, 'optionc'),
(47, 20, 34, -0.66, 'optionb'),
(144, 20, 34, 2, 'optionc'),
(83, 20, 34, 2, 'optionc'),
(145, 20, 34, -0.66, 'optiond'),
(76, 20, 34, 2, 'optionc'),
(95, 20, 34, 2, 'optionc'),
(114, 20, 34, 2, 'optionc'),
(20, 20, 34, 2, 'optionc'),
(115, 20, 34, 2, 'optionc'),
(123, 20, 34, 2, 'optionc'),
(124, 20, 34, -0.66, 'optiona'),
(75, 20, 34, 2, 'optionc'),
(112, 20, 34, -0.66, 'optiona'),
(52, 20, 34, 2, 'optionc'),
(122, 20, 34, 2, 'optionc'),
(98, 20, 34, 2, 'optionc'),
(79, 20, 34, 2, 'optionc'),
(154, 20, 34, 2, 'optionc'),
(63, 20, 34, 2, 'optionc'),
(127, 20, 34, 2, 'optionc'),
(93, 20, 34, 2, 'optionc'),
(68, 20, 34, 2, 'optionc'),
(116, 20, 35, -0.66, 'optionc'),
(135, 20, 35, 2, 'optionb'),
(81, 20, 35, 2, 'optionb'),
(70, 20, 35, 2, 'optionb'),
(94, 20, 35, -0.66, 'optiond'),
(107, 20, 35, 2, 'optionb'),
(60, 20, 35, -0.66, 'optionc'),
(138, 20, 35, -0.66, 'optionc'),
(152, 20, 35, -0.66, 'optionc'),
(130, 20, 35, -0.66, 'optionc'),
(77, 20, 35, -0.66, 'optionc'),
(86, 20, 35, -0.66, 'optiond'),
(65, 20, 35, 2, 'optionb'),
(73, 20, 35, 2, 'optionb'),
(36, 20, 35, -0.66, 'optiona'),
(74, 20, 35, -0.66, 'optiond'),
(33, 20, 35, -0.66, 'optiond'),
(101, 20, 35, -0.66, 'optiona'),
(39, 20, 35, 2, 'optionb'),
(56, 20, 35, 2, 'optionb'),
(78, 20, 35, -0.66, 'optiond'),
(96, 20, 35, 2, 'optionb'),
(121, 20, 35, 2, 'optionb'),
(117, 20, 35, 2, 'optionb'),
(160, 20, 35, 2, 'optionb'),
(153, 20, 35, -0.66, 'optiond'),
(143, 20, 35, 2, 'optionb'),
(111, 20, 35, 2, 'optionb'),
(141, 20, 35, -0.66, 'optiond'),
(102, 20, 35, -0.66, 'optiond'),
(22, 20, 35, 2, 'optionb'),
(90, 20, 35, 2, 'optionb'),
(67, 20, 35, 2, 'optionb'),
(62, 20, 35, -0.66, 'optiona'),
(162, 20, 35, 2, 'optionb'),
(47, 20, 35, -0.66, 'optionc'),
(144, 20, 35, -0.66, 'optiona'),
(83, 20, 35, 2, 'optionb'),
(145, 20, 35, 2, 'optionb'),
(95, 20, 35, -0.66, 'optiona'),
(114, 20, 35, 2, 'optionb'),
(20, 20, 35, -0.66, 'optiond'),
(115, 20, 35, -0.66, 'optiona'),
(123, 20, 35, 2, 'optionb'),
(124, 20, 35, -0.66, 'optiond'),
(75, 20, 35, -0.66, 'optiond'),
(112, 20, 35, -0.66, 'optiond'),
(52, 20, 35, 2, 'optionb'),
(122, 20, 35, 2, 'optionb'),
(98, 20, 35, 2, 'optionb'),
(79, 20, 35, 2, 'optionb'),
(154, 20, 35, -0.66, 'optiond'),
(63, 20, 35, 2, 'optionb'),
(127, 20, 35, 2, 'optionb'),
(69, 20, 35, -0.66, 'optiond'),
(64, 20, 35, -0.66, 'optiona'),
(93, 20, 35, -0.66, 'optiond'),
(68, 20, 35, 2, 'optionb'),
(116, 20, 36, -0.66, 'optiona'),
(135, 20, 36, -0.66, 'optionb'),
(81, 20, 36, -0.66, 'optiona'),
(94, 20, 36, -0.66, 'optiona'),
(107, 20, 36, -0.66, 'optiona'),
(138, 20, 36, -0.66, 'optiona'),
(65, 20, 36, -0.66, 'optiona'),
(36, 20, 36, -0.66, 'optiona'),
(101, 20, 36, -0.66, 'optiona'),
(39, 20, 36, -0.66, 'optiona'),
(117, 20, 36, -0.66, 'optionb'),
(153, 20, 36, -0.66, 'optiona'),
(143, 20, 36, -0.66, 'optiona'),
(100, 20, 36, -0.66, 'optiond'),
(90, 20, 36, -0.66, 'optiona'),
(44, 20, 36, 2, 'optionc'),
(83, 20, 36, 2, 'optionc'),
(95, 20, 36, -0.66, 'optiona'),
(20, 20, 36, -0.66, 'optiona'),
(123, 20, 36, -0.66, 'optiona'),
(52, 20, 36, 2, 'optionc'),
(122, 20, 36, -0.66, 'optiona'),
(98, 20, 36, -0.66, 'optiona'),
(154, 20, 36, -0.66, 'optiona'),
(127, 20, 36, 2, 'optionc'),
(69, 20, 36, -0.66, 'optiona'),
(68, 20, 36, 2, 'optionc'),
(116, 20, 37, 2, 'optionb'),
(81, 20, 37, 2, 'optionb'),
(94, 20, 37, 2, 'optionb'),
(73, 20, 37, 2, 'optionb'),
(36, 20, 37, -0.66, 'optiona'),
(39, 20, 37, 2, 'optionb'),
(56, 20, 37, 2, 'optionb'),
(96, 20, 37, 2, 'optionb'),
(117, 20, 37, -0.66, 'optiona'),
(153, 20, 37, -0.66, 'optiona'),
(90, 20, 37, 2, 'optionb'),
(162, 20, 37, -0.66, 'optiona'),
(83, 20, 37, -0.66, 'optiona'),
(145, 20, 37, 2, 'optionb'),
(20, 20, 37, 2, 'optionb'),
(123, 20, 37, 2, 'optionb'),
(124, 20, 37, 2, 'optionb'),
(52, 20, 37, -0.66, 'optiona'),
(122, 20, 37, 2, 'optionb'),
(98, 20, 37, -0.66, 'optiona'),
(79, 20, 37, 2, 'optionb'),
(69, 20, 37, 2, 'optionb'),
(116, 20, 38, 2, 'optiond'),
(135, 20, 38, -0.66, 'optionc'),
(85, 20, 38, 2, 'optiond'),
(81, 20, 38, 2, 'optiond'),
(70, 20, 38, 2, 'optiond'),
(94, 20, 38, 2, 'optiond'),
(60, 20, 38, 2, 'optiond'),
(138, 20, 38, 2, 'optiond'),
(130, 20, 38, 2, 'optiond'),
(86, 20, 38, 2, 'optiond'),
(65, 20, 38, 2, 'optiond'),
(73, 20, 38, 2, 'optiond'),
(108, 20, 38, 2, 'optiond'),
(36, 20, 38, 2, 'optiond'),
(74, 20, 38, 2, 'optiond'),
(33, 20, 38, 2, 'optiond'),
(39, 20, 38, 2, 'optiond'),
(56, 20, 38, 2, 'optiond'),
(78, 20, 38, 2, 'optiond'),
(96, 20, 38, 2, 'optiond'),
(121, 20, 38, 2, 'optiond'),
(153, 20, 38, 2, 'optiond'),
(143, 20, 38, 2, 'optiond'),
(111, 20, 38, -0.66, 'optionb'),
(102, 20, 38, -0.66, 'optionb'),
(22, 20, 38, 2, 'optiond'),
(90, 20, 38, 2, 'optiond'),
(62, 20, 38, 2, 'optiond'),
(162, 20, 38, 2, 'optiond'),
(44, 20, 38, 2, 'optiond'),
(47, 20, 38, 2, 'optiond'),
(144, 20, 38, 2, 'optiond'),
(83, 20, 38, 2, 'optiond'),
(145, 20, 38, 2, 'optiond'),
(76, 20, 38, 2, 'optiond'),
(95, 20, 38, 2, 'optiond'),
(114, 20, 38, 2, 'optiond'),
(20, 20, 38, 2, 'optiond'),
(115, 20, 38, 2, 'optiond'),
(123, 20, 38, 2, 'optiond'),
(124, 20, 38, -0.66, 'optionc'),
(75, 20, 38, 2, 'optiond'),
(112, 20, 38, 2, 'optiond'),
(52, 20, 38, 2, 'optiond'),
(98, 20, 38, 2, 'optiond'),
(154, 20, 38, 2, 'optiond'),
(63, 20, 38, 2, 'optiond'),
(69, 20, 38, 2, 'optiond'),
(64, 20, 38, -0.66, 'optiona'),
(93, 20, 38, 2, 'optiond'),
(81, 20, 39, 2, 'optionb'),
(70, 20, 39, 2, 'optionb'),
(94, 20, 39, -0.66, 'optiond'),
(107, 20, 39, -0.66, 'optiond'),
(60, 20, 39, 2, 'optionb'),
(138, 20, 39, -0.66, 'optiond'),
(152, 20, 39, -0.66, 'optiond'),
(73, 20, 39, 2, 'optionb'),
(36, 20, 39, 2, 'optionb'),
(33, 20, 39, -0.66, 'optiond'),
(39, 20, 39, 2, 'optionb'),
(56, 20, 39, 2, 'optionb'),
(78, 20, 39, -0.66, 'optiond'),
(96, 20, 39, 2, 'optionb'),
(121, 20, 39, -0.66, 'optiond'),
(153, 20, 39, -0.66, 'optiond'),
(143, 20, 39, -0.66, 'optiond'),
(22, 20, 39, 2, 'optionb'),
(90, 20, 39, -0.66, 'optiond'),
(62, 20, 39, 2, 'optionb'),
(162, 20, 39, 2, 'optionb'),
(44, 20, 39, -0.66, 'optiond'),
(144, 20, 39, -0.66, 'optiond'),
(83, 20, 39, -0.66, 'optiond'),
(145, 20, 39, 2, 'optionb'),
(95, 20, 39, -0.66, 'optiona'),
(114, 20, 39, 2, 'optionb'),
(20, 20, 39, -0.66, 'optiond'),
(123, 20, 39, 2, 'optionb'),
(124, 20, 39, -0.66, 'optiona'),
(75, 20, 39, 2, 'optionb'),
(113, 20, 39, -0.66, 'optiond'),
(122, 20, 39, 2, 'optionb'),
(98, 20, 39, -0.66, 'optiond'),
(79, 20, 39, 2, 'optionb'),
(154, 20, 39, 2, 'optionb'),
(127, 20, 39, 2, 'optionb'),
(69, 20, 39, 2, 'optionb'),
(93, 20, 39, -0.66, 'optiona'),
(68, 20, 39, 2, 'optionb'),
(116, 20, 40, 2, 'optiond'),
(135, 20, 40, 2, 'optiond'),
(85, 20, 40, -0.66, 'optionb'),
(81, 20, 40, 2, 'optiond'),
(70, 20, 40, 2, 'optiond'),
(94, 20, 40, 2, 'optiond'),
(107, 20, 40, 2, 'optiond'),
(60, 20, 40, 2, 'optiond'),
(152, 20, 40, 2, 'optiond'),
(130, 20, 40, -0.66, 'optionb'),
(77, 20, 40, -0.66, 'optionb'),
(86, 20, 40, -0.66, 'optionb'),
(65, 20, 40, 2, 'optiond'),
(73, 20, 40, 2, 'optiond'),
(108, 20, 40, 2, 'optiond'),
(36, 20, 40, 2, 'optiond'),
(74, 20, 40, 2, 'optiond'),
(33, 20, 40, 2, 'optiond'),
(101, 20, 40, 2, 'optiond'),
(39, 20, 40, 2, 'optiond'),
(56, 20, 40, 2, 'optiond'),
(78, 20, 40, 2, 'optiond'),
(96, 20, 40, 2, 'optiond'),
(121, 20, 40, 2, 'optiond'),
(117, 20, 40, 2, 'optiond'),
(160, 20, 40, 2, 'optiond'),
(153, 20, 40, 2, 'optiond'),
(143, 20, 40, 2, 'optiond'),
(111, 20, 40, 2, 'optiond'),
(100, 20, 40, 2, 'optiond'),
(141, 20, 40, 2, 'optiond'),
(102, 20, 40, 2, 'optiond'),
(22, 20, 40, -0.66, 'optionb'),
(90, 20, 40, 2, 'optiond'),
(67, 20, 40, 2, 'optiond'),
(62, 20, 40, 2, 'optiond'),
(162, 20, 40, 2, 'optiond'),
(44, 20, 40, 2, 'optiond'),
(47, 20, 40, -0.66, 'optionb'),
(144, 20, 40, 2, 'optiond'),
(83, 20, 40, 2, 'optiond'),
(145, 20, 40, 2, 'optiond'),
(76, 20, 40, 2, 'optiond'),
(95, 20, 40, 2, 'optiond'),
(114, 20, 40, 2, 'optiond'),
(20, 20, 40, 2, 'optiond'),
(115, 20, 40, 2, 'optiond'),
(123, 20, 40, 2, 'optiond'),
(124, 20, 40, 2, 'optiond'),
(75, 20, 40, 2, 'optiond'),
(113, 20, 40, 2, 'optiond'),
(112, 20, 40, 2, 'optiond'),
(52, 20, 40, 2, 'optiond'),
(122, 20, 40, 2, 'optiond'),
(98, 20, 40, 2, 'optiond'),
(79, 20, 40, 2, 'optiond'),
(154, 20, 40, 2, 'optiond'),
(63, 20, 40, 2, 'optiond'),
(127, 20, 40, 2, 'optiond'),
(69, 20, 40, 2, 'optiond'),
(64, 20, 40, 2, 'optiond'),
(93, 20, 40, 2, 'optiond'),
(68, 20, 40, 2, 'optiond'),
(116, 20, 41, 2, 'optiond'),
(135, 20, 41, 2, 'optiond'),
(81, 20, 41, 2, 'optiond'),
(94, 20, 41, 2, 'optiond'),
(107, 20, 41, 2, 'optiond'),
(60, 20, 41, 2, 'optiond'),
(152, 20, 41, -0.66, 'optionb'),
(130, 20, 41, 2, 'optiond'),
(77, 20, 41, -0.66, 'optiona'),
(73, 20, 41, 2, 'optiond'),
(36, 20, 41, 2, 'optiond'),
(74, 20, 41, 2, 'optiond'),
(33, 20, 41, -0.66, 'optionc'),
(56, 20, 41, 2, 'optiond'),
(96, 20, 41, 2, 'optiond'),
(117, 20, 41, 2, 'optiond'),
(160, 20, 41, -0.66, 'optionb'),
(153, 20, 41, 2, 'optiond'),
(111, 20, 41, 2, 'optiond'),
(100, 20, 41, 2, 'optiond'),
(22, 20, 41, 2, 'optiond'),
(90, 20, 41, -0.66, 'optionc'),
(67, 20, 41, 2, 'optiond'),
(62, 20, 41, 2, 'optiond'),
(162, 20, 41, 2, 'optiond'),
(44, 20, 41, 2, 'optiond'),
(47, 20, 41, 2, 'optiond'),
(83, 20, 41, 2, 'optiond'),
(145, 20, 41, 2, 'optiond'),
(95, 20, 41, 2, 'optiond'),
(114, 20, 41, 2, 'optiond'),
(20, 20, 41, 2, 'optiond'),
(123, 20, 41, 2, 'optiond'),
(52, 20, 41, 2, 'optiond'),
(79, 20, 41, 2, 'optiond'),
(63, 20, 41, 2, 'optiond'),
(127, 20, 41, 2, 'optiond'),
(69, 20, 41, -0.66, 'optiona'),
(64, 20, 41, 2, 'optiond'),
(68, 20, 41, 2, 'optiond'),
(116, 20, 42, 2, 'optiond'),
(135, 20, 42, 2, 'optiond'),
(85, 20, 42, -0.66, 'optiona'),
(81, 20, 42, 2, 'optiond'),
(70, 20, 42, -0.66, 'optionb'),
(94, 20, 42, 2, 'optiond'),
(107, 20, 42, -0.66, 'optionb'),
(60, 20, 42, 2, 'optiond'),
(138, 20, 42, 2, 'optiond'),
(152, 20, 42, 2, 'optiond'),
(130, 20, 42, 2, 'optiond'),
(77, 20, 42, 2, 'optiond'),
(65, 20, 42, 2, 'optiond'),
(73, 20, 42, 2, 'optiond'),
(108, 20, 42, 2, 'optiond'),
(36, 20, 42, 2, 'optiond'),
(74, 20, 42, -0.66, 'optionb'),
(33, 20, 42, -0.66, 'optionc'),
(101, 20, 42, 2, 'optiond'),
(39, 20, 42, 2, 'optiond'),
(56, 20, 42, 2, 'optiond'),
(78, 20, 42, -0.66, 'optionb'),
(96, 20, 42, -0.66, 'optiona'),
(121, 20, 42, 2, 'optiond'),
(117, 20, 42, 2, 'optiond'),
(160, 20, 42, 2, 'optiond'),
(153, 20, 42, 2, 'optiond'),
(143, 20, 42, 2, 'optiond'),
(100, 20, 42, 2, 'optiond'),
(141, 20, 42, -0.66, 'optiona'),
(102, 20, 42, 2, 'optiond'),
(22, 20, 42, 2, 'optiond'),
(90, 20, 42, 2, 'optiond'),
(67, 20, 42, -0.66, 'optiona'),
(62, 20, 42, 2, 'optiond'),
(162, 20, 42, 2, 'optiond'),
(44, 20, 42, 2, 'optiond'),
(47, 20, 42, -0.66, 'optiona'),
(144, 20, 42, 2, 'optiond'),
(83, 20, 42, 2, 'optiond'),
(145, 20, 42, 2, 'optiond'),
(76, 20, 42, 2, 'optiond'),
(95, 20, 42, -0.66, 'optionb'),
(114, 20, 42, 2, 'optiond'),
(20, 20, 42, 2, 'optiond'),
(115, 20, 42, 2, 'optiond'),
(123, 20, 42, 2, 'optiond'),
(124, 20, 42, 2, 'optiond'),
(75, 20, 42, 2, 'optiond'),
(113, 20, 42, 2, 'optiond'),
(112, 20, 42, 2, 'optiond'),
(52, 20, 42, 2, 'optiond'),
(122, 20, 42, 2, 'optiond'),
(98, 20, 42, -0.66, 'optionb'),
(154, 20, 42, 2, 'optiond'),
(63, 20, 42, 2, 'optiond'),
(127, 20, 42, 2, 'optiond'),
(69, 20, 42, -0.66, 'optionb'),
(64, 20, 42, -0.66, 'optiona'),
(93, 20, 42, 2, 'optiond'),
(68, 20, 42, 2, 'optiond'),
(116, 20, 43, 2, 'optionb'),
(135, 20, 43, 2, 'optionb'),
(85, 20, 43, 2, 'optionb'),
(81, 20, 43, 2, 'optionb'),
(70, 20, 43, 2, 'optionb'),
(94, 20, 43, 2, 'optionb'),
(107, 20, 43, 2, 'optionb'),
(60, 20, 43, 2, 'optionb'),
(138, 20, 43, 2, 'optionb'),
(152, 20, 43, 2, 'optionb'),
(130, 20, 43, 2, 'optionb'),
(77, 20, 43, 2, 'optionb'),
(86, 20, 43, 2, 'optionb'),
(65, 20, 43, 2, 'optionb'),
(73, 20, 43, 2, 'optionb'),
(108, 20, 43, 2, 'optionb'),
(36, 20, 43, 2, 'optionb'),
(74, 20, 43, 2, 'optionb'),
(33, 20, 43, -0.66, 'optiona'),
(101, 20, 43, 2, 'optionb'),
(39, 20, 43, 2, 'optionb'),
(56, 20, 43, 2, 'optionb'),
(78, 20, 43, 2, 'optionb'),
(96, 20, 43, 2, 'optionb'),
(121, 20, 43, 2, 'optionb'),
(117, 20, 43, 2, 'optionb'),
(160, 20, 43, 2, 'optionb'),
(153, 20, 43, 2, 'optionb'),
(143, 20, 43, 2, 'optionb'),
(111, 20, 43, 2, 'optionb'),
(100, 20, 43, 2, 'optionb'),
(141, 20, 43, 2, 'optionb'),
(102, 20, 43, 2, 'optionb'),
(22, 20, 43, 2, 'optionb'),
(90, 20, 43, 2, 'optionb'),
(67, 20, 43, 2, 'optionb'),
(62, 20, 43, 2, 'optionb'),
(162, 20, 43, 2, 'optionb'),
(44, 20, 43, 2, 'optionb'),
(47, 20, 43, 2, 'optionb'),
(144, 20, 43, 2, 'optionb'),
(83, 20, 43, 2, 'optionb'),
(145, 20, 43, 2, 'optionb'),
(76, 20, 43, 2, 'optionb'),
(95, 20, 43, 2, 'optionb'),
(114, 20, 43, 2, 'optionb'),
(20, 20, 43, 2, 'optionb'),
(115, 20, 43, 2, 'optionb'),
(123, 20, 43, 2, 'optionb'),
(124, 20, 43, 2, 'optionb'),
(75, 20, 43, -0.66, 'optiona'),
(113, 20, 43, 2, 'optionb'),
(112, 20, 43, 2, 'optionb'),
(52, 20, 43, 2, 'optionb');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(122, 20, 43, 2, 'optionb'),
(98, 20, 43, 2, 'optionb'),
(79, 20, 43, 2, 'optionb'),
(154, 20, 43, 2, 'optionb'),
(63, 20, 43, -0.66, 'optiond'),
(127, 20, 43, 2, 'optionb'),
(69, 20, 43, -0.66, 'optiona'),
(64, 20, 43, 2, 'optionb'),
(93, 20, 43, 2, 'optionb'),
(68, 20, 43, 2, 'optionb'),
(116, 20, 44, 2, 'optionc'),
(135, 20, 44, -0.66, 'optiona'),
(85, 20, 44, 2, 'optionc'),
(81, 20, 44, 2, 'optionc'),
(70, 20, 44, -0.66, 'optiona'),
(94, 20, 44, 2, 'optionc'),
(107, 20, 44, -0.66, 'optiona'),
(60, 20, 44, -0.66, 'optiona'),
(77, 20, 44, 2, 'optionc'),
(86, 20, 44, -0.66, 'optiona'),
(65, 20, 44, 2, 'optionc'),
(73, 20, 44, 2, 'optionc'),
(36, 20, 44, 2, 'optionc'),
(33, 20, 44, 2, 'optionc'),
(101, 20, 44, 2, 'optionc'),
(39, 20, 44, 2, 'optionc'),
(78, 20, 44, -0.66, 'optiona'),
(96, 20, 44, -0.66, 'optiona'),
(121, 20, 44, 2, 'optionc'),
(117, 20, 44, -0.66, 'optiona'),
(160, 20, 44, -0.66, 'optiona'),
(153, 20, 44, 2, 'optionc'),
(143, 20, 44, -0.66, 'optiona'),
(111, 20, 44, 2, 'optionc'),
(100, 20, 44, -0.66, 'optiona'),
(141, 20, 44, -0.66, 'optiona'),
(102, 20, 44, -0.66, 'optiona'),
(22, 20, 44, 2, 'optionc'),
(90, 20, 44, 2, 'optionc'),
(67, 20, 44, 2, 'optionc'),
(162, 20, 44, 2, 'optionc'),
(44, 20, 44, -0.66, 'optiona'),
(47, 20, 44, -0.66, 'optiona'),
(144, 20, 44, 2, 'optionc'),
(83, 20, 44, 2, 'optionc'),
(145, 20, 44, 2, 'optionc'),
(76, 20, 44, -0.66, 'optiona'),
(95, 20, 44, 2, 'optionc'),
(114, 20, 44, 2, 'optionc'),
(20, 20, 44, -0.66, 'optiona'),
(115, 20, 44, 2, 'optionc'),
(123, 20, 44, 2, 'optionc'),
(124, 20, 44, -0.66, 'optiona'),
(75, 20, 44, -0.66, 'optiona'),
(113, 20, 44, -0.66, 'optiona'),
(112, 20, 44, -0.66, 'optiona'),
(122, 20, 44, 2, 'optionc'),
(98, 20, 44, 2, 'optionc'),
(79, 20, 44, 2, 'optionc'),
(154, 20, 44, 2, 'optionc'),
(63, 20, 44, -0.66, 'optiona'),
(127, 20, 44, -0.66, 'optiond'),
(69, 20, 44, 2, 'optionc'),
(64, 20, 44, -0.66, 'optiona'),
(93, 20, 44, 2, 'optionc'),
(68, 20, 44, 2, 'optionc'),
(116, 20, 45, -0.66, 'optiona'),
(135, 20, 45, 2, 'optionc'),
(85, 20, 45, -0.66, 'optionb'),
(81, 20, 45, 2, 'optionc'),
(70, 20, 45, 2, 'optionc'),
(94, 20, 45, 2, 'optionc'),
(107, 20, 45, 2, 'optionc'),
(60, 20, 45, -0.66, 'optiona'),
(77, 20, 45, -0.66, 'optionb'),
(86, 20, 45, 2, 'optionc'),
(65, 20, 45, -0.66, 'optiona'),
(73, 20, 45, -0.66, 'optiond'),
(108, 20, 45, -0.66, 'optiona'),
(36, 20, 45, 2, 'optionc'),
(74, 20, 45, 2, 'optionc'),
(33, 20, 45, 2, 'optionc'),
(101, 20, 45, 2, 'optionc'),
(39, 20, 45, 2, 'optionc'),
(56, 20, 45, 2, 'optionc'),
(96, 20, 45, 2, 'optionc'),
(121, 20, 45, 2, 'optionc'),
(117, 20, 45, -0.66, 'optiona'),
(153, 20, 45, -0.66, 'optionb'),
(143, 20, 45, 2, 'optionc'),
(111, 20, 45, -0.66, 'optiond'),
(100, 20, 45, -0.66, 'optionb'),
(141, 20, 45, 2, 'optionc'),
(22, 20, 45, -0.66, 'optionb'),
(90, 20, 45, 2, 'optionc'),
(67, 20, 45, 2, 'optionc'),
(62, 20, 45, 2, 'optionc'),
(162, 20, 45, 2, 'optionc'),
(44, 20, 45, -0.66, 'optiona'),
(47, 20, 45, -0.66, 'optiond'),
(144, 20, 45, 2, 'optionc'),
(83, 20, 45, 2, 'optionc'),
(145, 20, 45, 2, 'optionc'),
(95, 20, 45, -0.66, 'optiona'),
(114, 20, 45, -0.66, 'optiona'),
(20, 20, 45, 2, 'optionc'),
(115, 20, 45, 2, 'optionc'),
(123, 20, 45, 2, 'optionc'),
(124, 20, 45, -0.66, 'optiona'),
(75, 20, 45, -0.66, 'optiond'),
(113, 20, 45, -0.66, 'optiona'),
(112, 20, 45, -0.66, 'optiond'),
(52, 20, 45, 2, 'optionc'),
(122, 20, 45, -0.66, 'optiona'),
(98, 20, 45, -0.66, 'optionb'),
(79, 20, 45, -0.66, 'optiond'),
(154, 20, 45, -0.66, 'optiona'),
(63, 20, 45, -0.66, 'optiond'),
(127, 20, 45, 2, 'optionc'),
(93, 20, 45, 2, 'optionc'),
(68, 20, 45, 2, 'optionc'),
(116, 20, 46, 2, 'optiona'),
(85, 20, 46, -0.66, 'optiond'),
(81, 20, 46, 2, 'optiona'),
(107, 20, 46, 2, 'optiona'),
(60, 20, 46, 2, 'optiona'),
(138, 20, 46, 2, 'optiona'),
(152, 20, 46, 2, 'optiona'),
(77, 20, 46, 2, 'optiona'),
(86, 20, 46, 2, 'optiona'),
(65, 20, 46, -0.66, 'optionc'),
(73, 20, 46, 2, 'optiona'),
(36, 20, 46, 2, 'optiona'),
(74, 20, 46, 2, 'optiona'),
(101, 20, 46, 2, 'optiona'),
(39, 20, 46, 2, 'optiona'),
(56, 20, 46, 2, 'optiona'),
(78, 20, 46, 2, 'optiona'),
(96, 20, 46, 2, 'optiona'),
(117, 20, 46, 2, 'optiona'),
(153, 20, 46, -0.66, 'optiond'),
(143, 20, 46, 2, 'optiona'),
(100, 20, 46, 2, 'optiona'),
(141, 20, 46, -0.66, 'optiond'),
(102, 20, 46, 2, 'optiona'),
(22, 20, 46, 2, 'optiona'),
(90, 20, 46, -0.66, 'optiond'),
(67, 20, 46, 2, 'optiona'),
(162, 20, 46, 2, 'optiona'),
(44, 20, 46, -0.66, 'optionb'),
(47, 20, 46, 2, 'optiona'),
(83, 20, 46, 2, 'optiona'),
(145, 20, 46, 2, 'optiona'),
(95, 20, 46, 2, 'optiona'),
(114, 20, 46, -0.66, 'optiond'),
(20, 20, 46, 2, 'optiona'),
(115, 20, 46, 2, 'optiona'),
(123, 20, 46, 2, 'optiona'),
(124, 20, 46, 2, 'optiona'),
(75, 20, 46, -0.66, 'optiond'),
(113, 20, 46, 2, 'optiona'),
(112, 20, 46, 2, 'optiona'),
(52, 20, 46, 2, 'optiona'),
(122, 20, 46, -0.66, 'optiond'),
(98, 20, 46, -0.66, 'optiond'),
(79, 20, 46, 2, 'optiona'),
(154, 20, 46, -0.66, 'optiond'),
(63, 20, 46, 2, 'optiona'),
(127, 20, 46, -0.66, 'optiond'),
(69, 20, 46, 2, 'optiona'),
(93, 20, 46, 2, 'optiona'),
(68, 20, 46, 2, 'optiona'),
(116, 20, 47, 2, 'optionc'),
(135, 20, 47, 2, 'optionc'),
(85, 20, 47, 2, 'optionc'),
(81, 20, 47, 2, 'optionc'),
(70, 20, 47, 2, 'optionc'),
(94, 20, 47, 2, 'optionc'),
(107, 20, 47, 2, 'optionc'),
(60, 20, 47, 2, 'optionc'),
(138, 20, 47, 2, 'optionc'),
(152, 20, 47, 2, 'optionc'),
(130, 20, 47, 2, 'optionc'),
(77, 20, 47, 2, 'optionc'),
(86, 20, 47, 2, 'optionc'),
(65, 20, 47, 2, 'optionc'),
(73, 20, 47, 2, 'optionc'),
(108, 20, 47, 2, 'optionc'),
(36, 20, 47, 2, 'optionc'),
(74, 20, 47, 2, 'optionc'),
(33, 20, 47, 2, 'optionc'),
(101, 20, 47, 2, 'optionc'),
(39, 20, 47, 2, 'optionc'),
(56, 20, 47, 2, 'optionc'),
(78, 20, 47, 2, 'optionc'),
(96, 20, 47, 2, 'optionc'),
(121, 20, 47, 2, 'optionc'),
(117, 20, 47, 2, 'optionc'),
(160, 20, 47, 2, 'optionc'),
(153, 20, 47, -0.66, 'optionb'),
(143, 20, 47, 2, 'optionc'),
(111, 20, 47, 2, 'optionc'),
(100, 20, 47, 2, 'optionc'),
(141, 20, 47, 2, 'optionc'),
(102, 20, 47, 2, 'optionc'),
(22, 20, 47, 2, 'optionc'),
(90, 20, 47, 2, 'optionc'),
(67, 20, 47, 2, 'optionc'),
(62, 20, 47, 2, 'optionc'),
(162, 20, 47, -0.66, 'optionb'),
(44, 20, 47, 2, 'optionc'),
(47, 20, 47, 2, 'optionc'),
(144, 20, 47, 2, 'optionc'),
(83, 20, 47, 2, 'optionc'),
(145, 20, 47, 2, 'optionc'),
(76, 20, 47, 2, 'optionc'),
(95, 20, 47, 2, 'optionc'),
(114, 20, 47, 2, 'optionc'),
(20, 20, 47, 2, 'optionc'),
(115, 20, 47, 2, 'optionc'),
(123, 20, 47, 2, 'optionc'),
(124, 20, 47, 2, 'optionc'),
(75, 20, 47, 2, 'optionc'),
(113, 20, 47, 2, 'optionc'),
(112, 20, 47, 2, 'optionc'),
(52, 20, 47, 2, 'optionc'),
(122, 20, 47, 2, 'optionc'),
(98, 20, 47, 2, 'optionc'),
(79, 20, 47, 2, 'optionc'),
(154, 20, 47, 2, 'optionc'),
(63, 20, 47, 2, 'optionc'),
(127, 20, 47, 2, 'optionc'),
(69, 20, 47, 2, 'optionc'),
(64, 20, 47, 2, 'optionc'),
(93, 20, 47, 2, 'optionc'),
(68, 20, 47, 2, 'optionc'),
(116, 20, 48, 2, 'optiond'),
(135, 20, 48, 2, 'optiond'),
(85, 20, 48, 2, 'optiond'),
(81, 20, 48, 2, 'optiond'),
(70, 20, 48, 2, 'optiond'),
(94, 20, 48, 2, 'optiond'),
(107, 20, 48, 2, 'optiond'),
(152, 20, 48, 2, 'optiond'),
(77, 20, 48, 2, 'optiond'),
(65, 20, 48, 2, 'optiond'),
(73, 20, 48, 2, 'optiond'),
(36, 20, 48, 2, 'optiond'),
(74, 20, 48, 2, 'optiond'),
(101, 20, 48, 2, 'optiond'),
(39, 20, 48, 2, 'optiond'),
(56, 20, 48, 2, 'optiond'),
(96, 20, 48, 2, 'optiond'),
(121, 20, 48, 2, 'optiond'),
(117, 20, 48, 2, 'optiond'),
(153, 20, 48, 2, 'optiond'),
(143, 20, 48, 2, 'optiond'),
(111, 20, 48, 2, 'optiond'),
(100, 20, 48, 2, 'optiond'),
(141, 20, 48, 2, 'optiond'),
(102, 20, 48, 2, 'optiond'),
(22, 20, 48, 2, 'optiond'),
(90, 20, 48, 2, 'optiond'),
(67, 20, 48, 2, 'optiond'),
(62, 20, 48, 2, 'optiond'),
(144, 20, 48, 2, 'optiond'),
(83, 20, 48, 2, 'optiond'),
(145, 20, 48, 2, 'optiond'),
(76, 20, 48, 2, 'optiond'),
(95, 20, 48, 2, 'optiond'),
(114, 20, 48, 2, 'optiond'),
(20, 20, 48, 2, 'optiond'),
(115, 20, 48, 2, 'optiond'),
(123, 20, 48, 2, 'optiond'),
(75, 20, 48, 2, 'optiond'),
(113, 20, 48, 2, 'optiond'),
(112, 20, 48, 2, 'optiond'),
(52, 20, 48, 2, 'optiond'),
(98, 20, 48, 2, 'optiond'),
(79, 20, 48, 2, 'optiond'),
(63, 20, 48, -0.66, 'optionb'),
(127, 20, 48, 2, 'optiond'),
(69, 20, 48, -0.66, 'optiona'),
(64, 20, 48, 2, 'optiond'),
(93, 20, 48, 2, 'optiond'),
(68, 20, 48, 2, 'optiond'),
(116, 20, 49, 2, 'optiond'),
(135, 20, 49, -0.66, 'optiona'),
(81, 20, 49, 2, 'optiond'),
(94, 20, 49, 2, 'optiond'),
(107, 20, 49, -0.66, 'optionb'),
(86, 20, 49, -0.66, 'optiona'),
(65, 20, 49, 2, 'optiond'),
(73, 20, 49, 2, 'optiond'),
(108, 20, 49, -0.66, 'optiona'),
(36, 20, 49, 2, 'optiond'),
(101, 20, 49, -0.66, 'optiona'),
(39, 20, 49, -0.66, 'optiona'),
(56, 20, 49, 2, 'optiond'),
(96, 20, 49, 2, 'optiond'),
(121, 20, 49, 2, 'optiond'),
(117, 20, 49, 2, 'optiond'),
(153, 20, 49, 2, 'optiond'),
(143, 20, 49, -0.66, 'optiona'),
(111, 20, 49, 2, 'optiond'),
(22, 20, 49, 2, 'optiond'),
(67, 20, 49, -0.66, 'optiona'),
(62, 20, 49, 2, 'optiond'),
(162, 20, 49, 2, 'optiond'),
(44, 20, 49, 2, 'optiond'),
(144, 20, 49, -0.66, 'optiona'),
(145, 20, 49, -0.66, 'optionb'),
(76, 20, 49, -0.66, 'optionc'),
(95, 20, 49, 2, 'optiond'),
(114, 20, 49, 2, 'optiond'),
(20, 20, 49, -0.66, 'optiona'),
(115, 20, 49, -0.66, 'optiona'),
(123, 20, 49, -0.66, 'optionc'),
(52, 20, 49, 2, 'optiond'),
(122, 20, 49, -0.66, 'optiona'),
(79, 20, 49, -0.66, 'optionc'),
(127, 20, 49, -0.66, 'optiona'),
(64, 20, 49, -0.66, 'optionc'),
(93, 20, 49, 2, 'optiond'),
(68, 20, 49, 2, 'optiond'),
(116, 20, 50, 2, 'optiond'),
(135, 20, 50, -0.66, 'optionb'),
(85, 20, 50, 2, 'optiond'),
(81, 20, 50, 2, 'optiond'),
(70, 20, 50, -0.66, 'optionb'),
(94, 20, 50, 2, 'optiond'),
(107, 20, 50, -0.66, 'optionb'),
(60, 20, 50, 2, 'optiond'),
(138, 20, 50, 2, 'optiond'),
(152, 20, 50, 2, 'optiond'),
(130, 20, 50, -0.66, 'optionc'),
(77, 20, 50, 2, 'optiond'),
(86, 20, 50, 2, 'optiond'),
(65, 20, 50, 2, 'optiond'),
(73, 20, 50, -0.66, 'optionb'),
(108, 20, 50, -0.66, 'optionb'),
(36, 20, 50, 2, 'optiond'),
(74, 20, 50, -0.66, 'optionb'),
(33, 20, 50, 2, 'optiond'),
(101, 20, 50, 2, 'optiond'),
(39, 20, 50, 2, 'optiond'),
(56, 20, 50, 2, 'optiond'),
(78, 20, 50, -0.66, 'optionb'),
(96, 20, 50, 2, 'optiond'),
(117, 20, 50, -0.66, 'optionb'),
(160, 20, 50, 2, 'optiond'),
(153, 20, 50, -0.66, 'optionc'),
(143, 20, 50, 2, 'optiond'),
(111, 20, 50, 2, 'optiond'),
(100, 20, 50, 2, 'optiond'),
(22, 20, 50, 2, 'optiond'),
(90, 20, 50, 2, 'optiond'),
(67, 20, 50, 2, 'optiond'),
(62, 20, 50, 2, 'optiond'),
(162, 20, 50, 2, 'optiond'),
(44, 20, 50, -0.66, 'optionc'),
(144, 20, 50, -0.66, 'optionb'),
(83, 20, 50, -0.66, 'optionb'),
(145, 20, 50, -0.66, 'optionc'),
(76, 20, 50, -0.66, 'optionc'),
(95, 20, 50, 2, 'optiond'),
(114, 20, 50, 2, 'optiond'),
(20, 20, 50, 2, 'optiond'),
(115, 20, 50, -0.66, 'optionb'),
(123, 20, 50, 2, 'optiond'),
(124, 20, 50, 2, 'optiond'),
(75, 20, 50, 2, 'optiond'),
(113, 20, 50, 2, 'optiond'),
(112, 20, 50, 2, 'optiond'),
(52, 20, 50, 2, 'optiond'),
(122, 20, 50, 2, 'optiond'),
(98, 20, 50, 2, 'optiond'),
(79, 20, 50, -0.66, 'optionc'),
(154, 20, 50, -0.66, 'optionb'),
(63, 20, 50, -0.66, 'optionb'),
(127, 20, 50, -0.66, 'optionc'),
(69, 20, 50, -0.66, 'optionc'),
(64, 20, 50, -0.66, 'optionb'),
(93, 20, 50, 2, 'optiond'),
(68, 20, 50, 2, 'optiond'),
(116, 20, 51, 2, 'optionb'),
(135, 20, 51, -0.66, 'optiona'),
(85, 20, 51, -0.66, 'optionc'),
(81, 20, 51, 2, 'optionb'),
(94, 20, 51, -0.66, 'optiona'),
(107, 20, 51, 2, 'optionb'),
(60, 20, 51, -0.66, 'optiona'),
(138, 20, 51, -0.66, 'optiona'),
(152, 20, 51, -0.66, 'optiona'),
(77, 20, 51, -0.66, 'optiona'),
(86, 20, 51, -0.66, 'optiona'),
(65, 20, 51, -0.66, 'optiona'),
(73, 20, 51, -0.66, 'optiona'),
(36, 20, 51, 2, 'optionb'),
(74, 20, 51, -0.66, 'optiona'),
(33, 20, 51, 2, 'optionb'),
(101, 20, 51, -0.66, 'optiona'),
(96, 20, 51, -0.66, 'optiona'),
(117, 20, 51, 2, 'optionb'),
(153, 20, 51, 2, 'optionb'),
(111, 20, 51, 2, 'optionb'),
(102, 20, 51, -0.66, 'optiona'),
(22, 20, 51, 2, 'optionb'),
(90, 20, 51, 2, 'optionb'),
(62, 20, 51, 2, 'optionb'),
(162, 20, 51, 2, 'optionb'),
(44, 20, 51, -0.66, 'optiona'),
(144, 20, 51, 2, 'optionb'),
(83, 20, 51, -0.66, 'optionc'),
(145, 20, 51, -0.66, 'optiona'),
(76, 20, 51, -0.66, 'optiona'),
(95, 20, 51, 2, 'optionb'),
(114, 20, 51, -0.66, 'optionc'),
(20, 20, 51, -0.66, 'optiona'),
(115, 20, 51, 2, 'optionb'),
(123, 20, 51, -0.66, 'optiona'),
(124, 20, 51, -0.66, 'optiona'),
(75, 20, 51, -0.66, 'optiona'),
(52, 20, 51, 2, 'optionb'),
(122, 20, 51, 2, 'optionb'),
(98, 20, 51, -0.66, 'optionc'),
(79, 20, 51, -0.66, 'optiond'),
(154, 20, 51, -0.66, 'optionc'),
(63, 20, 51, -0.66, 'optiona'),
(127, 20, 51, 2, 'optionb'),
(69, 20, 51, -0.66, 'optionc'),
(93, 20, 51, -0.66, 'optiona'),
(68, 20, 51, 2, 'optionb'),
(116, 20, 52, -0.66, 'optiond'),
(81, 20, 52, 2, 'optionc'),
(70, 20, 52, 2, 'optionc'),
(94, 20, 52, 2, 'optionc'),
(86, 20, 52, -0.66, 'optiond'),
(65, 20, 52, -0.66, 'optiond'),
(73, 20, 52, 2, 'optionc'),
(108, 20, 52, -0.66, 'optionb'),
(36, 20, 52, -0.66, 'optionb'),
(101, 20, 52, -0.66, 'optiond'),
(39, 20, 52, -0.66, 'optiond'),
(56, 20, 52, -0.66, 'optiond'),
(153, 20, 52, -0.66, 'optiond'),
(22, 20, 52, -0.66, 'optiond'),
(90, 20, 52, -0.66, 'optionb'),
(67, 20, 52, -0.66, 'optiond'),
(62, 20, 52, -0.66, 'optionb'),
(162, 20, 52, -0.66, 'optionb'),
(83, 20, 52, -0.66, 'optionb'),
(145, 20, 52, -0.66, 'optionb'),
(95, 20, 52, -0.66, 'optionb'),
(114, 20, 52, -0.66, 'optiond'),
(123, 20, 52, 2, 'optionc'),
(124, 20, 52, -0.66, 'optionb'),
(52, 20, 52, -0.66, 'optionb'),
(122, 20, 52, -0.66, 'optionb'),
(98, 20, 52, -0.66, 'optiond'),
(127, 20, 52, -0.66, 'optionb'),
(64, 20, 52, -0.66, 'optiond'),
(68, 20, 52, 2, 'optionc'),
(116, 20, 53, 2, 'optiona'),
(81, 20, 53, 2, 'optiona'),
(70, 20, 53, -0.66, 'optionb'),
(94, 20, 53, -0.66, 'optionb'),
(86, 20, 53, -0.66, 'optionc'),
(65, 20, 53, -0.66, 'optionc'),
(73, 20, 53, 2, 'optiona'),
(108, 20, 53, -0.66, 'optionb'),
(36, 20, 53, 2, 'optiona'),
(101, 20, 53, 2, 'optiona'),
(56, 20, 53, 2, 'optiona'),
(96, 20, 53, -0.66, 'optionb'),
(121, 20, 53, -0.66, 'optionb'),
(153, 20, 53, -0.66, 'optionc'),
(143, 20, 53, -0.66, 'optiond'),
(22, 20, 53, -0.66, 'optionb'),
(67, 20, 53, -0.66, 'optionb'),
(62, 20, 53, -0.66, 'optionb'),
(47, 20, 53, -0.66, 'optionb'),
(83, 20, 53, -0.66, 'optionb'),
(95, 20, 53, 2, 'optiona'),
(20, 20, 53, -0.66, 'optionb'),
(123, 20, 53, 2, 'optiona'),
(124, 20, 53, 2, 'optiona'),
(52, 20, 53, -0.66, 'optiond'),
(122, 20, 53, -0.66, 'optiond'),
(98, 20, 53, -0.66, 'optionb'),
(127, 20, 53, 2, 'optiona'),
(93, 20, 53, -0.66, 'optionb'),
(68, 20, 53, -0.66, 'optionb'),
(116, 20, 54, 2, 'optionc'),
(135, 20, 54, 2, 'optionc'),
(85, 20, 54, -0.66, 'optiond'),
(81, 20, 54, 2, 'optionc'),
(70, 20, 54, 2, 'optionc'),
(94, 20, 54, 2, 'optionc'),
(107, 20, 54, 2, 'optionc'),
(60, 20, 54, -0.66, 'optiond'),
(152, 20, 54, -0.66, 'optiond'),
(86, 20, 54, 2, 'optionc'),
(65, 20, 54, 2, 'optionc'),
(73, 20, 54, 2, 'optionc'),
(108, 20, 54, 2, 'optionc'),
(36, 20, 54, 2, 'optionc'),
(101, 20, 54, 2, 'optionc'),
(56, 20, 54, 2, 'optionc'),
(96, 20, 54, 2, 'optionc'),
(117, 20, 54, -0.66, 'optiond'),
(143, 20, 54, 2, 'optionc'),
(111, 20, 54, 2, 'optionc'),
(100, 20, 54, 2, 'optionc'),
(22, 20, 54, 2, 'optionc'),
(90, 20, 54, 2, 'optionc'),
(67, 20, 54, 2, 'optionc'),
(62, 20, 54, 2, 'optionc'),
(162, 20, 54, 2, 'optionc'),
(144, 20, 54, -0.66, 'optiond'),
(83, 20, 54, -0.66, 'optionb'),
(95, 20, 54, 2, 'optionc'),
(114, 20, 54, 2, 'optionc'),
(20, 20, 54, 2, 'optionc'),
(115, 20, 54, -0.66, 'optiond'),
(123, 20, 54, 2, 'optionc'),
(75, 20, 54, -0.66, 'optiona'),
(113, 20, 54, 2, 'optionc'),
(98, 20, 54, 2, 'optionc'),
(79, 20, 54, 2, 'optionc'),
(154, 20, 54, 2, 'optionc'),
(63, 20, 54, -0.66, 'optionb'),
(64, 20, 54, -0.66, 'optiond'),
(93, 20, 54, -0.66, 'optiond'),
(68, 20, 54, 2, 'optionc'),
(116, 20, 55, 2, 'optiona'),
(85, 20, 55, 2, 'optiona'),
(81, 20, 55, 2, 'optiona'),
(70, 20, 55, -0.66, 'optionc'),
(94, 20, 55, -0.66, 'optiond'),
(107, 20, 55, -0.66, 'optionc'),
(60, 20, 55, 2, 'optiona'),
(65, 20, 55, 2, 'optiona'),
(73, 20, 55, 2, 'optiona'),
(108, 20, 55, 2, 'optiona'),
(36, 20, 55, 2, 'optiona'),
(74, 20, 55, -0.66, 'optionb'),
(33, 20, 55, -0.66, 'optionb'),
(101, 20, 55, 2, 'optiona'),
(39, 20, 55, 2, 'optiona'),
(78, 20, 55, -0.66, 'optionb'),
(121, 20, 55, 2, 'optiona'),
(117, 20, 55, -0.66, 'optionc'),
(160, 20, 55, -0.66, 'optionc'),
(153, 20, 55, -0.66, 'optionc'),
(143, 20, 55, 2, 'optiona'),
(111, 20, 55, 2, 'optiona'),
(100, 20, 55, 2, 'optiona'),
(22, 20, 55, 2, 'optiona'),
(90, 20, 55, 2, 'optiona'),
(67, 20, 55, 2, 'optiona'),
(62, 20, 55, -0.66, 'optionc'),
(162, 20, 55, -0.66, 'optionb'),
(47, 20, 55, 2, 'optiona'),
(83, 20, 55, 2, 'optiona'),
(145, 20, 55, 2, 'optiona'),
(20, 20, 55, 2, 'optiona'),
(75, 20, 55, 2, 'optiona'),
(113, 20, 55, -0.66, 'optionb'),
(112, 20, 55, 2, 'optiona'),
(122, 20, 55, -0.66, 'optionc'),
(79, 20, 55, -0.66, 'optionb'),
(154, 20, 55, -0.66, 'optionb'),
(63, 20, 55, -0.66, 'optionc'),
(64, 20, 55, 2, 'optiona'),
(93, 20, 55, -0.66, 'optionb'),
(116, 20, 56, 1, 'optionc'),
(81, 20, 56, 1, 'optionc'),
(94, 20, 56, 1, 'optionc'),
(77, 20, 56, 1, 'optionc'),
(86, 20, 56, 1, 'optionc'),
(65, 20, 56, 1, 'optionc'),
(73, 20, 56, 1, 'optionc'),
(108, 20, 56, 1, 'optionc'),
(36, 20, 56, 1, 'optionc'),
(74, 20, 56, 1, 'optionc'),
(33, 20, 56, -0.33, 'optiond'),
(101, 20, 56, -0.33, 'optiond'),
(39, 20, 56, 1, 'optionc'),
(78, 20, 56, 1, 'optionc'),
(121, 20, 56, 1, 'optionc'),
(117, 20, 56, -0.33, 'optiond'),
(160, 20, 56, 1, 'optionc'),
(153, 20, 56, 1, 'optionc'),
(143, 20, 56, 1, 'optionc'),
(111, 20, 56, 1, 'optionc'),
(100, 20, 56, 1, 'optionc'),
(141, 20, 56, 1, 'optionc'),
(22, 20, 56, 1, 'optionc'),
(90, 20, 56, -0.33, 'optiona'),
(162, 20, 56, 1, 'optionc'),
(44, 20, 56, -0.33, 'optionb'),
(144, 20, 56, 1, 'optionc'),
(83, 20, 56, 1, 'optionc'),
(145, 20, 56, 1, 'optionc'),
(95, 20, 56, 1, 'optionc'),
(114, 20, 56, -0.33, 'optiond'),
(20, 20, 56, 1, 'optionc'),
(115, 20, 56, -0.33, 'optiona'),
(123, 20, 56, 1, 'optionc'),
(113, 20, 56, 1, 'optionc'),
(112, 20, 56, 1, 'optionc'),
(52, 20, 56, -0.33, 'optionb'),
(122, 20, 56, 1, 'optionc'),
(63, 20, 56, -0.33, 'optiona'),
(127, 20, 56, 1, 'optionc'),
(69, 20, 56, 1, 'optionc'),
(93, 20, 56, 1, 'optionc'),
(68, 20, 56, 1, 'optionc'),
(77, 20, 57, -0.33, 'optiona'),
(36, 20, 57, -0.33, 'optiond'),
(33, 20, 57, -0.33, 'optiond'),
(78, 20, 57, -0.33, 'optiond'),
(115, 20, 57, -0.33, 'optiona'),
(69, 20, 57, -0.33, 'optiond'),
(116, 20, 58, 1, 'optionc'),
(81, 20, 58, -0.33, 'optionb'),
(94, 20, 58, 1, 'optionc'),
(77, 20, 58, 1, 'optionc'),
(86, 20, 58, 1, 'optionc'),
(65, 20, 58, 1, 'optionc'),
(73, 20, 58, 1, 'optionc'),
(108, 20, 58, 1, 'optionc'),
(36, 20, 58, 1, 'optionc'),
(74, 20, 58, 1, 'optionc'),
(33, 20, 58, 1, 'optionc'),
(101, 20, 58, 1, 'optionc'),
(39, 20, 58, 1, 'optionc'),
(56, 20, 58, 1, 'optionc'),
(78, 20, 58, 1, 'optionc'),
(121, 20, 58, 1, 'optionc'),
(117, 20, 58, 1, 'optionc'),
(160, 20, 58, -0.33, 'optiond'),
(153, 20, 58, 1, 'optionc'),
(143, 20, 58, 1, 'optionc'),
(111, 20, 58, 1, 'optionc'),
(141, 20, 58, 1, 'optionc'),
(102, 20, 58, 1, 'optionc'),
(67, 20, 58, 1, 'optionc'),
(162, 20, 58, 1, 'optionc'),
(44, 20, 58, -0.33, 'optiond'),
(144, 20, 58, 1, 'optionc'),
(83, 20, 58, 1, 'optionc'),
(145, 20, 58, 1, 'optionc'),
(95, 20, 58, 1, 'optionc'),
(114, 20, 58, 1, 'optionc'),
(20, 20, 58, 1, 'optionc'),
(115, 20, 58, -0.33, 'optiond'),
(123, 20, 58, 1, 'optionc'),
(124, 20, 58, 1, 'optionc'),
(113, 20, 58, 1, 'optionc'),
(112, 20, 58, 1, 'optionc'),
(52, 20, 58, 1, 'optionc'),
(122, 20, 58, 1, 'optionc'),
(98, 20, 58, 1, 'optionc'),
(63, 20, 58, 1, 'optionc'),
(68, 20, 58, 1, 'optionc'),
(116, 20, 59, 1, 'optiond'),
(135, 20, 59, -0.33, 'optiona'),
(85, 20, 59, -0.33, 'optiona'),
(81, 20, 59, 1, 'optiond'),
(70, 20, 59, -0.33, 'optiona'),
(107, 20, 59, -0.33, 'optiona'),
(60, 20, 59, -0.33, 'optionc'),
(130, 20, 59, -0.33, 'optiona'),
(77, 20, 59, -0.33, 'optionc'),
(86, 20, 59, -0.33, 'optiona'),
(73, 20, 59, 1, 'optiond'),
(108, 20, 59, -0.33, 'optionc'),
(36, 20, 59, 1, 'optiond'),
(33, 20, 59, -0.33, 'optionc'),
(101, 20, 59, 1, 'optiond'),
(39, 20, 59, -0.33, 'optiona'),
(78, 20, 59, -0.33, 'optiona'),
(96, 20, 59, 1, 'optiond'),
(121, 20, 59, 1, 'optiond'),
(117, 20, 59, -0.33, 'optionc'),
(160, 20, 59, -0.33, 'optiona'),
(143, 20, 59, -0.33, 'optiona'),
(100, 20, 59, -0.33, 'optiona'),
(102, 20, 59, 1, 'optiond'),
(22, 20, 59, 1, 'optiond'),
(90, 20, 59, 1, 'optiond'),
(62, 20, 59, 1, 'optiond'),
(162, 20, 59, -0.33, 'optiona'),
(47, 20, 59, -0.33, 'optionc'),
(144, 20, 59, -0.33, 'optionc'),
(83, 20, 59, -0.33, 'optiona'),
(76, 20, 59, 1, 'optiond'),
(95, 20, 59, 1, 'optiond'),
(124, 20, 59, -0.33, 'optiona'),
(112, 20, 59, 1, 'optiond'),
(122, 20, 59, 1, 'optiond'),
(98, 20, 59, 1, 'optiond'),
(154, 20, 59, -0.33, 'optiona'),
(63, 20, 59, -0.33, 'optionc'),
(69, 20, 59, -0.33, 'optiona'),
(64, 20, 59, -0.33, 'optiona'),
(68, 20, 59, -0.33, 'optiona'),
(116, 20, 60, 1, 'optiond'),
(81, 20, 60, 1, 'optiond'),
(94, 20, 60, 1, 'optiond'),
(77, 20, 60, 1, 'optiond'),
(65, 20, 60, -0.33, 'optionb'),
(73, 20, 60, 1, 'optiond'),
(108, 20, 60, 1, 'optiond'),
(36, 20, 60, 1, 'optiond'),
(33, 20, 60, 1, 'optiond'),
(101, 20, 60, 1, 'optiond'),
(39, 20, 60, 1, 'optiond'),
(56, 20, 60, -0.33, 'optionb'),
(78, 20, 60, 1, 'optiond'),
(121, 20, 60, 1, 'optiond'),
(117, 20, 60, 1, 'optiond'),
(160, 20, 60, -0.33, 'optionc'),
(143, 20, 60, 1, 'optiond'),
(141, 20, 60, -0.33, 'optionb'),
(22, 20, 60, 1, 'optiond'),
(90, 20, 60, -0.33, 'optionc'),
(162, 20, 60, 1, 'optiond'),
(144, 20, 60, 1, 'optiond'),
(95, 20, 60, 1, 'optiond'),
(114, 20, 60, -0.33, 'optionb'),
(20, 20, 60, -0.33, 'optionb'),
(115, 20, 60, 1, 'optiond'),
(113, 20, 60, 1, 'optiond'),
(52, 20, 60, 1, 'optiond'),
(154, 20, 60, -0.33, 'optionc'),
(69, 20, 60, -0.33, 'optionc'),
(93, 20, 60, -0.33, 'optiona'),
(68, 20, 60, 1, 'optiond'),
(116, 20, 61, 2, 'optiona'),
(85, 20, 61, -0.66, 'optionb'),
(81, 20, 61, 2, 'optiona'),
(70, 20, 61, -0.66, 'optionb'),
(94, 20, 61, -0.66, 'optionb'),
(107, 20, 61, 2, 'optiona'),
(60, 20, 61, 2, 'optiona'),
(138, 20, 61, 2, 'optiona'),
(77, 20, 61, 2, 'optiona'),
(86, 20, 61, 2, 'optiona'),
(73, 20, 61, 2, 'optiona'),
(36, 20, 61, 2, 'optiona'),
(74, 20, 61, 2, 'optiona'),
(101, 20, 61, 2, 'optiona'),
(39, 20, 61, 2, 'optiona'),
(56, 20, 61, 2, 'optiona'),
(78, 20, 61, 2, 'optiona'),
(96, 20, 61, 2, 'optiona'),
(121, 20, 61, -0.66, 'optionc'),
(117, 20, 61, 2, 'optiona'),
(160, 20, 61, 2, 'optiona'),
(153, 20, 61, 2, 'optiona'),
(143, 20, 61, 2, 'optiona'),
(111, 20, 61, 2, 'optiona'),
(100, 20, 61, 2, 'optiona'),
(22, 20, 61, 2, 'optiona'),
(90, 20, 61, 2, 'optiona'),
(67, 20, 61, 2, 'optiona'),
(62, 20, 61, 2, 'optiona'),
(162, 20, 61, 2, 'optiona'),
(44, 20, 61, -0.66, 'optionb'),
(83, 20, 61, 2, 'optiona'),
(145, 20, 61, 2, 'optiona'),
(95, 20, 61, 2, 'optiona'),
(20, 20, 61, 2, 'optiona'),
(123, 20, 61, 2, 'optiona'),
(124, 20, 61, 2, 'optiona'),
(75, 20, 61, 2, 'optiona'),
(113, 20, 61, 2, 'optiona'),
(52, 20, 61, 2, 'optiona'),
(122, 20, 61, -0.66, 'optionc'),
(98, 20, 61, 2, 'optiona'),
(154, 20, 61, 2, 'optiona'),
(63, 20, 61, 2, 'optiona'),
(69, 20, 61, 2, 'optiona'),
(64, 20, 61, -0.66, 'optionb'),
(68, 20, 61, 2, 'optiona'),
(116, 20, 62, 2, 'optionb'),
(81, 20, 62, 2, 'optionb'),
(70, 20, 62, 2, 'optionb'),
(77, 20, 62, -0.66, 'optiond'),
(73, 20, 62, 2, 'optionb'),
(36, 20, 62, -0.66, 'optiond'),
(101, 20, 62, -0.66, 'optiona'),
(96, 20, 62, 2, 'optionb'),
(141, 20, 62, -0.66, 'optiond'),
(162, 20, 62, 2, 'optionb'),
(145, 20, 62, 2, 'optionb'),
(95, 20, 62, -0.66, 'optiona'),
(123, 20, 62, -0.66, 'optiond'),
(75, 20, 62, -0.66, 'optiona'),
(154, 20, 62, 2, 'optionb'),
(116, 20, 63, 2, 'optionc'),
(81, 20, 63, -0.66, 'optiond'),
(70, 20, 63, -0.66, 'optionb'),
(94, 20, 63, 2, 'optionc'),
(107, 20, 63, 2, 'optionc'),
(77, 20, 63, 2, 'optionc'),
(86, 20, 63, -0.66, 'optiond'),
(65, 20, 63, 2, 'optionc'),
(36, 20, 63, 2, 'optionc'),
(39, 20, 63, -0.66, 'optionb'),
(56, 20, 63, 2, 'optionc'),
(96, 20, 63, 2, 'optionc'),
(153, 20, 63, 2, 'optionc'),
(67, 20, 63, 2, 'optionc'),
(83, 20, 63, 2, 'optionc'),
(95, 20, 63, 2, 'optionc'),
(123, 20, 63, -0.66, 'optiona'),
(124, 20, 63, -0.66, 'optiond'),
(75, 20, 63, -0.66, 'optiona'),
(52, 20, 63, 2, 'optionc'),
(98, 20, 63, 2, 'optionc'),
(154, 20, 63, -0.66, 'optiona'),
(63, 20, 63, 2, 'optionc'),
(116, 20, 65, 2, 'optionb'),
(135, 20, 65, 2, 'optionb'),
(81, 20, 65, 2, 'optionb'),
(94, 20, 65, 2, 'optionb'),
(107, 20, 65, -0.66, 'optiond'),
(152, 20, 65, 2, 'optionb'),
(77, 20, 65, 2, 'optionb'),
(86, 20, 65, 2, 'optionb'),
(65, 20, 65, 2, 'optionb'),
(73, 20, 65, 2, 'optionb'),
(108, 20, 65, 2, 'optionb'),
(36, 20, 65, 2, 'optionb'),
(74, 20, 65, 2, 'optionb'),
(33, 20, 65, 2, 'optionb'),
(101, 20, 65, 2, 'optionb'),
(39, 20, 65, 2, 'optionb'),
(56, 20, 65, 2, 'optionb'),
(78, 20, 65, 2, 'optionb'),
(96, 20, 65, 2, 'optionb'),
(121, 20, 65, 2, 'optionb'),
(117, 20, 65, 2, 'optionb'),
(160, 20, 65, 2, 'optionb'),
(153, 20, 65, 2, 'optionb'),
(143, 20, 65, 2, 'optionb'),
(111, 20, 65, 2, 'optionb'),
(141, 20, 65, 2, 'optionb'),
(102, 20, 65, 2, 'optionb'),
(22, 20, 65, 2, 'optionb'),
(90, 20, 65, 2, 'optionb'),
(67, 20, 65, 2, 'optionb'),
(162, 20, 65, 2, 'optionb'),
(44, 20, 65, -0.66, 'optiond'),
(47, 20, 65, 2, 'optionb'),
(144, 20, 65, 2, 'optionb'),
(83, 20, 65, 2, 'optionb'),
(145, 20, 65, 2, 'optionb'),
(76, 20, 65, -0.66, 'optionc'),
(95, 20, 65, 2, 'optionb'),
(114, 20, 65, 2, 'optionb'),
(20, 20, 65, 2, 'optionb'),
(115, 20, 65, 2, 'optionb'),
(123, 20, 65, 2, 'optionb'),
(124, 20, 65, 2, 'optionb'),
(75, 20, 65, 2, 'optionb'),
(112, 20, 65, 2, 'optionb'),
(122, 20, 65, 2, 'optionb'),
(98, 20, 65, -0.66, 'optiond'),
(63, 20, 65, 2, 'optionb'),
(69, 20, 65, 2, 'optionb'),
(93, 20, 65, 2, 'optionb'),
(68, 20, 65, 2, 'optionb'),
(66, 16, 1, 1, 'optionc'),
(66, 16, 3, -0.33, 'optionb'),
(66, 16, 6, 1, 'optionb'),
(66, 16, 9, 1, 'optionc'),
(66, 16, 10, -0.33, 'optiona'),
(66, 16, 13, -0.33, 'optiona'),
(66, 16, 15, 1, 'optionc'),
(66, 16, 16, 1, 'optiond'),
(66, 16, 19, 1, 'optiond'),
(66, 16, 20, 1, 'optiona'),
(66, 16, 23, -0.33, 'optionb'),
(66, 16, 25, -0.33, 'optiond'),
(66, 16, 28, -0.66, 'optiona'),
(66, 16, 29, -0.66, 'optiona'),
(66, 16, 35, 2, 'optionb'),
(66, 16, 36, 2, 'optionc'),
(66, 16, 37, 2, 'optionb'),
(66, 16, 43, 2, 'optiona'),
(66, 16, 44, 2, 'optiond'),
(66, 16, 45, 2, 'optiona'),
(66, 16, 47, -0.66, 'optiona'),
(66, 16, 50, 2, 'optiona'),
(66, 16, 51, -0.66, 'optionb'),
(66, 16, 56, 1, 'optiond'),
(66, 16, 60, 1, 'optionc'),
(66, 16, 62, 2, 'optiond'),
(87, 20, 1, 1, 'optionb'),
(87, 20, 2, 1, 'optionc'),
(87, 20, 3, 1, 'optionc'),
(87, 20, 4, 1, 'optionc'),
(87, 20, 5, 1, 'optiona'),
(87, 20, 6, 1, 'optionc'),
(87, 20, 7, 1, 'optionc'),
(87, 20, 8, -0.33, 'optionc'),
(87, 20, 9, 1, 'optionc'),
(87, 20, 11, -0.33, 'optiond'),
(87, 20, 12, 1, 'optionc'),
(87, 20, 13, 1, 'optiona'),
(87, 20, 14, 1, 'optiona'),
(87, 20, 16, 1, 'optionc'),
(87, 20, 17, -0.33, 'optionc'),
(87, 20, 18, 1, 'optiona'),
(87, 20, 19, 1, 'optionb'),
(87, 20, 20, 1, 'optiona'),
(87, 20, 21, 1, 'optionc'),
(87, 20, 22, -0.33, 'optiona'),
(87, 20, 23, -0.33, 'optiond'),
(87, 20, 24, 1, 'optiona'),
(87, 20, 25, 1, 'optionb'),
(87, 20, 26, 2, 'optionc'),
(87, 20, 28, -0.66, 'optionc'),
(87, 20, 29, -0.66, 'optiona'),
(87, 20, 32, 2, 'optionb'),
(87, 20, 33, 2, 'optiond'),
(87, 20, 35, -0.66, 'optiond'),
(87, 20, 38, 2, 'optiond'),
(87, 20, 39, 2, 'optionb'),
(87, 20, 40, -0.66, 'optionb'),
(87, 20, 42, -0.66, 'optionc'),
(87, 20, 43, 2, 'optionb'),
(87, 20, 45, -0.66, 'optiona'),
(87, 20, 46, 2, 'optiona'),
(87, 20, 47, 2, 'optionc'),
(87, 20, 48, 2, 'optiond'),
(87, 20, 50, -0.66, 'optionb'),
(87, 20, 51, -0.66, 'optiona'),
(87, 20, 52, -0.66, 'optiond'),
(87, 20, 56, -0.33, 'optiona'),
(87, 20, 57, -0.33, 'optiond'),
(87, 20, 58, 1, 'optionc'),
(87, 20, 59, -0.33, 'optionc'),
(87, 20, 60, 1, 'optiond'),
(87, 20, 63, -0.66, 'optiona'),
(87, 20, 65, -0.66, 'optiona'),
(88, 20, 1, 1, 'optionb'),
(88, 20, 3, 1, 'optionc'),
(88, 20, 5, 1, 'optiona'),
(88, 20, 6, 1, 'optionc'),
(88, 20, 7, 1, 'optionc'),
(88, 20, 8, 1, 'optionb'),
(88, 20, 9, 1, 'optionc'),
(88, 20, 11, 1, 'optionb'),
(88, 20, 12, -0.33, 'optiona'),
(88, 20, 13, 1, 'optiona'),
(88, 20, 14, 1, 'optiona'),
(88, 20, 15, 1, 'optionb'),
(88, 20, 16, -0.33, 'optionb'),
(88, 20, 17, 1, 'optionb'),
(88, 20, 18, 1, 'optiona'),
(88, 20, 19, -0.33, 'optiona'),
(88, 20, 20, 1, 'optiona'),
(88, 20, 21, 1, 'optionc'),
(88, 20, 22, -0.33, 'optiona'),
(88, 20, 23, -0.33, 'optionc'),
(88, 20, 26, 2, 'optionc'),
(88, 20, 29, -0.66, 'optiona'),
(88, 20, 32, 2, 'optionb'),
(88, 20, 33, 2, 'optiond'),
(88, 20, 34, 2, 'optionc'),
(88, 20, 35, -0.66, 'optiond'),
(88, 20, 36, -0.66, 'optiona'),
(88, 20, 38, 2, 'optiond'),
(88, 20, 39, -0.66, 'optiond'),
(88, 20, 40, 2, 'optiond'),
(88, 20, 42, 2, 'optiond'),
(88, 20, 43, 2, 'optionb'),
(88, 20, 44, 2, 'optionc'),
(88, 20, 45, -0.66, 'optiona'),
(88, 20, 46, 2, 'optiona'),
(88, 20, 47, 2, 'optionc'),
(88, 20, 48, 2, 'optiond'),
(88, 20, 50, -0.66, 'optionb'),
(88, 20, 51, -0.66, 'optiona'),
(88, 20, 53, -0.66, 'optiond'),
(88, 20, 55, -0.66, 'optionc'),
(88, 20, 56, 1, 'optionc'),
(88, 20, 58, 1, 'optionc'),
(88, 20, 59, -0.33, 'optionc'),
(88, 20, 61, 2, 'optiona'),
(88, 20, 63, -0.66, 'optiona'),
(88, 20, 65, -0.66, 'optiona'),
(80, 20, 2, 1, 'optionc'),
(80, 20, 3, 1, 'optionc'),
(80, 20, 4, 1, 'optionc'),
(80, 20, 5, 1, 'optiona'),
(80, 20, 6, 1, 'optionc'),
(80, 20, 7, 1, 'optionc'),
(80, 20, 9, 1, 'optionc'),
(80, 20, 10, 1, 'optionb'),
(80, 20, 13, 1, 'optiona'),
(80, 20, 15, 1, 'optionb'),
(80, 20, 20, -0.33, 'optionc'),
(80, 20, 21, 1, 'optionc'),
(80, 20, 22, 1, 'optiond'),
(80, 20, 23, 1, 'optiona'),
(80, 20, 24, 1, 'optiona'),
(80, 20, 25, 1, 'optionb'),
(80, 20, 26, 2, 'optionc'),
(80, 20, 29, 2, 'optiond'),
(80, 20, 32, 2, 'optionb'),
(80, 20, 33, -0.66, 'optionc'),
(80, 20, 34, 2, 'optionc'),
(80, 20, 35, 2, 'optionb'),
(80, 20, 40, 2, 'optiond'),
(80, 20, 42, 2, 'optiond'),
(80, 20, 43, 2, 'optionb'),
(80, 20, 44, -0.66, 'optiona'),
(80, 20, 45, 2, 'optionc'),
(80, 20, 46, 2, 'optiona'),
(80, 20, 47, 2, 'optionc'),
(80, 20, 48, 2, 'optiond'),
(80, 20, 49, 2, 'optiond'),
(80, 20, 50, -0.66, 'optionb'),
(80, 20, 51, -0.66, 'optiona'),
(80, 20, 56, 1, 'optionc'),
(80, 20, 58, 1, 'optionc'),
(80, 20, 59, -0.33, 'optionc'),
(80, 20, 60, 1, 'optiond'),
(80, 20, 61, 2, 'optiona'),
(80, 20, 62, 2, 'optionb'),
(80, 20, 65, 2, 'optionb'),
(66, 17, 2, 1, 'optionb'),
(66, 17, 3, 1, 'optionb'),
(66, 17, 5, 1, 'optionc'),
(66, 17, 6, 1, 'optiona'),
(66, 17, 7, 1, 'optionc'),
(66, 17, 8, 1, 'optiona'),
(66, 17, 9, -0.33, 'optiona'),
(66, 17, 10, -0.33, 'optionc'),
(66, 17, 13, 1, 'optionb'),
(66, 17, 14, 1, 'optionc'),
(66, 17, 17, 1, 'optiona'),
(66, 17, 19, 1, 'optionb'),
(66, 17, 20, -0.33, 'optionb'),
(66, 17, 22, 1, 'optionb'),
(66, 17, 23, 1, 'optiond'),
(66, 17, 25, -0.33, 'optionc'),
(66, 17, 26, 2, 'optionc'),
(66, 17, 28, 2, 'optiond'),
(66, 17, 29, -0.66, 'optionb'),
(66, 17, 30, -0.66, 'optiond'),
(66, 17, 31, -0.66, 'optiona'),
(66, 17, 32, 2, 'optiona'),
(66, 17, 33, 2, 'optiona'),
(66, 17, 34, 2, 'optiond'),
(66, 17, 35, 2, 'optionb'),
(66, 17, 36, -0.66, 'optionc'),
(66, 17, 37, 2, 'optionc'),
(66, 17, 38, -0.66, 'optiona'),
(66, 17, 40, 2, 'optionb'),
(66, 17, 45, 2, 'optionb'),
(66, 17, 47, -0.66, 'optionb'),
(66, 17, 48, 2, 'optiond'),
(66, 17, 50, -0.66, 'optiona'),
(66, 17, 51, 2, 'optionc'),
(66, 17, 52, 2, 'optiond'),
(66, 17, 53, 2, 'optiona'),
(66, 17, 54, 2, 'optiond'),
(66, 17, 55, 2, 'optiona'),
(66, 17, 62, 2, 'optionc'),
(66, 17, 65, 2, 'optiond'),
(72, 20, 2, 1, 'optionc'),
(72, 20, 3, 1, 'optionc'),
(72, 20, 4, 1, 'optionc'),
(72, 20, 5, 1, 'optiona'),
(72, 20, 7, 1, 'optionc'),
(72, 20, 8, -0.33, 'optionc'),
(72, 20, 9, 1, 'optionc'),
(72, 20, 10, 1, 'optionb'),
(72, 20, 12, -0.33, 'optiona'),
(72, 20, 13, 1, 'optiona'),
(72, 20, 14, 1, 'optiona'),
(72, 20, 15, -0.33, 'optiond'),
(72, 20, 17, 1, 'optionb'),
(72, 20, 18, -0.33, 'optionc'),
(72, 20, 20, 1, 'optiona'),
(72, 20, 21, 1, 'optionc'),
(72, 20, 22, 1, 'optiond'),
(72, 20, 23, -0.33, 'optionc'),
(72, 20, 24, 1, 'optiona'),
(72, 20, 25, 1, 'optionb'),
(72, 20, 32, 2, 'optionb'),
(72, 20, 33, 2, 'optiond'),
(72, 20, 34, -0.66, 'optionb'),
(72, 20, 35, 2, 'optionb'),
(72, 20, 40, -0.66, 'optionb'),
(72, 20, 42, -0.66, 'optionb'),
(72, 20, 43, 2, 'optionb'),
(72, 20, 44, -0.66, 'optiona'),
(72, 20, 46, -0.66, 'optiond'),
(72, 20, 47, 2, 'optionc'),
(72, 20, 48, 2, 'optiond'),
(72, 20, 50, 2, 'optiond'),
(72, 20, 51, 2, 'optionb'),
(72, 20, 53, -0.66, 'optionb'),
(72, 20, 54, 2, 'optionc'),
(72, 20, 55, 2, 'optiona'),
(72, 20, 56, -0.33, 'optiond'),
(72, 20, 58, 1, 'optionc'),
(72, 20, 59, 1, 'optiond'),
(72, 20, 60, 1, 'optiond'),
(72, 20, 61, 2, 'optiona'),
(72, 20, 65, 2, 'optionb'),
(152, 5, 1, 1, 'optionb'),
(85, 5, 1, 1, 'optionb'),
(77, 5, 1, 1, 'optionb'),
(67, 5, 1, -0.33, 'optiona'),
(62, 5, 1, 1, 'optionb'),
(130, 5, 1, 1, 'optionb'),
(74, 5, 1, 1, 'optionb'),
(158, 5, 1, 1, 'optionb'),
(88, 5, 1, 1, 'optionb'),
(108, 5, 1, 1, 'optionb'),
(153, 5, 1, 1, 'optionb'),
(111, 5, 1, 1, 'optionb'),
(141, 5, 1, 1, 'optionb'),
(93, 5, 1, 1, 'optionb'),
(81, 5, 1, 1, 'optionb'),
(56, 5, 1, 1, 'optionb'),
(127, 5, 1, 1, 'optionb'),
(112, 5, 1, 1, 'optionb'),
(90, 5, 1, 1, 'optionb'),
(86, 5, 1, 1, 'optionb'),
(98, 5, 1, 1, 'optionb'),
(100, 5, 1, 1, 'optionb'),
(65, 5, 1, -0.33, 'optionc'),
(68, 5, 1, 1, 'optionb'),
(128, 5, 1, 1, 'optionb'),
(95, 5, 1, 1, 'optionb'),
(142, 5, 1, 1, 'optionb'),
(119, 5, 1, 1, 'optionb'),
(20, 5, 1, 1, 'optionb'),
(122, 5, 1, 1, 'optionb'),
(94, 5, 1, 1, 'optionb'),
(116, 5, 1, 1, 'optionb'),
(77, 5, 2, 1, 'optionb'),
(67, 5, 2, -0.33, 'optiond'),
(144, 5, 2, 1, 'optionb'),
(63, 5, 2, 1, 'optionb'),
(99, 5, 2, -0.33, 'optiona'),
(130, 5, 2, 1, 'optionb'),
(78, 5, 2, 1, 'optionb'),
(74, 5, 2, -0.33, 'optiond'),
(158, 5, 2, -0.33, 'optiond'),
(87, 5, 2, 1, 'optionb'),
(101, 5, 2, -0.33, 'optiond'),
(39, 5, 2, -0.33, 'optiond'),
(153, 5, 2, -0.33, 'optiond'),
(47, 5, 2, 1, 'optionb'),
(36, 5, 2, -0.33, 'optiond'),
(111, 5, 2, 1, 'optionb'),
(141, 5, 2, -0.33, 'optiona'),
(143, 5, 2, -0.33, 'optiond'),
(80, 5, 2, -0.33, 'optiond'),
(81, 5, 2, 1, 'optionb'),
(56, 5, 2, -0.33, 'optiond'),
(90, 5, 2, 1, 'optionb'),
(86, 5, 2, 1, 'optionb'),
(98, 5, 2, 1, 'optionb'),
(65, 5, 2, 1, 'optionb'),
(114, 5, 2, -0.33, 'optiond'),
(128, 5, 2, -0.33, 'optiona'),
(22, 5, 2, -0.33, 'optionc'),
(113, 5, 2, 1, 'optionb'),
(145, 5, 2, -0.33, 'optiond'),
(75, 5, 2, 1, 'optionb'),
(119, 5, 2, 1, 'optionb'),
(20, 5, 2, -0.33, 'optiond'),
(122, 5, 2, -0.33, 'optiond'),
(94, 5, 2, 1, 'optionb'),
(116, 5, 2, 1, 'optionb'),
(79, 5, 2, -0.33, 'optionc'),
(107, 5, 3, 1, 'optionc'),
(70, 5, 3, -0.33, 'optiond'),
(152, 5, 3, 1, 'optionc'),
(85, 5, 3, 1, 'optionc'),
(77, 5, 3, 1, 'optionc'),
(67, 5, 3, 1, 'optionc'),
(144, 5, 3, 1, 'optionc'),
(62, 5, 3, 1, 'optionc'),
(63, 5, 3, 1, 'optionc'),
(99, 5, 3, -0.33, 'optiond'),
(130, 5, 3, -0.33, 'optiona'),
(121, 5, 3, 1, 'optionc'),
(78, 5, 3, -0.33, 'optiond'),
(158, 5, 3, 1, 'optionc'),
(102, 5, 3, -0.33, 'optiond'),
(87, 5, 3, 1, 'optionc'),
(88, 5, 3, 1, 'optionc'),
(101, 5, 3, 1, 'optionc'),
(39, 5, 3, -0.33, 'optionb'),
(108, 5, 3, 1, 'optionc'),
(96, 5, 3, 1, 'optionc'),
(160, 5, 3, -0.33, 'optiond'),
(153, 5, 3, -0.33, 'optiond'),
(47, 5, 3, -0.33, 'optionb'),
(36, 5, 3, -0.33, 'optiond'),
(111, 5, 3, 1, 'optionc'),
(141, 5, 3, 1, 'optionc'),
(93, 5, 3, -0.33, 'optionb'),
(143, 5, 3, -0.33, 'optionb'),
(73, 5, 3, -0.33, 'optiond'),
(81, 5, 3, 1, 'optionc'),
(56, 5, 3, 1, 'optionc'),
(83, 5, 3, 1, 'optionc'),
(124, 5, 3, -0.33, 'optiond'),
(127, 5, 3, -0.33, 'optionb'),
(112, 5, 3, -0.33, 'optiond'),
(123, 5, 3, 1, 'optionc'),
(90, 5, 3, 1, 'optionc'),
(86, 5, 3, -0.33, 'optiona'),
(98, 5, 3, -0.33, 'optiond'),
(100, 5, 3, -0.33, 'optionb'),
(65, 5, 3, -0.33, 'optiond'),
(68, 5, 3, -0.33, 'optionb'),
(114, 5, 3, -0.33, 'optiond'),
(128, 5, 3, -0.33, 'optiond'),
(95, 5, 3, 1, 'optionc'),
(76, 5, 3, -0.33, 'optiond'),
(22, 5, 3, -0.33, 'optionb'),
(142, 5, 3, -0.33, 'optionb'),
(44, 5, 3, 1, 'optionc'),
(113, 5, 3, -0.33, 'optiond'),
(145, 5, 3, -0.33, 'optiond'),
(75, 5, 3, -0.33, 'optionb'),
(119, 5, 3, 1, 'optionc'),
(20, 5, 3, -0.33, 'optiond'),
(28, 5, 3, -0.33, 'optiond'),
(122, 5, 3, -0.33, 'optiond'),
(94, 5, 3, 1, 'optionc'),
(116, 5, 3, 1, 'optionc'),
(79, 5, 3, 1, 'optionc'),
(70, 5, 4, -0.33, 'optionb'),
(152, 5, 4, -0.33, 'optione'),
(85, 5, 4, -0.33, 'optione'),
(77, 5, 4, -0.33, 'optionb'),
(67, 5, 4, -0.33, 'optionb'),
(144, 5, 4, -0.33, 'optionb'),
(62, 5, 4, -0.33, 'optionb'),
(63, 5, 4, -0.33, 'optione'),
(99, 5, 4, -0.33, 'optiond'),
(78, 5, 4, -0.33, 'optionb'),
(102, 5, 4, -0.33, 'optiond'),
(87, 5, 4, -0.33, 'optionb'),
(101, 5, 4, -0.33, 'optionb'),
(52, 5, 4, -0.33, 'optione'),
(39, 5, 4, -0.33, 'optiond'),
(108, 5, 4, -0.33, 'optionb'),
(47, 5, 4, -0.33, 'optionb'),
(36, 5, 4, 1, 'optionc'),
(111, 5, 4, -0.33, 'optionb'),
(143, 5, 4, -0.33, 'optionb'),
(162, 5, 4, -0.33, 'optione'),
(73, 5, 4, -0.33, 'optione'),
(80, 5, 4, -0.33, 'optionb'),
(83, 5, 4, -0.33, 'optione'),
(123, 5, 4, -0.33, 'optionb'),
(90, 5, 4, -0.33, 'optionb'),
(86, 5, 4, 1, 'optionc'),
(98, 5, 4, -0.33, 'optionb'),
(95, 5, 4, -0.33, 'optionb'),
(22, 5, 4, 1, 'optionc'),
(113, 5, 4, 1, 'optionc'),
(145, 5, 4, -0.33, 'optione'),
(119, 5, 4, 1, 'optionc'),
(20, 5, 4, -0.33, 'optione'),
(28, 5, 4, -0.33, 'optione'),
(122, 5, 4, -0.33, 'optione'),
(94, 5, 4, -0.33, 'optionb'),
(116, 5, 4, 1, 'optionc'),
(79, 5, 4, -0.33, 'optionb'),
(107, 5, 5, 1, 'optiona'),
(152, 5, 5, -0.33, 'optiond'),
(85, 5, 5, -0.33, 'optiond'),
(67, 5, 5, 1, 'optiona'),
(144, 5, 5, 1, 'optiona'),
(99, 5, 5, -0.33, 'optiond'),
(121, 5, 5, 1, 'optiona'),
(78, 5, 5, -0.33, 'optiond'),
(74, 5, 5, -0.33, 'optiond'),
(158, 5, 5, 1, 'optiona'),
(102, 5, 5, -0.33, 'optiond'),
(87, 5, 5, -0.33, 'optione'),
(39, 5, 5, -0.33, 'optione'),
(108, 5, 5, -0.33, 'optiond'),
(96, 5, 5, 1, 'optiona'),
(153, 5, 5, -0.33, 'optione'),
(47, 5, 5, -0.33, 'optiond'),
(36, 5, 5, -0.33, 'optione'),
(111, 5, 5, -0.33, 'optione'),
(141, 5, 5, -0.33, 'optiond'),
(93, 5, 5, 1, 'optiona'),
(143, 5, 5, -0.33, 'optione'),
(73, 5, 5, -0.33, 'optione'),
(81, 5, 5, 1, 'optiona'),
(56, 5, 5, -0.33, 'optione'),
(83, 5, 5, -0.33, 'optione'),
(127, 5, 5, -0.33, 'optionc'),
(123, 5, 5, -0.33, 'optione'),
(90, 5, 5, 1, 'optiona'),
(86, 5, 5, 1, 'optiona'),
(98, 5, 5, 1, 'optiona'),
(68, 5, 5, -0.33, 'optione'),
(128, 5, 5, 1, 'optiona'),
(95, 5, 5, 1, 'optiona'),
(22, 5, 5, 1, 'optiona'),
(142, 5, 5, -0.33, 'optionc'),
(44, 5, 5, -0.33, 'optiond'),
(113, 5, 5, -0.33, 'optionc'),
(145, 5, 5, -0.33, 'optiond'),
(75, 5, 5, 1, 'optiona'),
(20, 5, 5, 1, 'optiona'),
(122, 5, 5, -0.33, 'optione'),
(94, 5, 5, -0.33, 'optionc'),
(116, 5, 5, 1, 'optiona'),
(79, 5, 5, -0.33, 'optionc'),
(107, 5, 6, 1, 'optionc'),
(70, 5, 6, 1, 'optionc'),
(152, 5, 6, -0.33, 'optiond'),
(85, 5, 6, -0.33, 'optione'),
(77, 5, 6, 1, 'optionc'),
(67, 5, 6, 1, 'optionc'),
(144, 5, 6, 1, 'optionc'),
(62, 5, 6, 1, 'optionc'),
(63, 5, 6, -0.33, 'optiona'),
(130, 5, 6, 1, 'optionc'),
(121, 5, 6, 1, 'optionc'),
(78, 5, 6, -0.33, 'optionb'),
(74, 5, 6, -0.33, 'optione'),
(158, 5, 6, 1, 'optionc'),
(102, 5, 6, 1, 'optionc'),
(87, 5, 6, 1, 'optionc'),
(88, 5, 6, 1, 'optionc'),
(101, 5, 6, 1, 'optionc'),
(52, 5, 6, 1, 'optionc'),
(39, 5, 6, 1, 'optionc'),
(108, 5, 6, -0.33, 'optione'),
(96, 5, 6, 1, 'optionc'),
(153, 5, 6, 1, 'optionc'),
(47, 5, 6, 1, 'optionc'),
(36, 5, 6, 1, 'optionc'),
(111, 5, 6, -0.33, 'optiona'),
(141, 5, 6, 1, 'optionc'),
(93, 5, 6, -0.33, 'optiona'),
(143, 5, 6, 1, 'optionc'),
(73, 5, 6, 1, 'optionc'),
(80, 5, 6, 1, 'optionc'),
(56, 5, 6, 1, 'optionc'),
(83, 5, 6, 1, 'optionc'),
(124, 5, 6, 1, 'optionc'),
(127, 5, 6, -0.33, 'optione'),
(112, 5, 6, -0.33, 'optiond'),
(123, 5, 6, 1, 'optionc'),
(90, 5, 6, 1, 'optionc'),
(86, 5, 6, 1, 'optionc'),
(98, 5, 6, 1, 'optionc'),
(65, 5, 6, 1, 'optionc'),
(68, 5, 6, 1, 'optionc'),
(114, 5, 6, 1, 'optionc'),
(128, 5, 6, 1, 'optionc'),
(95, 5, 6, 1, 'optionc'),
(22, 5, 6, 1, 'optionc'),
(142, 5, 6, 1, 'optionc'),
(113, 5, 6, -0.33, 'optiona'),
(145, 5, 6, 1, 'optionc'),
(75, 5, 6, 1, 'optionc'),
(119, 5, 6, 1, 'optionc'),
(20, 5, 6, 1, 'optionc'),
(28, 5, 6, 1, 'optionc'),
(122, 5, 6, -0.33, 'optiond'),
(94, 5, 6, 1, 'optionc'),
(116, 5, 6, 1, 'optionc'),
(107, 5, 7, -0.33, 'optionc'),
(85, 5, 7, 1, 'optione'),
(77, 5, 7, -0.33, 'optionb'),
(67, 5, 7, -0.33, 'optionb'),
(144, 5, 7, 1, 'optione'),
(62, 5, 7, 1, 'optione'),
(63, 5, 7, -0.33, 'optionb'),
(130, 5, 7, 1, 'optione'),
(78, 5, 7, -0.33, 'optiond'),
(158, 5, 7, 1, 'optione'),
(102, 5, 7, -0.33, 'optiond'),
(87, 5, 7, 1, 'optione'),
(88, 5, 7, 1, 'optione'),
(101, 5, 7, 1, 'optione'),
(52, 5, 7, 1, 'optione'),
(39, 5, 7, 1, 'optione'),
(108, 5, 7, -0.33, 'optionb'),
(160, 5, 7, 1, 'optione'),
(47, 5, 7, -0.33, 'optionc'),
(36, 5, 7, 1, 'optione'),
(93, 5, 7, 1, 'optione'),
(143, 5, 7, 1, 'optione'),
(73, 5, 7, -0.33, 'optionc'),
(81, 5, 7, -0.33, 'optionc'),
(56, 5, 7, 1, 'optione'),
(83, 5, 7, -0.33, 'optionc'),
(127, 5, 7, -0.33, 'optionb'),
(90, 5, 7, -0.33, 'optiona'),
(86, 5, 7, -0.33, 'optiond'),
(98, 5, 7, -0.33, 'optionc'),
(100, 5, 7, 1, 'optione'),
(65, 5, 7, -0.33, 'optionb'),
(68, 5, 7, -0.33, 'optiona'),
(114, 5, 7, 1, 'optione'),
(95, 5, 7, 1, 'optione'),
(76, 5, 7, 1, 'optione'),
(22, 5, 7, 1, 'optione'),
(145, 5, 7, -0.33, 'optionb'),
(75, 5, 7, 1, 'optione'),
(119, 5, 7, 1, 'optione'),
(20, 5, 7, -0.33, 'optionb'),
(122, 5, 7, -0.33, 'optiona'),
(94, 5, 7, 1, 'optione'),
(116, 5, 7, 1, 'optione'),
(79, 5, 7, -0.33, 'optiond'),
(70, 5, 8, 1, 'optiond'),
(60, 5, 8, 1, 'optiond'),
(67, 5, 8, 1, 'optiond'),
(63, 5, 8, -0.33, 'optiona'),
(130, 5, 8, -0.33, 'optionc'),
(102, 5, 8, 1, 'optiond'),
(101, 5, 8, -0.33, 'optionc'),
(39, 5, 8, 1, 'optiond'),
(108, 5, 8, -0.33, 'optionc'),
(96, 5, 8, -0.33, 'optionb'),
(36, 5, 8, -0.33, 'optionc'),
(141, 5, 8, 1, 'optiond'),
(73, 5, 8, 1, 'optiond'),
(81, 5, 8, 1, 'optiond'),
(56, 5, 8, 1, 'optiond'),
(83, 5, 8, -0.33, 'optiona'),
(123, 5, 8, 1, 'optiond'),
(100, 5, 8, 1, 'optiond'),
(128, 5, 8, -0.33, 'optionc'),
(44, 5, 8, 1, 'optiond'),
(145, 5, 8, 1, 'optiond'),
(20, 5, 8, -0.33, 'optionb'),
(116, 5, 8, -0.33, 'optionc'),
(107, 5, 9, 1, 'optiond'),
(70, 5, 9, 1, 'optiond'),
(152, 5, 9, -0.33, 'optionc'),
(60, 5, 9, 1, 'optiond'),
(67, 5, 9, 1, 'optiond'),
(144, 5, 9, -0.33, 'optionc'),
(63, 5, 9, 1, 'optiond'),
(99, 5, 9, -0.33, 'optionc'),
(121, 5, 9, 1, 'optiond'),
(78, 5, 9, -0.33, 'optionc'),
(74, 5, 9, -0.33, 'optionc'),
(158, 5, 9, 1, 'optiond'),
(102, 5, 9, -0.33, 'optionc'),
(87, 5, 9, -0.33, 'optionc'),
(88, 5, 9, 1, 'optiond'),
(101, 5, 9, 1, 'optiond'),
(52, 5, 9, -0.33, 'optionc'),
(39, 5, 9, 1, 'optiond'),
(108, 5, 9, 1, 'optiond'),
(96, 5, 9, -0.33, 'optionc'),
(160, 5, 9, 1, 'optiond'),
(47, 5, 9, -0.33, 'optionb'),
(36, 5, 9, 1, 'optiond'),
(141, 5, 9, -0.33, 'optionc'),
(93, 5, 9, 1, 'optiond'),
(143, 5, 9, 1, 'optiond'),
(162, 5, 9, 1, 'optiond'),
(73, 5, 9, 1, 'optiond'),
(80, 5, 9, 1, 'optiond'),
(81, 5, 9, 1, 'optiond'),
(56, 5, 9, 1, 'optiond'),
(83, 5, 9, 1, 'optiond'),
(127, 5, 9, 1, 'optiond'),
(123, 5, 9, 1, 'optiond'),
(90, 5, 9, 1, 'optiond'),
(86, 5, 9, 1, 'optiond'),
(98, 5, 9, 1, 'optiond'),
(100, 5, 9, 1, 'optiond'),
(65, 5, 9, 1, 'optiond'),
(68, 5, 9, -0.33, 'optiona'),
(128, 5, 9, 1, 'optiond'),
(95, 5, 9, 1, 'optiond'),
(142, 5, 9, -0.33, 'optionc'),
(44, 5, 9, 1, 'optiond'),
(145, 5, 9, 1, 'optiond'),
(20, 5, 9, -0.33, 'optionc'),
(28, 5, 9, -0.33, 'optionc'),
(122, 5, 9, -0.33, 'optiona'),
(94, 5, 9, 1, 'optiond'),
(116, 5, 9, 1, 'optiond'),
(79, 5, 9, 1, 'optiond'),
(85, 5, 10, -0.33, 'optionb'),
(77, 5, 10, -0.33, 'optionb'),
(60, 5, 10, -0.33, 'optionc'),
(67, 5, 10, -0.33, 'optionb'),
(62, 5, 10, -0.33, 'optionb'),
(63, 5, 10, -0.33, 'optionb'),
(99, 5, 10, -0.33, 'optiona'),
(130, 5, 10, -0.33, 'optiond'),
(121, 5, 10, -0.33, 'optionb'),
(78, 5, 10, -0.33, 'optionb'),
(158, 5, 10, -0.33, 'optionb'),
(87, 5, 10, -0.33, 'optionb'),
(88, 5, 10, -0.33, 'optionb'),
(39, 5, 10, -0.33, 'optionb'),
(108, 5, 10, -0.33, 'optionb'),
(96, 5, 10, -0.33, 'optionb'),
(111, 5, 10, 1, 'optione'),
(93, 5, 10, -0.33, 'optionb'),
(162, 5, 10, -0.33, 'optionb'),
(81, 5, 10, -0.33, 'optionb'),
(56, 5, 10, 1, 'optione'),
(83, 5, 10, -0.33, 'optionb'),
(127, 5, 10, -0.33, 'optionb'),
(112, 5, 10, -0.33, 'optiona'),
(123, 5, 10, -0.33, 'optionb'),
(100, 5, 10, -0.33, 'optionb'),
(95, 5, 10, -0.33, 'optiona'),
(76, 5, 10, -0.33, 'optionb'),
(44, 5, 10, -0.33, 'optiond'),
(145, 5, 10, 1, 'optione'),
(119, 5, 10, 1, 'optione'),
(20, 5, 10, -0.33, 'optionb'),
(28, 5, 10, -0.33, 'optionb'),
(122, 5, 10, 1, 'optione'),
(94, 5, 10, -0.33, 'optionb'),
(116, 5, 10, 1, 'optione'),
(70, 5, 11, 1, 'optionc'),
(152, 5, 11, 1, 'optionc'),
(77, 5, 11, 1, 'optionc'),
(67, 5, 11, 1, 'optionc'),
(144, 5, 11, 1, 'optionc'),
(62, 5, 11, 1, 'optionc'),
(121, 5, 11, 1, 'optionc'),
(74, 5, 11, 1, 'optionc'),
(102, 5, 11, 1, 'optionc'),
(87, 5, 11, 1, 'optionc'),
(88, 5, 11, 1, 'optionc'),
(101, 5, 11, 1, 'optionc'),
(39, 5, 11, 1, 'optionc'),
(96, 5, 11, 1, 'optionc'),
(160, 5, 11, 1, 'optionc'),
(153, 5, 11, 1, 'optionc'),
(47, 5, 11, 1, 'optionc'),
(36, 5, 11, 1, 'optionc'),
(111, 5, 11, 1, 'optionc'),
(141, 5, 11, 1, 'optionc'),
(143, 5, 11, 1, 'optionc'),
(162, 5, 11, 1, 'optionc'),
(73, 5, 11, 1, 'optionc'),
(80, 5, 11, 1, 'optionc'),
(81, 5, 11, 1, 'optionc'),
(56, 5, 11, 1, 'optionc'),
(83, 5, 11, 1, 'optionc'),
(112, 5, 11, 1, 'optionc'),
(123, 5, 11, 1, 'optionc'),
(90, 5, 11, 1, 'optionc'),
(98, 5, 11, 1, 'optionc'),
(100, 5, 11, 1, 'optionc'),
(65, 5, 11, 1, 'optionc'),
(68, 5, 11, 1, 'optionc'),
(114, 5, 11, 1, 'optionc'),
(128, 5, 11, 1, 'optionc'),
(95, 5, 11, 1, 'optionc'),
(76, 5, 11, 1, 'optionc'),
(22, 5, 11, 1, 'optionc'),
(142, 5, 11, -0.33, 'optiond'),
(44, 5, 11, 1, 'optionc'),
(113, 5, 11, 1, 'optionc'),
(145, 5, 11, 1, 'optionc'),
(119, 5, 11, 1, 'optionc'),
(20, 5, 11, 1, 'optionc'),
(122, 5, 11, 1, 'optionc'),
(116, 5, 11, 1, 'optionc'),
(107, 5, 12, 1, 'optionb'),
(70, 5, 12, -0.33, 'optiond'),
(152, 5, 12, -0.33, 'optiond'),
(85, 5, 12, -0.33, 'optiond'),
(77, 5, 12, -0.33, 'optiond'),
(67, 5, 12, 1, 'optionb'),
(144, 5, 12, -0.33, 'optiona'),
(62, 5, 12, 1, 'optionb'),
(63, 5, 12, -0.33, 'optiond'),
(99, 5, 12, -0.33, 'optiond'),
(121, 5, 12, -0.33, 'optiond'),
(78, 5, 12, -0.33, 'optiond'),
(74, 5, 12, -0.33, 'optiond'),
(102, 5, 12, -0.33, 'optiond'),
(101, 5, 12, 1, 'optionb'),
(52, 5, 12, 1, 'optionb'),
(39, 5, 12, -0.33, 'optiond'),
(108, 5, 12, 1, 'optionb'),
(96, 5, 12, -0.33, 'optiond'),
(160, 5, 12, -0.33, 'optionc'),
(47, 5, 12, -0.33, 'optiond'),
(36, 5, 12, 1, 'optionb'),
(111, 5, 12, -0.33, 'optiond'),
(141, 5, 12, -0.33, 'optiond'),
(93, 5, 12, -0.33, 'optiond'),
(143, 5, 12, -0.33, 'optiond'),
(162, 5, 12, -0.33, 'optiond'),
(73, 5, 12, -0.33, 'optiond'),
(80, 5, 12, -0.33, 'optiond'),
(81, 5, 12, 1, 'optionb'),
(56, 5, 12, 1, 'optionb'),
(83, 5, 12, -0.33, 'optiond'),
(124, 5, 12, -0.33, 'optiona'),
(127, 5, 12, -0.33, 'optiond'),
(112, 5, 12, 1, 'optionb'),
(123, 5, 12, -0.33, 'optiond'),
(86, 5, 12, -0.33, 'optiond'),
(98, 5, 12, 1, 'optionb'),
(65, 5, 12, -0.33, 'optiond'),
(68, 5, 12, -0.33, 'optiond'),
(114, 5, 12, -0.33, 'optiond'),
(95, 5, 12, -0.33, 'optiond'),
(76, 5, 12, -0.33, 'optiond'),
(22, 5, 12, 1, 'optionb'),
(44, 5, 12, 1, 'optionb'),
(113, 5, 12, -0.33, 'optiond'),
(145, 5, 12, -0.33, 'optiond'),
(75, 5, 12, -0.33, 'optiond'),
(119, 5, 12, 1, 'optionb'),
(20, 5, 12, 1, 'optionb'),
(28, 5, 12, -0.33, 'optiond'),
(122, 5, 12, -0.33, 'optiond'),
(94, 5, 12, -0.33, 'optiond'),
(116, 5, 12, -0.33, 'optiond'),
(79, 5, 12, -0.33, 'optiond'),
(70, 5, 13, -0.33, 'optiond'),
(152, 5, 13, -0.33, 'optionb'),
(85, 5, 13, -0.33, 'optionb'),
(77, 5, 13, -0.33, 'optionc'),
(60, 5, 13, 1, 'optiona'),
(67, 5, 13, -0.33, 'optionb'),
(63, 5, 13, 1, 'optiona'),
(99, 5, 13, -0.33, 'optionb'),
(130, 5, 13, -0.33, 'optiond'),
(78, 5, 13, -0.33, 'optionb'),
(74, 5, 13, -0.33, 'optiond'),
(101, 5, 13, -0.33, 'optiond'),
(39, 5, 13, -0.33, 'optionb'),
(108, 5, 13, -0.33, 'optionc'),
(96, 5, 13, 1, 'optiona'),
(160, 5, 13, -0.33, 'optionb'),
(153, 5, 13, -0.33, 'optionc'),
(47, 5, 13, -0.33, 'optionb'),
(36, 5, 13, -0.33, 'optionc'),
(141, 5, 13, -0.33, 'optionb'),
(93, 5, 13, -0.33, 'optionb'),
(143, 5, 13, -0.33, 'optionb'),
(73, 5, 13, -0.33, 'optionb'),
(80, 5, 13, -0.33, 'optionb'),
(81, 5, 13, -0.33, 'optionb'),
(124, 5, 13, -0.33, 'optionb'),
(127, 5, 13, -0.33, 'optionb'),
(112, 5, 13, -0.33, 'optionb'),
(90, 5, 13, -0.33, 'optionb'),
(98, 5, 13, -0.33, 'optionc'),
(100, 5, 13, -0.33, 'optionb'),
(128, 5, 13, -0.33, 'optionb'),
(95, 5, 13, -0.33, 'optionb'),
(76, 5, 13, -0.33, 'optionb'),
(22, 5, 13, -0.33, 'optionc'),
(142, 5, 13, -0.33, 'optiond'),
(44, 5, 13, -0.33, 'optionb'),
(20, 5, 13, -0.33, 'optionb'),
(94, 5, 13, 1, 'optiona'),
(116, 5, 13, 1, 'optiona'),
(70, 5, 14, 1, 'optionb'),
(152, 5, 14, 1, 'optionb'),
(85, 5, 14, 1, 'optionb'),
(77, 5, 14, 1, 'optionb'),
(60, 5, 14, -0.33, 'optione'),
(67, 5, 14, 1, 'optionb'),
(62, 5, 14, 1, 'optionb'),
(63, 5, 14, 1, 'optionb'),
(99, 5, 14, -0.33, 'optionc'),
(130, 5, 14, -0.33, 'optiond'),
(121, 5, 14, 1, 'optionb'),
(78, 5, 14, -0.33, 'optiona'),
(74, 5, 14, 1, 'optionb'),
(101, 5, 14, 1, 'optionb'),
(52, 5, 14, 1, 'optionb'),
(39, 5, 14, 1, 'optionb'),
(108, 5, 14, -0.33, 'optiond'),
(96, 5, 14, 1, 'optionb'),
(153, 5, 14, -0.33, 'optionc'),
(36, 5, 14, 1, 'optionb'),
(111, 5, 14, 1, 'optionb'),
(93, 5, 14, 1, 'optionb'),
(162, 5, 14, 1, 'optionb'),
(73, 5, 14, 1, 'optionb'),
(80, 5, 14, 1, 'optionb'),
(81, 5, 14, 1, 'optionb'),
(56, 5, 14, 1, 'optionb'),
(83, 5, 14, 1, 'optionb'),
(127, 5, 14, 1, 'optionb'),
(112, 5, 14, 1, 'optionb'),
(123, 5, 14, 1, 'optionb'),
(90, 5, 14, 1, 'optionb'),
(86, 5, 14, 1, 'optionb'),
(98, 5, 14, 1, 'optionb'),
(100, 5, 14, 1, 'optionb'),
(68, 5, 14, 1, 'optionb'),
(114, 5, 14, 1, 'optionb'),
(128, 5, 14, 1, 'optionb'),
(95, 5, 14, 1, 'optionb'),
(76, 5, 14, 1, 'optionb'),
(22, 5, 14, 1, 'optionb'),
(142, 5, 14, 1, 'optionb'),
(44, 5, 14, 1, 'optionb'),
(113, 5, 14, 1, 'optionb'),
(145, 5, 14, 1, 'optionb'),
(75, 5, 14, 1, 'optionb'),
(119, 5, 14, 1, 'optionb'),
(20, 5, 14, 1, 'optionb'),
(28, 5, 14, -0.33, 'optiond'),
(94, 5, 14, 1, 'optionb'),
(116, 5, 14, 1, 'optionb'),
(79, 5, 14, -0.33, 'optiond'),
(107, 5, 15, 1, 'optione'),
(152, 5, 15, 1, 'optione'),
(85, 5, 15, 1, 'optione'),
(77, 5, 15, 1, 'optione'),
(60, 5, 15, -0.33, 'optionc'),
(67, 5, 15, 1, 'optione'),
(144, 5, 15, 1, 'optione'),
(62, 5, 15, 1, 'optione'),
(63, 5, 15, 1, 'optione'),
(78, 5, 15, -0.33, 'optiona'),
(158, 5, 15, 1, 'optione'),
(102, 5, 15, 1, 'optione'),
(87, 5, 15, -0.33, 'optionc'),
(88, 5, 15, -0.33, 'optionc'),
(101, 5, 15, 1, 'optione'),
(52, 5, 15, -0.33, 'optionb'),
(108, 5, 15, 1, 'optione'),
(96, 5, 15, 1, 'optione'),
(153, 5, 15, -0.33, 'optionb'),
(47, 5, 15, -0.33, 'optionc'),
(36, 5, 15, -0.33, 'optionb'),
(111, 5, 15, 1, 'optione'),
(93, 5, 15, 1, 'optione'),
(143, 5, 15, -0.33, 'optionc'),
(162, 5, 15, 1, 'optione'),
(73, 5, 15, 1, 'optione'),
(81, 5, 15, 1, 'optione'),
(56, 5, 15, 1, 'optione'),
(124, 5, 15, 1, 'optione'),
(112, 5, 15, 1, 'optione'),
(123, 5, 15, -0.33, 'optionc'),
(90, 5, 15, -0.33, 'optiond'),
(86, 5, 15, -0.33, 'optionb'),
(98, 5, 15, -0.33, 'optionb'),
(68, 5, 15, 1, 'optione'),
(128, 5, 15, 1, 'optione'),
(95, 5, 15, -0.33, 'optionb'),
(142, 5, 15, -0.33, 'optiona'),
(113, 5, 15, -0.33, 'optionb'),
(145, 5, 15, 1, 'optione'),
(75, 5, 15, -0.33, 'optiond'),
(119, 5, 15, -0.33, 'optionb'),
(20, 5, 15, 1, 'optione'),
(122, 5, 15, 1, 'optione'),
(94, 5, 15, 1, 'optione'),
(116, 5, 15, 1, 'optione'),
(70, 5, 16, -0.33, 'optiond'),
(152, 5, 16, -0.33, 'optiond'),
(85, 5, 16, -0.33, 'optiond'),
(60, 5, 16, -0.33, 'optionc'),
(67, 5, 16, -0.33, 'optiond'),
(144, 5, 16, -0.33, 'optiond'),
(62, 5, 16, -0.33, 'optiond'),
(63, 5, 16, -0.33, 'optiond'),
(130, 5, 16, -0.33, 'optiond'),
(158, 5, 16, -0.33, 'optiond'),
(102, 5, 16, -0.33, 'optiond'),
(88, 5, 16, 1, 'optionb'),
(101, 5, 16, -0.33, 'optiond'),
(52, 5, 16, -0.33, 'optiond'),
(39, 5, 16, -0.33, 'optiond'),
(108, 5, 16, -0.33, 'optiond'),
(96, 5, 16, -0.33, 'optiond'),
(160, 5, 16, -0.33, 'optiond'),
(153, 5, 16, -0.33, 'optiond'),
(47, 5, 16, -0.33, 'optiond'),
(36, 5, 16, -0.33, 'optiond'),
(111, 5, 16, -0.33, 'optiond'),
(93, 5, 16, -0.33, 'optiond'),
(143, 5, 16, -0.33, 'optiond'),
(162, 5, 16, -0.33, 'optiond'),
(73, 5, 16, -0.33, 'optiond'),
(80, 5, 16, -0.33, 'optiond'),
(81, 5, 16, 1, 'optionb'),
(56, 5, 16, -0.33, 'optiond'),
(83, 5, 16, -0.33, 'optiond'),
(124, 5, 16, -0.33, 'optiond'),
(127, 5, 16, -0.33, 'optiond'),
(112, 5, 16, -0.33, 'optiona'),
(90, 5, 16, -0.33, 'optiond'),
(86, 5, 16, -0.33, 'optiond'),
(98, 5, 16, -0.33, 'optiond'),
(65, 5, 16, -0.33, 'optiond'),
(68, 5, 16, -0.33, 'optiond'),
(114, 5, 16, -0.33, 'optiond'),
(22, 5, 16, -0.33, 'optiond'),
(142, 5, 16, -0.33, 'optiond'),
(44, 5, 16, -0.33, 'optiond'),
(113, 5, 16, -0.33, 'optiond'),
(145, 5, 16, -0.33, 'optiond');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(75, 5, 16, -0.33, 'optiond'),
(119, 5, 16, -0.33, 'optiond'),
(20, 5, 16, -0.33, 'optiond'),
(122, 5, 16, -0.33, 'optiond'),
(94, 5, 16, -0.33, 'optiond'),
(116, 5, 16, -0.33, 'optiond'),
(79, 5, 16, -0.33, 'optiond'),
(107, 5, 17, 1, 'optionc'),
(70, 5, 17, -0.33, 'optiona'),
(152, 5, 17, 1, 'optionc'),
(85, 5, 17, 1, 'optionc'),
(77, 5, 17, -0.33, 'optionb'),
(60, 5, 17, 1, 'optionc'),
(67, 5, 17, 1, 'optionc'),
(144, 5, 17, 1, 'optionc'),
(62, 5, 17, 1, 'optionc'),
(63, 5, 17, -0.33, 'optiond'),
(99, 5, 17, 1, 'optionc'),
(121, 5, 17, 1, 'optionc'),
(78, 5, 17, 1, 'optionc'),
(74, 5, 17, 1, 'optionc'),
(158, 5, 17, -0.33, 'optiond'),
(102, 5, 17, -0.33, 'optionb'),
(87, 5, 17, -0.33, 'optiond'),
(88, 5, 17, -0.33, 'optiond'),
(101, 5, 17, 1, 'optionc'),
(52, 5, 17, 1, 'optionc'),
(39, 5, 17, 1, 'optionc'),
(108, 5, 17, 1, 'optionc'),
(96, 5, 17, 1, 'optionc'),
(160, 5, 17, 1, 'optionc'),
(153, 5, 17, 1, 'optionc'),
(47, 5, 17, 1, 'optionc'),
(36, 5, 17, 1, 'optionc'),
(111, 5, 17, 1, 'optionc'),
(141, 5, 17, -0.33, 'optiond'),
(93, 5, 17, 1, 'optionc'),
(143, 5, 17, 1, 'optionc'),
(162, 5, 17, 1, 'optionc'),
(73, 5, 17, -0.33, 'optionb'),
(80, 5, 17, 1, 'optionc'),
(56, 5, 17, 1, 'optionc'),
(83, 5, 17, 1, 'optionc'),
(124, 5, 17, 1, 'optionc'),
(127, 5, 17, 1, 'optionc'),
(112, 5, 17, -0.33, 'optiond'),
(123, 5, 17, 1, 'optionc'),
(90, 5, 17, 1, 'optionc'),
(86, 5, 17, 1, 'optionc'),
(98, 5, 17, 1, 'optionc'),
(100, 5, 17, 1, 'optionc'),
(65, 5, 17, 1, 'optionc'),
(68, 5, 17, 1, 'optionc'),
(114, 5, 17, 1, 'optionc'),
(128, 5, 17, 1, 'optionc'),
(95, 5, 17, 1, 'optionc'),
(76, 5, 17, 1, 'optionc'),
(22, 5, 17, 1, 'optionc'),
(142, 5, 17, -0.33, 'optiond'),
(44, 5, 17, 1, 'optionc'),
(113, 5, 17, 1, 'optionc'),
(145, 5, 17, 1, 'optionc'),
(75, 5, 17, -0.33, 'optiond'),
(119, 5, 17, 1, 'optionc'),
(20, 5, 17, 1, 'optionc'),
(122, 5, 17, 1, 'optionc'),
(94, 5, 17, 1, 'optionc'),
(116, 5, 17, 1, 'optionc'),
(79, 5, 17, 1, 'optionc'),
(107, 5, 18, -0.33, 'optionc'),
(77, 5, 18, -0.33, 'optionc'),
(60, 5, 18, 1, 'optiona'),
(144, 5, 18, 1, 'optiona'),
(62, 5, 18, 1, 'optiona'),
(121, 5, 18, -0.33, 'optione'),
(78, 5, 18, -0.33, 'optionb'),
(74, 5, 18, -0.33, 'optione'),
(52, 5, 18, -0.33, 'optione'),
(39, 5, 18, -0.33, 'optione'),
(96, 5, 18, 1, 'optiona'),
(153, 5, 18, 1, 'optiona'),
(47, 5, 18, 1, 'optiona'),
(36, 5, 18, 1, 'optiona'),
(162, 5, 18, 1, 'optiona'),
(73, 5, 18, 1, 'optiona'),
(80, 5, 18, 1, 'optiona'),
(81, 5, 18, 1, 'optiona'),
(56, 5, 18, 1, 'optiona'),
(83, 5, 18, -0.33, 'optione'),
(127, 5, 18, -0.33, 'optionb'),
(112, 5, 18, 1, 'optiona'),
(123, 5, 18, 1, 'optiona'),
(90, 5, 18, 1, 'optiona'),
(100, 5, 18, 1, 'optiona'),
(65, 5, 18, 1, 'optiona'),
(68, 5, 18, 1, 'optiona'),
(114, 5, 18, 1, 'optiona'),
(128, 5, 18, 1, 'optiona'),
(95, 5, 18, 1, 'optiona'),
(76, 5, 18, -0.33, 'optione'),
(22, 5, 18, 1, 'optiona'),
(142, 5, 18, -0.33, 'optione'),
(145, 5, 18, 1, 'optiona'),
(75, 5, 18, -0.33, 'optiond'),
(20, 5, 18, 1, 'optiona'),
(28, 5, 18, 1, 'optiona'),
(122, 5, 18, 1, 'optiona'),
(94, 5, 18, -0.33, 'optione'),
(116, 5, 18, -0.33, 'optionc'),
(79, 5, 18, 1, 'optiona'),
(70, 5, 19, -0.33, 'optionc'),
(152, 5, 19, -0.33, 'optionc'),
(85, 5, 19, -0.33, 'optionc'),
(77, 5, 19, 1, 'optiond'),
(67, 5, 19, 1, 'optiond'),
(62, 5, 19, 1, 'optiond'),
(99, 5, 19, -0.33, 'optionb'),
(121, 5, 19, 1, 'optiond'),
(78, 5, 19, -0.33, 'optione'),
(74, 5, 19, 1, 'optiond'),
(88, 5, 19, -0.33, 'optione'),
(101, 5, 19, 1, 'optiond'),
(52, 5, 19, 1, 'optiond'),
(96, 5, 19, 1, 'optiond'),
(153, 5, 19, 1, 'optiond'),
(141, 5, 19, -0.33, 'optionc'),
(93, 5, 19, 1, 'optiond'),
(143, 5, 19, -0.33, 'optionb'),
(162, 5, 19, 1, 'optiond'),
(80, 5, 19, -0.33, 'optionb'),
(81, 5, 19, -0.33, 'optione'),
(56, 5, 19, 1, 'optiond'),
(123, 5, 19, 1, 'optiond'),
(90, 5, 19, 1, 'optiond'),
(86, 5, 19, 1, 'optiond'),
(98, 5, 19, -0.33, 'optione'),
(100, 5, 19, 1, 'optiond'),
(114, 5, 19, 1, 'optiond'),
(128, 5, 19, 1, 'optiond'),
(22, 5, 19, 1, 'optiond'),
(44, 5, 19, 1, 'optiond'),
(145, 5, 19, 1, 'optiond'),
(119, 5, 19, -0.33, 'optionc'),
(20, 5, 19, 1, 'optiond'),
(122, 5, 19, 1, 'optiond'),
(94, 5, 19, 1, 'optiond'),
(79, 5, 19, 1, 'optiond'),
(107, 5, 20, 1, 'optiond'),
(70, 5, 20, -0.33, 'optione'),
(152, 5, 20, 1, 'optiond'),
(85, 5, 20, 1, 'optiond'),
(77, 5, 20, 1, 'optiond'),
(60, 5, 20, -0.33, 'optione'),
(144, 5, 20, 1, 'optiond'),
(62, 5, 20, -0.33, 'optione'),
(99, 5, 20, 1, 'optiond'),
(121, 5, 20, 1, 'optiond'),
(78, 5, 20, -0.33, 'optiona'),
(74, 5, 20, -0.33, 'optione'),
(158, 5, 20, 1, 'optiond'),
(102, 5, 20, 1, 'optiond'),
(87, 5, 20, -0.33, 'optione'),
(88, 5, 20, -0.33, 'optione'),
(101, 5, 20, 1, 'optiond'),
(39, 5, 20, -0.33, 'optionc'),
(108, 5, 20, 1, 'optiond'),
(96, 5, 20, 1, 'optiond'),
(160, 5, 20, -0.33, 'optione'),
(153, 5, 20, 1, 'optiond'),
(36, 5, 20, 1, 'optiond'),
(111, 5, 20, -0.33, 'optione'),
(93, 5, 20, 1, 'optiond'),
(143, 5, 20, -0.33, 'optiona'),
(162, 5, 20, 1, 'optiond'),
(73, 5, 20, 1, 'optiond'),
(80, 5, 20, 1, 'optiond'),
(81, 5, 20, -0.33, 'optione'),
(56, 5, 20, 1, 'optiond'),
(83, 5, 20, 1, 'optiond'),
(124, 5, 20, -0.33, 'optionb'),
(127, 5, 20, -0.33, 'optione'),
(123, 5, 20, 1, 'optiond'),
(98, 5, 20, -0.33, 'optione'),
(100, 5, 20, 1, 'optiond'),
(65, 5, 20, 1, 'optiond'),
(68, 5, 20, 1, 'optiond'),
(114, 5, 20, 1, 'optiond'),
(128, 5, 20, 1, 'optiond'),
(95, 5, 20, 1, 'optiond'),
(76, 5, 20, -0.33, 'optiona'),
(22, 5, 20, -0.33, 'optione'),
(142, 5, 20, -0.33, 'optionb'),
(44, 5, 20, -0.33, 'optione'),
(145, 5, 20, -0.33, 'optione'),
(75, 5, 20, -0.33, 'optione'),
(119, 5, 20, -0.33, 'optione'),
(116, 5, 20, 1, 'optiond'),
(77, 5, 21, 1, 'optionc'),
(60, 5, 21, -0.33, 'optionb'),
(67, 5, 21, -0.33, 'optionb'),
(62, 5, 21, -0.33, 'optionb'),
(99, 5, 21, 1, 'optionc'),
(130, 5, 21, -0.33, 'optionb'),
(158, 5, 21, -0.33, 'optionb'),
(102, 5, 21, -0.33, 'optionb'),
(87, 5, 21, -0.33, 'optionb'),
(88, 5, 21, -0.33, 'optionb'),
(101, 5, 21, -0.33, 'optionb'),
(108, 5, 21, -0.33, 'optionb'),
(96, 5, 21, -0.33, 'optionb'),
(36, 5, 21, -0.33, 'optionb'),
(162, 5, 21, 1, 'optionc'),
(73, 5, 21, -0.33, 'optionb'),
(81, 5, 21, -0.33, 'optionb'),
(56, 5, 21, -0.33, 'optionb'),
(83, 5, 21, 1, 'optionc'),
(124, 5, 21, -0.33, 'optiond'),
(127, 5, 21, -0.33, 'optionb'),
(112, 5, 21, -0.33, 'optiond'),
(123, 5, 21, -0.33, 'optionb'),
(90, 5, 21, -0.33, 'optionb'),
(86, 5, 21, 1, 'optionc'),
(98, 5, 21, -0.33, 'optionb'),
(95, 5, 21, 1, 'optionc'),
(22, 5, 21, 1, 'optionc'),
(142, 5, 21, -0.33, 'optionb'),
(145, 5, 21, -0.33, 'optionb'),
(119, 5, 21, -0.33, 'optionb'),
(20, 5, 21, -0.33, 'optionb'),
(94, 5, 21, -0.33, 'optionb'),
(107, 5, 22, 1, 'optiond'),
(152, 5, 22, -0.33, 'optionb'),
(85, 5, 22, 1, 'optiond'),
(77, 5, 22, 1, 'optiond'),
(67, 5, 22, 1, 'optiond'),
(144, 5, 22, -0.33, 'optionc'),
(62, 5, 22, 1, 'optiond'),
(63, 5, 22, 1, 'optiond'),
(99, 5, 22, 1, 'optiond'),
(130, 5, 22, 1, 'optiond'),
(121, 5, 22, 1, 'optiond'),
(78, 5, 22, -0.33, 'optionc'),
(74, 5, 22, 1, 'optiond'),
(158, 5, 22, 1, 'optiond'),
(102, 5, 22, -0.33, 'optionb'),
(87, 5, 22, -0.33, 'optionb'),
(88, 5, 22, -0.33, 'optionb'),
(101, 5, 22, 1, 'optiond'),
(52, 5, 22, 1, 'optiond'),
(39, 5, 22, 1, 'optiond'),
(108, 5, 22, 1, 'optiond'),
(96, 5, 22, -0.33, 'optionb'),
(160, 5, 22, 1, 'optiond'),
(153, 5, 22, 1, 'optiond'),
(47, 5, 22, -0.33, 'optione'),
(36, 5, 22, 1, 'optiond'),
(111, 5, 22, 1, 'optiond'),
(93, 5, 22, 1, 'optiond'),
(143, 5, 22, -0.33, 'optionb'),
(162, 5, 22, 1, 'optiond'),
(73, 5, 22, -0.33, 'optionb'),
(80, 5, 22, 1, 'optiond'),
(81, 5, 22, 1, 'optiond'),
(83, 5, 22, 1, 'optiond'),
(124, 5, 22, 1, 'optiond'),
(127, 5, 22, 1, 'optiond'),
(112, 5, 22, 1, 'optiond'),
(123, 5, 22, 1, 'optiond'),
(90, 5, 22, 1, 'optiond'),
(86, 5, 22, 1, 'optiond'),
(98, 5, 22, -0.33, 'optionb'),
(100, 5, 22, 1, 'optiond'),
(65, 5, 22, 1, 'optiond'),
(68, 5, 22, 1, 'optiond'),
(114, 5, 22, 1, 'optiond'),
(128, 5, 22, 1, 'optiond'),
(95, 5, 22, 1, 'optiond'),
(76, 5, 22, 1, 'optiond'),
(22, 5, 22, 1, 'optiond'),
(44, 5, 22, 1, 'optiond'),
(113, 5, 22, 1, 'optiond'),
(145, 5, 22, 1, 'optiond'),
(75, 5, 22, 1, 'optiond'),
(119, 5, 22, 1, 'optiond'),
(20, 5, 22, 1, 'optiond'),
(28, 5, 22, 1, 'optiond'),
(122, 5, 22, 1, 'optiond'),
(94, 5, 22, 1, 'optiond'),
(116, 5, 22, 1, 'optiond'),
(79, 5, 22, 1, 'optiond'),
(107, 5, 23, 1, 'optionc'),
(77, 5, 23, 1, 'optionc'),
(67, 5, 23, 1, 'optionc'),
(144, 5, 23, 1, 'optionc'),
(62, 5, 23, 1, 'optionc'),
(63, 5, 23, 1, 'optionc'),
(130, 5, 23, -0.33, 'optiona'),
(74, 5, 23, 1, 'optionc'),
(102, 5, 23, 1, 'optionc'),
(87, 5, 23, 1, 'optionc'),
(88, 5, 23, -0.33, 'optiona'),
(52, 5, 23, 1, 'optionc'),
(96, 5, 23, 1, 'optionc'),
(153, 5, 23, 1, 'optionc'),
(36, 5, 23, 1, 'optionc'),
(111, 5, 23, -0.33, 'optiond'),
(93, 5, 23, 1, 'optionc'),
(143, 5, 23, 1, 'optionc'),
(162, 5, 23, 1, 'optionc'),
(73, 5, 23, 1, 'optionc'),
(80, 5, 23, 1, 'optionc'),
(81, 5, 23, 1, 'optionc'),
(56, 5, 23, 1, 'optionc'),
(83, 5, 23, 1, 'optionc'),
(124, 5, 23, 1, 'optionc'),
(127, 5, 23, 1, 'optionc'),
(112, 5, 23, 1, 'optionc'),
(90, 5, 23, 1, 'optionc'),
(86, 5, 23, 1, 'optionc'),
(98, 5, 23, 1, 'optionc'),
(65, 5, 23, -0.33, 'optiond'),
(114, 5, 23, 1, 'optionc'),
(95, 5, 23, 1, 'optionc'),
(22, 5, 23, 1, 'optionc'),
(44, 5, 23, -0.33, 'optionb'),
(113, 5, 23, -0.33, 'optiond'),
(145, 5, 23, 1, 'optionc'),
(119, 5, 23, 1, 'optionc'),
(20, 5, 23, 1, 'optionc'),
(94, 5, 23, 1, 'optionc'),
(116, 5, 23, 1, 'optionc'),
(70, 5, 24, 1, 'optiona'),
(152, 5, 24, 1, 'optiona'),
(85, 5, 24, 1, 'optiona'),
(60, 5, 24, 1, 'optiona'),
(67, 5, 24, 1, 'optiona'),
(144, 5, 24, 1, 'optiona'),
(62, 5, 24, 1, 'optiona'),
(99, 5, 24, 1, 'optiona'),
(130, 5, 24, -0.33, 'optionb'),
(78, 5, 24, 1, 'optiona'),
(74, 5, 24, 1, 'optiona'),
(102, 5, 24, 1, 'optiona'),
(87, 5, 24, 1, 'optiona'),
(88, 5, 24, -0.33, 'optionb'),
(101, 5, 24, 1, 'optiona'),
(52, 5, 24, 1, 'optiona'),
(39, 5, 24, 1, 'optiona'),
(96, 5, 24, 1, 'optiona'),
(160, 5, 24, 1, 'optiona'),
(153, 5, 24, 1, 'optiona'),
(47, 5, 24, -0.33, 'optiond'),
(36, 5, 24, 1, 'optiona'),
(111, 5, 24, 1, 'optiona'),
(141, 5, 24, 1, 'optiona'),
(93, 5, 24, 1, 'optiona'),
(143, 5, 24, 1, 'optiona'),
(162, 5, 24, 1, 'optiona'),
(73, 5, 24, 1, 'optiona'),
(80, 5, 24, 1, 'optiona'),
(83, 5, 24, 1, 'optiona'),
(124, 5, 24, 1, 'optiona'),
(127, 5, 24, 1, 'optiona'),
(112, 5, 24, 1, 'optiona'),
(123, 5, 24, 1, 'optiona'),
(90, 5, 24, 1, 'optiona'),
(65, 5, 24, 1, 'optiona'),
(128, 5, 24, 1, 'optiona'),
(95, 5, 24, 1, 'optiona'),
(76, 5, 24, -0.33, 'optionb'),
(142, 5, 24, 1, 'optiona'),
(44, 5, 24, 1, 'optiona'),
(113, 5, 24, -0.33, 'optionb'),
(145, 5, 24, 1, 'optiona'),
(75, 5, 24, 1, 'optiona'),
(20, 5, 24, 1, 'optiona'),
(116, 5, 24, 1, 'optiona'),
(79, 5, 24, 1, 'optiona'),
(107, 5, 25, 1, 'optiona'),
(70, 5, 25, -0.33, 'optionc'),
(152, 5, 25, -0.33, 'optiond'),
(85, 5, 25, -0.33, 'optiond'),
(60, 5, 25, 1, 'optiona'),
(67, 5, 25, 1, 'optiona'),
(144, 5, 25, 1, 'optiona'),
(62, 5, 25, 1, 'optiona'),
(63, 5, 25, 1, 'optiona'),
(99, 5, 25, -0.33, 'optionb'),
(130, 5, 25, -0.33, 'optiond'),
(121, 5, 25, 1, 'optiona'),
(78, 5, 25, -0.33, 'optiond'),
(102, 5, 25, 1, 'optiona'),
(52, 5, 25, 1, 'optiona'),
(39, 5, 25, 1, 'optiona'),
(96, 5, 25, 1, 'optiona'),
(153, 5, 25, 1, 'optiona'),
(47, 5, 25, -0.33, 'optiond'),
(36, 5, 25, 1, 'optiona'),
(141, 5, 25, -0.33, 'optiond'),
(93, 5, 25, -0.33, 'optiond'),
(143, 5, 25, 1, 'optiona'),
(162, 5, 25, 1, 'optiona'),
(73, 5, 25, 1, 'optiona'),
(80, 5, 25, 1, 'optiona'),
(81, 5, 25, 1, 'optiona'),
(56, 5, 25, 1, 'optiona'),
(83, 5, 25, 1, 'optiona'),
(124, 5, 25, 1, 'optiona'),
(127, 5, 25, 1, 'optiona'),
(123, 5, 25, 1, 'optiona'),
(90, 5, 25, 1, 'optiona'),
(86, 5, 25, 1, 'optiona'),
(98, 5, 25, 1, 'optiona'),
(65, 5, 25, 1, 'optiona'),
(68, 5, 25, 1, 'optiona'),
(114, 5, 25, 1, 'optiona'),
(128, 5, 25, 1, 'optiona'),
(95, 5, 25, 1, 'optiona'),
(76, 5, 25, -0.33, 'optiond'),
(22, 5, 25, 1, 'optiona'),
(142, 5, 25, 1, 'optiona'),
(44, 5, 25, -0.33, 'optionc'),
(113, 5, 25, -0.33, 'optiond'),
(145, 5, 25, 1, 'optiona'),
(75, 5, 25, -0.33, 'optiond'),
(119, 5, 25, -0.33, 'optionc'),
(20, 5, 25, 1, 'optiona'),
(28, 5, 25, 1, 'optiona'),
(94, 5, 25, 1, 'optiona'),
(116, 5, 25, 1, 'optiona'),
(79, 5, 25, 1, 'optiona'),
(107, 5, 26, -0.66, 'optionb'),
(152, 5, 26, 2, 'optionc'),
(85, 5, 26, 2, 'optionc'),
(60, 5, 26, -0.66, 'optiona'),
(67, 5, 26, 2, 'optionc'),
(62, 5, 26, 2, 'optionc'),
(130, 5, 26, -0.66, 'optione'),
(121, 5, 26, -0.66, 'optiond'),
(78, 5, 26, 2, 'optionc'),
(74, 5, 26, 2, 'optionc'),
(158, 5, 26, 2, 'optionc'),
(102, 5, 26, 2, 'optionc'),
(87, 5, 26, 2, 'optionc'),
(88, 5, 26, 2, 'optionc'),
(101, 5, 26, -0.66, 'optione'),
(39, 5, 26, 2, 'optionc'),
(108, 5, 26, -0.66, 'optionb'),
(96, 5, 26, 2, 'optionc'),
(160, 5, 26, 2, 'optionc'),
(153, 5, 26, 2, 'optionc'),
(47, 5, 26, 2, 'optionc'),
(36, 5, 26, 2, 'optionc'),
(111, 5, 26, -0.66, 'optionb'),
(141, 5, 26, -0.66, 'optione'),
(93, 5, 26, -0.66, 'optionb'),
(143, 5, 26, 2, 'optionc'),
(162, 5, 26, 2, 'optionc'),
(73, 5, 26, 2, 'optionc'),
(80, 5, 26, -0.66, 'optione'),
(81, 5, 26, -0.66, 'optiond'),
(56, 5, 26, -0.66, 'optiona'),
(83, 5, 26, 2, 'optionc'),
(123, 5, 26, 2, 'optionc'),
(90, 5, 26, -0.66, 'optione'),
(98, 5, 26, 2, 'optionc'),
(65, 5, 26, -0.66, 'optionb'),
(68, 5, 26, -0.66, 'optiond'),
(128, 5, 26, 2, 'optionc'),
(95, 5, 26, 2, 'optionc'),
(76, 5, 26, -0.66, 'optionb'),
(22, 5, 26, 2, 'optionc'),
(142, 5, 26, -0.66, 'optionb'),
(75, 5, 26, -0.66, 'optiond'),
(20, 5, 26, -0.66, 'optiona'),
(122, 5, 26, -0.66, 'optionb'),
(94, 5, 26, 2, 'optionc'),
(116, 5, 26, 2, 'optionc'),
(107, 5, 27, -0.66, 'optiona'),
(152, 5, 27, -0.66, 'optionb'),
(85, 5, 27, -0.66, 'optionb'),
(77, 5, 27, 2, 'optiond'),
(60, 5, 27, 2, 'optiond'),
(67, 5, 27, -0.66, 'optionc'),
(144, 5, 27, -0.66, 'optionc'),
(62, 5, 27, -0.66, 'optionc'),
(63, 5, 27, 2, 'optiond'),
(99, 5, 27, -0.66, 'optionb'),
(130, 5, 27, -0.66, 'optionc'),
(78, 5, 27, -0.66, 'optionc'),
(74, 5, 27, -0.66, 'optiona'),
(102, 5, 27, 2, 'optiond'),
(101, 5, 27, 2, 'optiond'),
(108, 5, 27, 2, 'optiond'),
(96, 5, 27, -0.66, 'optionc'),
(160, 5, 27, -0.66, 'optionb'),
(153, 5, 27, -0.66, 'optionc'),
(36, 5, 27, -0.66, 'optionb'),
(141, 5, 27, -0.66, 'optionc'),
(93, 5, 27, 2, 'optiond'),
(143, 5, 27, 2, 'optiond'),
(73, 5, 27, -0.66, 'optionc'),
(80, 5, 27, -0.66, 'optionc'),
(81, 5, 27, -0.66, 'optionc'),
(56, 5, 27, -0.66, 'optionc'),
(124, 5, 27, 2, 'optiond'),
(127, 5, 27, -0.66, 'optionb'),
(123, 5, 27, -0.66, 'optionc'),
(90, 5, 27, -0.66, 'optionc'),
(98, 5, 27, -0.66, 'optionc'),
(100, 5, 27, -0.66, 'optionb'),
(65, 5, 27, 2, 'optiond'),
(68, 5, 27, -0.66, 'optionc'),
(114, 5, 27, 2, 'optiond'),
(95, 5, 27, -0.66, 'optionc'),
(76, 5, 27, 2, 'optiond'),
(22, 5, 27, -0.66, 'optionc'),
(142, 5, 27, -0.66, 'optionc'),
(44, 5, 27, -0.66, 'optionc'),
(75, 5, 27, -0.66, 'optionb'),
(20, 5, 27, -0.66, 'optionb'),
(122, 5, 27, 2, 'optiond'),
(94, 5, 27, 2, 'optiond'),
(116, 5, 27, -0.66, 'optionc'),
(107, 5, 28, 2, 'optionb'),
(70, 5, 28, 2, 'optionb'),
(152, 5, 28, 2, 'optionb'),
(85, 5, 28, 2, 'optionb'),
(77, 5, 28, 2, 'optionb'),
(60, 5, 28, 2, 'optionb'),
(67, 5, 28, 2, 'optionb'),
(144, 5, 28, 2, 'optionb'),
(62, 5, 28, 2, 'optionb'),
(63, 5, 28, 2, 'optionb'),
(99, 5, 28, 2, 'optionb'),
(130, 5, 28, 2, 'optionb'),
(121, 5, 28, 2, 'optionb'),
(78, 5, 28, -0.66, 'optionc'),
(74, 5, 28, -0.66, 'optione'),
(158, 5, 28, 2, 'optionb'),
(102, 5, 28, 2, 'optionb'),
(87, 5, 28, 2, 'optionb'),
(88, 5, 28, 2, 'optionb'),
(101, 5, 28, 2, 'optionb'),
(52, 5, 28, 2, 'optionb'),
(39, 5, 28, 2, 'optionb'),
(108, 5, 28, 2, 'optionb'),
(96, 5, 28, 2, 'optionb'),
(160, 5, 28, 2, 'optionb'),
(153, 5, 28, 2, 'optionb'),
(47, 5, 28, -0.66, 'optionc'),
(36, 5, 28, 2, 'optionb'),
(111, 5, 28, 2, 'optionb'),
(141, 5, 28, 2, 'optionb'),
(93, 5, 28, 2, 'optionb'),
(143, 5, 28, 2, 'optionb'),
(162, 5, 28, 2, 'optionb'),
(73, 5, 28, 2, 'optionb'),
(80, 5, 28, 2, 'optionb'),
(81, 5, 28, 2, 'optionb'),
(56, 5, 28, 2, 'optionb'),
(83, 5, 28, 2, 'optionb'),
(124, 5, 28, 2, 'optionb'),
(127, 5, 28, 2, 'optionb'),
(112, 5, 28, 2, 'optionb'),
(123, 5, 28, -0.66, 'optiond'),
(90, 5, 28, 2, 'optionb'),
(86, 5, 28, 2, 'optionb'),
(98, 5, 28, 2, 'optionb'),
(100, 5, 28, 2, 'optionb'),
(65, 5, 28, 2, 'optionb'),
(68, 5, 28, 2, 'optionb'),
(114, 5, 28, 2, 'optionb'),
(128, 5, 28, 2, 'optionb'),
(95, 5, 28, 2, 'optionb'),
(76, 5, 28, 2, 'optionb'),
(22, 5, 28, 2, 'optionb'),
(142, 5, 28, 2, 'optionb'),
(44, 5, 28, -0.66, 'optiond'),
(145, 5, 28, -0.66, 'optionc'),
(75, 5, 28, 2, 'optionb'),
(119, 5, 28, 2, 'optionb'),
(20, 5, 28, 2, 'optionb'),
(28, 5, 28, 2, 'optionb'),
(122, 5, 28, 2, 'optionb'),
(94, 5, 28, 2, 'optionb'),
(116, 5, 28, 2, 'optionb'),
(79, 5, 28, 2, 'optionb'),
(70, 5, 29, 2, 'optiond'),
(152, 5, 29, -0.66, 'optionc'),
(77, 5, 29, 2, 'optiond'),
(60, 5, 29, 2, 'optiond'),
(67, 5, 29, 2, 'optiond'),
(62, 5, 29, 2, 'optiond'),
(63, 5, 29, -0.66, 'optionc'),
(99, 5, 29, 2, 'optiond'),
(130, 5, 29, -0.66, 'optiona'),
(121, 5, 29, 2, 'optiond'),
(78, 5, 29, -0.66, 'optionc'),
(74, 5, 29, -0.66, 'optionc'),
(87, 5, 29, 2, 'optiond'),
(101, 5, 29, -0.66, 'optionb'),
(52, 5, 29, 2, 'optiond'),
(39, 5, 29, 2, 'optiond'),
(96, 5, 29, -0.66, 'optionc'),
(160, 5, 29, 2, 'optiond'),
(153, 5, 29, -0.66, 'optionc'),
(47, 5, 29, 2, 'optiond'),
(36, 5, 29, 2, 'optiond'),
(141, 5, 29, -0.66, 'optiona'),
(93, 5, 29, 2, 'optiond'),
(143, 5, 29, 2, 'optiond'),
(162, 5, 29, 2, 'optiond'),
(73, 5, 29, -0.66, 'optionc'),
(80, 5, 29, 2, 'optiond'),
(81, 5, 29, 2, 'optiond'),
(56, 5, 29, 2, 'optiond'),
(83, 5, 29, 2, 'optiond'),
(127, 5, 29, 2, 'optiond'),
(112, 5, 29, 2, 'optiond'),
(123, 5, 29, 2, 'optiond'),
(90, 5, 29, 2, 'optiond'),
(86, 5, 29, 2, 'optiond'),
(98, 5, 29, 2, 'optiond'),
(100, 5, 29, 2, 'optiond'),
(65, 5, 29, 2, 'optiond'),
(68, 5, 29, 2, 'optiond'),
(114, 5, 29, 2, 'optiond'),
(128, 5, 29, 2, 'optiond'),
(95, 5, 29, 2, 'optiond'),
(76, 5, 29, 2, 'optiond'),
(22, 5, 29, 2, 'optiond'),
(142, 5, 29, 2, 'optiond'),
(44, 5, 29, -0.66, 'optionc'),
(113, 5, 29, -0.66, 'optionc'),
(145, 5, 29, 2, 'optiond'),
(75, 5, 29, 2, 'optiond'),
(119, 5, 29, 2, 'optiond'),
(20, 5, 29, 2, 'optiond'),
(28, 5, 29, 2, 'optiond'),
(122, 5, 29, 2, 'optiond'),
(94, 5, 29, 2, 'optiond'),
(116, 5, 29, 2, 'optiond'),
(79, 5, 29, 2, 'optiond'),
(77, 5, 30, 2, 'optionb'),
(67, 5, 30, 2, 'optionb'),
(62, 5, 30, 2, 'optionb'),
(88, 5, 30, 2, 'optionb'),
(160, 5, 30, 2, 'optionb'),
(47, 5, 30, -0.66, 'optiond'),
(141, 5, 30, -0.66, 'optiona'),
(93, 5, 30, 2, 'optionb'),
(73, 5, 30, 2, 'optionb'),
(80, 5, 30, 2, 'optionb'),
(81, 5, 30, -0.66, 'optiona'),
(56, 5, 30, 2, 'optionb'),
(83, 5, 30, 2, 'optionb'),
(124, 5, 30, 2, 'optionb'),
(90, 5, 30, 2, 'optionb'),
(100, 5, 30, 2, 'optionb'),
(65, 5, 30, 2, 'optionb'),
(114, 5, 30, 2, 'optionb'),
(128, 5, 30, 2, 'optionb'),
(95, 5, 30, 2, 'optionb'),
(22, 5, 30, 2, 'optionb'),
(145, 5, 30, 2, 'optionb'),
(20, 5, 30, -0.66, 'optionc'),
(28, 5, 30, -0.66, 'optionc'),
(116, 5, 30, 2, 'optionb'),
(107, 5, 31, -0.66, 'optionb'),
(70, 5, 31, 2, 'optionc'),
(152, 5, 31, -0.66, 'optionb'),
(85, 5, 31, -0.66, 'optionb'),
(77, 5, 31, -0.66, 'optiona'),
(60, 5, 31, -0.66, 'optionb'),
(67, 5, 31, -0.66, 'optionb'),
(144, 5, 31, -0.66, 'optiona'),
(62, 5, 31, -0.66, 'optionb'),
(63, 5, 31, -0.66, 'optionb'),
(99, 5, 31, -0.66, 'optiona'),
(130, 5, 31, -0.66, 'optiona'),
(121, 5, 31, -0.66, 'optiona'),
(78, 5, 31, -0.66, 'optiona'),
(74, 5, 31, -0.66, 'optiona'),
(158, 5, 31, -0.66, 'optiona'),
(102, 5, 31, 2, 'optionc'),
(87, 5, 31, -0.66, 'optiona'),
(88, 5, 31, -0.66, 'optiona'),
(101, 5, 31, 2, 'optionc'),
(52, 5, 31, -0.66, 'optiond'),
(39, 5, 31, -0.66, 'optiona'),
(108, 5, 31, -0.66, 'optiona'),
(96, 5, 31, 2, 'optionc'),
(160, 5, 31, -0.66, 'optionb'),
(153, 5, 31, 2, 'optionc'),
(47, 5, 31, -0.66, 'optiona'),
(36, 5, 31, -0.66, 'optiona'),
(111, 5, 31, 2, 'optionc'),
(141, 5, 31, -0.66, 'optiona'),
(93, 5, 31, 2, 'optionc'),
(143, 5, 31, -0.66, 'optiona'),
(162, 5, 31, 2, 'optionc'),
(73, 5, 31, 2, 'optionc'),
(80, 5, 31, -0.66, 'optiona'),
(81, 5, 31, 2, 'optionc'),
(56, 5, 31, 2, 'optionc'),
(83, 5, 31, 2, 'optionc'),
(124, 5, 31, -0.66, 'optiona'),
(127, 5, 31, 2, 'optionc'),
(112, 5, 31, -0.66, 'optiona'),
(123, 5, 31, -0.66, 'optiona'),
(90, 5, 31, 2, 'optionc'),
(86, 5, 31, -0.66, 'optiona'),
(98, 5, 31, -0.66, 'optiona'),
(100, 5, 31, 2, 'optionc'),
(68, 5, 31, 2, 'optionc'),
(65, 5, 31, 2, 'optionc'),
(114, 5, 31, -0.66, 'optiona'),
(128, 5, 31, -0.66, 'optiona'),
(95, 5, 31, -0.66, 'optionb'),
(22, 5, 31, 2, 'optionc'),
(142, 5, 31, -0.66, 'optiona'),
(44, 5, 31, -0.66, 'optiona'),
(113, 5, 31, -0.66, 'optiona'),
(145, 5, 31, -0.66, 'optiona'),
(75, 5, 31, -0.66, 'optiona'),
(119, 5, 31, 2, 'optionc'),
(20, 5, 31, 2, 'optionc'),
(28, 5, 31, 2, 'optionc'),
(122, 5, 31, -0.66, 'optiona'),
(94, 5, 31, 2, 'optionc'),
(116, 5, 31, 2, 'optionc'),
(79, 5, 31, 2, 'optionc'),
(107, 5, 32, 2, 'optionb'),
(152, 5, 32, 2, 'optionb'),
(85, 5, 32, 2, 'optionb'),
(60, 5, 32, -0.66, 'optiona'),
(67, 5, 32, 2, 'optionb'),
(62, 5, 32, -0.66, 'optiona'),
(63, 5, 32, 2, 'optionb'),
(130, 5, 32, -0.66, 'optiona'),
(78, 5, 32, -0.66, 'optiona'),
(102, 5, 32, 2, 'optionb'),
(101, 5, 32, 2, 'optionb'),
(52, 5, 32, 2, 'optionb'),
(39, 5, 32, 2, 'optionb'),
(96, 5, 32, 2, 'optionb'),
(160, 5, 32, -0.66, 'optiona'),
(153, 5, 32, 2, 'optionb'),
(36, 5, 32, 2, 'optionb'),
(111, 5, 32, 2, 'optionb'),
(93, 5, 32, 2, 'optionb'),
(162, 5, 32, 2, 'optionb'),
(73, 5, 32, 2, 'optionb'),
(81, 5, 32, 2, 'optionb'),
(56, 5, 32, 2, 'optionb'),
(83, 5, 32, 2, 'optionb'),
(124, 5, 32, 2, 'optionb'),
(112, 5, 32, -0.66, 'optiona'),
(123, 5, 32, 2, 'optionb'),
(90, 5, 32, 2, 'optionb'),
(86, 5, 32, -0.66, 'optiona'),
(98, 5, 32, 2, 'optionb'),
(100, 5, 32, 2, 'optionb'),
(68, 5, 32, 2, 'optionb'),
(65, 5, 32, 2, 'optionb'),
(128, 5, 32, 2, 'optionb'),
(95, 5, 32, 2, 'optionb'),
(22, 5, 32, 2, 'optionb'),
(142, 5, 32, 2, 'optionb'),
(145, 5, 32, 2, 'optionb'),
(119, 5, 32, 2, 'optionb'),
(20, 5, 32, 2, 'optionb'),
(122, 5, 32, -0.66, 'optiona'),
(94, 5, 32, 2, 'optionb'),
(152, 5, 33, 2, 'optione'),
(77, 5, 33, -0.66, 'optiona'),
(60, 5, 33, 2, 'optione'),
(67, 5, 33, 2, 'optione'),
(144, 5, 33, 2, 'optione'),
(78, 5, 33, -0.66, 'optionb'),
(74, 5, 33, -0.66, 'optiona'),
(102, 5, 33, 2, 'optione'),
(101, 5, 33, -0.66, 'optionb'),
(52, 5, 33, -0.66, 'optionc'),
(108, 5, 33, 2, 'optione'),
(160, 5, 33, -0.66, 'optionb'),
(153, 5, 33, -0.66, 'optionb'),
(47, 5, 33, -0.66, 'optionc'),
(36, 5, 33, 2, 'optione'),
(111, 5, 33, 2, 'optione'),
(93, 5, 33, -0.66, 'optionc'),
(73, 5, 33, 2, 'optione'),
(81, 5, 33, 2, 'optione'),
(56, 5, 33, 2, 'optione'),
(83, 5, 33, -0.66, 'optionb'),
(127, 5, 33, -0.66, 'optionb'),
(100, 5, 33, -0.66, 'optionc'),
(65, 5, 33, -0.66, 'optionb'),
(22, 5, 33, -0.66, 'optionc'),
(145, 5, 33, 2, 'optione'),
(75, 5, 33, -0.66, 'optiona'),
(20, 5, 33, -0.66, 'optiond'),
(122, 5, 33, 2, 'optione'),
(116, 5, 33, 2, 'optione'),
(107, 5, 34, 2, 'optionb'),
(70, 5, 34, -0.66, 'optiona'),
(77, 5, 34, 2, 'optionb'),
(67, 5, 34, 2, 'optionb'),
(144, 5, 34, 2, 'optionb'),
(62, 5, 34, -0.66, 'optiond'),
(63, 5, 34, -0.66, 'optiona'),
(99, 5, 34, -0.66, 'optiona'),
(121, 5, 34, 2, 'optionb'),
(78, 5, 34, -0.66, 'optiona'),
(74, 5, 34, 2, 'optionb'),
(158, 5, 34, -0.66, 'optiond'),
(87, 5, 34, -0.66, 'optiond'),
(88, 5, 34, -0.66, 'optiond'),
(101, 5, 34, 2, 'optionb'),
(39, 5, 34, 2, 'optionb'),
(108, 5, 34, 2, 'optionb'),
(96, 5, 34, 2, 'optionb'),
(153, 5, 34, 2, 'optionb'),
(47, 5, 34, 2, 'optionb'),
(36, 5, 34, 2, 'optionb'),
(111, 5, 34, -0.66, 'optione'),
(93, 5, 34, 2, 'optionb'),
(143, 5, 34, -0.66, 'optionc'),
(162, 5, 34, 2, 'optionb'),
(73, 5, 34, 2, 'optionb'),
(80, 5, 34, -0.66, 'optionc'),
(81, 5, 34, 2, 'optionb'),
(83, 5, 34, 2, 'optionb'),
(124, 5, 34, 2, 'optionb'),
(127, 5, 34, -0.66, 'optiond'),
(123, 5, 34, -0.66, 'optiona'),
(86, 5, 34, -0.66, 'optiona'),
(98, 5, 34, 2, 'optionb'),
(68, 5, 34, 2, 'optionb'),
(65, 5, 34, 2, 'optionb'),
(128, 5, 34, 2, 'optionb'),
(95, 5, 34, -0.66, 'optiona'),
(22, 5, 34, -0.66, 'optiona'),
(142, 5, 34, 2, 'optionb'),
(113, 5, 34, 2, 'optionb'),
(145, 5, 34, 2, 'optionb'),
(28, 5, 34, 2, 'optionb'),
(94, 5, 34, 2, 'optionb'),
(116, 5, 34, 2, 'optionb'),
(79, 5, 34, -0.66, 'optiona'),
(60, 5, 35, 2, 'optionc'),
(67, 5, 35, 2, 'optionc'),
(62, 5, 35, 2, 'optionc'),
(87, 5, 35, -0.66, 'optionb'),
(39, 5, 35, 2, 'optionc'),
(96, 5, 35, 2, 'optionc'),
(36, 5, 35, 2, 'optionc'),
(111, 5, 35, 2, 'optionc'),
(93, 5, 35, 2, 'optionc'),
(143, 5, 35, 2, 'optionc'),
(81, 5, 35, 2, 'optionc'),
(56, 5, 35, 2, 'optionc'),
(112, 5, 35, 2, 'optionc'),
(65, 5, 35, 2, 'optionc'),
(22, 5, 35, 2, 'optionc'),
(142, 5, 35, 2, 'optionc'),
(145, 5, 35, 2, 'optionc'),
(20, 5, 35, 2, 'optionc'),
(94, 5, 35, 2, 'optionc'),
(107, 5, 36, 2, 'optionc'),
(70, 5, 36, 2, 'optionc'),
(85, 5, 36, 2, 'optionc'),
(77, 5, 36, 2, 'optionc'),
(60, 5, 36, -0.66, 'optiond'),
(67, 5, 36, -0.66, 'optiond'),
(62, 5, 36, -0.66, 'optiond'),
(63, 5, 36, 2, 'optionc'),
(99, 5, 36, 2, 'optionc'),
(130, 5, 36, -0.66, 'optiond'),
(121, 5, 36, -0.66, 'optiond'),
(78, 5, 36, 2, 'optionc'),
(74, 5, 36, 2, 'optionc'),
(158, 5, 36, 2, 'optionc'),
(102, 5, 36, -0.66, 'optiond'),
(87, 5, 36, 2, 'optionc'),
(88, 5, 36, 2, 'optionc'),
(101, 5, 36, -0.66, 'optiond'),
(52, 5, 36, 2, 'optionc'),
(108, 5, 36, -0.66, 'optiond'),
(96, 5, 36, 2, 'optionc'),
(160, 5, 36, 2, 'optionc'),
(153, 5, 36, -0.66, 'optiond'),
(47, 5, 36, 2, 'optionc'),
(36, 5, 36, -0.66, 'optiond'),
(111, 5, 36, -0.66, 'optionb'),
(141, 5, 36, 2, 'optionc'),
(93, 5, 36, 2, 'optionc'),
(143, 5, 36, -0.66, 'optiond'),
(162, 5, 36, -0.66, 'optiond'),
(73, 5, 36, -0.66, 'optiond'),
(80, 5, 36, 2, 'optionc'),
(81, 5, 36, 2, 'optionc'),
(83, 5, 36, 2, 'optionc'),
(124, 5, 36, 2, 'optionc'),
(127, 5, 36, -0.66, 'optionb'),
(112, 5, 36, 2, 'optionc'),
(123, 5, 36, 2, 'optionc'),
(90, 5, 36, 2, 'optionc'),
(98, 5, 36, 2, 'optionc'),
(100, 5, 36, 2, 'optionc'),
(68, 5, 36, 2, 'optionc'),
(65, 5, 36, -0.66, 'optiond'),
(76, 5, 36, 2, 'optionc'),
(22, 5, 36, 2, 'optionc'),
(142, 5, 36, -0.66, 'optiond'),
(44, 5, 36, 2, 'optionc'),
(113, 5, 36, 2, 'optionc'),
(75, 5, 36, 2, 'optionc'),
(20, 5, 36, 2, 'optionc'),
(122, 5, 36, 2, 'optionc'),
(116, 5, 36, 2, 'optionc'),
(79, 5, 36, 2, 'optionc'),
(67, 5, 37, 2, 'optiona'),
(63, 5, 37, -0.66, 'optionb'),
(99, 5, 37, -0.66, 'optionc'),
(108, 5, 37, -0.66, 'optionb'),
(96, 5, 37, 2, 'optiona'),
(36, 5, 37, 2, 'optiona'),
(81, 5, 37, -0.66, 'optionb'),
(127, 5, 37, -0.66, 'optionb'),
(90, 5, 37, -0.66, 'optionb'),
(86, 5, 37, -0.66, 'optionb'),
(142, 5, 37, -0.66, 'optionc'),
(20, 5, 37, 2, 'optiona'),
(116, 5, 37, 2, 'optiona'),
(107, 5, 38, -0.66, 'optionc'),
(70, 5, 38, 2, 'optionb'),
(152, 5, 38, 2, 'optionb'),
(60, 5, 38, 2, 'optionb'),
(67, 5, 38, 2, 'optionb'),
(144, 5, 38, 2, 'optionb'),
(62, 5, 38, -0.66, 'optiona'),
(63, 5, 38, 2, 'optionb'),
(130, 5, 38, 2, 'optionb'),
(74, 5, 38, 2, 'optionb'),
(158, 5, 38, 2, 'optionb'),
(102, 5, 38, 2, 'optionb'),
(87, 5, 38, 2, 'optionb'),
(88, 5, 38, 2, 'optionb'),
(101, 5, 38, -0.66, 'optiona'),
(52, 5, 38, 2, 'optionb'),
(39, 5, 38, 2, 'optionb'),
(108, 5, 38, 2, 'optionb'),
(96, 5, 38, 2, 'optionb'),
(153, 5, 38, 2, 'optionb'),
(36, 5, 38, 2, 'optionb'),
(111, 5, 38, 2, 'optionb'),
(141, 5, 38, 2, 'optionb'),
(93, 5, 38, 2, 'optionb'),
(143, 5, 38, 2, 'optionb'),
(162, 5, 38, 2, 'optionb'),
(73, 5, 38, 2, 'optionb'),
(80, 5, 38, 2, 'optionb'),
(81, 5, 38, 2, 'optionb'),
(56, 5, 38, 2, 'optionb'),
(83, 5, 38, -0.66, 'optionc'),
(124, 5, 38, -0.66, 'optiona'),
(127, 5, 38, -0.66, 'optiona'),
(112, 5, 38, 2, 'optionb'),
(123, 5, 38, 2, 'optionb'),
(90, 5, 38, 2, 'optionb'),
(86, 5, 38, 2, 'optionb'),
(98, 5, 38, 2, 'optionb'),
(100, 5, 38, -0.66, 'optiona'),
(68, 5, 38, 2, 'optionb'),
(65, 5, 38, 2, 'optionb'),
(114, 5, 38, 2, 'optionb'),
(128, 5, 38, -0.66, 'optiona'),
(95, 5, 38, 2, 'optionb'),
(22, 5, 38, -0.66, 'optionc'),
(142, 5, 38, 2, 'optionb'),
(44, 5, 38, 2, 'optionb'),
(113, 5, 38, -0.66, 'optiona'),
(145, 5, 38, 2, 'optionb'),
(119, 5, 38, 2, 'optionb'),
(20, 5, 38, 2, 'optionb'),
(28, 5, 38, 2, 'optionb'),
(94, 5, 38, 2, 'optionb'),
(116, 5, 38, 2, 'optionb'),
(67, 5, 39, 2, 'optionc'),
(63, 5, 39, -0.66, 'optiond'),
(99, 5, 39, -0.66, 'optione'),
(78, 5, 39, -0.66, 'optionb'),
(158, 5, 39, -0.66, 'optiond'),
(88, 5, 39, -0.66, 'optiond'),
(101, 5, 39, -0.66, 'optiond'),
(36, 5, 39, 2, 'optionc'),
(111, 5, 39, -0.66, 'optione'),
(93, 5, 39, -0.66, 'optiond'),
(143, 5, 39, -0.66, 'optionb'),
(73, 5, 39, -0.66, 'optiond'),
(80, 5, 39, -0.66, 'optionb'),
(56, 5, 39, 2, 'optionc'),
(83, 5, 39, -0.66, 'optiond'),
(90, 5, 39, 2, 'optionc'),
(86, 5, 39, -0.66, 'optiond'),
(95, 5, 39, 2, 'optionc'),
(76, 5, 39, -0.66, 'optionb'),
(22, 5, 39, -0.66, 'optiond'),
(75, 5, 39, -0.66, 'optiond'),
(119, 5, 39, 2, 'optionc'),
(20, 5, 39, -0.66, 'optiond'),
(28, 5, 39, -0.66, 'optione'),
(122, 5, 39, -0.66, 'optione'),
(94, 5, 39, -0.66, 'optiond'),
(116, 5, 39, -0.66, 'optiond'),
(79, 5, 39, -0.66, 'optionb'),
(107, 5, 40, 2, 'optiond'),
(70, 5, 40, 2, 'optiond'),
(77, 5, 40, -0.66, 'optionc'),
(60, 5, 40, 2, 'optiond'),
(67, 5, 40, 2, 'optiond'),
(144, 5, 40, 2, 'optiond'),
(62, 5, 40, 2, 'optiond'),
(63, 5, 40, 2, 'optiond'),
(99, 5, 40, -0.66, 'optiona'),
(130, 5, 40, 2, 'optiond'),
(121, 5, 40, -0.66, 'optionc'),
(78, 5, 40, -0.66, 'optiona'),
(74, 5, 40, 2, 'optiond'),
(158, 5, 40, -0.66, 'optionb'),
(102, 5, 40, 2, 'optiond'),
(88, 5, 40, -0.66, 'optionb'),
(101, 5, 40, -0.66, 'optionc'),
(52, 5, 40, 2, 'optiond'),
(39, 5, 40, -0.66, 'optionb'),
(160, 5, 40, 2, 'optiond'),
(36, 5, 40, -0.66, 'optionc'),
(111, 5, 40, 2, 'optiond'),
(93, 5, 40, 2, 'optiond'),
(143, 5, 40, 2, 'optiond'),
(73, 5, 40, 2, 'optiond'),
(80, 5, 40, -0.66, 'optionc'),
(81, 5, 40, 2, 'optiond'),
(56, 5, 40, -0.66, 'optionb'),
(83, 5, 40, -0.66, 'optionc'),
(123, 5, 40, -0.66, 'optionc'),
(90, 5, 40, -0.66, 'optionc'),
(86, 5, 40, 2, 'optiond'),
(98, 5, 40, 2, 'optiond'),
(100, 5, 40, -0.66, 'optionb'),
(68, 5, 40, 2, 'optiond'),
(65, 5, 40, -0.66, 'optionc'),
(114, 5, 40, 2, 'optiond'),
(128, 5, 40, -0.66, 'optionc'),
(95, 5, 40, 2, 'optiond'),
(76, 5, 40, 2, 'optiond'),
(22, 5, 40, -0.66, 'optionc'),
(142, 5, 40, -0.66, 'optionc'),
(113, 5, 40, 2, 'optiond'),
(145, 5, 40, 2, 'optiond'),
(75, 5, 40, -0.66, 'optionc'),
(119, 5, 40, 2, 'optiond'),
(20, 5, 40, -0.66, 'optionb'),
(28, 5, 40, -0.66, 'optionc'),
(94, 5, 40, 2, 'optiond'),
(116, 5, 40, 2, 'optiond'),
(79, 5, 40, -0.66, 'optionc'),
(144, 5, 41, 2, 'optiond'),
(62, 5, 41, 2, 'optiond'),
(63, 5, 41, 2, 'optiond'),
(87, 5, 41, -0.66, 'optiona'),
(88, 5, 41, -0.66, 'optiona'),
(101, 5, 41, 2, 'optiond'),
(52, 5, 41, 2, 'optiond'),
(36, 5, 41, -0.66, 'optione'),
(83, 5, 41, -0.66, 'optionc'),
(127, 5, 41, 2, 'optiond'),
(123, 5, 41, -0.66, 'optionc'),
(90, 5, 41, 2, 'optiond'),
(65, 5, 41, -0.66, 'optionc'),
(128, 5, 41, 2, 'optiond'),
(95, 5, 41, 2, 'optiond'),
(119, 5, 41, 2, 'optiond'),
(116, 5, 41, 2, 'optiond'),
(152, 5, 42, -0.66, 'optiona'),
(77, 5, 42, -0.66, 'optionc'),
(60, 5, 42, -0.66, 'optiona'),
(144, 5, 42, 2, 'optiond'),
(62, 5, 42, 2, 'optiond'),
(63, 5, 42, 2, 'optiond'),
(99, 5, 42, -0.66, 'optionb'),
(121, 5, 42, 2, 'optiond'),
(102, 5, 42, 2, 'optiond'),
(87, 5, 42, 2, 'optiond'),
(88, 5, 42, 2, 'optiond'),
(52, 5, 42, 2, 'optiond'),
(39, 5, 42, 2, 'optiond'),
(108, 5, 42, 2, 'optiond'),
(96, 5, 42, 2, 'optiond'),
(160, 5, 42, -0.66, 'optiona'),
(153, 5, 42, 2, 'optiond'),
(47, 5, 42, -0.66, 'optiona'),
(36, 5, 42, 2, 'optiond'),
(162, 5, 42, 2, 'optiond'),
(73, 5, 42, 2, 'optiond'),
(80, 5, 42, 2, 'optiond'),
(81, 5, 42, -0.66, 'optiona'),
(56, 5, 42, -0.66, 'optiona'),
(83, 5, 42, 2, 'optiond'),
(124, 5, 42, 2, 'optiond'),
(127, 5, 42, 2, 'optiond'),
(123, 5, 42, 2, 'optiond'),
(90, 5, 42, 2, 'optiond'),
(86, 5, 42, 2, 'optiond'),
(98, 5, 42, 2, 'optiond'),
(100, 5, 42, 2, 'optiond'),
(68, 5, 42, -0.66, 'optiona'),
(65, 5, 42, -0.66, 'optionc'),
(128, 5, 42, -0.66, 'optionc'),
(95, 5, 42, -0.66, 'optiona'),
(142, 5, 42, 2, 'optiond'),
(145, 5, 42, 2, 'optiond'),
(119, 5, 42, 2, 'optiond'),
(20, 5, 42, 2, 'optiond'),
(28, 5, 42, 2, 'optiond'),
(94, 5, 42, 2, 'optiond'),
(116, 5, 42, -0.66, 'optiona'),
(107, 5, 43, 2, 'optiond'),
(152, 5, 43, 2, 'optiond'),
(85, 5, 43, -0.66, 'optionc'),
(60, 5, 43, -0.66, 'optionc'),
(67, 5, 43, 2, 'optiond'),
(144, 5, 43, 2, 'optiond'),
(62, 5, 43, -0.66, 'optione'),
(63, 5, 43, 2, 'optiond'),
(121, 5, 43, 2, 'optiond'),
(78, 5, 43, 2, 'optiond'),
(158, 5, 43, 2, 'optiond'),
(102, 5, 43, 2, 'optiond'),
(87, 5, 43, 2, 'optiond'),
(101, 5, 43, 2, 'optiond'),
(39, 5, 43, 2, 'optiond'),
(108, 5, 43, 2, 'optiond'),
(160, 5, 43, 2, 'optiond'),
(153, 5, 43, 2, 'optiond'),
(47, 5, 43, -0.66, 'optiona'),
(36, 5, 43, 2, 'optiond'),
(111, 5, 43, 2, 'optiond'),
(93, 5, 43, -0.66, 'optione'),
(143, 5, 43, -0.66, 'optiona'),
(73, 5, 43, 2, 'optiond'),
(81, 5, 43, 2, 'optiond'),
(56, 5, 43, 2, 'optiond'),
(83, 5, 43, 2, 'optiond'),
(123, 5, 43, 2, 'optiond'),
(90, 5, 43, 2, 'optiond'),
(86, 5, 43, 2, 'optiond'),
(98, 5, 43, 2, 'optiond'),
(100, 5, 43, 2, 'optiond'),
(65, 5, 43, 2, 'optiond'),
(95, 5, 43, 2, 'optiond'),
(22, 5, 43, -0.66, 'optionc'),
(44, 5, 43, -0.66, 'optione'),
(75, 5, 43, 2, 'optiond'),
(20, 5, 43, 2, 'optiond'),
(28, 5, 43, -0.66, 'optione'),
(122, 5, 43, 2, 'optiond'),
(94, 5, 43, 2, 'optiond'),
(116, 5, 43, 2, 'optiond'),
(79, 5, 43, 2, 'optiond'),
(107, 5, 44, 2, 'optiona'),
(152, 5, 44, -0.66, 'optionc'),
(77, 5, 44, 2, 'optiona'),
(62, 5, 44, 2, 'optiona'),
(63, 5, 44, -0.66, 'optionc'),
(99, 5, 44, -0.66, 'optionc'),
(102, 5, 44, -0.66, 'optionc'),
(87, 5, 44, -0.66, 'optione'),
(101, 5, 44, 2, 'optiona'),
(52, 5, 44, 2, 'optiona'),
(39, 5, 44, -0.66, 'optionc'),
(108, 5, 44, 2, 'optiona'),
(96, 5, 44, 2, 'optiona'),
(141, 5, 44, -0.66, 'optione'),
(93, 5, 44, 2, 'optiona'),
(162, 5, 44, 2, 'optiona'),
(73, 5, 44, -0.66, 'optionc'),
(81, 5, 44, 2, 'optiona'),
(56, 5, 44, 2, 'optiona'),
(124, 5, 44, 2, 'optiona'),
(127, 5, 44, 2, 'optiona'),
(112, 5, 44, 2, 'optiona'),
(98, 5, 44, -0.66, 'optionc'),
(100, 5, 44, 2, 'optiona'),
(68, 5, 44, 2, 'optiona'),
(65, 5, 44, 2, 'optiona'),
(128, 5, 44, 2, 'optiona'),
(95, 5, 44, 2, 'optiona'),
(76, 5, 44, 2, 'optiona'),
(142, 5, 44, -0.66, 'optionc'),
(44, 5, 44, -0.66, 'optionc'),
(113, 5, 44, 2, 'optiona'),
(145, 5, 44, 2, 'optiona'),
(75, 5, 44, 2, 'optiona'),
(119, 5, 44, 2, 'optiona'),
(20, 5, 44, 2, 'optiona'),
(28, 5, 44, 2, 'optiona'),
(94, 5, 44, 2, 'optiona'),
(116, 5, 44, 2, 'optiona'),
(79, 5, 44, -0.66, 'optionc'),
(107, 5, 45, 2, 'optionc'),
(70, 5, 45, 2, 'optionc'),
(152, 5, 45, 2, 'optionc'),
(85, 5, 45, 2, 'optionc'),
(77, 5, 45, 2, 'optionc'),
(60, 5, 45, 2, 'optionc'),
(67, 5, 45, 2, 'optionc'),
(144, 5, 45, 2, 'optionc'),
(62, 5, 45, 2, 'optionc'),
(99, 5, 45, -0.66, 'optione'),
(130, 5, 45, -0.66, 'optiona'),
(121, 5, 45, 2, 'optionc'),
(158, 5, 45, 2, 'optionc'),
(102, 5, 45, 2, 'optionc'),
(88, 5, 45, 2, 'optionc'),
(101, 5, 45, 2, 'optionc'),
(39, 5, 45, 2, 'optionc'),
(96, 5, 45, 2, 'optionc'),
(160, 5, 45, 2, 'optionc'),
(153, 5, 45, 2, 'optionc'),
(47, 5, 45, 2, 'optionc'),
(36, 5, 45, 2, 'optionc'),
(143, 5, 45, 2, 'optionc'),
(162, 5, 45, 2, 'optionc'),
(73, 5, 45, 2, 'optionc'),
(81, 5, 45, 2, 'optionc'),
(56, 5, 45, 2, 'optionc'),
(83, 5, 45, 2, 'optionc'),
(124, 5, 45, -0.66, 'optiona'),
(127, 5, 45, 2, 'optionc'),
(123, 5, 45, 2, 'optionc'),
(98, 5, 45, 2, 'optionc'),
(100, 5, 45, 2, 'optionc'),
(68, 5, 45, 2, 'optionc'),
(65, 5, 45, 2, 'optionc'),
(128, 5, 45, 2, 'optionc'),
(95, 5, 45, 2, 'optionc'),
(76, 5, 45, 2, 'optionc'),
(44, 5, 45, 2, 'optionc'),
(145, 5, 45, 2, 'optionc'),
(75, 5, 45, 2, 'optionc'),
(119, 5, 45, 2, 'optionc'),
(122, 5, 45, 2, 'optionc'),
(94, 5, 45, 2, 'optionc'),
(116, 5, 45, 2, 'optionc'),
(67, 5, 46, -0.66, 'optionb'),
(62, 5, 46, -0.66, 'optionb'),
(141, 5, 46, -0.66, 'optionb'),
(81, 5, 46, 2, 'optiond'),
(86, 5, 46, -0.66, 'optionc'),
(128, 5, 46, -0.66, 'optionc'),
(107, 5, 47, 2, 'optionc'),
(152, 5, 47, -0.66, 'optionb'),
(85, 5, 47, -0.66, 'optionb'),
(77, 5, 47, 2, 'optionc'),
(60, 5, 47, 2, 'optionc'),
(67, 5, 47, 2, 'optionc'),
(144, 5, 47, 2, 'optionc'),
(62, 5, 47, 2, 'optionc'),
(63, 5, 47, 2, 'optionc'),
(99, 5, 47, 2, 'optionc'),
(121, 5, 47, 2, 'optionc'),
(74, 5, 47, 2, 'optionc'),
(158, 5, 47, -0.66, 'optiona'),
(87, 5, 47, -0.66, 'optiona'),
(88, 5, 47, -0.66, 'optiona'),
(101, 5, 47, 2, 'optionc'),
(52, 5, 47, 2, 'optionc'),
(39, 5, 47, 2, 'optionc'),
(108, 5, 47, 2, 'optionc'),
(96, 5, 47, 2, 'optionc'),
(153, 5, 47, 2, 'optionc'),
(47, 5, 47, 2, 'optionc'),
(36, 5, 47, 2, 'optionc'),
(111, 5, 47, 2, 'optionc'),
(141, 5, 47, 2, 'optionc'),
(93, 5, 47, 2, 'optionc'),
(143, 5, 47, 2, 'optionc'),
(162, 5, 47, 2, 'optionc'),
(73, 5, 47, 2, 'optionc'),
(80, 5, 47, 2, 'optionc'),
(81, 5, 47, 2, 'optionc'),
(56, 5, 47, 2, 'optionc'),
(83, 5, 47, 2, 'optionc'),
(124, 5, 47, 2, 'optionc'),
(127, 5, 47, 2, 'optionc'),
(112, 5, 47, 2, 'optionc'),
(123, 5, 47, 2, 'optionc'),
(90, 5, 47, 2, 'optionc'),
(86, 5, 47, 2, 'optionc'),
(98, 5, 47, 2, 'optionc'),
(100, 5, 47, 2, 'optionc'),
(68, 5, 47, 2, 'optionc'),
(114, 5, 47, 2, 'optionc'),
(128, 5, 47, 2, 'optionc'),
(95, 5, 47, 2, 'optionc'),
(22, 5, 47, 2, 'optionc'),
(142, 5, 47, 2, 'optionc'),
(44, 5, 47, 2, 'optionc'),
(113, 5, 47, 2, 'optionc'),
(145, 5, 47, 2, 'optionc'),
(75, 5, 47, 2, 'optionc'),
(119, 5, 47, 2, 'optionc'),
(20, 5, 47, 2, 'optionc'),
(28, 5, 47, 2, 'optionc'),
(94, 5, 47, 2, 'optionc'),
(116, 5, 47, 2, 'optionc'),
(79, 5, 47, 2, 'optionc'),
(107, 5, 48, -0.66, 'optiona'),
(67, 5, 48, 2, 'optiond'),
(62, 5, 48, 2, 'optiond'),
(63, 5, 48, -0.66, 'optionc'),
(99, 5, 48, -0.66, 'optione'),
(121, 5, 48, 2, 'optiond'),
(74, 5, 48, 2, 'optiond'),
(102, 5, 48, 2, 'optiond'),
(101, 5, 48, 2, 'optiond'),
(52, 5, 48, -0.66, 'optiona'),
(39, 5, 48, -0.66, 'optionb'),
(96, 5, 48, 2, 'optiond'),
(160, 5, 48, -0.66, 'optionc'),
(153, 5, 48, -0.66, 'optionc'),
(36, 5, 48, 2, 'optiond'),
(93, 5, 48, 2, 'optiond'),
(143, 5, 48, -0.66, 'optiona'),
(162, 5, 48, 2, 'optiond'),
(73, 5, 48, 2, 'optiond'),
(80, 5, 48, 2, 'optiond'),
(81, 5, 48, -0.66, 'optiona'),
(56, 5, 48, 2, 'optiond'),
(83, 5, 48, -0.66, 'optiona'),
(127, 5, 48, 2, 'optiond'),
(123, 5, 48, -0.66, 'optione'),
(90, 5, 48, 2, 'optiond'),
(98, 5, 48, -0.66, 'optionc'),
(100, 5, 48, -0.66, 'optionb'),
(68, 5, 48, -0.66, 'optione'),
(65, 5, 48, -0.66, 'optionc'),
(114, 5, 48, -0.66, 'optionc'),
(128, 5, 48, -0.66, 'optiona'),
(95, 5, 48, 2, 'optiond'),
(76, 5, 48, -0.66, 'optionc'),
(22, 5, 48, -0.66, 'optionb'),
(113, 5, 48, -0.66, 'optionc'),
(145, 5, 48, 2, 'optiond'),
(75, 5, 48, 2, 'optiond'),
(119, 5, 48, 2, 'optiond'),
(20, 5, 48, -0.66, 'optione'),
(28, 5, 48, -0.66, 'optiona'),
(94, 5, 48, -0.66, 'optionc'),
(116, 5, 48, -0.66, 'optione'),
(79, 5, 48, -0.66, 'optiona'),
(107, 5, 49, -0.66, 'optionc'),
(152, 5, 49, 2, 'optionb'),
(85, 5, 49, -0.66, 'optiona'),
(77, 5, 49, -0.66, 'optione'),
(60, 5, 49, 2, 'optionb'),
(67, 5, 49, -0.66, 'optione'),
(63, 5, 49, -0.66, 'optione'),
(99, 5, 49, -0.66, 'optiond'),
(121, 5, 49, 2, 'optionb'),
(78, 5, 49, -0.66, 'optiond'),
(74, 5, 49, -0.66, 'optione'),
(102, 5, 49, 2, 'optionb'),
(101, 5, 49, -0.66, 'optionc'),
(39, 5, 49, -0.66, 'optionc'),
(108, 5, 49, 2, 'optionb'),
(96, 5, 49, -0.66, 'optione'),
(160, 5, 49, 2, 'optionb'),
(153, 5, 49, 2, 'optionb'),
(47, 5, 49, -0.66, 'optionc'),
(36, 5, 49, 2, 'optionb'),
(141, 5, 49, -0.66, 'optione'),
(93, 5, 49, -0.66, 'optionc'),
(143, 5, 49, 2, 'optionb'),
(162, 5, 49, -0.66, 'optionc'),
(73, 5, 49, 2, 'optionb'),
(81, 5, 49, 2, 'optionb'),
(83, 5, 49, -0.66, 'optionc'),
(127, 5, 49, 2, 'optionb'),
(123, 5, 49, -0.66, 'optiona'),
(90, 5, 49, -0.66, 'optionc'),
(86, 5, 49, -0.66, 'optione'),
(98, 5, 49, -0.66, 'optionc'),
(100, 5, 49, -0.66, 'optionc'),
(65, 5, 49, -0.66, 'optione'),
(95, 5, 49, -0.66, 'optionc'),
(76, 5, 49, -0.66, 'optiond'),
(22, 5, 49, -0.66, 'optionc'),
(142, 5, 49, 2, 'optionb'),
(44, 5, 49, -0.66, 'optionc'),
(75, 5, 49, -0.66, 'optione'),
(20, 5, 49, -0.66, 'optionc'),
(28, 5, 49, -0.66, 'optionc'),
(116, 5, 49, 2, 'optionb'),
(79, 5, 49, -0.66, 'optionc'),
(107, 5, 50, -0.66, 'optiond'),
(152, 5, 50, -0.66, 'optionc'),
(85, 5, 50, -0.66, 'optione'),
(77, 5, 50, -0.66, 'optione'),
(60, 5, 50, -0.66, 'optionc'),
(67, 5, 50, -0.66, 'optionc'),
(63, 5, 50, -0.66, 'optionb'),
(121, 5, 50, -0.66, 'optionc'),
(74, 5, 50, 2, 'optiona'),
(158, 5, 50, 2, 'optiona'),
(102, 5, 50, -0.66, 'optionc'),
(87, 5, 50, -0.66, 'optione'),
(88, 5, 50, -0.66, 'optione'),
(101, 5, 50, 2, 'optiona'),
(39, 5, 50, -0.66, 'optionc'),
(108, 5, 50, -0.66, 'optionc'),
(96, 5, 50, 2, 'optiona'),
(160, 5, 50, -0.66, 'optione'),
(153, 5, 50, 2, 'optiona'),
(47, 5, 50, 2, 'optiona'),
(36, 5, 50, -0.66, 'optionc'),
(111, 5, 50, -0.66, 'optionb'),
(141, 5, 50, -0.66, 'optionb'),
(93, 5, 50, -0.66, 'optione'),
(162, 5, 50, -0.66, 'optionc'),
(73, 5, 50, -0.66, 'optionc'),
(81, 5, 50, -0.66, 'optione'),
(83, 5, 50, 2, 'optiona'),
(124, 5, 50, -0.66, 'optionc'),
(127, 5, 50, 2, 'optiona'),
(123, 5, 50, -0.66, 'optionc'),
(90, 5, 50, 2, 'optiona'),
(100, 5, 50, -0.66, 'optionc'),
(65, 5, 50, -0.66, 'optionc'),
(128, 5, 50, -0.66, 'optionc'),
(95, 5, 50, 2, 'optiona'),
(142, 5, 50, -0.66, 'optionc'),
(145, 5, 50, 2, 'optiona'),
(75, 5, 50, -0.66, 'optionc'),
(20, 5, 50, 2, 'optiona'),
(28, 5, 50, 2, 'optiona'),
(94, 5, 50, -0.66, 'optionc'),
(116, 5, 50, -0.66, 'optionc'),
(107, 5, 51, -0.66, 'optionc'),
(67, 5, 51, 2, 'optionb'),
(144, 5, 51, 2, 'optionb'),
(63, 5, 51, -0.66, 'optiona'),
(130, 5, 51, -0.66, 'optiond'),
(74, 5, 51, -0.66, 'optiona'),
(87, 5, 51, -0.66, 'optiond'),
(52, 5, 51, -0.66, 'optiona'),
(96, 5, 51, -0.66, 'optiond'),
(160, 5, 51, -0.66, 'optiona'),
(153, 5, 51, 2, 'optionb'),
(141, 5, 51, -0.66, 'optiond'),
(143, 5, 51, -0.66, 'optiond'),
(80, 5, 51, -0.66, 'optione'),
(81, 5, 51, 2, 'optionb'),
(127, 5, 51, 2, 'optionb'),
(112, 5, 51, 2, 'optionb'),
(86, 5, 51, -0.66, 'optiond'),
(98, 5, 51, -0.66, 'optiond'),
(65, 5, 51, -0.66, 'optiona'),
(128, 5, 51, 2, 'optionb'),
(22, 5, 51, 2, 'optionb'),
(142, 5, 51, -0.66, 'optione'),
(113, 5, 51, -0.66, 'optiond'),
(20, 5, 51, -0.66, 'optiond'),
(122, 5, 51, 2, 'optionb'),
(94, 5, 51, -0.66, 'optiond'),
(116, 5, 51, 2, 'optionb'),
(79, 5, 51, -0.66, 'optiona'),
(107, 5, 52, 2, 'optionb'),
(70, 5, 52, 2, 'optionb'),
(152, 5, 52, -0.66, 'optionc'),
(85, 5, 52, -0.66, 'optionc'),
(77, 5, 52, 2, 'optionb'),
(67, 5, 52, 2, 'optionb'),
(144, 5, 52, 2, 'optionb'),
(62, 5, 52, 2, 'optionb'),
(63, 5, 52, -0.66, 'optione'),
(99, 5, 52, 2, 'optionb'),
(121, 5, 52, 2, 'optionb'),
(74, 5, 52, 2, 'optionb'),
(102, 5, 52, -0.66, 'optiona'),
(87, 5, 52, 2, 'optionb'),
(88, 5, 52, 2, 'optionb'),
(101, 5, 52, 2, 'optionb'),
(39, 5, 52, 2, 'optionb'),
(108, 5, 52, 2, 'optionb'),
(96, 5, 52, -0.66, 'optiond'),
(160, 5, 52, 2, 'optionb'),
(153, 5, 52, -0.66, 'optiond'),
(47, 5, 52, 2, 'optionb'),
(36, 5, 52, 2, 'optionb'),
(111, 5, 52, -0.66, 'optiond'),
(93, 5, 52, -0.66, 'optiond'),
(143, 5, 52, 2, 'optionb'),
(162, 5, 52, 2, 'optionb'),
(73, 5, 52, -0.66, 'optiona'),
(80, 5, 52, -0.66, 'optione'),
(81, 5, 52, 2, 'optionb'),
(56, 5, 52, 2, 'optionb'),
(83, 5, 52, 2, 'optionb'),
(124, 5, 52, -0.66, 'optiona'),
(127, 5, 52, 2, 'optionb'),
(123, 5, 52, 2, 'optionb'),
(90, 5, 52, 2, 'optionb'),
(98, 5, 52, 2, 'optionb'),
(100, 5, 52, 2, 'optionb'),
(68, 5, 52, -0.66, 'optiond'),
(65, 5, 52, 2, 'optionb'),
(128, 5, 52, 2, 'optionb'),
(95, 5, 52, 2, 'optionb'),
(22, 5, 52, -0.66, 'optiond'),
(142, 5, 52, 2, 'optionb'),
(113, 5, 52, 2, 'optionb'),
(145, 5, 52, 2, 'optionb'),
(75, 5, 52, 2, 'optionb'),
(119, 5, 52, -0.66, 'optiona'),
(20, 5, 52, 2, 'optionb'),
(28, 5, 52, 2, 'optionb'),
(94, 5, 52, 2, 'optionb'),
(116, 5, 52, 2, 'optionb'),
(79, 5, 52, 2, 'optionb'),
(152, 5, 53, 2, 'optiond'),
(77, 5, 53, -0.66, 'optione'),
(67, 5, 53, 2, 'optiond'),
(62, 5, 53, -0.66, 'optione'),
(63, 5, 53, -0.66, 'optione'),
(99, 5, 53, 2, 'optiond'),
(130, 5, 53, -0.66, 'optionc'),
(121, 5, 53, 2, 'optiond'),
(78, 5, 53, -0.66, 'optionc'),
(74, 5, 53, 2, 'optiond'),
(158, 5, 53, -0.66, 'optione'),
(87, 5, 53, -0.66, 'optione'),
(88, 5, 53, -0.66, 'optione'),
(101, 5, 53, -0.66, 'optione'),
(52, 5, 53, -0.66, 'optione'),
(39, 5, 53, 2, 'optiond'),
(96, 5, 53, 2, 'optiond'),
(153, 5, 53, 2, 'optiond'),
(47, 5, 53, -0.66, 'optiona'),
(36, 5, 53, 2, 'optiond'),
(111, 5, 53, 2, 'optiond'),
(93, 5, 53, -0.66, 'optione'),
(143, 5, 53, 2, 'optiond'),
(162, 5, 53, 2, 'optiond'),
(80, 5, 53, -0.66, 'optionb'),
(81, 5, 53, -0.66, 'optione'),
(56, 5, 53, -0.66, 'optione'),
(83, 5, 53, -0.66, 'optione'),
(124, 5, 53, 2, 'optiond'),
(127, 5, 53, 2, 'optiond'),
(112, 5, 53, -0.66, 'optione'),
(123, 5, 53, -0.66, 'optiona'),
(90, 5, 53, -0.66, 'optione'),
(86, 5, 53, 2, 'optiond'),
(98, 5, 53, 2, 'optiond'),
(100, 5, 53, 2, 'optiond'),
(68, 5, 53, 2, 'optiond'),
(65, 5, 53, 2, 'optiond'),
(114, 5, 53, 2, 'optiond'),
(128, 5, 53, -0.66, 'optione'),
(76, 5, 53, 2, 'optiond'),
(22, 5, 53, -0.66, 'optione'),
(142, 5, 53, -0.66, 'optione'),
(44, 5, 53, -0.66, 'optione'),
(145, 5, 53, 2, 'optiond'),
(75, 5, 53, -0.66, 'optione'),
(119, 5, 53, -0.66, 'optione'),
(28, 5, 53, -0.66, 'optionc'),
(122, 5, 53, 2, 'optiond'),
(94, 5, 53, 2, 'optiond'),
(116, 5, 53, -0.66, 'optione'),
(107, 5, 54, 2, 'optionc'),
(67, 5, 54, 2, 'optionc'),
(144, 5, 54, 2, 'optionc'),
(63, 5, 54, 2, 'optionc'),
(78, 5, 54, 2, 'optionc'),
(74, 5, 54, 2, 'optionc'),
(158, 5, 54, 2, 'optionc'),
(88, 5, 54, 2, 'optionc'),
(52, 5, 54, 2, 'optionc'),
(39, 5, 54, -0.66, 'optiona'),
(160, 5, 54, 2, 'optionc'),
(153, 5, 54, 2, 'optionc'),
(36, 5, 54, 2, 'optionc'),
(143, 5, 54, -0.66, 'optionb'),
(81, 5, 54, -0.66, 'optione'),
(56, 5, 54, -0.66, 'optiond'),
(127, 5, 54, 2, 'optionc'),
(123, 5, 54, 2, 'optionc'),
(90, 5, 54, -0.66, 'optiond'),
(98, 5, 54, 2, 'optionc'),
(100, 5, 54, -0.66, 'optiond'),
(65, 5, 54, -0.66, 'optiond'),
(22, 5, 54, 2, 'optionc'),
(145, 5, 54, -0.66, 'optiond'),
(20, 5, 54, 2, 'optionc'),
(28, 5, 54, 2, 'optionc'),
(122, 5, 54, 2, 'optionc'),
(94, 5, 54, 2, 'optionc'),
(116, 5, 54, 2, 'optionc'),
(144, 5, 55, -0.66, 'optionc'),
(78, 5, 55, -0.66, 'optionb'),
(39, 5, 55, -0.66, 'optionc'),
(160, 5, 55, -0.66, 'optionc'),
(153, 5, 55, -0.66, 'optionc'),
(81, 5, 55, -0.66, 'optionc'),
(127, 5, 55, 2, 'optiona'),
(90, 5, 55, -0.66, 'optionc'),
(65, 5, 55, -0.66, 'optionc'),
(145, 5, 55, -0.66, 'optionc'),
(20, 5, 55, -0.66, 'optionc'),
(28, 5, 55, 2, 'optiona'),
(94, 5, 55, -0.66, 'optionc'),
(116, 5, 55, 2, 'optiona'),
(70, 5, 56, 1, 'optiond'),
(85, 5, 56, 1, 'optiond'),
(60, 5, 56, 1, 'optiond'),
(99, 5, 56, 1, 'optiond'),
(130, 5, 56, -0.33, 'optionb'),
(121, 5, 56, -0.33, 'optionc'),
(158, 5, 56, 1, 'optiond'),
(102, 5, 56, -0.33, 'optionc'),
(87, 5, 56, 1, 'optiond'),
(88, 5, 56, 1, 'optiond'),
(52, 5, 56, 1, 'optiond'),
(96, 5, 56, -0.33, 'optiona'),
(160, 5, 56, 1, 'optiond'),
(47, 5, 56, 1, 'optiond'),
(36, 5, 56, -0.33, 'optionc'),
(141, 5, 56, -0.33, 'optionc'),
(143, 5, 56, 1, 'optiond'),
(162, 5, 56, 1, 'optiond'),
(73, 5, 56, -0.33, 'optionc'),
(81, 5, 56, 1, 'optiond'),
(56, 5, 56, 1, 'optiond'),
(124, 5, 56, 1, 'optiond'),
(112, 5, 56, 1, 'optiond'),
(123, 5, 56, -0.33, 'optionb'),
(90, 5, 56, 1, 'optiond'),
(86, 5, 56, 1, 'optiond'),
(98, 5, 56, -0.33, 'optionc'),
(100, 5, 56, -0.33, 'optionc'),
(68, 5, 56, 1, 'optiond'),
(65, 5, 56, 1, 'optiond'),
(114, 5, 56, 1, 'optiond'),
(95, 5, 56, 1, 'optiond'),
(76, 5, 56, 1, 'optiond'),
(113, 5, 56, 1, 'optiond'),
(145, 5, 56, 1, 'optiond'),
(20, 5, 56, 1, 'optiond'),
(28, 5, 56, 1, 'optiond'),
(94, 5, 56, 1, 'optiond'),
(116, 5, 56, 1, 'optiond'),
(107, 5, 57, 1, 'optiona'),
(85, 5, 57, 1, 'optiona'),
(77, 5, 57, 1, 'optiona'),
(67, 5, 57, 1, 'optiona'),
(144, 5, 57, 1, 'optiona'),
(62, 5, 57, 1, 'optiona'),
(63, 5, 57, 1, 'optiona'),
(99, 5, 57, -0.33, 'optiond'),
(121, 5, 57, -0.33, 'optiond'),
(78, 5, 57, 1, 'optiona'),
(74, 5, 57, -0.33, 'optiond'),
(158, 5, 57, 1, 'optiona'),
(102, 5, 57, 1, 'optiona'),
(87, 5, 57, 1, 'optiona'),
(88, 5, 57, 1, 'optiona'),
(101, 5, 57, 1, 'optiona'),
(52, 5, 57, 1, 'optiona'),
(39, 5, 57, 1, 'optiona'),
(108, 5, 57, 1, 'optiona'),
(160, 5, 57, 1, 'optiona'),
(153, 5, 57, 1, 'optiona'),
(47, 5, 57, 1, 'optiona'),
(36, 5, 57, 1, 'optiona'),
(141, 5, 57, 1, 'optiona'),
(93, 5, 57, 1, 'optiona'),
(143, 5, 57, 1, 'optiona'),
(73, 5, 57, 1, 'optiona'),
(80, 5, 57, 1, 'optiona'),
(81, 5, 57, 1, 'optiona'),
(56, 5, 57, 1, 'optiona'),
(83, 5, 57, 1, 'optiona'),
(124, 5, 57, 1, 'optiona'),
(127, 5, 57, 1, 'optiona'),
(112, 5, 57, 1, 'optiona'),
(123, 5, 57, 1, 'optiona'),
(90, 5, 57, 1, 'optiona'),
(86, 5, 57, 1, 'optiona'),
(98, 5, 57, 1, 'optiona'),
(100, 5, 57, 1, 'optiona'),
(68, 5, 57, 1, 'optiona'),
(65, 5, 57, 1, 'optiona'),
(114, 5, 57, 1, 'optiona'),
(128, 5, 57, 1, 'optiona'),
(95, 5, 57, 1, 'optiona'),
(22, 5, 57, 1, 'optiona'),
(142, 5, 57, 1, 'optiona'),
(44, 5, 57, 1, 'optiona'),
(113, 5, 57, 1, 'optiona'),
(145, 5, 57, 1, 'optiona'),
(119, 5, 57, 1, 'optiona'),
(20, 5, 57, 1, 'optiona'),
(28, 5, 57, 1, 'optiona'),
(122, 5, 57, 1, 'optiona'),
(94, 5, 57, 1, 'optiona'),
(116, 5, 57, 1, 'optiona'),
(67, 5, 58, -0.33, 'optiond'),
(144, 5, 58, -0.33, 'optionb'),
(121, 5, 58, -0.33, 'optionb'),
(158, 5, 58, -0.33, 'optionb'),
(102, 5, 58, -0.33, 'optiond'),
(87, 5, 58, -0.33, 'optionb'),
(88, 5, 58, -0.33, 'optionb'),
(101, 5, 58, -0.33, 'optiond'),
(52, 5, 58, -0.33, 'optiond'),
(39, 5, 58, -0.33, 'optionb'),
(96, 5, 58, -0.33, 'optiond'),
(160, 5, 58, -0.33, 'optionb'),
(153, 5, 58, -0.33, 'optionb'),
(36, 5, 58, -0.33, 'optionb'),
(111, 5, 58, -0.33, 'optionb'),
(141, 5, 58, -0.33, 'optionb'),
(162, 5, 58, -0.33, 'optionb'),
(73, 5, 58, -0.33, 'optiond'),
(80, 5, 58, -0.33, 'optionb'),
(81, 5, 58, -0.33, 'optionb'),
(56, 5, 58, -0.33, 'optionb'),
(83, 5, 58, -0.33, 'optionb'),
(124, 5, 58, -0.33, 'optionb'),
(127, 5, 58, -0.33, 'optionb'),
(112, 5, 58, -0.33, 'optionb'),
(123, 5, 58, -0.33, 'optionb'),
(90, 5, 58, -0.33, 'optionb'),
(86, 5, 58, -0.33, 'optionb'),
(98, 5, 58, -0.33, 'optionb'),
(68, 5, 58, -0.33, 'optionb'),
(65, 5, 58, -0.33, 'optionb'),
(114, 5, 58, -0.33, 'optionb'),
(128, 5, 58, -0.33, 'optiona'),
(95, 5, 58, -0.33, 'optionb'),
(142, 5, 58, -0.33, 'optionc'),
(44, 5, 58, -0.33, 'optionb'),
(113, 5, 58, -0.33, 'optionb'),
(145, 5, 58, -0.33, 'optionb'),
(119, 5, 58, -0.33, 'optionb'),
(20, 5, 58, -0.33, 'optionb'),
(28, 5, 58, -0.33, 'optionb'),
(94, 5, 58, -0.33, 'optionb'),
(116, 5, 58, -0.33, 'optionb'),
(67, 5, 59, 1, 'optiond'),
(144, 5, 59, 1, 'optiond'),
(62, 5, 59, 1, 'optiond'),
(74, 5, 59, 1, 'optiond'),
(158, 5, 59, 1, 'optiond'),
(87, 5, 59, 1, 'optiond'),
(88, 5, 59, 1, 'optiond'),
(101, 5, 59, 1, 'optiond'),
(52, 5, 59, 1, 'optiond'),
(39, 5, 59, 1, 'optiond'),
(96, 5, 59, 1, 'optiond'),
(153, 5, 59, 1, 'optiond'),
(36, 5, 59, 1, 'optiond'),
(111, 5, 59, 1, 'optiond'),
(143, 5, 59, 1, 'optiond'),
(162, 5, 59, 1, 'optiond'),
(73, 5, 59, 1, 'optiond'),
(80, 5, 59, 1, 'optiond'),
(56, 5, 59, 1, 'optiond'),
(83, 5, 59, 1, 'optiond'),
(123, 5, 59, 1, 'optiond'),
(98, 5, 59, 1, 'optiond'),
(68, 5, 59, 1, 'optiond'),
(128, 5, 59, 1, 'optiond'),
(145, 5, 59, 1, 'optiond'),
(75, 5, 59, 1, 'optiond'),
(20, 5, 59, 1, 'optiond'),
(28, 5, 59, 1, 'optiond'),
(122, 5, 59, 1, 'optiond'),
(99, 5, 60, 1, 'optiona'),
(78, 5, 60, -0.33, 'optionb'),
(102, 5, 60, 1, 'optiona'),
(87, 5, 60, -0.33, 'optionb'),
(88, 5, 60, -0.33, 'optiond'),
(108, 5, 60, 1, 'optiona'),
(36, 5, 60, 1, 'optiona'),
(111, 5, 60, -0.33, 'optionb'),
(141, 5, 60, -0.33, 'optionb'),
(73, 5, 60, 1, 'optiona'),
(81, 5, 60, 1, 'optiona'),
(56, 5, 60, 1, 'optiona'),
(86, 5, 60, -0.33, 'optionb'),
(128, 5, 60, 1, 'optiona'),
(95, 5, 60, 1, 'optiona'),
(22, 5, 60, 1, 'optiona'),
(119, 5, 60, 1, 'optiona'),
(20, 5, 60, 1, 'optiona'),
(116, 5, 60, -0.33, 'optionb'),
(77, 5, 61, -0.66, 'optionc'),
(144, 5, 61, -0.66, 'optiond'),
(78, 5, 61, 2, 'optiona'),
(74, 5, 61, -0.66, 'optiond'),
(158, 5, 61, -0.66, 'optiond'),
(87, 5, 61, 2, 'optiona'),
(88, 5, 61, -0.66, 'optionb'),
(39, 5, 61, -0.66, 'optiond'),
(47, 5, 61, 2, 'optiona'),
(111, 5, 61, -0.66, 'optionc'),
(141, 5, 61, -0.66, 'optionc'),
(143, 5, 61, -0.66, 'optionc'),
(73, 5, 61, -0.66, 'optionc'),
(83, 5, 61, -0.66, 'optionb'),
(112, 5, 61, -0.66, 'optionc'),
(90, 5, 61, -0.66, 'optionc'),
(86, 5, 61, 2, 'optiona'),
(98, 5, 61, -0.66, 'optionc'),
(100, 5, 61, -0.66, 'optionb'),
(68, 5, 61, -0.66, 'optiond'),
(65, 5, 61, -0.66, 'optionc'),
(114, 5, 61, 2, 'optiona'),
(128, 5, 61, -0.66, 'optionc'),
(95, 5, 61, -0.66, 'optiond'),
(76, 5, 61, -0.66, 'optionc'),
(22, 5, 61, -0.66, 'optionc'),
(119, 5, 61, -0.66, 'optiond'),
(20, 5, 61, 2, 'optiona'),
(122, 5, 61, -0.66, 'optiond'),
(94, 5, 61, -0.66, 'optionc'),
(116, 5, 61, 2, 'optiona'),
(144, 5, 62, -0.66, 'optione'),
(63, 5, 62, -0.66, 'optione'),
(78, 5, 62, -0.66, 'optione'),
(74, 5, 62, -0.66, 'optionb'),
(102, 5, 62, 2, 'optionc'),
(87, 5, 62, -0.66, 'optionb'),
(101, 5, 62, 2, 'optionc'),
(39, 5, 62, 2, 'optionc'),
(108, 5, 62, -0.66, 'optiond'),
(160, 5, 62, -0.66, 'optionb'),
(153, 5, 62, -0.66, 'optiona'),
(47, 5, 62, -0.66, 'optione'),
(36, 5, 62, -0.66, 'optione'),
(111, 5, 62, 2, 'optionc');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(141, 5, 62, -0.66, 'optione'),
(143, 5, 62, -0.66, 'optione'),
(73, 5, 62, 2, 'optionc'),
(80, 5, 62, 2, 'optionc'),
(81, 5, 62, 2, 'optionc'),
(83, 5, 62, 2, 'optionc'),
(124, 5, 62, -0.66, 'optiona'),
(127, 5, 62, -0.66, 'optionb'),
(123, 5, 62, 2, 'optionc'),
(86, 5, 62, 2, 'optionc'),
(98, 5, 62, -0.66, 'optiona'),
(68, 5, 62, -0.66, 'optiona'),
(65, 5, 62, -0.66, 'optione'),
(114, 5, 62, 2, 'optionc'),
(128, 5, 62, 2, 'optionc'),
(95, 5, 62, 2, 'optionc'),
(76, 5, 62, 2, 'optionc'),
(22, 5, 62, -0.66, 'optiona'),
(142, 5, 62, -0.66, 'optiond'),
(44, 5, 62, 2, 'optionc'),
(145, 5, 62, -0.66, 'optione'),
(75, 5, 62, 2, 'optionc'),
(20, 5, 62, -0.66, 'optiona'),
(28, 5, 62, -0.66, 'optiona'),
(122, 5, 62, -0.66, 'optionb'),
(94, 5, 62, -0.66, 'optiona'),
(152, 5, 63, 2, 'optiona'),
(67, 5, 63, 2, 'optiona'),
(62, 5, 63, 2, 'optiona'),
(102, 5, 63, 2, 'optiona'),
(52, 5, 63, 2, 'optiona'),
(153, 5, 63, 2, 'optiona'),
(36, 5, 63, 2, 'optiona'),
(73, 5, 63, 2, 'optiona'),
(56, 5, 63, 2, 'optiona'),
(83, 5, 63, 2, 'optiona'),
(123, 5, 63, 2, 'optiona'),
(86, 5, 63, 2, 'optiona'),
(68, 5, 63, 2, 'optiona'),
(128, 5, 63, -0.66, 'optionb'),
(95, 5, 63, -0.66, 'optiond'),
(145, 5, 63, 2, 'optiona'),
(119, 5, 63, 2, 'optiona'),
(94, 5, 63, 2, 'optiona'),
(116, 5, 63, 2, 'optiona'),
(153, 5, 64, -0.66, 'optiona'),
(36, 5, 64, 2, 'optiond'),
(94, 5, 64, -0.66, 'optionb'),
(153, 5, 65, 2, 'optiona'),
(162, 5, 65, 2, 'optiona'),
(124, 5, 65, -0.66, 'optiond'),
(123, 5, 65, 2, 'optiona'),
(128, 5, 65, -0.66, 'optionb'),
(44, 5, 65, -0.66, 'optionc'),
(145, 5, 65, -0.66, 'optiond'),
(116, 5, 65, -0.66, 'optiond'),
(114, 12, 1, 2, 'optionc'),
(114, 12, 2, 2, 'optionc'),
(114, 12, 3, 2, 'optiond'),
(114, 12, 5, 2, 'optiona'),
(114, 12, 7, 2, 'optionb'),
(114, 12, 8, 2, 'optionb'),
(114, 12, 9, 2, 'optiona'),
(114, 12, 10, 2, 'optiond'),
(114, 12, 11, 2, 'optionb'),
(114, 12, 12, -0.66, 'optiona'),
(114, 12, 13, 2, 'optionb'),
(114, 12, 14, 2, 'optiona'),
(114, 12, 15, 2, 'optiond'),
(114, 12, 16, 2, 'optionc'),
(114, 12, 18, -0.66, 'optionb'),
(114, 12, 19, 2, 'optionb'),
(114, 12, 20, 2, 'optionb'),
(114, 12, 21, 2, 'optiona'),
(114, 12, 22, 2, 'optiond'),
(114, 12, 23, 2, 'optionb'),
(114, 12, 26, 2, 'optionb'),
(114, 12, 27, -0.66, 'optionb'),
(114, 12, 29, 2, 'optiona'),
(114, 12, 30, 2, 'optionb'),
(114, 12, 31, -0.66, 'optiond'),
(114, 12, 32, 2, 'optionc'),
(114, 12, 34, 2, 'optiond'),
(114, 12, 35, -0.66, 'optionb'),
(114, 12, 36, -0.66, 'optionb'),
(114, 12, 38, 2, 'optionc'),
(164, 5, 2, 0, 'optiona'),
(164, 5, 4, 0, 'optionb'),
(164, 5, 5, 0, 'optiond'),
(164, 5, 19, 0, 'optione'),
(164, 5, 22, 0, 'optionc'),
(66, 18, 1, 1, 'optiona'),
(66, 18, 2, 1, 'optiond'),
(66, 18, 3, 1, 'optionb'),
(66, 18, 4, 1, 'optiona'),
(66, 18, 6, 1, 'optionc'),
(66, 18, 7, 1, 'optionb'),
(66, 18, 10, -0.33, 'optiond'),
(66, 18, 11, 1, 'optionb'),
(66, 18, 12, -0.33, 'optionb'),
(66, 18, 13, 1, 'optiond'),
(66, 18, 14, 1, 'optionc'),
(66, 18, 15, 1, 'optionc'),
(66, 18, 16, -0.33, 'optiona'),
(66, 18, 18, 1, 'optiona'),
(66, 18, 19, -0.33, 'optionb'),
(66, 18, 20, 1, 'optionb'),
(66, 18, 21, 1, 'optiond'),
(66, 18, 22, 1, 'optiond'),
(66, 18, 24, 1, 'optionc'),
(66, 18, 25, 1, 'optionc'),
(66, 18, 26, 2, 'optionb'),
(66, 18, 29, 2, 'optiond'),
(66, 18, 31, 2, 'optiona'),
(66, 18, 32, 2, 'optionb'),
(66, 18, 33, 2, 'optiond'),
(66, 18, 34, 2, 'optiona'),
(66, 18, 35, -0.66, 'optiona'),
(66, 18, 36, 2, 'optiona'),
(66, 18, 37, 2, 'optionc'),
(66, 18, 42, 2, 'optionb'),
(66, 18, 43, 2, 'optionb'),
(66, 18, 45, -0.66, 'optionc'),
(66, 18, 47, 2, 'optiond'),
(66, 18, 48, 2, 'optionb'),
(66, 18, 49, 2, 'optionc'),
(66, 18, 50, 2, 'optionc'),
(66, 18, 51, -0.66, 'optionb'),
(66, 18, 52, -0.66, 'optionc'),
(66, 18, 53, -0.66, 'optiond'),
(66, 18, 54, 2, 'optiona'),
(66, 18, 59, 1, 'optionc'),
(66, 18, 60, 1, 'optiona'),
(66, 18, 61, 2, 'optionb'),
(66, 18, 62, 2, 'optiond'),
(66, 18, 63, 2, 'optiona'),
(66, 18, 65, 2, 'optiond'),
(72, 5, 4, 0, 'optione'),
(72, 5, 5, 0, 'optiond'),
(72, 5, 10, 0, 'optionb'),
(72, 5, 13, 0, 'optionb'),
(72, 5, 19, 0, 'optione'),
(72, 5, 26, 0, 'optiona'),
(72, 5, 27, 0, 'optiona'),
(72, 5, 31, 0, 'optiona'),
(135, 21, 1, -0.33, 'optiona'),
(52, 21, 1, 1, 'optionb'),
(82, 21, 1, 1, 'optionb'),
(128, 21, 1, 1, 'optionb'),
(85, 21, 1, 1, 'optionb'),
(152, 21, 1, 1, 'optionb'),
(101, 21, 1, 1, 'optionb'),
(70, 21, 1, -0.33, 'optiona'),
(62, 21, 1, 1, 'optionb'),
(67, 21, 1, 1, 'optionb'),
(60, 21, 1, 1, 'optionb'),
(68, 21, 1, 1, 'optionb'),
(130, 21, 1, 1, 'optionb'),
(22, 21, 1, 1, 'optionb'),
(36, 21, 1, 1, 'optionb'),
(63, 21, 1, -0.33, 'optiona'),
(144, 21, 1, 1, 'optionb'),
(108, 21, 1, 1, 'optionb'),
(77, 21, 1, 1, 'optionb'),
(56, 21, 1, 1, 'optionb'),
(90, 21, 1, 1, 'optionb'),
(95, 21, 1, 1, 'optionb'),
(39, 21, 1, 1, 'optionb'),
(47, 21, 1, 1, 'optionb'),
(87, 21, 1, 1, 'optionb'),
(158, 21, 1, 1, 'optionb'),
(117, 21, 1, 1, 'optionb'),
(93, 21, 1, 1, 'optionb'),
(122, 21, 1, 1, 'optionb'),
(115, 21, 1, 1, 'optionb'),
(100, 21, 1, 1, 'optionb'),
(143, 21, 1, 1, 'optionb'),
(80, 21, 1, 1, 'optionb'),
(121, 21, 1, 1, 'optionb'),
(113, 21, 1, -0.33, 'optiona'),
(86, 21, 1, 1, 'optionb'),
(112, 21, 1, 1, 'optionb'),
(124, 21, 1, 1, 'optionb'),
(153, 21, 1, 1, 'optionb'),
(88, 21, 1, 1, 'optionb'),
(162, 21, 1, 1, 'optionb'),
(123, 21, 1, 1, 'optionb'),
(83, 21, 1, 1, 'optionb'),
(73, 21, 1, 1, 'optionb'),
(98, 21, 1, 1, 'optionb'),
(96, 21, 1, 1, 'optionb'),
(138, 21, 1, -0.33, 'optiona'),
(145, 21, 1, 1, 'optionb'),
(111, 21, 1, 1, 'optionb'),
(74, 21, 1, 1, 'optionb'),
(102, 21, 1, 1, 'optionb'),
(20, 21, 1, 1, 'optionb'),
(160, 21, 1, -0.33, 'optiona'),
(116, 21, 1, -0.33, 'optiona'),
(76, 21, 1, -0.33, 'optiond'),
(114, 21, 1, -0.33, 'optiona'),
(75, 21, 1, 1, 'optionb'),
(65, 21, 1, 1, 'optionb'),
(78, 21, 1, 1, 'optionb'),
(119, 21, 1, 1, 'optionb'),
(127, 21, 1, -0.33, 'optiona'),
(141, 21, 1, 1, 'optionb'),
(94, 21, 1, 1, 'optionb'),
(28, 21, 1, 1, 'optionb'),
(79, 21, 1, 1, 'optionb'),
(135, 21, 2, 1, 'optionb'),
(52, 21, 2, 1, 'optionb'),
(82, 21, 2, 1, 'optionb'),
(128, 21, 2, 1, 'optionb'),
(85, 21, 2, 1, 'optionb'),
(152, 21, 2, 1, 'optionb'),
(101, 21, 2, 1, 'optionb'),
(70, 21, 2, -0.33, 'optiona'),
(62, 21, 2, 1, 'optionb'),
(67, 21, 2, 1, 'optionb'),
(60, 21, 2, 1, 'optionb'),
(68, 21, 2, 1, 'optionb'),
(130, 21, 2, 1, 'optionb'),
(22, 21, 2, 1, 'optionb'),
(36, 21, 2, 1, 'optionb'),
(63, 21, 2, 1, 'optionb'),
(144, 21, 2, 1, 'optionb'),
(108, 21, 2, 1, 'optionb'),
(77, 21, 2, 1, 'optionb'),
(81, 21, 2, 1, 'optionb'),
(90, 21, 2, 1, 'optionb'),
(95, 21, 2, 1, 'optionb'),
(39, 21, 2, 1, 'optionb'),
(47, 21, 2, -0.33, 'optiona'),
(158, 21, 2, 1, 'optionb'),
(117, 21, 2, -0.33, 'optiona'),
(93, 21, 2, 1, 'optionb'),
(122, 21, 2, 1, 'optionb'),
(115, 21, 2, 1, 'optionb'),
(100, 21, 2, 1, 'optionb'),
(143, 21, 2, -0.33, 'optiona'),
(80, 21, 2, -0.33, 'optiona'),
(121, 21, 2, 1, 'optionb'),
(113, 21, 2, -0.33, 'optiona'),
(86, 21, 2, 1, 'optionb'),
(112, 21, 2, -0.33, 'optiona'),
(124, 21, 2, 1, 'optionb'),
(153, 21, 2, -0.33, 'optiona'),
(162, 21, 2, 1, 'optionb'),
(123, 21, 2, 1, 'optionb'),
(83, 21, 2, -0.33, 'optiona'),
(73, 21, 2, 1, 'optionb'),
(98, 21, 2, 1, 'optionb'),
(96, 21, 2, 1, 'optionb'),
(138, 21, 2, 1, 'optionb'),
(145, 21, 2, 1, 'optionb'),
(111, 21, 2, 1, 'optionb'),
(74, 21, 2, -0.33, 'optiona'),
(102, 21, 2, 1, 'optionb'),
(20, 21, 2, 1, 'optionb'),
(160, 21, 2, 1, 'optionb'),
(116, 21, 2, 1, 'optionb'),
(76, 21, 2, -0.33, 'optiona'),
(114, 21, 2, 1, 'optionb'),
(75, 21, 2, 1, 'optionb'),
(65, 21, 2, 1, 'optionb'),
(78, 21, 2, 1, 'optionb'),
(119, 21, 2, 1, 'optionb'),
(127, 21, 2, -0.33, 'optionc'),
(141, 21, 2, -0.33, 'optiona'),
(94, 21, 2, 1, 'optionb'),
(28, 21, 2, 1, 'optionb'),
(79, 21, 2, 1, 'optionb'),
(82, 21, 3, 1, 'optionb'),
(128, 21, 3, 1, 'optionb'),
(152, 21, 3, 1, 'optionb'),
(101, 21, 3, 1, 'optionb'),
(70, 21, 3, -0.33, 'optiond'),
(62, 21, 3, 1, 'optionb'),
(68, 21, 3, 1, 'optionb'),
(130, 21, 3, 1, 'optionb'),
(22, 21, 3, -0.33, 'optiona'),
(63, 21, 3, 1, 'optionb'),
(144, 21, 3, 1, 'optionb'),
(77, 21, 3, 1, 'optionb'),
(56, 21, 3, 1, 'optionb'),
(90, 21, 3, 1, 'optionb'),
(39, 21, 3, 1, 'optionb'),
(47, 21, 3, 1, 'optionb'),
(87, 21, 3, 1, 'optionb'),
(158, 21, 3, 1, 'optionb'),
(117, 21, 3, 1, 'optionb'),
(93, 21, 3, 1, 'optionb'),
(122, 21, 3, 1, 'optionb'),
(115, 21, 3, 1, 'optionb'),
(100, 21, 3, 1, 'optionb'),
(143, 21, 3, 1, 'optionb'),
(80, 21, 3, 1, 'optionb'),
(121, 21, 3, 1, 'optionb'),
(113, 21, 3, 1, 'optionb'),
(86, 21, 3, 1, 'optionb'),
(88, 21, 3, 1, 'optionb'),
(83, 21, 3, 1, 'optionb'),
(73, 21, 3, 1, 'optionb'),
(98, 21, 3, 1, 'optionb'),
(96, 21, 3, 1, 'optionb'),
(145, 21, 3, 1, 'optionb'),
(111, 21, 3, 1, 'optionb'),
(102, 21, 3, 1, 'optionb'),
(20, 21, 3, 1, 'optionb'),
(160, 21, 3, 1, 'optionb'),
(116, 21, 3, 1, 'optionb'),
(75, 21, 3, 1, 'optionb'),
(65, 21, 3, 1, 'optionb'),
(119, 21, 3, 1, 'optionb'),
(127, 21, 3, 1, 'optionb'),
(141, 21, 3, -0.33, 'optiona'),
(94, 21, 3, 1, 'optionb'),
(128, 21, 4, 1, 'optiond'),
(70, 21, 4, -0.33, 'optionc'),
(67, 21, 4, 1, 'optiond'),
(68, 21, 4, -0.33, 'optiona'),
(130, 21, 4, -0.33, 'optionc'),
(63, 21, 4, -0.33, 'optionc'),
(108, 21, 4, -0.33, 'optiona'),
(81, 21, 4, -0.33, 'optionc'),
(56, 21, 4, -0.33, 'optionc'),
(90, 21, 4, 1, 'optiond'),
(117, 21, 4, -0.33, 'optionc'),
(122, 21, 4, -0.33, 'optionb'),
(100, 21, 4, 1, 'optiond'),
(124, 21, 4, -0.33, 'optiona'),
(44, 21, 4, -0.33, 'optionc'),
(123, 21, 4, -0.33, 'optionc'),
(98, 21, 4, 1, 'optiond'),
(96, 21, 4, -0.33, 'optiona'),
(145, 21, 4, 1, 'optiond'),
(111, 21, 4, 1, 'optiond'),
(74, 21, 4, -0.33, 'optionc'),
(20, 21, 4, -0.33, 'optionc'),
(116, 21, 4, -0.33, 'optionc'),
(65, 21, 4, -0.33, 'optionc'),
(78, 21, 4, -0.33, 'optionc'),
(94, 21, 4, -0.33, 'optionc'),
(52, 21, 5, 1, 'optionc'),
(82, 21, 5, 1, 'optionc'),
(128, 21, 5, 1, 'optionc'),
(85, 21, 5, 1, 'optionc'),
(152, 21, 5, 1, 'optionc'),
(101, 21, 5, 1, 'optionc'),
(62, 21, 5, 1, 'optionc'),
(67, 21, 5, 1, 'optionc'),
(68, 21, 5, 1, 'optionc'),
(130, 21, 5, 1, 'optionc'),
(22, 21, 5, 1, 'optionc'),
(36, 21, 5, -0.33, 'optionb'),
(144, 21, 5, -0.33, 'optiona'),
(108, 21, 5, 1, 'optionc'),
(77, 21, 5, 1, 'optionc'),
(81, 21, 5, 1, 'optionc'),
(56, 21, 5, 1, 'optionc'),
(90, 21, 5, 1, 'optionc'),
(95, 21, 5, 1, 'optionc'),
(39, 21, 5, -0.33, 'optionb'),
(87, 21, 5, -0.33, 'optionb'),
(117, 21, 5, 1, 'optionc'),
(93, 21, 5, 1, 'optionc'),
(122, 21, 5, 1, 'optionc'),
(115, 21, 5, -0.33, 'optiona'),
(143, 21, 5, -0.33, 'optiond'),
(80, 21, 5, 1, 'optionc'),
(121, 21, 5, 1, 'optionc'),
(86, 21, 5, -0.33, 'optionb'),
(112, 21, 5, 1, 'optionc'),
(124, 21, 5, -0.33, 'optionb'),
(44, 21, 5, -0.33, 'optionb'),
(162, 21, 5, -0.33, 'optionb'),
(123, 21, 5, 1, 'optionc'),
(83, 21, 5, 1, 'optionc'),
(73, 21, 5, 1, 'optionc'),
(98, 21, 5, -0.33, 'optionb'),
(96, 21, 5, 1, 'optionc'),
(145, 21, 5, 1, 'optionc'),
(74, 21, 5, -0.33, 'optionb'),
(102, 21, 5, 1, 'optionc'),
(20, 21, 5, 1, 'optionc'),
(160, 21, 5, 1, 'optionc'),
(116, 21, 5, 1, 'optionc'),
(75, 21, 5, -0.33, 'optionb'),
(78, 21, 5, 1, 'optionc'),
(119, 21, 5, 1, 'optionc'),
(127, 21, 5, 1, 'optionc'),
(94, 21, 5, 1, 'optionc'),
(28, 21, 5, 1, 'optionc'),
(79, 21, 5, -0.33, 'optionb'),
(135, 21, 6, 1, 'optionb'),
(82, 21, 6, 1, 'optionb'),
(101, 21, 6, -0.33, 'optiona'),
(70, 21, 6, -0.33, 'optiond'),
(62, 21, 6, 1, 'optionb'),
(67, 21, 6, 1, 'optionb'),
(60, 21, 6, 1, 'optionb'),
(68, 21, 6, 1, 'optionb'),
(130, 21, 6, -0.33, 'optiond'),
(22, 21, 6, 1, 'optionb'),
(36, 21, 6, 1, 'optionb'),
(63, 21, 6, 1, 'optionb'),
(144, 21, 6, 1, 'optionb'),
(56, 21, 6, 1, 'optionb'),
(90, 21, 6, 1, 'optionb'),
(95, 21, 6, 1, 'optionb'),
(39, 21, 6, -0.33, 'optiond'),
(87, 21, 6, -0.33, 'optiond'),
(158, 21, 6, 1, 'optionb'),
(93, 21, 6, 1, 'optionb'),
(115, 21, 6, 1, 'optionb'),
(100, 21, 6, 1, 'optionb'),
(143, 21, 6, -0.33, 'optiona'),
(80, 21, 6, 1, 'optionb'),
(121, 21, 6, 1, 'optionb'),
(86, 21, 6, 1, 'optionb'),
(112, 21, 6, 1, 'optionb'),
(124, 21, 6, 1, 'optionb'),
(153, 21, 6, 1, 'optionb'),
(44, 21, 6, 1, 'optionb'),
(162, 21, 6, 1, 'optionb'),
(123, 21, 6, 1, 'optionb'),
(83, 21, 6, 1, 'optionb'),
(73, 21, 6, 1, 'optionb'),
(98, 21, 6, 1, 'optionb'),
(96, 21, 6, 1, 'optionb'),
(138, 21, 6, 1, 'optionb'),
(145, 21, 6, 1, 'optionb'),
(111, 21, 6, 1, 'optionb'),
(102, 21, 6, 1, 'optionb'),
(20, 21, 6, 1, 'optionb'),
(116, 21, 6, 1, 'optionb'),
(114, 21, 6, 1, 'optionb'),
(75, 21, 6, -0.33, 'optiond'),
(65, 21, 6, 1, 'optionb'),
(78, 21, 6, -0.33, 'optiona'),
(119, 21, 6, -0.33, 'optionc'),
(127, 21, 6, 1, 'optionb'),
(141, 21, 6, 1, 'optionb'),
(94, 21, 6, 1, 'optionb'),
(28, 21, 6, 1, 'optionb'),
(135, 21, 7, 1, 'optionc'),
(52, 21, 7, 1, 'optionc'),
(82, 21, 7, 1, 'optionc'),
(128, 21, 7, 1, 'optionc'),
(85, 21, 7, 1, 'optionc'),
(152, 21, 7, 1, 'optionc'),
(101, 21, 7, 1, 'optionc'),
(70, 21, 7, 1, 'optionc'),
(62, 21, 7, 1, 'optionc'),
(67, 21, 7, 1, 'optionc'),
(60, 21, 7, 1, 'optionc'),
(68, 21, 7, 1, 'optionc'),
(130, 21, 7, -0.33, 'optionb'),
(22, 21, 7, 1, 'optionc'),
(36, 21, 7, 1, 'optionc'),
(63, 21, 7, 1, 'optionc'),
(144, 21, 7, 1, 'optionc'),
(108, 21, 7, 1, 'optionc'),
(77, 21, 7, 1, 'optionc'),
(81, 21, 7, 1, 'optionc'),
(56, 21, 7, 1, 'optionc'),
(90, 21, 7, 1, 'optionc'),
(95, 21, 7, 1, 'optionc'),
(39, 21, 7, 1, 'optionc'),
(47, 21, 7, 1, 'optionc'),
(87, 21, 7, 1, 'optionc'),
(158, 21, 7, 1, 'optionc'),
(117, 21, 7, 1, 'optionc'),
(93, 21, 7, 1, 'optionc'),
(122, 21, 7, 1, 'optionc'),
(115, 21, 7, 1, 'optionc'),
(100, 21, 7, 1, 'optionc'),
(143, 21, 7, 1, 'optionc'),
(80, 21, 7, 1, 'optionc'),
(121, 21, 7, 1, 'optionc'),
(113, 21, 7, 1, 'optionc'),
(86, 21, 7, 1, 'optionc'),
(112, 21, 7, 1, 'optionc'),
(124, 21, 7, 1, 'optionc'),
(153, 21, 7, 1, 'optionc'),
(44, 21, 7, 1, 'optionc'),
(88, 21, 7, 1, 'optionc'),
(162, 21, 7, 1, 'optionc'),
(123, 21, 7, 1, 'optionc'),
(83, 21, 7, 1, 'optionc'),
(73, 21, 7, 1, 'optionc'),
(98, 21, 7, 1, 'optionc'),
(96, 21, 7, 1, 'optionc'),
(138, 21, 7, 1, 'optionc'),
(145, 21, 7, 1, 'optionc'),
(111, 21, 7, 1, 'optionc'),
(74, 21, 7, 1, 'optionc'),
(102, 21, 7, 1, 'optionc'),
(20, 21, 7, 1, 'optionc'),
(160, 21, 7, 1, 'optionc'),
(116, 21, 7, 1, 'optionc'),
(76, 21, 7, 1, 'optionc'),
(114, 21, 7, 1, 'optionc'),
(75, 21, 7, 1, 'optionc'),
(65, 21, 7, 1, 'optionc'),
(78, 21, 7, 1, 'optionc'),
(119, 21, 7, 1, 'optionc'),
(127, 21, 7, 1, 'optionc'),
(141, 21, 7, 1, 'optionc'),
(94, 21, 7, 1, 'optionc'),
(28, 21, 7, 1, 'optionc'),
(79, 21, 7, 1, 'optionc'),
(135, 21, 8, 1, 'optiond'),
(52, 21, 8, 1, 'optiond'),
(82, 21, 8, 1, 'optiond'),
(128, 21, 8, 1, 'optiond'),
(85, 21, 8, 1, 'optiond'),
(152, 21, 8, 1, 'optiond'),
(101, 21, 8, 1, 'optiond'),
(70, 21, 8, 1, 'optiond'),
(62, 21, 8, 1, 'optiond'),
(67, 21, 8, 1, 'optiond'),
(60, 21, 8, 1, 'optiond'),
(68, 21, 8, 1, 'optiond'),
(130, 21, 8, -0.33, 'optionc'),
(22, 21, 8, 1, 'optiond'),
(36, 21, 8, 1, 'optiond'),
(63, 21, 8, 1, 'optiond'),
(144, 21, 8, 1, 'optiond'),
(108, 21, 8, 1, 'optiond'),
(77, 21, 8, 1, 'optiond'),
(81, 21, 8, 1, 'optiond'),
(56, 21, 8, 1, 'optiond'),
(90, 21, 8, 1, 'optiond'),
(95, 21, 8, 1, 'optiond'),
(39, 21, 8, 1, 'optiond'),
(47, 21, 8, 1, 'optiond'),
(87, 21, 8, 1, 'optiond'),
(158, 21, 8, 1, 'optiond'),
(117, 21, 8, 1, 'optiond'),
(93, 21, 8, 1, 'optiond'),
(122, 21, 8, 1, 'optiond'),
(115, 21, 8, 1, 'optiond'),
(100, 21, 8, 1, 'optiond'),
(143, 21, 8, 1, 'optiond'),
(80, 21, 8, 1, 'optiond'),
(121, 21, 8, 1, 'optiond'),
(113, 21, 8, 1, 'optiond'),
(86, 21, 8, 1, 'optiond'),
(112, 21, 8, 1, 'optiond'),
(124, 21, 8, 1, 'optiond'),
(153, 21, 8, 1, 'optiond'),
(44, 21, 8, 1, 'optiond'),
(88, 21, 8, 1, 'optiond'),
(162, 21, 8, 1, 'optiond'),
(123, 21, 8, 1, 'optiond'),
(83, 21, 8, 1, 'optiond'),
(73, 21, 8, 1, 'optiond'),
(98, 21, 8, 1, 'optiond'),
(96, 21, 8, 1, 'optiond'),
(138, 21, 8, 1, 'optiond'),
(145, 21, 8, 1, 'optiond'),
(111, 21, 8, 1, 'optiond'),
(102, 21, 8, 1, 'optiond'),
(20, 21, 8, 1, 'optiond'),
(160, 21, 8, 1, 'optiond'),
(116, 21, 8, 1, 'optiond'),
(76, 21, 8, -0.33, 'optiona'),
(114, 21, 8, 1, 'optiond'),
(75, 21, 8, 1, 'optiond'),
(65, 21, 8, 1, 'optiond'),
(78, 21, 8, -0.33, 'optiona'),
(119, 21, 8, 1, 'optiond'),
(127, 21, 8, 1, 'optiond'),
(141, 21, 8, -0.33, 'optiona'),
(94, 21, 8, 1, 'optiond'),
(28, 21, 8, 1, 'optiond'),
(79, 21, 8, 1, 'optiond'),
(135, 21, 9, 1, 'optionc'),
(82, 21, 9, -0.33, 'optiona'),
(128, 21, 9, -0.33, 'optiona'),
(85, 21, 9, -0.33, 'optiona'),
(152, 21, 9, -0.33, 'optiona'),
(101, 21, 9, -0.33, 'optiond'),
(70, 21, 9, -0.33, 'optionb'),
(62, 21, 9, -0.33, 'optiona'),
(60, 21, 9, -0.33, 'optiona'),
(68, 21, 9, 1, 'optionc'),
(22, 21, 9, -0.33, 'optiona'),
(36, 21, 9, -0.33, 'optiona'),
(63, 21, 9, -0.33, 'optiona'),
(144, 21, 9, 1, 'optionc'),
(108, 21, 9, -0.33, 'optiona'),
(81, 21, 9, -0.33, 'optiona'),
(56, 21, 9, 1, 'optionc'),
(90, 21, 9, 1, 'optionc'),
(95, 21, 9, -0.33, 'optiona'),
(39, 21, 9, -0.33, 'optiona'),
(158, 21, 9, -0.33, 'optiona'),
(117, 21, 9, -0.33, 'optiona'),
(93, 21, 9, -0.33, 'optionb'),
(115, 21, 9, 1, 'optionc'),
(100, 21, 9, 1, 'optionc'),
(80, 21, 9, 1, 'optionc'),
(121, 21, 9, -0.33, 'optiona'),
(113, 21, 9, -0.33, 'optionb'),
(112, 21, 9, -0.33, 'optiona'),
(153, 21, 9, -0.33, 'optiona'),
(44, 21, 9, -0.33, 'optiona'),
(88, 21, 9, -0.33, 'optiona'),
(162, 21, 9, -0.33, 'optiona'),
(73, 21, 9, 1, 'optionc'),
(96, 21, 9, 1, 'optionc'),
(138, 21, 9, -0.33, 'optiona'),
(111, 21, 9, -0.33, 'optiona'),
(102, 21, 9, 1, 'optionc'),
(20, 21, 9, 1, 'optionc'),
(160, 21, 9, -0.33, 'optiona'),
(116, 21, 9, -0.33, 'optiond'),
(75, 21, 9, -0.33, 'optiond'),
(65, 21, 9, -0.33, 'optiona'),
(127, 21, 9, 1, 'optionc'),
(94, 21, 9, -0.33, 'optiona'),
(28, 21, 9, 1, 'optionc'),
(135, 21, 10, 1, 'optionc'),
(52, 21, 10, 1, 'optionc'),
(82, 21, 10, -0.33, 'optionb'),
(128, 21, 10, 1, 'optionc'),
(85, 21, 10, 1, 'optionc'),
(152, 21, 10, 1, 'optionc'),
(101, 21, 10, 1, 'optionc'),
(62, 21, 10, 1, 'optionc'),
(67, 21, 10, 1, 'optionc'),
(60, 21, 10, 1, 'optionc'),
(68, 21, 10, 1, 'optionc'),
(130, 21, 10, -0.33, 'optionb'),
(22, 21, 10, 1, 'optionc'),
(36, 21, 10, 1, 'optionc'),
(63, 21, 10, 1, 'optionc'),
(144, 21, 10, 1, 'optionc'),
(108, 21, 10, 1, 'optionc'),
(77, 21, 10, 1, 'optionc'),
(81, 21, 10, 1, 'optionc'),
(56, 21, 10, 1, 'optionc'),
(90, 21, 10, 1, 'optionc'),
(95, 21, 10, 1, 'optionc'),
(39, 21, 10, -0.33, 'optionb'),
(47, 21, 10, 1, 'optionc'),
(87, 21, 10, 1, 'optionc'),
(158, 21, 10, 1, 'optionc'),
(117, 21, 10, 1, 'optionc'),
(93, 21, 10, 1, 'optionc'),
(122, 21, 10, 1, 'optionc'),
(115, 21, 10, 1, 'optionc'),
(100, 21, 10, 1, 'optionc'),
(143, 21, 10, 1, 'optionc'),
(80, 21, 10, 1, 'optionc'),
(121, 21, 10, 1, 'optionc'),
(113, 21, 10, 1, 'optionc'),
(86, 21, 10, 1, 'optionc'),
(112, 21, 10, 1, 'optionc'),
(124, 21, 10, -0.33, 'optionb'),
(153, 21, 10, 1, 'optionc'),
(44, 21, 10, 1, 'optionc'),
(88, 21, 10, 1, 'optionc'),
(162, 21, 10, 1, 'optionc'),
(123, 21, 10, 1, 'optionc'),
(83, 21, 10, 1, 'optionc'),
(73, 21, 10, 1, 'optionc'),
(98, 21, 10, 1, 'optionc'),
(96, 21, 10, 1, 'optionc'),
(138, 21, 10, 1, 'optionc'),
(145, 21, 10, 1, 'optionc'),
(111, 21, 10, 1, 'optionc'),
(74, 21, 10, 1, 'optionc'),
(102, 21, 10, 1, 'optionc'),
(20, 21, 10, 1, 'optionc'),
(160, 21, 10, 1, 'optionc'),
(116, 21, 10, 1, 'optionc'),
(76, 21, 10, 1, 'optionc'),
(114, 21, 10, -0.33, 'optionb'),
(75, 21, 10, 1, 'optionc'),
(65, 21, 10, 1, 'optionc'),
(78, 21, 10, 1, 'optionc'),
(119, 21, 10, -0.33, 'optionb'),
(127, 21, 10, 1, 'optionc'),
(141, 21, 10, -0.33, 'optiona'),
(94, 21, 10, 1, 'optionc'),
(28, 21, 10, 1, 'optionc'),
(79, 21, 10, 1, 'optionc'),
(52, 21, 11, 1, 'optiona'),
(82, 21, 11, 1, 'optiona'),
(128, 21, 11, 1, 'optiona'),
(101, 21, 11, 1, 'optiona'),
(70, 21, 11, 1, 'optiona'),
(62, 21, 11, 1, 'optiona'),
(67, 21, 11, 1, 'optiona'),
(60, 21, 11, 1, 'optiona'),
(68, 21, 11, 1, 'optiona'),
(130, 21, 11, -0.33, 'optiond'),
(22, 21, 11, 1, 'optiona'),
(36, 21, 11, 1, 'optiona'),
(63, 21, 11, 1, 'optiona'),
(144, 21, 11, 1, 'optiona'),
(108, 21, 11, -0.33, 'optionb'),
(77, 21, 11, 1, 'optiona'),
(81, 21, 11, 1, 'optiona'),
(56, 21, 11, 1, 'optiona'),
(90, 21, 11, 1, 'optiona'),
(39, 21, 11, 1, 'optiona'),
(47, 21, 11, -0.33, 'optionb'),
(93, 21, 11, -0.33, 'optionb'),
(122, 21, 11, 1, 'optiona'),
(115, 21, 11, 1, 'optiona'),
(100, 21, 11, 1, 'optiona'),
(143, 21, 11, -0.33, 'optionb'),
(80, 21, 11, 1, 'optiona'),
(121, 21, 11, 1, 'optiona'),
(113, 21, 11, -0.33, 'optiond'),
(112, 21, 11, 1, 'optiona'),
(124, 21, 11, 1, 'optiona'),
(153, 21, 11, -0.33, 'optiond'),
(44, 21, 11, 1, 'optiona'),
(162, 21, 11, 1, 'optiona'),
(123, 21, 11, 1, 'optiona'),
(83, 21, 11, -0.33, 'optiond'),
(73, 21, 11, 1, 'optiona'),
(98, 21, 11, 1, 'optiona'),
(96, 21, 11, 1, 'optiona'),
(138, 21, 11, 1, 'optiona'),
(145, 21, 11, 1, 'optiona'),
(111, 21, 11, 1, 'optiona'),
(74, 21, 11, 1, 'optiona'),
(102, 21, 11, 1, 'optiona'),
(20, 21, 11, 1, 'optiona'),
(116, 21, 11, 1, 'optiona'),
(76, 21, 11, 1, 'optiona'),
(114, 21, 11, 1, 'optiona'),
(75, 21, 11, 1, 'optiona'),
(65, 21, 11, 1, 'optiona'),
(119, 21, 11, 1, 'optiona'),
(127, 21, 11, 1, 'optiona'),
(141, 21, 11, 1, 'optiona'),
(94, 21, 11, 1, 'optiona'),
(28, 21, 11, 1, 'optiona'),
(52, 21, 12, 1, 'optionb'),
(82, 21, 12, 1, 'optionb'),
(128, 21, 12, -0.33, 'optiond'),
(85, 21, 12, -0.33, 'optiond'),
(101, 21, 12, 1, 'optionb'),
(70, 21, 12, 1, 'optionb'),
(62, 21, 12, 1, 'optionb'),
(67, 21, 12, 1, 'optionb'),
(68, 21, 12, 1, 'optionb'),
(130, 21, 12, 1, 'optionb'),
(22, 21, 12, 1, 'optionb'),
(36, 21, 12, 1, 'optionb'),
(63, 21, 12, -0.33, 'optiond'),
(144, 21, 12, 1, 'optionb'),
(108, 21, 12, -0.33, 'optiona'),
(77, 21, 12, -0.33, 'optiond'),
(81, 21, 12, -0.33, 'optiond'),
(56, 21, 12, 1, 'optionb'),
(90, 21, 12, 1, 'optionb'),
(95, 21, 12, -0.33, 'optiond'),
(39, 21, 12, 1, 'optionb'),
(87, 21, 12, 1, 'optionb'),
(158, 21, 12, 1, 'optionb'),
(117, 21, 12, 1, 'optionb'),
(93, 21, 12, 1, 'optionb'),
(122, 21, 12, -0.33, 'optiond'),
(115, 21, 12, 1, 'optionb'),
(100, 21, 12, 1, 'optionb'),
(143, 21, 12, 1, 'optionb'),
(121, 21, 12, 1, 'optionb'),
(113, 21, 12, 1, 'optionb'),
(86, 21, 12, 1, 'optionb'),
(153, 21, 12, 1, 'optionb'),
(44, 21, 12, 1, 'optionb'),
(88, 21, 12, 1, 'optionb'),
(162, 21, 12, 1, 'optionb'),
(123, 21, 12, 1, 'optionb'),
(83, 21, 12, -0.33, 'optionc'),
(73, 21, 12, 1, 'optionb'),
(98, 21, 12, 1, 'optionb'),
(96, 21, 12, 1, 'optionb'),
(145, 21, 12, 1, 'optionb'),
(111, 21, 12, -0.33, 'optiond'),
(74, 21, 12, 1, 'optionb'),
(102, 21, 12, 1, 'optionb'),
(20, 21, 12, -0.33, 'optionc'),
(160, 21, 12, 1, 'optionb'),
(116, 21, 12, 1, 'optionb'),
(76, 21, 12, 1, 'optionb'),
(114, 21, 12, 1, 'optionb'),
(75, 21, 12, 1, 'optionb'),
(65, 21, 12, 1, 'optionb'),
(78, 21, 12, 1, 'optionb'),
(119, 21, 12, 1, 'optionb'),
(127, 21, 12, 1, 'optionb'),
(141, 21, 12, -0.33, 'optiond'),
(94, 21, 12, 1, 'optionb'),
(28, 21, 12, 1, 'optionb'),
(79, 21, 12, 1, 'optionb'),
(52, 21, 13, 1, 'optiona'),
(82, 21, 13, 1, 'optiona'),
(128, 21, 13, 1, 'optiona'),
(85, 21, 13, 1, 'optiona'),
(152, 21, 13, 1, 'optiona'),
(101, 21, 13, 1, 'optiona'),
(70, 21, 13, 1, 'optiona'),
(62, 21, 13, 1, 'optiona'),
(67, 21, 13, 1, 'optiona'),
(60, 21, 13, 1, 'optiona'),
(68, 21, 13, 1, 'optiona'),
(130, 21, 13, 1, 'optiona'),
(22, 21, 13, 1, 'optiona'),
(36, 21, 13, 1, 'optiona'),
(63, 21, 13, 1, 'optiona'),
(144, 21, 13, 1, 'optiona'),
(77, 21, 13, -0.33, 'optiond'),
(81, 21, 13, 1, 'optiona'),
(56, 21, 13, 1, 'optiona'),
(90, 21, 13, 1, 'optiona'),
(95, 21, 13, 1, 'optiona'),
(39, 21, 13, 1, 'optiona'),
(47, 21, 13, 1, 'optiona'),
(117, 21, 13, -0.33, 'optiond'),
(93, 21, 13, 1, 'optiona'),
(122, 21, 13, 1, 'optiona'),
(115, 21, 13, 1, 'optiona'),
(100, 21, 13, 1, 'optiona'),
(143, 21, 13, -0.33, 'optiond'),
(80, 21, 13, 1, 'optiona'),
(121, 21, 13, 1, 'optiona'),
(86, 21, 13, 1, 'optiona'),
(112, 21, 13, -0.33, 'optiond'),
(124, 21, 13, -0.33, 'optionb'),
(153, 21, 13, 1, 'optiona'),
(44, 21, 13, 1, 'optiona'),
(162, 21, 13, 1, 'optiona'),
(123, 21, 13, 1, 'optiona'),
(83, 21, 13, 1, 'optiona'),
(73, 21, 13, 1, 'optiona'),
(98, 21, 13, 1, 'optiona'),
(96, 21, 13, 1, 'optiona'),
(138, 21, 13, 1, 'optiona'),
(145, 21, 13, 1, 'optiona'),
(74, 21, 13, 1, 'optiona'),
(20, 21, 13, 1, 'optiona'),
(160, 21, 13, 1, 'optiona'),
(116, 21, 13, 1, 'optiona'),
(76, 21, 13, 1, 'optiona'),
(114, 21, 13, 1, 'optiona'),
(75, 21, 13, 1, 'optiona'),
(65, 21, 13, 1, 'optiona'),
(78, 21, 13, -0.33, 'optionb'),
(119, 21, 13, 1, 'optiona'),
(127, 21, 13, 1, 'optiona'),
(141, 21, 13, 1, 'optiona'),
(94, 21, 13, 1, 'optiona'),
(28, 21, 13, 1, 'optiona'),
(79, 21, 13, -0.33, 'optiond'),
(52, 21, 14, 1, 'optionc'),
(128, 21, 14, 1, 'optionc'),
(85, 21, 14, -0.33, 'optiond'),
(152, 21, 14, -0.33, 'optiond'),
(101, 21, 14, 1, 'optionc'),
(70, 21, 14, 1, 'optionc'),
(62, 21, 14, 1, 'optionc'),
(67, 21, 14, 1, 'optionc'),
(60, 21, 14, 1, 'optionc'),
(68, 21, 14, 1, 'optionc'),
(130, 21, 14, -0.33, 'optionb'),
(22, 21, 14, 1, 'optionc'),
(36, 21, 14, 1, 'optionc'),
(63, 21, 14, 1, 'optionc'),
(144, 21, 14, 1, 'optionc'),
(108, 21, 14, 1, 'optionc'),
(77, 21, 14, 1, 'optionc'),
(81, 21, 14, 1, 'optionc'),
(56, 21, 14, 1, 'optionc'),
(90, 21, 14, 1, 'optionc'),
(95, 21, 14, 1, 'optionc'),
(39, 21, 14, 1, 'optionc'),
(47, 21, 14, 1, 'optionc'),
(158, 21, 14, -0.33, 'optiond'),
(117, 21, 14, 1, 'optionc'),
(93, 21, 14, 1, 'optionc'),
(122, 21, 14, 1, 'optionc'),
(115, 21, 14, 1, 'optionc'),
(100, 21, 14, 1, 'optionc'),
(143, 21, 14, 1, 'optionc'),
(86, 21, 14, 1, 'optionc'),
(112, 21, 14, 1, 'optionc'),
(124, 21, 14, 1, 'optionc'),
(153, 21, 14, 1, 'optionc'),
(88, 21, 14, 1, 'optionc'),
(162, 21, 14, 1, 'optionc'),
(123, 21, 14, 1, 'optionc'),
(83, 21, 14, 1, 'optionc'),
(73, 21, 14, 1, 'optionc'),
(98, 21, 14, 1, 'optionc'),
(96, 21, 14, 1, 'optionc'),
(138, 21, 14, 1, 'optionc'),
(145, 21, 14, -0.33, 'optionb'),
(111, 21, 14, 1, 'optionc'),
(102, 21, 14, 1, 'optionc'),
(20, 21, 14, -0.33, 'optiond'),
(116, 21, 14, 1, 'optionc'),
(114, 21, 14, -0.33, 'optionb'),
(75, 21, 14, 1, 'optionc'),
(65, 21, 14, 1, 'optionc'),
(119, 21, 14, 1, 'optionc'),
(127, 21, 14, 1, 'optionc'),
(141, 21, 14, 1, 'optionc'),
(94, 21, 14, 1, 'optionc'),
(28, 21, 14, 1, 'optionc'),
(79, 21, 14, 1, 'optionc'),
(52, 21, 15, 1, 'optiona'),
(82, 21, 15, 1, 'optiona'),
(128, 21, 15, 1, 'optiona'),
(85, 21, 15, -0.33, 'optionb'),
(152, 21, 15, 1, 'optiona'),
(101, 21, 15, 1, 'optiona'),
(70, 21, 15, 1, 'optiona'),
(62, 21, 15, 1, 'optiona'),
(67, 21, 15, 1, 'optiona'),
(60, 21, 15, 1, 'optiona'),
(68, 21, 15, 1, 'optiona'),
(22, 21, 15, 1, 'optiona'),
(36, 21, 15, 1, 'optiona'),
(63, 21, 15, 1, 'optiona'),
(144, 21, 15, 1, 'optiona'),
(108, 21, 15, 1, 'optiona'),
(77, 21, 15, 1, 'optiona'),
(81, 21, 15, 1, 'optiona'),
(56, 21, 15, 1, 'optiona'),
(90, 21, 15, 1, 'optiona'),
(95, 21, 15, 1, 'optiona'),
(39, 21, 15, 1, 'optiona'),
(47, 21, 15, 1, 'optiona'),
(87, 21, 15, 1, 'optiona'),
(158, 21, 15, 1, 'optiona'),
(117, 21, 15, 1, 'optiona'),
(93, 21, 15, 1, 'optiona'),
(122, 21, 15, -0.33, 'optionb'),
(115, 21, 15, 1, 'optiona'),
(100, 21, 15, 1, 'optiona'),
(143, 21, 15, 1, 'optiona'),
(80, 21, 15, 1, 'optiona'),
(121, 21, 15, 1, 'optiona'),
(113, 21, 15, 1, 'optiona'),
(86, 21, 15, 1, 'optiona'),
(112, 21, 15, 1, 'optiona'),
(124, 21, 15, 1, 'optiona'),
(153, 21, 15, 1, 'optiona'),
(44, 21, 15, 1, 'optiona'),
(88, 21, 15, 1, 'optiona'),
(162, 21, 15, 1, 'optiona'),
(123, 21, 15, 1, 'optiona'),
(83, 21, 15, 1, 'optiona'),
(73, 21, 15, 1, 'optiona'),
(98, 21, 15, 1, 'optiona'),
(96, 21, 15, -0.33, 'optionc'),
(138, 21, 15, 1, 'optiona'),
(145, 21, 15, 1, 'optiona'),
(111, 21, 15, 1, 'optiona'),
(74, 21, 15, -0.33, 'optionb'),
(102, 21, 15, 1, 'optiona'),
(20, 21, 15, 1, 'optiona'),
(160, 21, 15, 1, 'optiona'),
(116, 21, 15, 1, 'optiona'),
(76, 21, 15, 1, 'optiona'),
(114, 21, 15, 1, 'optiona'),
(75, 21, 15, 1, 'optiona'),
(65, 21, 15, 1, 'optiona'),
(78, 21, 15, -0.33, 'optionb'),
(119, 21, 15, 1, 'optiona'),
(127, 21, 15, 1, 'optiona'),
(94, 21, 15, 1, 'optiona'),
(28, 21, 15, 1, 'optiona'),
(79, 21, 15, 1, 'optiona'),
(135, 21, 16, -0.33, 'optionb'),
(52, 21, 16, 1, 'optionc'),
(82, 21, 16, 1, 'optionc'),
(128, 21, 16, 1, 'optionc'),
(85, 21, 16, 1, 'optionc'),
(152, 21, 16, 1, 'optionc'),
(101, 21, 16, 1, 'optionc'),
(62, 21, 16, -0.33, 'optionb'),
(67, 21, 16, 1, 'optionc'),
(60, 21, 16, 1, 'optionc'),
(68, 21, 16, 1, 'optionc'),
(130, 21, 16, 1, 'optionc'),
(22, 21, 16, 1, 'optionc'),
(36, 21, 16, 1, 'optionc'),
(63, 21, 16, 1, 'optionc'),
(144, 21, 16, 1, 'optionc'),
(108, 21, 16, 1, 'optionc'),
(77, 21, 16, 1, 'optionc'),
(81, 21, 16, 1, 'optionc'),
(56, 21, 16, 1, 'optionc'),
(90, 21, 16, 1, 'optionc'),
(95, 21, 16, 1, 'optionc'),
(39, 21, 16, 1, 'optionc'),
(47, 21, 16, -0.33, 'optionb'),
(87, 21, 16, 1, 'optionc'),
(158, 21, 16, 1, 'optionc'),
(117, 21, 16, 1, 'optionc'),
(93, 21, 16, 1, 'optionc'),
(122, 21, 16, -0.33, 'optionb'),
(115, 21, 16, 1, 'optionc'),
(100, 21, 16, 1, 'optionc'),
(143, 21, 16, 1, 'optionc'),
(80, 21, 16, 1, 'optionc'),
(121, 21, 16, 1, 'optionc'),
(113, 21, 16, -0.33, 'optiond'),
(86, 21, 16, 1, 'optionc'),
(112, 21, 16, 1, 'optionc'),
(124, 21, 16, 1, 'optionc'),
(153, 21, 16, 1, 'optionc'),
(44, 21, 16, -0.33, 'optionb'),
(88, 21, 16, 1, 'optionc'),
(162, 21, 16, 1, 'optionc'),
(123, 21, 16, -0.33, 'optionb'),
(83, 21, 16, 1, 'optionc'),
(73, 21, 16, 1, 'optionc'),
(98, 21, 16, 1, 'optionc'),
(96, 21, 16, -0.33, 'optionb'),
(138, 21, 16, 1, 'optionc'),
(145, 21, 16, 1, 'optionc'),
(111, 21, 16, -0.33, 'optionb'),
(74, 21, 16, -0.33, 'optionb'),
(102, 21, 16, 1, 'optionc'),
(20, 21, 16, 1, 'optionc'),
(160, 21, 16, 1, 'optionc'),
(116, 21, 16, 1, 'optionc'),
(76, 21, 16, 1, 'optionc'),
(114, 21, 16, 1, 'optionc'),
(75, 21, 16, 1, 'optionc'),
(65, 21, 16, -0.33, 'optionb'),
(78, 21, 16, -0.33, 'optionb'),
(127, 21, 16, 1, 'optionc'),
(141, 21, 16, 1, 'optionc'),
(94, 21, 16, 1, 'optionc'),
(28, 21, 16, 1, 'optionc'),
(79, 21, 16, 1, 'optionc'),
(82, 21, 17, 1, 'optionb'),
(128, 21, 17, 1, 'optionb'),
(85, 21, 17, 1, 'optionb'),
(152, 21, 17, 1, 'optionb'),
(101, 21, 17, 1, 'optionb'),
(70, 21, 17, 1, 'optionb'),
(62, 21, 17, 1, 'optionb'),
(67, 21, 17, 1, 'optionb'),
(60, 21, 17, 1, 'optionb'),
(68, 21, 17, 1, 'optionb'),
(130, 21, 17, 1, 'optionb'),
(22, 21, 17, 1, 'optionb'),
(36, 21, 17, 1, 'optionb'),
(63, 21, 17, 1, 'optionb'),
(144, 21, 17, -0.33, 'optiond'),
(108, 21, 17, 1, 'optionb'),
(77, 21, 17, 1, 'optionb'),
(81, 21, 17, 1, 'optionb'),
(56, 21, 17, 1, 'optionb'),
(90, 21, 17, 1, 'optionb'),
(95, 21, 17, 1, 'optionb'),
(39, 21, 17, 1, 'optionb'),
(47, 21, 17, 1, 'optionb'),
(87, 21, 17, 1, 'optionb'),
(158, 21, 17, 1, 'optionb'),
(93, 21, 17, 1, 'optionb'),
(122, 21, 17, 1, 'optionb'),
(115, 21, 17, -0.33, 'optiond'),
(100, 21, 17, 1, 'optionb'),
(143, 21, 17, 1, 'optionb'),
(80, 21, 17, 1, 'optionb'),
(121, 21, 17, 1, 'optionb'),
(113, 21, 17, 1, 'optionb'),
(86, 21, 17, 1, 'optionb'),
(112, 21, 17, -0.33, 'optiond'),
(124, 21, 17, 1, 'optionb'),
(153, 21, 17, 1, 'optionb'),
(44, 21, 17, -0.33, 'optionc'),
(88, 21, 17, 1, 'optionb'),
(162, 21, 17, 1, 'optionb'),
(123, 21, 17, 1, 'optionb'),
(83, 21, 17, 1, 'optionb'),
(73, 21, 17, 1, 'optionb'),
(98, 21, 17, 1, 'optionb'),
(96, 21, 17, 1, 'optionb'),
(138, 21, 17, 1, 'optionb'),
(145, 21, 17, 1, 'optionb'),
(111, 21, 17, 1, 'optionb'),
(74, 21, 17, 1, 'optionb'),
(102, 21, 17, 1, 'optionb'),
(20, 21, 17, 1, 'optionb'),
(160, 21, 17, 1, 'optionb'),
(116, 21, 17, 1, 'optionb'),
(76, 21, 17, 1, 'optionb'),
(114, 21, 17, 1, 'optionb'),
(75, 21, 17, 1, 'optionb'),
(65, 21, 17, 1, 'optionb'),
(78, 21, 17, 1, 'optionb'),
(119, 21, 17, 1, 'optionb'),
(127, 21, 17, 1, 'optionb'),
(141, 21, 17, 1, 'optionb'),
(94, 21, 17, 1, 'optionb'),
(28, 21, 17, 1, 'optionb'),
(52, 21, 18, 1, 'optionc'),
(82, 21, 18, 1, 'optionc'),
(128, 21, 18, 1, 'optionc'),
(85, 21, 18, 1, 'optionc'),
(152, 21, 18, 1, 'optionc'),
(101, 21, 18, 1, 'optionc'),
(70, 21, 18, -0.33, 'optiond'),
(62, 21, 18, 1, 'optionc'),
(67, 21, 18, 1, 'optionc'),
(68, 21, 18, 1, 'optionc'),
(130, 21, 18, 1, 'optionc'),
(22, 21, 18, 1, 'optionc'),
(36, 21, 18, 1, 'optionc'),
(63, 21, 18, 1, 'optionc'),
(144, 21, 18, 1, 'optionc'),
(108, 21, 18, 1, 'optionc'),
(77, 21, 18, 1, 'optionc'),
(81, 21, 18, 1, 'optionc'),
(56, 21, 18, 1, 'optionc'),
(90, 21, 18, 1, 'optionc'),
(95, 21, 18, 1, 'optionc'),
(39, 21, 18, 1, 'optionc'),
(47, 21, 18, 1, 'optionc'),
(158, 21, 18, 1, 'optionc'),
(117, 21, 18, -0.33, 'optiona'),
(93, 21, 18, -0.33, 'optiona'),
(122, 21, 18, 1, 'optionc'),
(115, 21, 18, 1, 'optionc'),
(143, 21, 18, 1, 'optionc'),
(80, 21, 18, 1, 'optionc'),
(121, 21, 18, 1, 'optionc'),
(113, 21, 18, -0.33, 'optiona'),
(86, 21, 18, 1, 'optionc'),
(112, 21, 18, 1, 'optionc'),
(153, 21, 18, -0.33, 'optiona'),
(44, 21, 18, 1, 'optionc'),
(88, 21, 18, 1, 'optionc'),
(162, 21, 18, 1, 'optionc'),
(123, 21, 18, 1, 'optionc'),
(83, 21, 18, 1, 'optionc'),
(73, 21, 18, 1, 'optionc'),
(98, 21, 18, 1, 'optionc'),
(96, 21, 18, 1, 'optionc'),
(145, 21, 18, 1, 'optionc'),
(111, 21, 18, 1, 'optionc'),
(102, 21, 18, 1, 'optionc'),
(20, 21, 18, 1, 'optionc'),
(116, 21, 18, 1, 'optionc'),
(76, 21, 18, 1, 'optionc'),
(114, 21, 18, -0.33, 'optiona'),
(75, 21, 18, 1, 'optionc'),
(78, 21, 18, 1, 'optionc'),
(119, 21, 18, 1, 'optionc'),
(127, 21, 18, 1, 'optionc'),
(141, 21, 18, 1, 'optionc'),
(94, 21, 18, 1, 'optionc'),
(28, 21, 18, 1, 'optionc'),
(79, 21, 18, 1, 'optionc'),
(135, 21, 19, 1, 'optionc'),
(52, 21, 19, 1, 'optionc'),
(82, 21, 19, 1, 'optionc'),
(128, 21, 19, 1, 'optionc'),
(85, 21, 19, 1, 'optionc'),
(152, 21, 19, 1, 'optionc'),
(101, 21, 19, 1, 'optionc'),
(70, 21, 19, 1, 'optionc'),
(62, 21, 19, 1, 'optionc'),
(67, 21, 19, 1, 'optionc'),
(60, 21, 19, 1, 'optionc'),
(68, 21, 19, 1, 'optionc'),
(130, 21, 19, 1, 'optionc'),
(22, 21, 19, 1, 'optionc'),
(36, 21, 19, 1, 'optionc'),
(63, 21, 19, 1, 'optionc'),
(144, 21, 19, 1, 'optionc'),
(108, 21, 19, 1, 'optionc'),
(77, 21, 19, 1, 'optionc'),
(81, 21, 19, 1, 'optionc'),
(56, 21, 19, 1, 'optionc'),
(90, 21, 19, 1, 'optionc'),
(95, 21, 19, 1, 'optionc'),
(39, 21, 19, 1, 'optionc'),
(47, 21, 19, 1, 'optionc'),
(87, 21, 19, -0.33, 'optiond'),
(158, 21, 19, 1, 'optionc'),
(117, 21, 19, 1, 'optionc'),
(93, 21, 19, 1, 'optionc'),
(122, 21, 19, 1, 'optionc'),
(115, 21, 19, 1, 'optionc'),
(100, 21, 19, 1, 'optionc'),
(143, 21, 19, 1, 'optionc'),
(80, 21, 19, 1, 'optionc'),
(121, 21, 19, 1, 'optionc'),
(113, 21, 19, 1, 'optionc'),
(86, 21, 19, 1, 'optionc'),
(112, 21, 19, 1, 'optionc'),
(153, 21, 19, 1, 'optionc'),
(44, 21, 19, 1, 'optionc'),
(88, 21, 19, -0.33, 'optiond'),
(162, 21, 19, 1, 'optionc'),
(123, 21, 19, 1, 'optionc'),
(83, 21, 19, 1, 'optionc'),
(73, 21, 19, 1, 'optionc'),
(98, 21, 19, 1, 'optionc'),
(96, 21, 19, 1, 'optionc'),
(138, 21, 19, 1, 'optionc'),
(145, 21, 19, 1, 'optionc'),
(111, 21, 19, 1, 'optionc'),
(74, 21, 19, 1, 'optionc'),
(102, 21, 19, -0.33, 'optionb'),
(20, 21, 19, 1, 'optionc'),
(76, 21, 19, 1, 'optionc'),
(114, 21, 19, -0.33, 'optiond'),
(75, 21, 19, 1, 'optionc'),
(65, 21, 19, 1, 'optionc'),
(78, 21, 19, 1, 'optionc'),
(127, 21, 19, 1, 'optionc'),
(141, 21, 19, 1, 'optionc'),
(94, 21, 19, 1, 'optionc'),
(28, 21, 19, 1, 'optionc'),
(79, 21, 19, 1, 'optionc'),
(135, 21, 20, 1, 'optiona'),
(52, 21, 20, 1, 'optiona'),
(82, 21, 20, 1, 'optiona'),
(128, 21, 20, -0.33, 'optionc'),
(85, 21, 20, 1, 'optiona'),
(152, 21, 20, 1, 'optiona'),
(101, 21, 20, 1, 'optiona'),
(70, 21, 20, 1, 'optiona'),
(62, 21, 20, 1, 'optiona'),
(68, 21, 20, 1, 'optiona'),
(130, 21, 20, 1, 'optiona'),
(22, 21, 20, 1, 'optiona'),
(36, 21, 20, 1, 'optiona'),
(63, 21, 20, 1, 'optiona'),
(144, 21, 20, 1, 'optiona'),
(81, 21, 20, 1, 'optiona'),
(56, 21, 20, 1, 'optiona'),
(90, 21, 20, 1, 'optiona'),
(95, 21, 20, 1, 'optiona'),
(39, 21, 20, 1, 'optiona'),
(47, 21, 20, 1, 'optiona'),
(93, 21, 20, 1, 'optiona'),
(122, 21, 20, 1, 'optiona'),
(115, 21, 20, 1, 'optiona'),
(100, 21, 20, 1, 'optiona'),
(143, 21, 20, 1, 'optiona'),
(80, 21, 20, 1, 'optiona'),
(121, 21, 20, 1, 'optiona'),
(86, 21, 20, 1, 'optiona'),
(112, 21, 20, -0.33, 'optiond'),
(153, 21, 20, 1, 'optiona'),
(44, 21, 20, 1, 'optiona'),
(162, 21, 20, 1, 'optiona'),
(83, 21, 20, -0.33, 'optiond'),
(98, 21, 20, 1, 'optiona'),
(96, 21, 20, 1, 'optiona'),
(145, 21, 20, 1, 'optiona'),
(111, 21, 20, 1, 'optiona'),
(102, 21, 20, -0.33, 'optionb'),
(20, 21, 20, 1, 'optiona'),
(160, 21, 20, 1, 'optiona'),
(116, 21, 20, 1, 'optiona'),
(114, 21, 20, 1, 'optiona'),
(75, 21, 20, 1, 'optiona'),
(127, 21, 20, 1, 'optiona'),
(141, 21, 20, 1, 'optiona'),
(94, 21, 20, 1, 'optiona'),
(135, 21, 21, 1, 'optionb'),
(52, 21, 21, 1, 'optionb'),
(82, 21, 21, -0.33, 'optiona'),
(128, 21, 21, -0.33, 'optionc'),
(85, 21, 21, -0.33, 'optionc'),
(152, 21, 21, 1, 'optionb'),
(101, 21, 21, 1, 'optionb'),
(70, 21, 21, 1, 'optionb'),
(62, 21, 21, 1, 'optionb'),
(67, 21, 21, 1, 'optionb'),
(68, 21, 21, 1, 'optionb'),
(22, 21, 21, 1, 'optionb'),
(36, 21, 21, 1, 'optionb'),
(63, 21, 21, 1, 'optionb'),
(144, 21, 21, 1, 'optionb'),
(108, 21, 21, 1, 'optionb'),
(77, 21, 21, 1, 'optionb'),
(81, 21, 21, 1, 'optionb'),
(56, 21, 21, 1, 'optionb'),
(90, 21, 21, 1, 'optionb'),
(95, 21, 21, 1, 'optionb'),
(39, 21, 21, 1, 'optionb'),
(47, 21, 21, -0.33, 'optionc'),
(87, 21, 21, -0.33, 'optionc'),
(158, 21, 21, -0.33, 'optionc'),
(117, 21, 21, 1, 'optionb'),
(93, 21, 21, 1, 'optionb'),
(122, 21, 21, 1, 'optionb'),
(115, 21, 21, 1, 'optionb'),
(100, 21, 21, 1, 'optionb'),
(143, 21, 21, -0.33, 'optionc'),
(80, 21, 21, 1, 'optionb'),
(121, 21, 21, 1, 'optionb'),
(113, 21, 21, 1, 'optionb'),
(86, 21, 21, 1, 'optionb'),
(112, 21, 21, -0.33, 'optionc'),
(124, 21, 21, 1, 'optionb'),
(153, 21, 21, -0.33, 'optionc'),
(44, 21, 21, 1, 'optionb'),
(88, 21, 21, -0.33, 'optionc'),
(162, 21, 21, 1, 'optionb'),
(123, 21, 21, 1, 'optionb'),
(83, 21, 21, 1, 'optionb'),
(73, 21, 21, 1, 'optionb'),
(98, 21, 21, 1, 'optionb'),
(96, 21, 21, 1, 'optionb'),
(145, 21, 21, 1, 'optionb'),
(74, 21, 21, 1, 'optionb'),
(102, 21, 21, -0.33, 'optiona'),
(20, 21, 21, 1, 'optionb'),
(116, 21, 21, 1, 'optionb'),
(76, 21, 21, 1, 'optionb'),
(114, 21, 21, 1, 'optionb'),
(75, 21, 21, 1, 'optionb'),
(65, 21, 21, 1, 'optionb'),
(78, 21, 21, -0.33, 'optionc'),
(119, 21, 21, 1, 'optionb'),
(127, 21, 21, 1, 'optionb'),
(141, 21, 21, -0.33, 'optionc'),
(94, 21, 21, 1, 'optionb'),
(28, 21, 21, -0.33, 'optionc'),
(79, 21, 21, -0.33, 'optionc'),
(135, 21, 22, 1, 'optionb'),
(52, 21, 22, 1, 'optionb'),
(82, 21, 22, 1, 'optionb'),
(128, 21, 22, 1, 'optionb'),
(85, 21, 22, 1, 'optionb'),
(152, 21, 22, 1, 'optionb'),
(101, 21, 22, 1, 'optionb'),
(70, 21, 22, 1, 'optionb'),
(62, 21, 22, 1, 'optionb'),
(67, 21, 22, 1, 'optionb'),
(60, 21, 22, 1, 'optionb'),
(68, 21, 22, 1, 'optionb'),
(130, 21, 22, 1, 'optionb'),
(22, 21, 22, 1, 'optionb'),
(36, 21, 22, 1, 'optionb'),
(63, 21, 22, 1, 'optionb'),
(144, 21, 22, 1, 'optionb'),
(108, 21, 22, 1, 'optionb'),
(77, 21, 22, 1, 'optionb'),
(81, 21, 22, 1, 'optionb'),
(56, 21, 22, 1, 'optionb'),
(90, 21, 22, 1, 'optionb'),
(95, 21, 22, 1, 'optionb'),
(39, 21, 22, 1, 'optionb'),
(47, 21, 22, 1, 'optionb'),
(87, 21, 22, -0.33, 'optiona'),
(158, 21, 22, 1, 'optionb'),
(117, 21, 22, 1, 'optionb'),
(93, 21, 22, 1, 'optionb'),
(122, 21, 22, 1, 'optionb'),
(115, 21, 22, 1, 'optionb'),
(100, 21, 22, 1, 'optionb'),
(143, 21, 22, 1, 'optionb'),
(80, 21, 22, 1, 'optionb'),
(121, 21, 22, 1, 'optionb'),
(113, 21, 22, 1, 'optionb'),
(86, 21, 22, 1, 'optionb'),
(112, 21, 22, 1, 'optionb'),
(124, 21, 22, 1, 'optionb'),
(153, 21, 22, 1, 'optionb'),
(44, 21, 22, 1, 'optionb'),
(88, 21, 22, 1, 'optionb'),
(162, 21, 22, 1, 'optionb'),
(123, 21, 22, 1, 'optionb'),
(83, 21, 22, 1, 'optionb'),
(73, 21, 22, 1, 'optionb'),
(98, 21, 22, 1, 'optionb'),
(96, 21, 22, 1, 'optionb'),
(138, 21, 22, 1, 'optionb'),
(145, 21, 22, 1, 'optionb'),
(111, 21, 22, 1, 'optionb'),
(74, 21, 22, 1, 'optionb'),
(102, 21, 22, 1, 'optionb'),
(20, 21, 22, 1, 'optionb'),
(160, 21, 22, 1, 'optionb'),
(116, 21, 22, 1, 'optionb'),
(76, 21, 22, 1, 'optionb'),
(114, 21, 22, 1, 'optionb'),
(75, 21, 22, 1, 'optionb'),
(119, 21, 22, 1, 'optionb'),
(127, 21, 22, 1, 'optionb'),
(141, 21, 22, 1, 'optionb'),
(94, 21, 22, 1, 'optionb'),
(28, 21, 22, 1, 'optionb'),
(79, 21, 22, 1, 'optionb'),
(135, 21, 23, 1, 'optionc'),
(82, 21, 23, -0.33, 'optiona'),
(128, 21, 23, 1, 'optionc'),
(101, 21, 23, 1, 'optionc'),
(62, 21, 23, 1, 'optionc'),
(67, 21, 23, 1, 'optionc'),
(60, 21, 23, -0.33, 'optiona'),
(22, 21, 23, 1, 'optionc'),
(36, 21, 23, 1, 'optionc'),
(63, 21, 23, -0.33, 'optiona'),
(144, 21, 23, 1, 'optionc'),
(77, 21, 23, -0.33, 'optiona'),
(81, 21, 23, 1, 'optionc'),
(56, 21, 23, 1, 'optionc'),
(90, 21, 23, -0.33, 'optiona'),
(95, 21, 23, 1, 'optionc'),
(39, 21, 23, -0.33, 'optiona'),
(47, 21, 23, -0.33, 'optionb'),
(87, 21, 23, -0.33, 'optiona'),
(158, 21, 23, 1, 'optionc'),
(117, 21, 23, -0.33, 'optiona'),
(93, 21, 23, 1, 'optionc'),
(115, 21, 23, 1, 'optionc'),
(100, 21, 23, 1, 'optionc'),
(121, 21, 23, 1, 'optionc'),
(124, 21, 23, 1, 'optionc'),
(153, 21, 23, 1, 'optionc'),
(88, 21, 23, -0.33, 'optiona'),
(162, 21, 23, 1, 'optionc'),
(123, 21, 23, 1, 'optionc'),
(73, 21, 23, -0.33, 'optiona'),
(98, 21, 23, -0.33, 'optiona'),
(96, 21, 23, 1, 'optionc'),
(138, 21, 23, -0.33, 'optiona'),
(145, 21, 23, -0.33, 'optiona'),
(111, 21, 23, 1, 'optionc'),
(102, 21, 23, 1, 'optionc'),
(20, 21, 23, -0.33, 'optiona'),
(160, 21, 23, -0.33, 'optiona'),
(116, 21, 23, 1, 'optionc'),
(75, 21, 23, -0.33, 'optiona'),
(65, 21, 23, 1, 'optionc'),
(127, 21, 23, 1, 'optionc'),
(94, 21, 23, 1, 'optionc'),
(28, 21, 23, 1, 'optionc'),
(79, 21, 23, 1, 'optionc'),
(52, 21, 24, 1, 'optionc'),
(82, 21, 24, -0.33, 'optiona'),
(128, 21, 24, 1, 'optionc'),
(85, 21, 24, -0.33, 'optionb'),
(152, 21, 24, -0.33, 'optionb'),
(101, 21, 24, -0.33, 'optionb'),
(70, 21, 24, 1, 'optionc'),
(62, 21, 24, 1, 'optionc'),
(67, 21, 24, -0.33, 'optionb'),
(60, 21, 24, -0.33, 'optionb'),
(68, 21, 24, 1, 'optionc'),
(130, 21, 24, -0.33, 'optionb'),
(22, 21, 24, 1, 'optionc'),
(36, 21, 24, -0.33, 'optionb'),
(63, 21, 24, -0.33, 'optionb'),
(144, 21, 24, -0.33, 'optionb'),
(108, 21, 24, -0.33, 'optionb'),
(77, 21, 24, 1, 'optionc'),
(81, 21, 24, 1, 'optionc'),
(56, 21, 24, -0.33, 'optionb'),
(90, 21, 24, -0.33, 'optionb'),
(95, 21, 24, -0.33, 'optionb'),
(39, 21, 24, 1, 'optionc'),
(87, 21, 24, 1, 'optionc'),
(158, 21, 24, 1, 'optionc'),
(117, 21, 24, -0.33, 'optiond'),
(93, 21, 24, -0.33, 'optionb'),
(122, 21, 24, -0.33, 'optionb'),
(115, 21, 24, -0.33, 'optionb'),
(100, 21, 24, -0.33, 'optionb'),
(143, 21, 24, -0.33, 'optionb'),
(80, 21, 24, 1, 'optionc'),
(121, 21, 24, -0.33, 'optionb'),
(113, 21, 24, -0.33, 'optionb'),
(86, 21, 24, -0.33, 'optionb'),
(112, 21, 24, -0.33, 'optiona'),
(124, 21, 24, -0.33, 'optionb'),
(153, 21, 24, -0.33, 'optionb'),
(44, 21, 24, 1, 'optionc'),
(88, 21, 24, 1, 'optionc'),
(162, 21, 24, -0.33, 'optionb'),
(123, 21, 24, -0.33, 'optionb'),
(83, 21, 24, 1, 'optionc'),
(73, 21, 24, -0.33, 'optionb'),
(98, 21, 24, -0.33, 'optionb'),
(96, 21, 24, -0.33, 'optionb'),
(138, 21, 24, -0.33, 'optionb'),
(145, 21, 24, 1, 'optionc'),
(111, 21, 24, -0.33, 'optionb'),
(102, 21, 24, -0.33, 'optionb'),
(20, 21, 24, -0.33, 'optiona'),
(160, 21, 24, -0.33, 'optionb'),
(116, 21, 24, 1, 'optionc'),
(76, 21, 24, -0.33, 'optionb'),
(114, 21, 24, 1, 'optionc'),
(75, 21, 24, -0.33, 'optiona'),
(65, 21, 24, -0.33, 'optiona'),
(78, 21, 24, 1, 'optionc'),
(119, 21, 24, -0.33, 'optiona'),
(127, 21, 24, 1, 'optionc'),
(141, 21, 24, -0.33, 'optionb'),
(94, 21, 24, -0.33, 'optionb'),
(28, 21, 24, 1, 'optionc'),
(79, 21, 24, 1, 'optionc'),
(135, 21, 25, 1, 'optionb'),
(52, 21, 25, 1, 'optionb'),
(82, 21, 25, 1, 'optionb'),
(128, 21, 25, 1, 'optionb'),
(85, 21, 25, 1, 'optionb'),
(152, 21, 25, 1, 'optionb'),
(101, 21, 25, 1, 'optionb'),
(70, 21, 25, 1, 'optionb'),
(62, 21, 25, -0.33, 'optionc'),
(67, 21, 25, 1, 'optionb'),
(68, 21, 25, 1, 'optionb'),
(22, 21, 25, 1, 'optionb'),
(36, 21, 25, 1, 'optionb'),
(63, 21, 25, 1, 'optionb'),
(144, 21, 25, 1, 'optionb'),
(108, 21, 25, -0.33, 'optiond'),
(77, 21, 25, 1, 'optionb'),
(81, 21, 25, 1, 'optionb'),
(56, 21, 25, -0.33, 'optiond'),
(90, 21, 25, 1, 'optionb'),
(95, 21, 25, 1, 'optionb'),
(39, 21, 25, 1, 'optionb'),
(47, 21, 25, -0.33, 'optiond'),
(87, 21, 25, 1, 'optionb'),
(158, 21, 25, 1, 'optionb'),
(117, 21, 25, 1, 'optionb'),
(93, 21, 25, -0.33, 'optionc'),
(115, 21, 25, 1, 'optionb'),
(100, 21, 25, 1, 'optionb'),
(143, 21, 25, 1, 'optionb'),
(80, 21, 25, 1, 'optionb'),
(121, 21, 25, 1, 'optionb'),
(113, 21, 25, 1, 'optionb'),
(86, 21, 25, -0.33, 'optionc'),
(112, 21, 25, 1, 'optionb'),
(124, 21, 25, -0.33, 'optiond'),
(153, 21, 25, 1, 'optionb'),
(44, 21, 25, -0.33, 'optiona'),
(88, 21, 25, 1, 'optionb'),
(162, 21, 25, 1, 'optionb'),
(123, 21, 25, 1, 'optionb'),
(83, 21, 25, 1, 'optionb'),
(98, 21, 25, 1, 'optionb'),
(96, 21, 25, 1, 'optionb'),
(145, 21, 25, 1, 'optionb'),
(111, 21, 25, 1, 'optionb'),
(74, 21, 25, 1, 'optionb'),
(20, 21, 25, 1, 'optionb'),
(116, 21, 25, 1, 'optionb'),
(76, 21, 25, -0.33, 'optionc'),
(114, 21, 25, 1, 'optionb'),
(75, 21, 25, 1, 'optionb'),
(65, 21, 25, 1, 'optionb'),
(78, 21, 25, -0.33, 'optiond'),
(119, 21, 25, 1, 'optionb'),
(127, 21, 25, 1, 'optionb'),
(141, 21, 25, 1, 'optionb'),
(94, 21, 25, 1, 'optionb'),
(28, 21, 25, -0.33, 'optionc'),
(79, 21, 25, 1, 'optionb'),
(135, 21, 26, 2, 'optionb'),
(52, 21, 26, 2, 'optionb'),
(82, 21, 26, 2, 'optionb'),
(128, 21, 26, 2, 'optionb'),
(85, 21, 26, 2, 'optionb'),
(152, 21, 26, 2, 'optionb'),
(101, 21, 26, 2, 'optionb'),
(70, 21, 26, -0.66, 'optiond'),
(62, 21, 26, 2, 'optionb'),
(67, 21, 26, 2, 'optionb'),
(60, 21, 26, 2, 'optionb'),
(68, 21, 26, 2, 'optionb'),
(130, 21, 26, 2, 'optionb'),
(22, 21, 26, 2, 'optionb'),
(36, 21, 26, 2, 'optionb'),
(63, 21, 26, 2, 'optionb'),
(144, 21, 26, 2, 'optionb'),
(77, 21, 26, 2, 'optionb'),
(81, 21, 26, 2, 'optionb'),
(56, 21, 26, 2, 'optionb'),
(90, 21, 26, 2, 'optionb'),
(95, 21, 26, 2, 'optionb'),
(39, 21, 26, 2, 'optionb'),
(47, 21, 26, 2, 'optionb'),
(87, 21, 26, 2, 'optionb'),
(158, 21, 26, 2, 'optionb'),
(117, 21, 26, 2, 'optionb'),
(93, 21, 26, 2, 'optionb'),
(115, 21, 26, 2, 'optionb'),
(100, 21, 26, 2, 'optionb'),
(143, 21, 26, 2, 'optionb'),
(121, 21, 26, 2, 'optionb'),
(86, 21, 26, 2, 'optionb'),
(112, 21, 26, 2, 'optionb'),
(124, 21, 26, 2, 'optionb'),
(153, 21, 26, 2, 'optionb'),
(44, 21, 26, 2, 'optionb'),
(88, 21, 26, 2, 'optionb'),
(162, 21, 26, 2, 'optionb'),
(123, 21, 26, 2, 'optionb'),
(83, 21, 26, 2, 'optionb'),
(73, 21, 26, 2, 'optionb'),
(96, 21, 26, 2, 'optionb'),
(138, 21, 26, 2, 'optionb'),
(145, 21, 26, 2, 'optionb'),
(111, 21, 26, -0.66, 'optiond'),
(74, 21, 26, -0.66, 'optiona'),
(20, 21, 26, 2, 'optionb'),
(160, 21, 26, 2, 'optionb'),
(116, 21, 26, 2, 'optionb'),
(76, 21, 26, 2, 'optionb'),
(114, 21, 26, 2, 'optionb'),
(75, 21, 26, 2, 'optionb'),
(65, 21, 26, 2, 'optionb'),
(78, 21, 26, 2, 'optionb'),
(127, 21, 26, 2, 'optionb'),
(141, 21, 26, 2, 'optionb'),
(94, 21, 26, 2, 'optionb'),
(28, 21, 26, 2, 'optionb'),
(79, 21, 26, 2, 'optionb'),
(135, 21, 27, -0.66, 'optionb'),
(52, 21, 27, -0.66, 'optionb'),
(82, 21, 27, -0.66, 'optionb'),
(128, 21, 27, -0.66, 'optionb'),
(85, 21, 27, 2, 'optiond'),
(152, 21, 27, 2, 'optiond'),
(101, 21, 27, 2, 'optiond'),
(70, 21, 27, 2, 'optiond'),
(62, 21, 27, 2, 'optiond'),
(67, 21, 27, -0.66, 'optionb'),
(60, 21, 27, 2, 'optiond'),
(68, 21, 27, -0.66, 'optionb'),
(130, 21, 27, -0.66, 'optionb'),
(22, 21, 27, -0.66, 'optionb'),
(36, 21, 27, -0.66, 'optionb'),
(63, 21, 27, 2, 'optiond'),
(144, 21, 27, -0.66, 'optionb'),
(108, 21, 27, 2, 'optiond'),
(77, 21, 27, -0.66, 'optionb'),
(56, 21, 27, 2, 'optiond'),
(90, 21, 27, 2, 'optiond'),
(95, 21, 27, -0.66, 'optionb'),
(39, 21, 27, 2, 'optiond'),
(47, 21, 27, -0.66, 'optionb'),
(87, 21, 27, -0.66, 'optionb'),
(158, 21, 27, 2, 'optiond'),
(117, 21, 27, -0.66, 'optionb'),
(93, 21, 27, -0.66, 'optionb'),
(122, 21, 27, 2, 'optiond'),
(115, 21, 27, -0.66, 'optionb'),
(100, 21, 27, 2, 'optiond'),
(143, 21, 27, -0.66, 'optionb'),
(80, 21, 27, 2, 'optiond'),
(121, 21, 27, -0.66, 'optionb'),
(113, 21, 27, -0.66, 'optionb'),
(112, 21, 27, 2, 'optiond'),
(124, 21, 27, -0.66, 'optionb'),
(153, 21, 27, -0.66, 'optionb'),
(44, 21, 27, -0.66, 'optionb'),
(88, 21, 27, 2, 'optiond'),
(162, 21, 27, 2, 'optiond'),
(123, 21, 27, -0.66, 'optionb'),
(73, 21, 27, -0.66, 'optionb'),
(98, 21, 27, -0.66, 'optionb'),
(96, 21, 27, 2, 'optiond'),
(138, 21, 27, 2, 'optiond'),
(111, 21, 27, 2, 'optiond'),
(102, 21, 27, -0.66, 'optionb'),
(20, 21, 27, -0.66, 'optionb'),
(116, 21, 27, -0.66, 'optionb'),
(114, 21, 27, 2, 'optiond'),
(75, 21, 27, 2, 'optiond'),
(65, 21, 27, -0.66, 'optionb'),
(127, 21, 27, -0.66, 'optionc'),
(141, 21, 27, -0.66, 'optionb'),
(94, 21, 27, -0.66, 'optionb'),
(79, 21, 27, -0.66, 'optionb'),
(135, 21, 28, 2, 'optiond'),
(52, 21, 28, 2, 'optiond'),
(82, 21, 28, 2, 'optiond'),
(128, 21, 28, 2, 'optiond'),
(85, 21, 28, 2, 'optiond'),
(152, 21, 28, 2, 'optiond'),
(101, 21, 28, 2, 'optiond'),
(70, 21, 28, 2, 'optiond'),
(62, 21, 28, 2, 'optiond'),
(67, 21, 28, 2, 'optiond'),
(60, 21, 28, 2, 'optiond'),
(68, 21, 28, 2, 'optiond'),
(130, 21, 28, 2, 'optiond'),
(22, 21, 28, 2, 'optiond'),
(36, 21, 28, 2, 'optiond'),
(63, 21, 28, 2, 'optiond'),
(144, 21, 28, 2, 'optiond'),
(108, 21, 28, 2, 'optiond'),
(77, 21, 28, 2, 'optiond'),
(81, 21, 28, 2, 'optiond'),
(56, 21, 28, 2, 'optiond'),
(90, 21, 28, 2, 'optiond'),
(95, 21, 28, 2, 'optiond'),
(39, 21, 28, 2, 'optiond'),
(47, 21, 28, 2, 'optiond'),
(158, 21, 28, 2, 'optiond'),
(117, 21, 28, 2, 'optiond'),
(93, 21, 28, 2, 'optiond'),
(122, 21, 28, 2, 'optiond'),
(115, 21, 28, 2, 'optiond'),
(100, 21, 28, 2, 'optiond'),
(143, 21, 28, 2, 'optiond'),
(80, 21, 28, 2, 'optiond'),
(121, 21, 28, 2, 'optiond'),
(113, 21, 28, 2, 'optiond'),
(86, 21, 28, 2, 'optiond'),
(112, 21, 28, 2, 'optiond'),
(124, 21, 28, 2, 'optiond'),
(153, 21, 28, 2, 'optiond'),
(44, 21, 28, 2, 'optiond'),
(162, 21, 28, 2, 'optiond'),
(123, 21, 28, 2, 'optiond'),
(83, 21, 28, 2, 'optiond'),
(73, 21, 28, 2, 'optiond'),
(98, 21, 28, 2, 'optiond'),
(96, 21, 28, 2, 'optiond'),
(138, 21, 28, 2, 'optiond'),
(145, 21, 28, 2, 'optiond'),
(111, 21, 28, 2, 'optiond'),
(74, 21, 28, -0.66, 'optionc'),
(20, 21, 28, 2, 'optiond'),
(160, 21, 28, 2, 'optiond'),
(116, 21, 28, 2, 'optiond'),
(76, 21, 28, 2, 'optiond'),
(114, 21, 28, 2, 'optiond'),
(75, 21, 28, 2, 'optiond'),
(65, 21, 28, 2, 'optiond'),
(78, 21, 28, 2, 'optiond'),
(127, 21, 28, 2, 'optiond'),
(94, 21, 28, 2, 'optiond'),
(28, 21, 28, 2, 'optiond'),
(135, 21, 29, 2, 'optiond'),
(52, 21, 29, 2, 'optiond'),
(82, 21, 29, 2, 'optiond'),
(128, 21, 29, 2, 'optiond'),
(85, 21, 29, 2, 'optiond'),
(152, 21, 29, 2, 'optiond'),
(62, 21, 29, 2, 'optiond'),
(67, 21, 29, 2, 'optiond'),
(60, 21, 29, 2, 'optiond'),
(68, 21, 29, 2, 'optiond'),
(130, 21, 29, 2, 'optiond'),
(22, 21, 29, 2, 'optiond'),
(36, 21, 29, 2, 'optiond'),
(63, 21, 29, 2, 'optiond'),
(144, 21, 29, 2, 'optiond'),
(108, 21, 29, 2, 'optiond'),
(77, 21, 29, 2, 'optiond'),
(81, 21, 29, 2, 'optiond'),
(56, 21, 29, 2, 'optiond'),
(90, 21, 29, 2, 'optiond'),
(95, 21, 29, 2, 'optiond'),
(39, 21, 29, 2, 'optiond'),
(87, 21, 29, 2, 'optiond'),
(158, 21, 29, 2, 'optiond'),
(117, 21, 29, 2, 'optiond'),
(93, 21, 29, 2, 'optiond'),
(122, 21, 29, 2, 'optiond'),
(115, 21, 29, 2, 'optiond'),
(100, 21, 29, 2, 'optiond'),
(143, 21, 29, 2, 'optiond'),
(80, 21, 29, 2, 'optiond'),
(121, 21, 29, 2, 'optiond'),
(113, 21, 29, 2, 'optiond'),
(86, 21, 29, 2, 'optiond'),
(112, 21, 29, 2, 'optiond'),
(124, 21, 29, 2, 'optiond'),
(153, 21, 29, 2, 'optiond'),
(44, 21, 29, 2, 'optiond'),
(88, 21, 29, 2, 'optiond'),
(162, 21, 29, 2, 'optiond'),
(123, 21, 29, 2, 'optiond'),
(83, 21, 29, 2, 'optiond'),
(73, 21, 29, 2, 'optiond'),
(98, 21, 29, 2, 'optiond'),
(96, 21, 29, 2, 'optiond'),
(138, 21, 29, 2, 'optiond'),
(145, 21, 29, 2, 'optiond'),
(20, 21, 29, 2, 'optiond'),
(160, 21, 29, 2, 'optiond'),
(116, 21, 29, 2, 'optiond'),
(114, 21, 29, 2, 'optiond'),
(75, 21, 29, 2, 'optiond'),
(65, 21, 29, 2, 'optiond'),
(78, 21, 29, 2, 'optiond'),
(119, 21, 29, 2, 'optiond'),
(127, 21, 29, 2, 'optiond'),
(141, 21, 29, 2, 'optiond'),
(94, 21, 29, 2, 'optiond'),
(28, 21, 29, 2, 'optiond'),
(79, 21, 29, 2, 'optiond'),
(52, 21, 30, 2, 'optionb'),
(82, 21, 30, 2, 'optionb'),
(128, 21, 30, -0.66, 'optiond'),
(85, 21, 30, -0.66, 'optiond'),
(152, 21, 30, -0.66, 'optionc'),
(101, 21, 30, 2, 'optionb'),
(70, 21, 30, -0.66, 'optiona'),
(62, 21, 30, -0.66, 'optiona'),
(67, 21, 30, 2, 'optionb'),
(68, 21, 30, -0.66, 'optiond'),
(130, 21, 30, -0.66, 'optionc'),
(22, 21, 30, -0.66, 'optiond'),
(36, 21, 30, 2, 'optionb'),
(144, 21, 30, -0.66, 'optiond'),
(108, 21, 30, 2, 'optionb'),
(77, 21, 30, -0.66, 'optionc'),
(81, 21, 30, 2, 'optionb'),
(56, 21, 30, -0.66, 'optiond'),
(90, 21, 30, -0.66, 'optiond'),
(95, 21, 30, 2, 'optionb'),
(39, 21, 30, 2, 'optionb'),
(47, 21, 30, -0.66, 'optiond'),
(87, 21, 30, -0.66, 'optionc'),
(158, 21, 30, -0.66, 'optiond'),
(117, 21, 30, -0.66, 'optionc'),
(93, 21, 30, -0.66, 'optionc'),
(122, 21, 30, -0.66, 'optiona'),
(115, 21, 30, -0.66, 'optiond'),
(100, 21, 30, 2, 'optionb'),
(143, 21, 30, -0.66, 'optiond'),
(80, 21, 30, -0.66, 'optiond'),
(112, 21, 30, -0.66, 'optionc'),
(153, 21, 30, -0.66, 'optiona'),
(44, 21, 30, 2, 'optionb'),
(88, 21, 30, -0.66, 'optionc'),
(162, 21, 30, -0.66, 'optiona'),
(123, 21, 30, -0.66, 'optiond'),
(83, 21, 30, -0.66, 'optiond');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(73, 21, 30, 2, 'optionb'),
(98, 21, 30, -0.66, 'optionc'),
(96, 21, 30, -0.66, 'optiond'),
(145, 21, 30, -0.66, 'optiond'),
(111, 21, 30, -0.66, 'optiond'),
(74, 21, 30, -0.66, 'optiond'),
(20, 21, 30, 2, 'optionb'),
(160, 21, 30, -0.66, 'optiond'),
(116, 21, 30, -0.66, 'optiond'),
(76, 21, 30, -0.66, 'optiond'),
(114, 21, 30, -0.66, 'optiond'),
(75, 21, 30, -0.66, 'optiond'),
(65, 21, 30, -0.66, 'optiond'),
(119, 21, 30, 2, 'optionb'),
(94, 21, 30, -0.66, 'optiond'),
(28, 21, 30, -0.66, 'optionc'),
(79, 21, 30, -0.66, 'optiond'),
(52, 21, 31, 2, 'optiona'),
(82, 21, 31, 2, 'optiona'),
(128, 21, 31, -0.66, 'optiond'),
(85, 21, 31, 2, 'optiona'),
(152, 21, 31, 2, 'optiona'),
(101, 21, 31, 2, 'optiona'),
(70, 21, 31, 2, 'optiona'),
(62, 21, 31, 2, 'optiona'),
(67, 21, 31, 2, 'optiona'),
(60, 21, 31, 2, 'optiona'),
(68, 21, 31, 2, 'optiona'),
(130, 21, 31, -0.66, 'optionb'),
(22, 21, 31, 2, 'optiona'),
(36, 21, 31, 2, 'optiona'),
(63, 21, 31, 2, 'optiona'),
(144, 21, 31, 2, 'optiona'),
(108, 21, 31, 2, 'optiona'),
(81, 21, 31, 2, 'optiona'),
(56, 21, 31, 2, 'optiona'),
(90, 21, 31, 2, 'optiona'),
(95, 21, 31, 2, 'optiona'),
(39, 21, 31, 2, 'optiona'),
(87, 21, 31, 2, 'optiona'),
(158, 21, 31, 2, 'optiona'),
(117, 21, 31, 2, 'optiona'),
(93, 21, 31, 2, 'optiona'),
(115, 21, 31, 2, 'optiona'),
(100, 21, 31, 2, 'optiona'),
(80, 21, 31, 2, 'optiona'),
(121, 21, 31, -0.66, 'optionb'),
(86, 21, 31, -0.66, 'optionb'),
(124, 21, 31, 2, 'optiona'),
(153, 21, 31, 2, 'optiona'),
(44, 21, 31, 2, 'optiona'),
(88, 21, 31, 2, 'optiona'),
(162, 21, 31, 2, 'optiona'),
(83, 21, 31, 2, 'optiona'),
(73, 21, 31, 2, 'optiona'),
(98, 21, 31, 2, 'optiona'),
(96, 21, 31, 2, 'optiona'),
(138, 21, 31, 2, 'optiona'),
(145, 21, 31, 2, 'optiona'),
(74, 21, 31, 2, 'optiona'),
(102, 21, 31, 2, 'optiona'),
(20, 21, 31, 2, 'optiona'),
(160, 21, 31, 2, 'optiona'),
(116, 21, 31, 2, 'optiona'),
(76, 21, 31, 2, 'optiona'),
(75, 21, 31, 2, 'optiona'),
(65, 21, 31, 2, 'optiona'),
(78, 21, 31, 2, 'optiona'),
(119, 21, 31, 2, 'optiona'),
(127, 21, 31, 2, 'optiona'),
(141, 21, 31, 2, 'optiona'),
(94, 21, 31, 2, 'optiona'),
(28, 21, 31, 2, 'optiona'),
(79, 21, 31, 2, 'optiona'),
(135, 21, 32, 2, 'optiond'),
(52, 21, 32, 2, 'optiond'),
(128, 21, 32, 2, 'optiond'),
(85, 21, 32, 2, 'optiond'),
(152, 21, 32, 2, 'optiond'),
(101, 21, 32, 2, 'optiond'),
(62, 21, 32, 2, 'optiond'),
(67, 21, 32, 2, 'optiond'),
(60, 21, 32, 2, 'optiond'),
(68, 21, 32, 2, 'optiond'),
(22, 21, 32, 2, 'optiond'),
(36, 21, 32, 2, 'optiond'),
(63, 21, 32, 2, 'optiond'),
(144, 21, 32, 2, 'optiond'),
(108, 21, 32, 2, 'optiond'),
(77, 21, 32, 2, 'optiond'),
(81, 21, 32, 2, 'optiond'),
(90, 21, 32, 2, 'optiond'),
(39, 21, 32, 2, 'optiond'),
(47, 21, 32, 2, 'optiond'),
(87, 21, 32, 2, 'optiond'),
(158, 21, 32, 2, 'optiond'),
(117, 21, 32, 2, 'optiond'),
(122, 21, 32, 2, 'optiond'),
(115, 21, 32, 2, 'optiond'),
(100, 21, 32, -0.66, 'optiona'),
(143, 21, 32, 2, 'optiond'),
(80, 21, 32, 2, 'optiond'),
(113, 21, 32, 2, 'optiond'),
(86, 21, 32, -0.66, 'optiona'),
(112, 21, 32, 2, 'optiond'),
(124, 21, 32, -0.66, 'optiona'),
(153, 21, 32, 2, 'optiond'),
(88, 21, 32, 2, 'optiond'),
(162, 21, 32, -0.66, 'optionc'),
(123, 21, 32, 2, 'optiond'),
(83, 21, 32, 2, 'optiond'),
(73, 21, 32, 2, 'optiond'),
(98, 21, 32, 2, 'optiond'),
(96, 21, 32, 2, 'optiond'),
(138, 21, 32, 2, 'optiond'),
(145, 21, 32, -0.66, 'optiona'),
(111, 21, 32, 2, 'optiond'),
(74, 21, 32, 2, 'optiond'),
(102, 21, 32, -0.66, 'optiona'),
(20, 21, 32, 2, 'optiond'),
(160, 21, 32, 2, 'optiond'),
(116, 21, 32, 2, 'optiond'),
(114, 21, 32, 2, 'optiond'),
(75, 21, 32, 2, 'optiond'),
(65, 21, 32, 2, 'optiond'),
(78, 21, 32, 2, 'optiond'),
(119, 21, 32, 2, 'optiond'),
(127, 21, 32, 2, 'optiond'),
(141, 21, 32, 2, 'optiond'),
(94, 21, 32, 2, 'optiond'),
(28, 21, 32, 2, 'optiond'),
(135, 21, 33, 2, 'optiond'),
(52, 21, 33, 2, 'optiond'),
(82, 21, 33, 2, 'optiond'),
(128, 21, 33, 2, 'optiond'),
(85, 21, 33, 2, 'optiond'),
(152, 21, 33, 2, 'optiond'),
(101, 21, 33, 2, 'optiond'),
(70, 21, 33, 2, 'optiond'),
(62, 21, 33, 2, 'optiond'),
(67, 21, 33, 2, 'optiond'),
(60, 21, 33, 2, 'optiond'),
(68, 21, 33, 2, 'optiond'),
(22, 21, 33, 2, 'optiond'),
(36, 21, 33, 2, 'optiond'),
(63, 21, 33, 2, 'optiond'),
(144, 21, 33, 2, 'optiond'),
(108, 21, 33, 2, 'optiond'),
(77, 21, 33, 2, 'optiond'),
(81, 21, 33, 2, 'optiond'),
(56, 21, 33, 2, 'optiond'),
(90, 21, 33, 2, 'optiond'),
(95, 21, 33, 2, 'optiond'),
(39, 21, 33, 2, 'optiond'),
(47, 21, 33, 2, 'optiond'),
(87, 21, 33, 2, 'optiond'),
(158, 21, 33, 2, 'optiond'),
(117, 21, 33, 2, 'optiond'),
(93, 21, 33, 2, 'optiond'),
(122, 21, 33, 2, 'optiond'),
(115, 21, 33, 2, 'optiond'),
(100, 21, 33, 2, 'optiond'),
(143, 21, 33, 2, 'optiond'),
(80, 21, 33, 2, 'optiond'),
(121, 21, 33, 2, 'optiond'),
(113, 21, 33, -0.66, 'optiona'),
(86, 21, 33, 2, 'optiond'),
(112, 21, 33, 2, 'optiond'),
(124, 21, 33, 2, 'optiond'),
(153, 21, 33, 2, 'optiond'),
(44, 21, 33, 2, 'optiond'),
(88, 21, 33, 2, 'optiond'),
(162, 21, 33, 2, 'optiond'),
(123, 21, 33, 2, 'optiond'),
(83, 21, 33, 2, 'optiond'),
(73, 21, 33, 2, 'optiond'),
(98, 21, 33, 2, 'optiond'),
(96, 21, 33, 2, 'optiond'),
(138, 21, 33, 2, 'optiond'),
(145, 21, 33, 2, 'optiond'),
(111, 21, 33, 2, 'optiond'),
(74, 21, 33, 2, 'optiond'),
(20, 21, 33, 2, 'optiond'),
(160, 21, 33, 2, 'optiond'),
(116, 21, 33, 2, 'optiond'),
(76, 21, 33, 2, 'optiond'),
(114, 21, 33, 2, 'optiond'),
(75, 21, 33, 2, 'optiond'),
(65, 21, 33, 2, 'optiond'),
(78, 21, 33, 2, 'optiond'),
(127, 21, 33, 2, 'optiond'),
(141, 21, 33, 2, 'optiond'),
(94, 21, 33, 2, 'optiond'),
(28, 21, 33, 2, 'optiond'),
(79, 21, 33, 2, 'optiond'),
(135, 21, 34, 2, 'optionc'),
(52, 21, 34, 2, 'optionc'),
(82, 21, 34, 2, 'optionc'),
(128, 21, 34, 2, 'optionc'),
(85, 21, 34, 2, 'optionc'),
(152, 21, 34, 2, 'optionc'),
(101, 21, 34, 2, 'optionc'),
(70, 21, 34, -0.66, 'optionb'),
(62, 21, 34, 2, 'optionc'),
(67, 21, 34, 2, 'optionc'),
(60, 21, 34, 2, 'optionc'),
(68, 21, 34, 2, 'optionc'),
(22, 21, 34, 2, 'optionc'),
(36, 21, 34, 2, 'optionc'),
(63, 21, 34, 2, 'optionc'),
(144, 21, 34, 2, 'optionc'),
(108, 21, 34, 2, 'optionc'),
(77, 21, 34, 2, 'optionc'),
(81, 21, 34, 2, 'optionc'),
(56, 21, 34, 2, 'optionc'),
(90, 21, 34, 2, 'optionc'),
(95, 21, 34, 2, 'optionc'),
(39, 21, 34, 2, 'optionc'),
(87, 21, 34, 2, 'optionc'),
(158, 21, 34, 2, 'optionc'),
(117, 21, 34, 2, 'optionc'),
(93, 21, 34, 2, 'optionc'),
(122, 21, 34, 2, 'optionc'),
(115, 21, 34, 2, 'optionc'),
(100, 21, 34, 2, 'optionc'),
(143, 21, 34, 2, 'optionc'),
(121, 21, 34, 2, 'optionc'),
(86, 21, 34, 2, 'optionc'),
(112, 21, 34, 2, 'optionc'),
(153, 21, 34, 2, 'optionc'),
(88, 21, 34, 2, 'optionc'),
(162, 21, 34, 2, 'optionc'),
(123, 21, 34, 2, 'optionc'),
(83, 21, 34, 2, 'optionc'),
(73, 21, 34, 2, 'optionc'),
(98, 21, 34, 2, 'optionc'),
(96, 21, 34, 2, 'optionc'),
(138, 21, 34, 2, 'optionc'),
(145, 21, 34, 2, 'optionc'),
(20, 21, 34, 2, 'optionc'),
(160, 21, 34, 2, 'optionc'),
(116, 21, 34, 2, 'optionc'),
(114, 21, 34, 2, 'optionc'),
(75, 21, 34, 2, 'optionc'),
(65, 21, 34, 2, 'optionc'),
(119, 21, 34, 2, 'optionc'),
(127, 21, 34, 2, 'optionc'),
(94, 21, 34, 2, 'optionc'),
(28, 21, 34, 2, 'optionc'),
(128, 21, 35, 2, 'optiond'),
(152, 21, 35, -0.66, 'optionb'),
(101, 21, 35, 2, 'optiond'),
(62, 21, 35, 2, 'optiond'),
(67, 21, 35, 2, 'optiond'),
(68, 21, 35, 2, 'optiond'),
(22, 21, 35, 2, 'optiond'),
(36, 21, 35, 2, 'optiond'),
(144, 21, 35, 2, 'optiond'),
(108, 21, 35, 2, 'optiond'),
(77, 21, 35, 2, 'optiond'),
(81, 21, 35, -0.66, 'optiona'),
(56, 21, 35, 2, 'optiond'),
(90, 21, 35, 2, 'optiond'),
(95, 21, 35, 2, 'optiond'),
(39, 21, 35, 2, 'optiond'),
(47, 21, 35, 2, 'optiond'),
(87, 21, 35, 2, 'optiond'),
(158, 21, 35, 2, 'optiond'),
(117, 21, 35, 2, 'optiond'),
(93, 21, 35, 2, 'optiond'),
(122, 21, 35, 2, 'optiond'),
(115, 21, 35, 2, 'optiond'),
(100, 21, 35, 2, 'optiond'),
(143, 21, 35, -0.66, 'optiona'),
(80, 21, 35, 2, 'optiond'),
(121, 21, 35, 2, 'optiond'),
(113, 21, 35, -0.66, 'optiona'),
(86, 21, 35, 2, 'optiond'),
(124, 21, 35, 2, 'optiond'),
(153, 21, 35, 2, 'optiond'),
(44, 21, 35, 2, 'optiond'),
(88, 21, 35, 2, 'optiond'),
(162, 21, 35, 2, 'optiond'),
(123, 21, 35, 2, 'optiond'),
(83, 21, 35, 2, 'optiond'),
(73, 21, 35, 2, 'optiond'),
(98, 21, 35, 2, 'optiond'),
(96, 21, 35, 2, 'optiond'),
(111, 21, 35, 2, 'optiond'),
(102, 21, 35, -0.66, 'optionc'),
(20, 21, 35, 2, 'optiond'),
(160, 21, 35, 2, 'optiond'),
(116, 21, 35, -0.66, 'optionb'),
(76, 21, 35, 2, 'optiond'),
(75, 21, 35, 2, 'optiond'),
(65, 21, 35, 2, 'optiond'),
(119, 21, 35, 2, 'optiond'),
(127, 21, 35, 2, 'optiond'),
(94, 21, 35, 2, 'optiond'),
(28, 21, 35, 2, 'optiond'),
(79, 21, 35, 2, 'optiond'),
(52, 21, 36, 2, 'optionc'),
(82, 21, 36, 2, 'optionc'),
(128, 21, 36, 2, 'optionc'),
(85, 21, 36, -0.66, 'optiond'),
(152, 21, 36, -0.66, 'optiond'),
(101, 21, 36, 2, 'optionc'),
(70, 21, 36, 2, 'optionc'),
(62, 21, 36, 2, 'optionc'),
(68, 21, 36, 2, 'optionc'),
(130, 21, 36, 2, 'optionc'),
(22, 21, 36, 2, 'optionc'),
(36, 21, 36, 2, 'optionc'),
(63, 21, 36, 2, 'optionc'),
(144, 21, 36, 2, 'optionc'),
(81, 21, 36, 2, 'optionc'),
(56, 21, 36, 2, 'optionc'),
(90, 21, 36, 2, 'optionc'),
(95, 21, 36, 2, 'optionc'),
(47, 21, 36, 2, 'optionc'),
(143, 21, 36, -0.66, 'optiond'),
(80, 21, 36, 2, 'optionc'),
(121, 21, 36, 2, 'optionc'),
(113, 21, 36, -0.66, 'optionb'),
(112, 21, 36, 2, 'optionc'),
(124, 21, 36, -0.66, 'optiona'),
(44, 21, 36, 2, 'optionc'),
(162, 21, 36, 2, 'optionc'),
(123, 21, 36, 2, 'optionc'),
(83, 21, 36, 2, 'optionc'),
(73, 21, 36, 2, 'optionc'),
(98, 21, 36, 2, 'optionc'),
(145, 21, 36, 2, 'optionc'),
(74, 21, 36, 2, 'optionc'),
(102, 21, 36, 2, 'optionc'),
(160, 21, 36, 2, 'optionc'),
(116, 21, 36, 2, 'optionc'),
(76, 21, 36, 2, 'optionc'),
(75, 21, 36, 2, 'optionc'),
(65, 21, 36, 2, 'optionc'),
(119, 21, 36, 2, 'optionc'),
(94, 21, 36, -0.66, 'optiond'),
(28, 21, 36, 2, 'optionc'),
(79, 21, 36, 2, 'optionc'),
(52, 21, 37, 2, 'optiond'),
(82, 21, 37, 2, 'optiond'),
(62, 21, 37, 2, 'optiond'),
(67, 21, 37, 2, 'optiond'),
(60, 21, 37, -0.66, 'optionc'),
(68, 21, 37, 2, 'optiond'),
(130, 21, 37, -0.66, 'optionb'),
(22, 21, 37, 2, 'optiond'),
(36, 21, 37, 2, 'optiond'),
(63, 21, 37, 2, 'optiond'),
(144, 21, 37, 2, 'optiond'),
(81, 21, 37, 2, 'optiond'),
(56, 21, 37, 2, 'optiond'),
(90, 21, 37, 2, 'optiond'),
(95, 21, 37, 2, 'optiond'),
(39, 21, 37, 2, 'optiond'),
(47, 21, 37, -0.66, 'optionc'),
(87, 21, 37, 2, 'optiond'),
(117, 21, 37, 2, 'optiond'),
(122, 21, 37, -0.66, 'optiona'),
(115, 21, 37, 2, 'optiond'),
(143, 21, 37, -0.66, 'optionc'),
(80, 21, 37, 2, 'optiond'),
(121, 21, 37, 2, 'optiond'),
(86, 21, 37, 2, 'optiond'),
(112, 21, 37, -0.66, 'optionc'),
(153, 21, 37, 2, 'optiond'),
(44, 21, 37, 2, 'optiond'),
(162, 21, 37, -0.66, 'optionb'),
(123, 21, 37, -0.66, 'optionb'),
(83, 21, 37, 2, 'optiond'),
(73, 21, 37, 2, 'optiond'),
(98, 21, 37, -0.66, 'optionc'),
(96, 21, 37, 2, 'optiond'),
(145, 21, 37, 2, 'optiond'),
(111, 21, 37, -0.66, 'optionb'),
(102, 21, 37, -0.66, 'optionc'),
(20, 21, 37, 2, 'optiond'),
(116, 21, 37, -0.66, 'optiona'),
(76, 21, 37, 2, 'optiond'),
(114, 21, 37, 2, 'optiond'),
(65, 21, 37, 2, 'optiond'),
(78, 21, 37, -0.66, 'optiona'),
(127, 21, 37, -0.66, 'optionc'),
(94, 21, 37, -0.66, 'optiona'),
(28, 21, 37, 2, 'optiond'),
(79, 21, 37, 2, 'optiond'),
(101, 21, 38, -0.66, 'optiond'),
(70, 21, 38, -0.66, 'optiond'),
(62, 21, 38, -0.66, 'optiond'),
(67, 21, 38, 2, 'optionb'),
(60, 21, 38, -0.66, 'optionc'),
(68, 21, 38, -0.66, 'optiond'),
(36, 21, 38, -0.66, 'optiona'),
(63, 21, 38, -0.66, 'optiona'),
(77, 21, 38, -0.66, 'optiond'),
(81, 21, 38, -0.66, 'optiond'),
(90, 21, 38, -0.66, 'optionc'),
(39, 21, 38, -0.66, 'optiond'),
(47, 21, 38, -0.66, 'optionc'),
(117, 21, 38, 2, 'optionb'),
(93, 21, 38, -0.66, 'optiond'),
(100, 21, 38, -0.66, 'optiond'),
(143, 21, 38, -0.66, 'optionc'),
(44, 21, 38, -0.66, 'optionc'),
(123, 21, 38, -0.66, 'optiond'),
(83, 21, 38, 2, 'optionb'),
(73, 21, 38, -0.66, 'optiond'),
(96, 21, 38, -0.66, 'optiond'),
(138, 21, 38, -0.66, 'optionc'),
(102, 21, 38, -0.66, 'optiond'),
(116, 21, 38, -0.66, 'optiond'),
(78, 21, 38, -0.66, 'optiond'),
(127, 21, 38, -0.66, 'optiond'),
(135, 21, 39, -0.66, 'optiona'),
(52, 21, 39, 2, 'optionb'),
(82, 21, 39, -0.66, 'optiond'),
(128, 21, 39, -0.66, 'optiond'),
(85, 21, 39, -0.66, 'optiona'),
(152, 21, 39, -0.66, 'optiona'),
(70, 21, 39, -0.66, 'optiond'),
(62, 21, 39, 2, 'optionb'),
(67, 21, 39, 2, 'optionb'),
(60, 21, 39, 2, 'optionb'),
(68, 21, 39, 2, 'optionb'),
(130, 21, 39, -0.66, 'optiond'),
(22, 21, 39, -0.66, 'optiond'),
(36, 21, 39, 2, 'optionb'),
(63, 21, 39, -0.66, 'optiond'),
(144, 21, 39, -0.66, 'optiona'),
(108, 21, 39, -0.66, 'optiona'),
(77, 21, 39, -0.66, 'optiond'),
(81, 21, 39, 2, 'optionb'),
(56, 21, 39, -0.66, 'optiona'),
(90, 21, 39, 2, 'optionb'),
(39, 21, 39, -0.66, 'optiond'),
(47, 21, 39, -0.66, 'optiona'),
(87, 21, 39, 2, 'optionb'),
(158, 21, 39, 2, 'optionb'),
(117, 21, 39, 2, 'optionb'),
(93, 21, 39, -0.66, 'optiond'),
(122, 21, 39, 2, 'optionb'),
(115, 21, 39, -0.66, 'optiona'),
(100, 21, 39, 2, 'optionb'),
(143, 21, 39, 2, 'optionb'),
(80, 21, 39, 2, 'optionb'),
(113, 21, 39, 2, 'optionb'),
(86, 21, 39, -0.66, 'optiond'),
(112, 21, 39, 2, 'optionb'),
(124, 21, 39, 2, 'optionb'),
(153, 21, 39, -0.66, 'optiona'),
(44, 21, 39, 2, 'optionb'),
(88, 21, 39, 2, 'optionb'),
(123, 21, 39, -0.66, 'optiond'),
(83, 21, 39, -0.66, 'optiond'),
(73, 21, 39, -0.66, 'optiond'),
(98, 21, 39, 2, 'optionb'),
(96, 21, 39, 2, 'optionb'),
(138, 21, 39, 2, 'optionb'),
(145, 21, 39, 2, 'optionb'),
(111, 21, 39, -0.66, 'optiond'),
(74, 21, 39, 2, 'optionb'),
(102, 21, 39, -0.66, 'optiond'),
(20, 21, 39, -0.66, 'optiona'),
(160, 21, 39, 2, 'optionb'),
(116, 21, 39, 2, 'optionb'),
(76, 21, 39, -0.66, 'optiona'),
(114, 21, 39, 2, 'optionb'),
(75, 21, 39, -0.66, 'optiond'),
(65, 21, 39, 2, 'optionb'),
(119, 21, 39, 2, 'optionb'),
(127, 21, 39, -0.66, 'optiond'),
(141, 21, 39, 2, 'optionb'),
(94, 21, 39, 2, 'optionb'),
(28, 21, 39, -0.66, 'optiond'),
(79, 21, 39, 2, 'optionb'),
(82, 21, 40, 2, 'optiond'),
(62, 21, 40, -0.66, 'optionb'),
(67, 21, 40, -0.66, 'optionb'),
(68, 21, 40, -0.66, 'optiona'),
(22, 21, 40, -0.66, 'optionb'),
(36, 21, 40, 2, 'optiond'),
(144, 21, 40, 2, 'optiond'),
(108, 21, 40, -0.66, 'optionb'),
(81, 21, 40, 2, 'optiond'),
(90, 21, 40, 2, 'optiond'),
(95, 21, 40, 2, 'optiond'),
(39, 21, 40, -0.66, 'optiona'),
(87, 21, 40, -0.66, 'optione'),
(158, 21, 40, 2, 'optiond'),
(117, 21, 40, 2, 'optiond'),
(122, 21, 40, -0.66, 'optionb'),
(115, 21, 40, 2, 'optiond'),
(100, 21, 40, -0.66, 'optiona'),
(143, 21, 40, 2, 'optiond'),
(80, 21, 40, 2, 'optiond'),
(121, 21, 40, -0.66, 'optiona'),
(153, 21, 40, 2, 'optiond'),
(88, 21, 40, 2, 'optiond'),
(83, 21, 40, 2, 'optiond'),
(96, 21, 40, -0.66, 'optiona'),
(111, 21, 40, -0.66, 'optionb'),
(20, 21, 40, -0.66, 'optiona'),
(116, 21, 40, 2, 'optiond'),
(127, 21, 40, 2, 'optiond'),
(94, 21, 40, 2, 'optiond'),
(135, 21, 41, -0.66, 'optiona'),
(52, 21, 41, 2, 'optione'),
(82, 21, 41, -0.66, 'optiona'),
(101, 21, 41, 2, 'optione'),
(70, 21, 41, 2, 'optione'),
(68, 21, 41, 2, 'optione'),
(130, 21, 41, 2, 'optione'),
(22, 21, 41, -0.66, 'optiona'),
(36, 21, 41, 2, 'optione'),
(63, 21, 41, -0.66, 'optiona'),
(144, 21, 41, 2, 'optione'),
(81, 21, 41, 2, 'optione'),
(56, 21, 41, 2, 'optione'),
(90, 21, 41, 2, 'optione'),
(95, 21, 41, 2, 'optione'),
(39, 21, 41, 2, 'optione'),
(47, 21, 41, -0.66, 'optionb'),
(87, 21, 41, -0.66, 'optiona'),
(158, 21, 41, 2, 'optione'),
(93, 21, 41, -0.66, 'optiona'),
(122, 21, 41, 2, 'optione'),
(115, 21, 41, 2, 'optione'),
(100, 21, 41, -0.66, 'optiona'),
(143, 21, 41, -0.66, 'optiona'),
(80, 21, 41, -0.66, 'optiona'),
(86, 21, 41, -0.66, 'optiona'),
(153, 21, 41, -0.66, 'optiona'),
(44, 21, 41, -0.66, 'optiona'),
(162, 21, 41, -0.66, 'optiona'),
(123, 21, 41, -0.66, 'optiona'),
(83, 21, 41, 2, 'optione'),
(73, 21, 41, -0.66, 'optiona'),
(98, 21, 41, 2, 'optione'),
(96, 21, 41, 2, 'optione'),
(145, 21, 41, 2, 'optione'),
(74, 21, 41, 2, 'optione'),
(102, 21, 41, -0.66, 'optiona'),
(20, 21, 41, 2, 'optione'),
(116, 21, 41, -0.66, 'optiona'),
(76, 21, 41, -0.66, 'optiona'),
(65, 21, 41, -0.66, 'optiona'),
(119, 21, 41, 2, 'optione'),
(127, 21, 41, -0.66, 'optiona'),
(141, 21, 41, -0.66, 'optiona'),
(94, 21, 41, 2, 'optione'),
(52, 21, 42, 2, 'optiona'),
(82, 21, 42, 2, 'optiona'),
(128, 21, 42, 2, 'optiona'),
(101, 21, 42, 2, 'optiona'),
(70, 21, 42, 2, 'optiona'),
(62, 21, 42, 2, 'optiona'),
(67, 21, 42, 2, 'optiona'),
(60, 21, 42, 2, 'optiona'),
(68, 21, 42, 2, 'optiona'),
(130, 21, 42, 2, 'optiona'),
(22, 21, 42, 2, 'optiona'),
(36, 21, 42, 2, 'optiona'),
(63, 21, 42, 2, 'optiona'),
(81, 21, 42, 2, 'optiona'),
(56, 21, 42, 2, 'optiona'),
(90, 21, 42, 2, 'optiona'),
(95, 21, 42, 2, 'optiona'),
(47, 21, 42, 2, 'optiona'),
(87, 21, 42, 2, 'optiona'),
(158, 21, 42, 2, 'optiona'),
(93, 21, 42, 2, 'optiona'),
(122, 21, 42, 2, 'optiona'),
(100, 21, 42, 2, 'optiona'),
(143, 21, 42, -0.66, 'optionb'),
(80, 21, 42, 2, 'optiona'),
(121, 21, 42, 2, 'optiona'),
(153, 21, 42, -0.66, 'optionb'),
(88, 21, 42, 2, 'optiona'),
(162, 21, 42, 2, 'optiona'),
(123, 21, 42, 2, 'optiona'),
(83, 21, 42, -0.66, 'optiond'),
(73, 21, 42, 2, 'optiona'),
(98, 21, 42, 2, 'optiona'),
(96, 21, 42, 2, 'optiona'),
(138, 21, 42, 2, 'optiona'),
(145, 21, 42, 2, 'optiona'),
(102, 21, 42, 2, 'optiona'),
(20, 21, 42, 2, 'optiona'),
(116, 21, 42, 2, 'optiona'),
(76, 21, 42, 2, 'optiona'),
(114, 21, 42, 2, 'optiona'),
(75, 21, 42, 2, 'optiona'),
(78, 21, 42, -0.66, 'optionb'),
(127, 21, 42, 2, 'optiona'),
(94, 21, 42, 2, 'optiona'),
(28, 21, 42, 2, 'optiona'),
(79, 21, 42, 2, 'optiona'),
(135, 21, 43, 2, 'optionb'),
(52, 21, 43, 2, 'optionb'),
(82, 21, 43, -0.66, 'optiona'),
(128, 21, 43, 2, 'optionb'),
(152, 21, 43, -0.66, 'optiona'),
(101, 21, 43, 2, 'optionb'),
(70, 21, 43, -0.66, 'optiona'),
(62, 21, 43, 2, 'optionb'),
(67, 21, 43, 2, 'optionb'),
(68, 21, 43, 2, 'optionb'),
(130, 21, 43, -0.66, 'optiona'),
(22, 21, 43, 2, 'optionb'),
(36, 21, 43, 2, 'optionb'),
(144, 21, 43, 2, 'optionb'),
(77, 21, 43, 2, 'optionb'),
(81, 21, 43, 2, 'optionb'),
(56, 21, 43, 2, 'optionb'),
(90, 21, 43, 2, 'optionb'),
(95, 21, 43, -0.66, 'optiona'),
(47, 21, 43, -0.66, 'optiona'),
(87, 21, 43, 2, 'optionb'),
(158, 21, 43, 2, 'optionb'),
(117, 21, 43, 2, 'optionb'),
(93, 21, 43, 2, 'optionb'),
(115, 21, 43, 2, 'optionb'),
(100, 21, 43, 2, 'optionb'),
(143, 21, 43, 2, 'optionb'),
(80, 21, 43, 2, 'optionb'),
(121, 21, 43, 2, 'optionb'),
(153, 21, 43, 2, 'optionb'),
(88, 21, 43, 2, 'optionb'),
(162, 21, 43, 2, 'optionb'),
(123, 21, 43, 2, 'optionb'),
(83, 21, 43, 2, 'optionb'),
(73, 21, 43, 2, 'optionb'),
(98, 21, 43, 2, 'optionb'),
(96, 21, 43, 2, 'optionb'),
(145, 21, 43, 2, 'optionb'),
(111, 21, 43, 2, 'optionb'),
(74, 21, 43, 2, 'optionb'),
(102, 21, 43, 2, 'optionb'),
(20, 21, 43, 2, 'optionb'),
(160, 21, 43, 2, 'optionb'),
(116, 21, 43, 2, 'optionb'),
(114, 21, 43, 2, 'optionb'),
(75, 21, 43, 2, 'optionb'),
(65, 21, 43, 2, 'optionb'),
(119, 21, 43, 2, 'optionb'),
(127, 21, 43, 2, 'optionb'),
(141, 21, 43, -0.66, 'optiona'),
(94, 21, 43, -0.66, 'optiona'),
(28, 21, 43, 2, 'optionb'),
(79, 21, 43, -0.66, 'optionc'),
(82, 21, 44, -0.66, 'optiond'),
(85, 21, 44, -0.66, 'optionc'),
(67, 21, 44, 2, 'optiona'),
(22, 21, 44, -0.66, 'optiond'),
(36, 21, 44, 2, 'optiona'),
(63, 21, 44, 2, 'optiona'),
(90, 21, 44, -0.66, 'optionb'),
(95, 21, 44, 2, 'optiona'),
(122, 21, 44, 2, 'optiona'),
(100, 21, 44, 2, 'optiona'),
(121, 21, 44, 2, 'optiona'),
(124, 21, 44, -0.66, 'optiond'),
(153, 21, 44, -0.66, 'optiond'),
(44, 21, 44, -0.66, 'optiond'),
(123, 21, 44, -0.66, 'optiond'),
(83, 21, 44, 2, 'optiona'),
(74, 21, 44, -0.66, 'optiond'),
(116, 21, 44, -0.66, 'optiond'),
(114, 21, 44, 2, 'optiona'),
(127, 21, 44, 2, 'optiona'),
(94, 21, 44, 2, 'optiona'),
(52, 21, 45, -0.66, 'optiona'),
(82, 21, 45, -0.66, 'optionb'),
(128, 21, 45, -0.66, 'optionb'),
(101, 21, 45, 2, 'optiond'),
(70, 21, 45, -0.66, 'optionb'),
(62, 21, 45, -0.66, 'optiona'),
(67, 21, 45, 2, 'optiond'),
(68, 21, 45, 2, 'optiond'),
(130, 21, 45, 2, 'optiond'),
(22, 21, 45, 2, 'optiond'),
(36, 21, 45, -0.66, 'optionb'),
(63, 21, 45, -0.66, 'optiona'),
(144, 21, 45, 2, 'optiond'),
(77, 21, 45, -0.66, 'optionb'),
(81, 21, 45, 2, 'optiond'),
(56, 21, 45, 2, 'optiond'),
(90, 21, 45, 2, 'optiond'),
(95, 21, 45, -0.66, 'optionb'),
(39, 21, 45, 2, 'optiond'),
(47, 21, 45, -0.66, 'optionb'),
(117, 21, 45, 2, 'optiond'),
(93, 21, 45, -0.66, 'optiona'),
(122, 21, 45, -0.66, 'optiona'),
(115, 21, 45, 2, 'optiond'),
(100, 21, 45, 2, 'optiond'),
(143, 21, 45, -0.66, 'optionb'),
(124, 21, 45, -0.66, 'optionc'),
(153, 21, 45, 2, 'optiond'),
(44, 21, 45, 2, 'optiond'),
(162, 21, 45, 2, 'optiond'),
(123, 21, 45, -0.66, 'optionc'),
(83, 21, 45, -0.66, 'optionb'),
(73, 21, 45, 2, 'optiond'),
(98, 21, 45, -0.66, 'optionb'),
(96, 21, 45, -0.66, 'optiona'),
(145, 21, 45, 2, 'optiond'),
(111, 21, 45, -0.66, 'optiona'),
(102, 21, 45, 2, 'optiond'),
(20, 21, 45, -0.66, 'optionb'),
(160, 21, 45, -0.66, 'optionb'),
(116, 21, 45, 2, 'optiond'),
(76, 21, 45, -0.66, 'optionb'),
(114, 21, 45, 2, 'optiond'),
(75, 21, 45, 2, 'optiond'),
(119, 21, 45, 2, 'optiond'),
(127, 21, 45, 2, 'optiond'),
(94, 21, 45, 2, 'optiond'),
(28, 21, 45, -0.66, 'optionb'),
(79, 21, 45, 2, 'optiond'),
(128, 21, 46, -0.66, 'optionb'),
(130, 21, 46, 2, 'optiona'),
(22, 21, 46, -0.66, 'optionb'),
(63, 21, 46, 2, 'optiona'),
(143, 21, 46, -0.66, 'optiond'),
(86, 21, 46, 2, 'optiona'),
(153, 21, 46, -0.66, 'optionb'),
(116, 21, 46, -0.66, 'optiond'),
(94, 21, 46, 2, 'optiona'),
(135, 21, 47, 2, 'optiond'),
(52, 21, 47, 2, 'optiond'),
(82, 21, 47, 2, 'optiond'),
(128, 21, 47, 2, 'optiond'),
(85, 21, 47, 2, 'optiond'),
(152, 21, 47, 2, 'optiond'),
(101, 21, 47, 2, 'optiond'),
(70, 21, 47, 2, 'optiond'),
(62, 21, 47, 2, 'optiond'),
(67, 21, 47, 2, 'optiond'),
(60, 21, 47, 2, 'optiond'),
(68, 21, 47, 2, 'optiond'),
(130, 21, 47, 2, 'optiond'),
(22, 21, 47, 2, 'optiond'),
(36, 21, 47, 2, 'optiond'),
(63, 21, 47, 2, 'optiond'),
(144, 21, 47, 2, 'optiond'),
(108, 21, 47, 2, 'optiond'),
(77, 21, 47, 2, 'optiond'),
(81, 21, 47, 2, 'optiond'),
(56, 21, 47, 2, 'optiond'),
(90, 21, 47, 2, 'optiond'),
(95, 21, 47, 2, 'optiond'),
(39, 21, 47, 2, 'optiond'),
(47, 21, 47, 2, 'optiond'),
(87, 21, 47, 2, 'optiond'),
(158, 21, 47, 2, 'optiond'),
(117, 21, 47, 2, 'optiond'),
(93, 21, 47, 2, 'optiond'),
(122, 21, 47, 2, 'optiond'),
(115, 21, 47, 2, 'optiond'),
(100, 21, 47, 2, 'optiond'),
(143, 21, 47, 2, 'optiond'),
(80, 21, 47, 2, 'optiond'),
(121, 21, 47, 2, 'optiond'),
(113, 21, 47, 2, 'optiond'),
(86, 21, 47, 2, 'optiond'),
(112, 21, 47, 2, 'optiond'),
(124, 21, 47, 2, 'optiond'),
(153, 21, 47, 2, 'optiond'),
(44, 21, 47, 2, 'optiond'),
(88, 21, 47, 2, 'optiond'),
(162, 21, 47, 2, 'optiond'),
(123, 21, 47, 2, 'optiond'),
(83, 21, 47, 2, 'optiond'),
(73, 21, 47, 2, 'optiond'),
(98, 21, 47, 2, 'optiond'),
(96, 21, 47, 2, 'optiond'),
(138, 21, 47, 2, 'optiond'),
(145, 21, 47, 2, 'optiond'),
(111, 21, 47, 2, 'optiond'),
(74, 21, 47, 2, 'optiond'),
(102, 21, 47, 2, 'optiond'),
(20, 21, 47, 2, 'optiond'),
(160, 21, 47, 2, 'optiond'),
(116, 21, 47, 2, 'optiond'),
(76, 21, 47, 2, 'optiond'),
(114, 21, 47, 2, 'optiond'),
(75, 21, 47, 2, 'optiond'),
(65, 21, 47, 2, 'optiond'),
(78, 21, 47, 2, 'optiond'),
(119, 21, 47, 2, 'optiond'),
(127, 21, 47, 2, 'optiond'),
(141, 21, 47, -0.66, 'optiona'),
(94, 21, 47, 2, 'optiond'),
(28, 21, 47, 2, 'optiond'),
(79, 21, 47, 2, 'optiond'),
(52, 21, 48, 2, 'optionc'),
(82, 21, 48, -0.66, 'optionb'),
(152, 21, 48, -0.66, 'optionb'),
(101, 21, 48, 2, 'optionc'),
(67, 21, 48, -0.66, 'optiona'),
(22, 21, 48, -0.66, 'optionb'),
(36, 21, 48, -0.66, 'optionb'),
(63, 21, 48, -0.66, 'optionb'),
(81, 21, 48, 2, 'optionc'),
(90, 21, 48, -0.66, 'optionb'),
(87, 21, 48, -0.66, 'optionb'),
(158, 21, 48, -0.66, 'optionb'),
(122, 21, 48, -0.66, 'optionb'),
(112, 21, 48, -0.66, 'optionb'),
(124, 21, 48, 2, 'optionc'),
(153, 21, 48, -0.66, 'optionb'),
(88, 21, 48, -0.66, 'optionb'),
(123, 21, 48, 2, 'optionc'),
(73, 21, 48, 2, 'optionc'),
(98, 21, 48, 2, 'optionc'),
(96, 21, 48, -0.66, 'optiond'),
(145, 21, 48, -0.66, 'optiond'),
(102, 21, 48, 2, 'optionc'),
(20, 21, 48, 2, 'optionc'),
(160, 21, 48, -0.66, 'optiona'),
(116, 21, 48, 2, 'optionc'),
(114, 21, 48, -0.66, 'optionb'),
(75, 21, 48, 2, 'optionc'),
(65, 21, 48, -0.66, 'optiond'),
(78, 21, 48, -0.66, 'optionb'),
(119, 21, 48, 2, 'optionc'),
(127, 21, 48, 2, 'optionc'),
(94, 21, 48, 2, 'optionc'),
(28, 21, 48, -0.66, 'optionb'),
(135, 21, 49, -0.66, 'optiond'),
(52, 21, 49, -0.66, 'optionb'),
(82, 21, 49, 2, 'optionc'),
(128, 21, 49, 2, 'optionc'),
(101, 21, 49, 2, 'optionc'),
(62, 21, 49, 2, 'optionc'),
(67, 21, 49, 2, 'optionc'),
(68, 21, 49, 2, 'optionc'),
(22, 21, 49, -0.66, 'optionb'),
(36, 21, 49, 2, 'optionc'),
(77, 21, 49, -0.66, 'optionb'),
(81, 21, 49, 2, 'optionc'),
(56, 21, 49, 2, 'optionc'),
(90, 21, 49, -0.66, 'optionb'),
(95, 21, 49, 2, 'optionc'),
(87, 21, 49, 2, 'optionc'),
(158, 21, 49, 2, 'optionc'),
(93, 21, 49, -0.66, 'optionb'),
(122, 21, 49, 2, 'optionc'),
(100, 21, 49, 2, 'optionc'),
(143, 21, 49, 2, 'optionc'),
(80, 21, 49, 2, 'optionc'),
(113, 21, 49, -0.66, 'optiond'),
(153, 21, 49, -0.66, 'optionb'),
(44, 21, 49, 2, 'optionc'),
(88, 21, 49, 2, 'optionc'),
(162, 21, 49, -0.66, 'optiond'),
(123, 21, 49, -0.66, 'optionb'),
(83, 21, 49, 2, 'optionc'),
(73, 21, 49, 2, 'optionc'),
(98, 21, 49, 2, 'optionc'),
(96, 21, 49, 2, 'optionc'),
(145, 21, 49, 2, 'optionc'),
(74, 21, 49, 2, 'optionc'),
(102, 21, 49, 2, 'optionc'),
(20, 21, 49, 2, 'optionc'),
(116, 21, 49, -0.66, 'optiond'),
(114, 21, 49, -0.66, 'optionb'),
(75, 21, 49, -0.66, 'optionb'),
(78, 21, 49, 2, 'optionc'),
(119, 21, 49, -0.66, 'optionb'),
(127, 21, 49, 2, 'optionc'),
(94, 21, 49, 2, 'optionc'),
(28, 21, 49, 2, 'optionc'),
(79, 21, 49, 2, 'optionc'),
(52, 21, 50, -0.66, 'optiona'),
(82, 21, 50, -0.66, 'optiona'),
(128, 21, 50, -0.66, 'optiona'),
(152, 21, 50, 2, 'optionb'),
(101, 21, 50, 2, 'optionb'),
(70, 21, 50, 2, 'optionb'),
(62, 21, 50, 2, 'optionb'),
(67, 21, 50, 2, 'optionb'),
(68, 21, 50, 2, 'optionb'),
(22, 21, 50, 2, 'optionb'),
(36, 21, 50, 2, 'optionb'),
(63, 21, 50, -0.66, 'optiona'),
(144, 21, 50, 2, 'optionb'),
(108, 21, 50, 2, 'optionb'),
(81, 21, 50, -0.66, 'optiona'),
(56, 21, 50, 2, 'optionb'),
(90, 21, 50, -0.66, 'optiona'),
(95, 21, 50, 2, 'optionb'),
(39, 21, 50, 2, 'optionb'),
(47, 21, 50, -0.66, 'optiona'),
(87, 21, 50, 2, 'optionb'),
(117, 21, 50, -0.66, 'optiona'),
(93, 21, 50, 2, 'optionb'),
(122, 21, 50, -0.66, 'optiona'),
(115, 21, 50, 2, 'optionb'),
(100, 21, 50, 2, 'optionb'),
(80, 21, 50, 2, 'optionb'),
(121, 21, 50, 2, 'optionb'),
(113, 21, 50, -0.66, 'optiona'),
(124, 21, 50, -0.66, 'optiona'),
(153, 21, 50, 2, 'optionb'),
(44, 21, 50, 2, 'optionb'),
(88, 21, 50, 2, 'optionb'),
(162, 21, 50, -0.66, 'optiona'),
(123, 21, 50, -0.66, 'optiona'),
(83, 21, 50, 2, 'optionb'),
(73, 21, 50, 2, 'optionb'),
(98, 21, 50, -0.66, 'optiona'),
(96, 21, 50, 2, 'optionb'),
(145, 21, 50, 2, 'optionb'),
(111, 21, 50, 2, 'optionb'),
(102, 21, 50, 2, 'optionb'),
(116, 21, 50, 2, 'optionb'),
(76, 21, 50, -0.66, 'optionc'),
(114, 21, 50, -0.66, 'optiona'),
(75, 21, 50, -0.66, 'optiona'),
(65, 21, 50, 2, 'optionb'),
(119, 21, 50, -0.66, 'optiona'),
(127, 21, 50, -0.66, 'optiona'),
(94, 21, 50, -0.66, 'optiond'),
(28, 21, 50, 2, 'optionb'),
(79, 21, 50, 2, 'optionb'),
(135, 21, 51, 2, 'optionb'),
(52, 21, 51, 2, 'optionb'),
(82, 21, 51, 2, 'optionb'),
(128, 21, 51, 2, 'optionb'),
(85, 21, 51, 2, 'optionb'),
(101, 21, 51, 2, 'optionb'),
(70, 21, 51, 2, 'optionb'),
(62, 21, 51, 2, 'optionb'),
(67, 21, 51, 2, 'optionb'),
(60, 21, 51, 2, 'optionb'),
(68, 21, 51, 2, 'optionb'),
(22, 21, 51, 2, 'optionb'),
(36, 21, 51, 2, 'optionb'),
(63, 21, 51, 2, 'optionb'),
(144, 21, 51, 2, 'optionb'),
(108, 21, 51, 2, 'optionb'),
(77, 21, 51, 2, 'optionb'),
(81, 21, 51, 2, 'optionb'),
(56, 21, 51, 2, 'optionb'),
(90, 21, 51, 2, 'optionb'),
(95, 21, 51, 2, 'optionb'),
(39, 21, 51, 2, 'optionb'),
(47, 21, 51, 2, 'optionb'),
(87, 21, 51, 2, 'optionb'),
(158, 21, 51, 2, 'optionb'),
(117, 21, 51, 2, 'optionb'),
(93, 21, 51, 2, 'optionb'),
(122, 21, 51, 2, 'optionb'),
(115, 21, 51, 2, 'optionb'),
(100, 21, 51, 2, 'optionb'),
(121, 21, 51, 2, 'optionb'),
(113, 21, 51, 2, 'optionb'),
(86, 21, 51, 2, 'optionb'),
(112, 21, 51, 2, 'optionb'),
(124, 21, 51, -0.66, 'optiond'),
(153, 21, 51, 2, 'optionb'),
(44, 21, 51, 2, 'optionb'),
(88, 21, 51, 2, 'optionb'),
(123, 21, 51, 2, 'optionb'),
(83, 21, 51, 2, 'optionb'),
(73, 21, 51, 2, 'optionb'),
(98, 21, 51, 2, 'optionb'),
(138, 21, 51, 2, 'optionb'),
(145, 21, 51, 2, 'optionb'),
(111, 21, 51, 2, 'optionb'),
(74, 21, 51, 2, 'optionb'),
(20, 21, 51, -0.66, 'optionc'),
(116, 21, 51, 2, 'optionb'),
(75, 21, 51, 2, 'optionb'),
(65, 21, 51, 2, 'optionb'),
(119, 21, 51, 2, 'optionb'),
(28, 21, 51, 2, 'optionb'),
(79, 21, 51, 2, 'optionb'),
(135, 21, 52, 2, 'optiond'),
(52, 21, 52, 2, 'optiond'),
(82, 21, 52, 2, 'optiond'),
(70, 21, 52, 2, 'optiond'),
(62, 21, 52, 2, 'optiond'),
(67, 21, 52, 2, 'optiond'),
(60, 21, 52, 2, 'optiond'),
(22, 21, 52, 2, 'optiond'),
(36, 21, 52, 2, 'optiond'),
(63, 21, 52, 2, 'optiond'),
(144, 21, 52, 2, 'optiond'),
(108, 21, 52, 2, 'optiond'),
(77, 21, 52, 2, 'optiond'),
(81, 21, 52, 2, 'optiond'),
(56, 21, 52, 2, 'optiond'),
(90, 21, 52, 2, 'optiond'),
(95, 21, 52, 2, 'optiond'),
(39, 21, 52, -0.66, 'optiona'),
(47, 21, 52, 2, 'optiond'),
(158, 21, 52, 2, 'optiond'),
(117, 21, 52, 2, 'optiond'),
(93, 21, 52, -0.66, 'optionc'),
(122, 21, 52, 2, 'optiond'),
(115, 21, 52, 2, 'optiond'),
(100, 21, 52, 2, 'optiond'),
(143, 21, 52, -0.66, 'optionc'),
(80, 21, 52, 2, 'optiond'),
(121, 21, 52, 2, 'optiond'),
(86, 21, 52, 2, 'optiond'),
(153, 21, 52, -0.66, 'optionc'),
(44, 21, 52, 2, 'optiond'),
(88, 21, 52, 2, 'optiond'),
(123, 21, 52, 2, 'optiond'),
(83, 21, 52, 2, 'optiond'),
(73, 21, 52, 2, 'optiond'),
(98, 21, 52, 2, 'optiond'),
(96, 21, 52, 2, 'optiond'),
(138, 21, 52, 2, 'optiond'),
(145, 21, 52, 2, 'optiond'),
(111, 21, 52, 2, 'optiond'),
(102, 21, 52, 2, 'optiond'),
(20, 21, 52, 2, 'optiond'),
(116, 21, 52, 2, 'optiond'),
(76, 21, 52, 2, 'optiond'),
(75, 21, 52, 2, 'optiond'),
(65, 21, 52, 2, 'optiond'),
(127, 21, 52, 2, 'optiond'),
(141, 21, 52, 2, 'optiond'),
(94, 21, 52, 2, 'optiond'),
(28, 21, 52, 2, 'optiond'),
(79, 21, 52, -0.66, 'optiona'),
(52, 21, 53, 2, 'optiona'),
(82, 21, 53, 2, 'optiona'),
(152, 21, 53, 2, 'optiona'),
(101, 21, 53, 2, 'optiona'),
(67, 21, 53, 2, 'optiona'),
(68, 21, 53, 2, 'optiona'),
(130, 21, 53, 2, 'optiona'),
(22, 21, 53, 2, 'optiona'),
(36, 21, 53, 2, 'optiona'),
(63, 21, 53, 2, 'optiona'),
(144, 21, 53, 2, 'optiona'),
(81, 21, 53, 2, 'optiona'),
(56, 21, 53, 2, 'optiona'),
(90, 21, 53, 2, 'optiona'),
(95, 21, 53, 2, 'optiona'),
(39, 21, 53, 2, 'optiona'),
(117, 21, 53, 2, 'optiona'),
(115, 21, 53, 2, 'optiona'),
(100, 21, 53, 2, 'optiona'),
(80, 21, 53, -0.66, 'optionb'),
(86, 21, 53, 2, 'optiona'),
(124, 21, 53, 2, 'optiona'),
(44, 21, 53, -0.66, 'optionb'),
(123, 21, 53, 2, 'optiona'),
(83, 21, 53, 2, 'optiona'),
(73, 21, 53, 2, 'optiona'),
(98, 21, 53, 2, 'optiona'),
(96, 21, 53, 2, 'optiona'),
(145, 21, 53, 2, 'optiona'),
(74, 21, 53, -0.66, 'optionc'),
(116, 21, 53, 2, 'optiona'),
(76, 21, 53, -0.66, 'optionb'),
(114, 21, 53, 2, 'optiona'),
(75, 21, 53, 2, 'optiona'),
(65, 21, 53, 2, 'optiona'),
(119, 21, 53, 2, 'optiona'),
(127, 21, 53, 2, 'optiona'),
(94, 21, 53, 2, 'optiona'),
(28, 21, 53, -0.66, 'optionb'),
(79, 21, 53, 2, 'optiona'),
(135, 21, 54, -0.66, 'optionc'),
(52, 21, 54, 2, 'optiona'),
(82, 21, 54, -0.66, 'optionb'),
(128, 21, 54, 2, 'optiona'),
(85, 21, 54, -0.66, 'optionc'),
(101, 21, 54, 2, 'optiona'),
(70, 21, 54, 2, 'optiona'),
(62, 21, 54, 2, 'optiona'),
(67, 21, 54, 2, 'optiona'),
(60, 21, 54, 2, 'optiona'),
(68, 21, 54, 2, 'optiona'),
(130, 21, 54, 2, 'optiona'),
(22, 21, 54, 2, 'optiona'),
(36, 21, 54, 2, 'optiona'),
(63, 21, 54, 2, 'optiona'),
(144, 21, 54, 2, 'optiona'),
(108, 21, 54, 2, 'optiona'),
(77, 21, 54, -0.66, 'optionc'),
(81, 21, 54, 2, 'optiona'),
(56, 21, 54, 2, 'optiona'),
(90, 21, 54, 2, 'optiona'),
(95, 21, 54, 2, 'optiona'),
(93, 21, 54, 2, 'optiona'),
(122, 21, 54, 2, 'optiona'),
(115, 21, 54, 2, 'optiona'),
(100, 21, 54, 2, 'optiona'),
(143, 21, 54, 2, 'optiona'),
(80, 21, 54, 2, 'optiona'),
(121, 21, 54, 2, 'optiona'),
(113, 21, 54, 2, 'optiona'),
(86, 21, 54, 2, 'optiona'),
(112, 21, 54, 2, 'optiona'),
(153, 21, 54, -0.66, 'optionc'),
(44, 21, 54, 2, 'optiona'),
(162, 21, 54, 2, 'optiona'),
(123, 21, 54, 2, 'optiona'),
(83, 21, 54, 2, 'optiona'),
(73, 21, 54, 2, 'optiona'),
(98, 21, 54, 2, 'optiona'),
(138, 21, 54, 2, 'optiona'),
(145, 21, 54, 2, 'optiona'),
(111, 21, 54, 2, 'optiona'),
(74, 21, 54, 2, 'optiona'),
(20, 21, 54, 2, 'optiona'),
(116, 21, 54, 2, 'optiona'),
(76, 21, 54, 2, 'optiona'),
(114, 21, 54, -0.66, 'optionc'),
(75, 21, 54, 2, 'optiona'),
(65, 21, 54, 2, 'optiona'),
(78, 21, 54, 2, 'optiona'),
(127, 21, 54, 2, 'optiona'),
(94, 21, 54, 2, 'optiona'),
(28, 21, 54, 2, 'optiona'),
(135, 21, 55, 2, 'optionb'),
(52, 21, 55, 2, 'optionb'),
(82, 21, 55, -0.66, 'optiond'),
(128, 21, 55, -0.66, 'optiona'),
(85, 21, 55, -0.66, 'optiond'),
(101, 21, 55, 2, 'optionb'),
(70, 21, 55, -0.66, 'optiond'),
(62, 21, 55, 2, 'optionb'),
(67, 21, 55, -0.66, 'optiond'),
(68, 21, 55, -0.66, 'optiond'),
(130, 21, 55, -0.66, 'optiond'),
(22, 21, 55, 2, 'optionb'),
(36, 21, 55, 2, 'optionb'),
(108, 21, 55, 2, 'optionb'),
(77, 21, 55, 2, 'optionb'),
(81, 21, 55, 2, 'optionb'),
(56, 21, 55, 2, 'optionb'),
(90, 21, 55, 2, 'optionb'),
(95, 21, 55, 2, 'optionb'),
(39, 21, 55, 2, 'optionb'),
(47, 21, 55, 2, 'optionb'),
(87, 21, 55, 2, 'optionb'),
(158, 21, 55, 2, 'optionb'),
(93, 21, 55, 2, 'optionb'),
(122, 21, 55, 2, 'optionb'),
(100, 21, 55, 2, 'optionb'),
(80, 21, 55, 2, 'optionb'),
(121, 21, 55, 2, 'optionb'),
(113, 21, 55, 2, 'optionb'),
(86, 21, 55, 2, 'optionb'),
(112, 21, 55, -0.66, 'optiona'),
(153, 21, 55, 2, 'optionb'),
(88, 21, 55, 2, 'optionb'),
(162, 21, 55, 2, 'optionb'),
(83, 21, 55, 2, 'optionb'),
(73, 21, 55, 2, 'optionb'),
(98, 21, 55, 2, 'optionb'),
(96, 21, 55, 2, 'optionb'),
(145, 21, 55, 2, 'optionb'),
(111, 21, 55, 2, 'optionb'),
(74, 21, 55, 2, 'optionb'),
(20, 21, 55, 2, 'optionb'),
(116, 21, 55, -0.66, 'optiond'),
(76, 21, 55, 2, 'optionb'),
(114, 21, 55, 2, 'optionb'),
(75, 21, 55, 2, 'optionb'),
(65, 21, 55, 2, 'optionb'),
(78, 21, 55, 2, 'optionb'),
(127, 21, 55, 2, 'optionb'),
(94, 21, 55, 2, 'optionb'),
(28, 21, 55, -0.66, 'optionc'),
(101, 21, 56, -0.33, 'optionb'),
(62, 21, 56, 1, 'optionc'),
(67, 21, 56, 1, 'optionc'),
(60, 21, 56, 1, 'optionc'),
(68, 21, 56, -0.33, 'optionb'),
(22, 21, 56, 1, 'optionc'),
(36, 21, 56, 1, 'optionc'),
(144, 21, 56, 1, 'optionc'),
(108, 21, 56, 1, 'optionc'),
(77, 21, 56, 1, 'optionc'),
(81, 21, 56, 1, 'optionc'),
(39, 21, 56, -0.33, 'optionb'),
(87, 21, 56, 1, 'optionc'),
(158, 21, 56, 1, 'optionc'),
(117, 21, 56, -0.33, 'optionb'),
(100, 21, 56, 1, 'optionc'),
(80, 21, 56, 1, 'optionc'),
(121, 21, 56, 1, 'optionc'),
(86, 21, 56, -0.33, 'optionb'),
(124, 21, 56, 1, 'optionc'),
(153, 21, 56, 1, 'optionc'),
(44, 21, 56, 1, 'optionc'),
(88, 21, 56, 1, 'optionc'),
(162, 21, 56, 1, 'optionc'),
(123, 21, 56, -0.33, 'optionb'),
(83, 21, 56, 1, 'optionc'),
(73, 21, 56, -0.33, 'optiond'),
(98, 21, 56, 1, 'optionc'),
(138, 21, 56, 1, 'optionc'),
(145, 21, 56, -0.33, 'optionb'),
(74, 21, 56, -0.33, 'optionb'),
(20, 21, 56, 1, 'optionc'),
(160, 21, 56, 1, 'optionc'),
(116, 21, 56, 1, 'optionc'),
(65, 21, 56, 1, 'optionc'),
(78, 21, 56, -0.33, 'optionb'),
(127, 21, 56, 1, 'optionc'),
(141, 21, 56, 1, 'optionc'),
(94, 21, 56, 1, 'optionc'),
(52, 21, 57, -0.33, 'optiona'),
(128, 21, 57, 1, 'optionc'),
(152, 21, 57, -0.33, 'optionb'),
(68, 21, 57, 1, 'optionc'),
(130, 21, 57, -0.33, 'optionb'),
(22, 21, 57, -0.33, 'optiona'),
(36, 21, 57, -0.33, 'optiona'),
(144, 21, 57, -0.33, 'optiona'),
(108, 21, 57, 1, 'optionc'),
(77, 21, 57, 1, 'optionc'),
(81, 21, 57, 1, 'optionc'),
(90, 21, 57, 1, 'optionc'),
(39, 21, 57, -0.33, 'optiona'),
(47, 21, 57, -0.33, 'optiona'),
(87, 21, 57, -0.33, 'optiona'),
(117, 21, 57, -0.33, 'optionb'),
(93, 21, 57, -0.33, 'optiona'),
(122, 21, 57, -0.33, 'optiona'),
(115, 21, 57, -0.33, 'optiona'),
(143, 21, 57, 1, 'optionc'),
(121, 21, 57, -0.33, 'optiona'),
(86, 21, 57, -0.33, 'optiond'),
(112, 21, 57, -0.33, 'optiona'),
(124, 21, 57, -0.33, 'optiona'),
(153, 21, 57, 1, 'optionc'),
(44, 21, 57, -0.33, 'optionb'),
(123, 21, 57, 1, 'optionc'),
(83, 21, 57, -0.33, 'optiona'),
(73, 21, 57, -0.33, 'optionb'),
(145, 21, 57, 1, 'optionc'),
(74, 21, 57, -0.33, 'optiona'),
(102, 21, 57, 1, 'optionc'),
(20, 21, 57, 1, 'optionc'),
(160, 21, 57, -0.33, 'optiona'),
(116, 21, 57, -0.33, 'optionb'),
(114, 21, 57, 1, 'optionc'),
(75, 21, 57, -0.33, 'optiona'),
(65, 21, 57, -0.33, 'optiona'),
(78, 21, 57, -0.33, 'optiona'),
(119, 21, 57, 1, 'optionc'),
(127, 21, 57, 1, 'optionc'),
(141, 21, 57, -0.33, 'optiona'),
(128, 21, 58, 1, 'optiona'),
(101, 21, 58, 1, 'optiona'),
(68, 21, 58, 1, 'optiona'),
(22, 21, 58, -0.33, 'optionb'),
(36, 21, 58, 1, 'optiona'),
(77, 21, 58, 1, 'optiona'),
(81, 21, 58, -0.33, 'optionc'),
(95, 21, 58, 1, 'optiona'),
(39, 21, 58, 1, 'optiona'),
(87, 21, 58, -0.33, 'optionc'),
(122, 21, 58, -0.33, 'optionb'),
(115, 21, 58, 1, 'optiona'),
(83, 21, 58, 1, 'optiona'),
(73, 21, 58, 1, 'optiona'),
(145, 21, 58, -0.33, 'optionb'),
(74, 21, 58, -0.33, 'optionb'),
(102, 21, 58, 1, 'optiona'),
(20, 21, 58, 1, 'optiona'),
(160, 21, 58, -0.33, 'optionb'),
(116, 21, 58, -0.33, 'optionb'),
(114, 21, 58, -0.33, 'optionb'),
(65, 21, 58, 1, 'optiona'),
(78, 21, 58, 1, 'optiona'),
(119, 21, 58, 1, 'optiona'),
(127, 21, 58, 1, 'optiona'),
(141, 21, 58, -0.33, 'optiond'),
(135, 21, 59, 1, 'optionc'),
(52, 21, 59, 1, 'optionc'),
(82, 21, 59, -0.33, 'optionb'),
(128, 21, 59, -0.33, 'optiond'),
(85, 21, 59, 1, 'optionc'),
(152, 21, 59, 1, 'optionc'),
(101, 21, 59, 1, 'optionc'),
(70, 21, 59, -0.33, 'optiond'),
(67, 21, 59, 1, 'optionc'),
(60, 21, 59, -0.33, 'optiond'),
(68, 21, 59, 1, 'optionc'),
(22, 21, 59, -0.33, 'optiond'),
(36, 21, 59, 1, 'optionc'),
(63, 21, 59, 1, 'optionc'),
(144, 21, 59, 1, 'optionc'),
(81, 21, 59, 1, 'optionc'),
(56, 21, 59, 1, 'optionc'),
(90, 21, 59, 1, 'optionc'),
(95, 21, 59, 1, 'optionc'),
(39, 21, 59, 1, 'optionc'),
(158, 21, 59, 1, 'optionc'),
(93, 21, 59, 1, 'optionc'),
(122, 21, 59, 1, 'optionc'),
(115, 21, 59, 1, 'optionc'),
(100, 21, 59, 1, 'optionc'),
(80, 21, 59, 1, 'optionc'),
(121, 21, 59, -0.33, 'optiond'),
(86, 21, 59, -0.33, 'optiond'),
(112, 21, 59, 1, 'optionc'),
(124, 21, 59, 1, 'optionc'),
(153, 21, 59, 1, 'optionc'),
(44, 21, 59, 1, 'optionc'),
(162, 21, 59, 1, 'optionc'),
(123, 21, 59, -0.33, 'optiona'),
(83, 21, 59, 1, 'optionc'),
(73, 21, 59, 1, 'optionc'),
(98, 21, 59, 1, 'optionc'),
(96, 21, 59, 1, 'optionc'),
(138, 21, 59, -0.33, 'optiond'),
(145, 21, 59, 1, 'optionc'),
(111, 21, 59, 1, 'optionc'),
(74, 21, 59, 1, 'optionc'),
(20, 21, 59, 1, 'optionc'),
(160, 21, 59, 1, 'optionc'),
(116, 21, 59, 1, 'optionc'),
(114, 21, 59, 1, 'optionc'),
(75, 21, 59, -0.33, 'optionb'),
(65, 21, 59, -0.33, 'optiona'),
(78, 21, 59, -0.33, 'optionb'),
(119, 21, 59, 1, 'optionc'),
(127, 21, 59, 1, 'optionc'),
(94, 21, 59, -0.33, 'optionb'),
(28, 21, 59, 1, 'optionc'),
(128, 21, 60, -0.33, 'optionb'),
(67, 21, 60, 1, 'optiona'),
(22, 21, 60, -0.33, 'optionb'),
(36, 21, 60, 1, 'optiona'),
(56, 21, 60, 1, 'optiona'),
(95, 21, 60, 1, 'optiona'),
(87, 21, 60, 1, 'optiona'),
(158, 21, 60, 1, 'optiona'),
(143, 21, 60, -0.33, 'optionb'),
(86, 21, 60, 1, 'optiona'),
(153, 21, 60, 1, 'optiona'),
(88, 21, 60, 1, 'optiona'),
(162, 21, 60, 1, 'optiona'),
(73, 21, 60, 1, 'optiona'),
(74, 21, 60, -0.33, 'optionb'),
(135, 21, 61, 2, 'optionb'),
(52, 21, 61, 2, 'optionb'),
(82, 21, 61, 2, 'optionb'),
(128, 21, 61, -0.66, 'optiona'),
(85, 21, 61, -0.66, 'optionc'),
(152, 21, 61, -0.66, 'optionc'),
(101, 21, 61, 2, 'optionb'),
(70, 21, 61, -0.66, 'optionc'),
(62, 21, 61, 2, 'optionb'),
(67, 21, 61, 2, 'optionb'),
(68, 21, 61, 2, 'optionb'),
(130, 21, 61, 2, 'optionb'),
(22, 21, 61, 2, 'optionb'),
(36, 21, 61, 2, 'optionb'),
(63, 21, 61, 2, 'optionb'),
(144, 21, 61, 2, 'optionb'),
(108, 21, 61, 2, 'optionb'),
(77, 21, 61, 2, 'optionb'),
(81, 21, 61, 2, 'optionb'),
(56, 21, 61, 2, 'optionb'),
(90, 21, 61, 2, 'optionb'),
(95, 21, 61, 2, 'optionb'),
(39, 21, 61, 2, 'optionb'),
(47, 21, 61, 2, 'optionb'),
(87, 21, 61, 2, 'optionb'),
(158, 21, 61, -0.66, 'optionc'),
(117, 21, 61, 2, 'optionb'),
(122, 21, 61, 2, 'optionb'),
(100, 21, 61, 2, 'optionb'),
(143, 21, 61, 2, 'optionb'),
(80, 21, 61, 2, 'optionb'),
(121, 21, 61, 2, 'optionb'),
(113, 21, 61, -0.66, 'optionc'),
(86, 21, 61, 2, 'optionb'),
(112, 21, 61, 2, 'optionb'),
(124, 21, 61, 2, 'optionb'),
(153, 21, 61, 2, 'optionb'),
(44, 21, 61, -0.66, 'optionc'),
(88, 21, 61, -0.66, 'optionc'),
(162, 21, 61, 2, 'optionb'),
(123, 21, 61, 2, 'optionb'),
(83, 21, 61, 2, 'optionb'),
(73, 21, 61, 2, 'optionb'),
(98, 21, 61, 2, 'optionb'),
(96, 21, 61, 2, 'optionb'),
(138, 21, 61, -0.66, 'optionc'),
(145, 21, 61, 2, 'optionb'),
(74, 21, 61, 2, 'optionb'),
(102, 21, 61, 2, 'optionb'),
(20, 21, 61, 2, 'optionb'),
(160, 21, 61, 2, 'optionb'),
(116, 21, 61, 2, 'optionb'),
(114, 21, 61, 2, 'optionb'),
(75, 21, 61, 2, 'optionb'),
(65, 21, 61, 2, 'optionb'),
(78, 21, 61, 2, 'optionb'),
(119, 21, 61, 2, 'optionb'),
(127, 21, 61, 2, 'optionb'),
(94, 21, 61, 2, 'optionb'),
(28, 21, 61, 2, 'optionb'),
(135, 21, 62, -0.66, 'optionc'),
(52, 21, 62, 2, 'optiona'),
(82, 21, 62, 2, 'optiona'),
(128, 21, 62, 2, 'optiona'),
(85, 21, 62, -0.66, 'optionc'),
(152, 21, 62, -0.66, 'optionc'),
(101, 21, 62, 2, 'optiona'),
(70, 21, 62, 2, 'optiona'),
(62, 21, 62, -0.66, 'optionc'),
(67, 21, 62, 2, 'optiona'),
(60, 21, 62, 2, 'optiona'),
(68, 21, 62, 2, 'optiona'),
(130, 21, 62, -0.66, 'optionc'),
(22, 21, 62, -0.66, 'optionc'),
(36, 21, 62, 2, 'optiona'),
(63, 21, 62, 2, 'optiona'),
(108, 21, 62, 2, 'optiona'),
(77, 21, 62, 2, 'optiona'),
(81, 21, 62, 2, 'optiona'),
(56, 21, 62, -0.66, 'optionc'),
(90, 21, 62, 2, 'optiona'),
(95, 21, 62, 2, 'optiona'),
(39, 21, 62, 2, 'optiona'),
(47, 21, 62, 2, 'optiona'),
(87, 21, 62, 2, 'optiona'),
(117, 21, 62, 2, 'optiona'),
(115, 21, 62, 2, 'optiona'),
(100, 21, 62, 2, 'optiona'),
(143, 21, 62, 2, 'optiona'),
(80, 21, 62, 2, 'optiona'),
(86, 21, 62, 2, 'optiona'),
(112, 21, 62, 2, 'optiona'),
(153, 21, 62, 2, 'optiona'),
(44, 21, 62, -0.66, 'optionc'),
(88, 21, 62, 2, 'optiona'),
(123, 21, 62, -0.66, 'optionc'),
(83, 21, 62, -0.66, 'optionc'),
(73, 21, 62, 2, 'optiona'),
(96, 21, 62, 2, 'optiona'),
(138, 21, 62, 2, 'optiona'),
(145, 21, 62, 2, 'optiona'),
(111, 21, 62, -0.66, 'optionc'),
(74, 21, 62, 2, 'optiona'),
(102, 21, 62, 2, 'optiona'),
(20, 21, 62, 2, 'optiona'),
(160, 21, 62, 2, 'optiona'),
(116, 21, 62, -0.66, 'optionc'),
(114, 21, 62, 2, 'optiona'),
(75, 21, 62, 2, 'optiona'),
(65, 21, 62, 2, 'optiona'),
(78, 21, 62, -0.66, 'optionc'),
(127, 21, 62, 2, 'optiona'),
(94, 21, 62, -0.66, 'optionc'),
(28, 21, 62, -0.66, 'optionc'),
(52, 21, 63, 2, 'optionc'),
(82, 21, 63, 2, 'optionc'),
(128, 21, 63, 2, 'optionc'),
(85, 21, 63, 2, 'optionc'),
(152, 21, 63, 2, 'optionc'),
(62, 21, 63, 2, 'optionc'),
(67, 21, 63, 2, 'optionc'),
(60, 21, 63, 2, 'optionc'),
(68, 21, 63, 2, 'optionc'),
(130, 21, 63, 2, 'optionc'),
(36, 21, 63, 2, 'optionc'),
(63, 21, 63, 2, 'optionc'),
(144, 21, 63, 2, 'optionc'),
(77, 21, 63, 2, 'optionc'),
(56, 21, 63, 2, 'optionc'),
(90, 21, 63, 2, 'optionc'),
(95, 21, 63, 2, 'optionc'),
(39, 21, 63, 2, 'optionc'),
(87, 21, 63, -0.66, 'optiona'),
(158, 21, 63, 2, 'optionc'),
(115, 21, 63, 2, 'optionc'),
(80, 21, 63, 2, 'optionc'),
(86, 21, 63, 2, 'optionc'),
(112, 21, 63, 2, 'optionc'),
(124, 21, 63, -0.66, 'optiona'),
(153, 21, 63, 2, 'optionc'),
(44, 21, 63, 2, 'optionc'),
(162, 21, 63, 2, 'optionc'),
(123, 21, 63, 2, 'optionc'),
(83, 21, 63, 2, 'optionc'),
(73, 21, 63, 2, 'optionc'),
(98, 21, 63, 2, 'optionc'),
(96, 21, 63, -0.66, 'optiond'),
(138, 21, 63, 2, 'optionc'),
(145, 21, 63, 2, 'optionc'),
(111, 21, 63, 2, 'optionc'),
(74, 21, 63, 2, 'optionc'),
(20, 21, 63, 2, 'optionc'),
(160, 21, 63, -0.66, 'optiond'),
(116, 21, 63, 2, 'optionc'),
(114, 21, 63, 2, 'optionc'),
(65, 21, 63, 2, 'optionc'),
(119, 21, 63, 2, 'optionc'),
(127, 21, 63, 2, 'optionc'),
(141, 21, 63, 2, 'optionc'),
(94, 21, 63, 2, 'optionc'),
(28, 21, 63, 2, 'optionc'),
(101, 21, 64, 2, 'optiond'),
(68, 21, 64, -0.66, 'optionb'),
(22, 21, 64, -0.66, 'optiona'),
(36, 21, 64, -0.66, 'optionb'),
(63, 21, 64, -0.66, 'optiona'),
(108, 21, 64, 2, 'optiond'),
(77, 21, 64, -0.66, 'optionb'),
(90, 21, 64, -0.66, 'optionb'),
(95, 21, 64, 2, 'optiond'),
(39, 21, 64, -0.66, 'optionb'),
(47, 21, 64, 2, 'optiond'),
(117, 21, 64, 2, 'optiond'),
(122, 21, 64, -0.66, 'optionc'),
(115, 21, 64, -0.66, 'optiona'),
(143, 21, 64, -0.66, 'optionb'),
(80, 21, 64, -0.66, 'optionb'),
(121, 21, 64, -0.66, 'optionb'),
(86, 21, 64, 2, 'optiond'),
(83, 21, 64, -0.66, 'optionb'),
(73, 21, 64, 2, 'optiond'),
(98, 21, 64, -0.66, 'optionb'),
(145, 21, 64, -0.66, 'optionb'),
(74, 21, 64, -0.66, 'optionb'),
(102, 21, 64, -0.66, 'optionb'),
(20, 21, 64, -0.66, 'optionb'),
(114, 21, 64, -0.66, 'optiona'),
(78, 21, 64, -0.66, 'optionb'),
(119, 21, 64, 2, 'optiond'),
(135, 21, 65, -0.66, 'optionc'),
(52, 21, 65, -0.66, 'optionc'),
(82, 21, 65, -0.66, 'optionc'),
(68, 21, 65, -0.66, 'optionc'),
(22, 21, 65, -0.66, 'optionc'),
(144, 21, 65, 2, 'optiona'),
(108, 21, 65, 2, 'optiona'),
(77, 21, 65, -0.66, 'optionb'),
(81, 21, 65, 2, 'optiona'),
(90, 21, 65, 2, 'optiona'),
(95, 21, 65, -0.66, 'optionb'),
(39, 21, 65, -0.66, 'optionc'),
(87, 21, 65, -0.66, 'optionc'),
(158, 21, 65, -0.66, 'optionc'),
(117, 21, 65, -0.66, 'optionb'),
(122, 21, 65, 2, 'optiona'),
(115, 21, 65, 2, 'optiona'),
(143, 21, 65, -0.66, 'optionc'),
(121, 21, 65, -0.66, 'optionb'),
(86, 21, 65, 2, 'optiona'),
(124, 21, 65, -0.66, 'optionc'),
(88, 21, 65, -0.66, 'optionc'),
(83, 21, 65, -0.66, 'optionc'),
(73, 21, 65, -0.66, 'optionb'),
(145, 21, 65, -0.66, 'optionc'),
(111, 21, 65, 2, 'optiona'),
(74, 21, 65, -0.66, 'optionc'),
(102, 21, 65, -0.66, 'optiond'),
(20, 21, 65, 2, 'optiona'),
(116, 21, 65, 2, 'optiona'),
(114, 21, 65, -0.66, 'optionc'),
(75, 21, 65, -0.66, 'optionc'),
(65, 21, 65, -0.66, 'optionb'),
(78, 21, 65, -0.66, 'optionb'),
(127, 21, 65, -0.66, 'optionc'),
(141, 21, 65, 2, 'optiona'),
(94, 21, 65, -0.66, 'optionc'),
(28, 21, 65, -0.66, 'optionc'),
(92, 5, 3, 0, 'optiona'),
(92, 5, 4, 0, 'optione'),
(92, 5, 5, 0, 'optiond'),
(92, 5, 6, 0, 'optiona'),
(92, 5, 7, 0, 'optionb'),
(92, 5, 8, 0, 'optionc'),
(92, 5, 10, 0, 'optionb'),
(92, 5, 14, 0, 'optiond'),
(92, 5, 15, 0, 'optionc'),
(92, 5, 16, 0, 'optiond'),
(92, 5, 18, 0, 'optionb'),
(92, 5, 20, 0, 'optiona'),
(92, 5, 27, 0, 'optionb'),
(92, 5, 31, 0, 'optiona'),
(92, 5, 33, 0, 'optionc'),
(92, 5, 60, 0, 'optionc'),
(92, 5, 62, 0, 'optione'),
(92, 5, 65, 0, 'optiond'),
(66, 20, 1, -0.33, 'optionc'),
(66, 20, 2, 1, 'optionc'),
(66, 20, 4, 1, 'optionc'),
(66, 20, 5, 1, 'optiona'),
(66, 20, 6, 1, 'optionc'),
(66, 20, 7, 1, 'optionc'),
(66, 20, 8, -0.33, 'optionc'),
(66, 20, 9, 1, 'optionc'),
(66, 20, 10, 1, 'optionb'),
(66, 20, 12, -0.33, 'optiona'),
(66, 20, 13, 1, 'optiona'),
(66, 20, 15, 1, 'optionb'),
(66, 20, 18, -0.33, 'optionb'),
(66, 20, 19, 1, 'optionb'),
(66, 20, 21, 1, 'optionc'),
(66, 20, 23, 1, 'optiona'),
(66, 20, 24, 1, 'optiona'),
(66, 20, 25, 1, 'optionb'),
(66, 20, 26, 2, 'optionc'),
(66, 20, 29, 2, 'optiond'),
(66, 20, 31, 2, 'optionb'),
(66, 20, 32, 2, 'optionb'),
(66, 20, 34, 2, 'optionc'),
(66, 20, 35, 2, 'optionb'),
(66, 20, 38, 2, 'optiond'),
(66, 20, 40, 2, 'optiond'),
(66, 20, 41, 2, 'optiond'),
(66, 20, 42, 2, 'optiond'),
(66, 20, 43, 2, 'optionb'),
(66, 20, 44, 2, 'optionc'),
(66, 20, 45, -0.66, 'optiona'),
(66, 20, 46, 2, 'optiona'),
(66, 20, 47, 2, 'optionc'),
(66, 20, 48, 2, 'optiond'),
(66, 20, 49, -0.66, 'optiona'),
(66, 20, 50, 2, 'optiond'),
(66, 20, 53, 2, 'optiona'),
(66, 20, 54, 2, 'optionc'),
(66, 20, 55, -0.66, 'optionc'),
(66, 20, 59, 1, 'optiond'),
(66, 20, 63, 2, 'optionc'),
(97, 21, 1, 1, 'optionb'),
(97, 21, 2, 1, 'optionb'),
(97, 21, 3, 1, 'optionb'),
(97, 21, 4, -0.33, 'optionc'),
(97, 21, 5, -0.33, 'optionb'),
(97, 21, 6, 1, 'optionb'),
(97, 21, 7, 1, 'optionc'),
(97, 21, 8, 1, 'optiond'),
(97, 21, 9, 1, 'optionc'),
(97, 21, 10, 1, 'optionc'),
(97, 21, 11, 1, 'optiona'),
(97, 21, 13, 1, 'optiona'),
(97, 21, 14, 1, 'optionc'),
(97, 21, 15, 1, 'optiona'),
(97, 21, 16, 1, 'optionc'),
(97, 21, 17, 1, 'optionb'),
(97, 21, 18, 1, 'optionc'),
(97, 21, 19, 1, 'optionc'),
(97, 21, 20, 1, 'optiona'),
(97, 21, 21, 1, 'optionb'),
(97, 21, 22, 1, 'optionb'),
(97, 21, 23, -0.33, 'optiona'),
(97, 21, 24, 1, 'optionc'),
(97, 21, 25, -0.33, 'optiond'),
(97, 21, 26, 2, 'optionb'),
(97, 21, 27, -0.66, 'optionb'),
(97, 21, 28, 2, 'optiond'),
(97, 21, 29, 2, 'optiond'),
(97, 21, 30, -0.66, 'optiond'),
(97, 21, 31, 2, 'optiona'),
(97, 21, 32, 2, 'optiond'),
(97, 21, 33, 2, 'optiond'),
(97, 21, 34, 2, 'optionc'),
(97, 21, 35, 2, 'optiond'),
(97, 21, 37, -0.66, 'optiona'),
(97, 21, 38, -0.66, 'optionc'),
(97, 21, 39, -0.66, 'optiond'),
(97, 21, 40, 2, 'optiond'),
(97, 21, 41, -0.66, 'optiona'),
(97, 21, 43, 2, 'optionb'),
(97, 21, 44, -0.66, 'optionc'),
(97, 21, 45, -0.66, 'optionb'),
(97, 21, 48, 2, 'optionc'),
(97, 21, 49, -0.66, 'optiond'),
(97, 21, 51, 2, 'optionb'),
(97, 21, 52, 2, 'optiond'),
(97, 21, 53, 2, 'optiona'),
(97, 21, 54, 2, 'optiona'),
(97, 21, 55, 2, 'optionb'),
(97, 21, 56, -0.33, 'optionb'),
(97, 21, 57, 1, 'optionc'),
(97, 21, 58, 1, 'optiona'),
(97, 21, 59, 1, 'optionc'),
(97, 21, 60, 1, 'optiona'),
(97, 21, 61, 2, 'optionb'),
(97, 21, 62, 2, 'optiona'),
(97, 21, 63, 2, 'optionc'),
(97, 21, 64, 2, 'optiond'),
(97, 21, 65, -0.66, 'optionc'),
(52, 10, 1, 2, 'optione'),
(52, 10, 2, 2, 'optionb'),
(52, 10, 3, -0.66, 'optiona'),
(52, 10, 5, -0.66, 'optiona'),
(52, 10, 8, -0.66, 'optiona'),
(52, 10, 9, 2, 'optionc'),
(52, 10, 10, 2, 'optiond'),
(52, 10, 11, 2, 'optionc'),
(52, 10, 12, 2, 'optionb'),
(52, 10, 13, -0.66, 'optione'),
(52, 10, 14, 2, 'optionb'),
(52, 10, 15, -0.66, 'optionb'),
(52, 10, 16, 2, 'optiona'),
(52, 10, 17, 2, 'optionb'),
(52, 10, 20, -0.66, 'optiona'),
(52, 10, 21, 2, 'optionb'),
(52, 10, 22, 2, 'optionb'),
(52, 10, 23, 2, 'optiond'),
(164, 21, 1, 1, 'optionb'),
(164, 21, 2, 1, 'optionb'),
(164, 21, 3, 1, 'optionb'),
(164, 21, 4, -0.33, 'optionc'),
(164, 21, 6, 1, 'optionb'),
(164, 21, 7, 1, 'optionc'),
(164, 21, 8, 1, 'optiond'),
(164, 21, 9, 1, 'optionc'),
(164, 21, 10, 1, 'optionc'),
(164, 21, 11, 1, 'optiona'),
(164, 21, 12, -0.33, 'optiond'),
(164, 21, 13, 1, 'optiona'),
(164, 21, 15, 1, 'optiona'),
(164, 21, 16, 1, 'optionc'),
(164, 21, 17, 1, 'optionb'),
(164, 21, 18, 1, 'optionc'),
(164, 21, 19, 1, 'optionc'),
(164, 21, 20, 1, 'optiona'),
(164, 21, 21, -0.33, 'optionc'),
(164, 21, 22, 1, 'optionb'),
(164, 21, 23, 1, 'optionc'),
(164, 21, 24, 1, 'optionc'),
(164, 21, 26, 2, 'optionb'),
(164, 21, 27, 2, 'optiond'),
(164, 21, 28, 2, 'optiond'),
(164, 21, 29, 2, 'optiond'),
(164, 21, 30, -0.66, 'optiond'),
(164, 21, 31, 2, 'optiona'),
(164, 21, 32, -0.66, 'optiona'),
(164, 21, 33, 2, 'optiond'),
(164, 21, 34, 2, 'optionc'),
(164, 21, 35, -0.66, 'optiona'),
(164, 21, 37, -0.66, 'optiona'),
(164, 21, 38, -0.66, 'optionc'),
(164, 21, 39, -0.66, 'optiond'),
(164, 21, 40, 2, 'optiond'),
(164, 21, 41, -0.66, 'optiona'),
(164, 21, 42, 2, 'optiona'),
(164, 21, 44, -0.66, 'optionb'),
(164, 21, 45, -0.66, 'optiona'),
(164, 21, 47, 2, 'optiond'),
(164, 21, 49, -0.66, 'optionb'),
(164, 21, 51, 2, 'optionb'),
(164, 21, 53, 2, 'optiona'),
(164, 21, 54, 2, 'optiona'),
(164, 21, 59, -0.33, 'optiond'),
(164, 21, 61, 2, 'optionb'),
(67, 4, 14, 1, 'optiond'),
(67, 4, 15, 1, 'optiona'),
(67, 4, 16, 1, 'optiona'),
(67, 4, 17, 1, 'optiond'),
(67, 4, 18, 1, 'optionc'),
(67, 4, 19, 1, 'optionb'),
(67, 4, 20, 1, 'optiona'),
(67, 4, 21, 2, 'optiond'),
(67, 4, 22, 2, 'optionc'),
(67, 4, 23, 2, 'optionb'),
(67, 4, 24, 2, 'optionc'),
(67, 4, 25, 2, 'optiona'),
(67, 4, 26, 2, 'optionc'),
(67, 4, 27, 2, 'optionc'),
(67, 4, 28, 2, 'optiond'),
(67, 4, 29, 2, 'optionb'),
(67, 4, 30, 2, 'optionc'),
(67, 4, 31, 2, 'optionc'),
(67, 4, 32, 2, 'optiond'),
(67, 4, 33, 2, 'optionc'),
(67, 4, 34, 2, 'optiona'),
(67, 4, 35, 2, 'optionc'),
(67, 4, 36, 2, 'optionc'),
(67, 4, 37, 2, 'optiond'),
(67, 4, 38, 2, 'optiond'),
(67, 4, 39, 2, 'optionb'),
(67, 4, 40, 2, 'optiona'),
(67, 4, 41, 4, 'optionc'),
(67, 4, 42, 4, 'optionc'),
(67, 4, 43, 4, 'optionc'),
(67, 4, 44, 4, 'optionb'),
(67, 4, 45, 4, 'optiond'),
(67, 4, 46, 4, 'optione'),
(67, 4, 47, 4, 'optionc'),
(67, 4, 48, 4, 'optionb'),
(67, 4, 49, 4, 'optiona'),
(67, 4, 50, -1.33, 'optiond'),
(92, 4, 1, 1, 'optiona'),
(92, 4, 2, 1, 'optiond'),
(92, 4, 4, 1, 'optionc'),
(92, 4, 5, -0.33, 'optiona'),
(92, 4, 6, -0.33, 'optionc'),
(92, 4, 8, 1, 'optionb'),
(92, 4, 9, -0.33, 'optionc'),
(92, 4, 10, 1, 'optionc'),
(92, 4, 11, -0.33, 'optionb'),
(92, 4, 14, -0.33, 'optionc'),
(92, 4, 15, -0.33, 'optionc'),
(92, 4, 16, 1, 'optiona'),
(92, 4, 17, 1, 'optiond'),
(92, 4, 18, 1, 'optionc'),
(92, 4, 19, 1, 'optionb'),
(92, 4, 20, 1, 'optiona'),
(92, 4, 22, -0.66, 'optiona'),
(92, 4, 33, 2, 'optionc'),
(92, 4, 34, 2, 'optiona'),
(92, 4, 39, -0.66, 'optiond'),
(92, 4, 40, -0.66, 'optiond'),
(92, 4, 50, -1.33, 'optiona'),
(66, 15, 2, -0.33, 'optiona');
INSERT INTO `studentquestion` (`stdid`, `testid`, `qnid`, `marks`, `stdanswer`) VALUES
(66, 15, 3, -0.33, 'optiond'),
(66, 15, 5, 1, 'optionb'),
(66, 15, 6, 1, 'optiona'),
(66, 15, 9, 1, 'optionb'),
(66, 15, 11, 1, 'optiond'),
(66, 15, 12, 1, 'optionc'),
(66, 15, 13, 1, 'optionb'),
(66, 15, 14, 1, 'optionc'),
(66, 15, 15, 1, 'optiond'),
(66, 15, 16, 1, 'optiond'),
(66, 15, 17, 1, 'optionb'),
(66, 15, 18, 1, 'optionb'),
(66, 15, 19, 1, 'optionc'),
(66, 15, 20, 1, 'optionb'),
(66, 15, 21, 1, 'optiona'),
(66, 15, 22, 1, 'optionb'),
(66, 15, 23, 1, 'optiona'),
(66, 15, 24, 1, 'optiona'),
(66, 15, 25, 1, 'optiond'),
(66, 15, 26, 2, 'optiona'),
(66, 15, 27, 2, 'optiona'),
(66, 15, 28, -0.66, 'optionc'),
(66, 15, 29, 2, 'optiond'),
(66, 15, 30, -0.66, 'optiond'),
(66, 15, 31, -0.66, 'optiond'),
(66, 15, 32, 2, 'optiona'),
(66, 15, 35, 2, 'optionc'),
(66, 15, 36, 2, 'optiond'),
(66, 15, 37, 2, 'optionb'),
(66, 15, 39, -0.66, 'optiona'),
(66, 15, 40, 2, 'optiond'),
(66, 15, 41, 2, 'optionc'),
(66, 15, 42, 2, 'optiona'),
(66, 15, 43, -0.66, 'optiond'),
(66, 15, 45, 2, 'optiona'),
(66, 15, 47, -0.66, 'optiona'),
(66, 15, 48, 2, 'optionc'),
(66, 15, 50, -0.66, 'optiona'),
(66, 15, 51, 2, 'optionb'),
(66, 15, 52, 2, 'optionc'),
(66, 15, 53, 2, 'optionc'),
(66, 15, 57, 1, 'optionb'),
(66, 15, 59, 1, 'optiond'),
(66, 15, 60, -0.33, 'optiond'),
(66, 15, 61, 2, 'optionc'),
(66, 15, 63, 2, 'optiond'),
(66, 15, 65, -0.66, 'optiond'),
(95, 4, 1, 1, 'optiona'),
(95, 4, 2, 1, 'optiond'),
(95, 4, 3, 1, 'optionc'),
(95, 4, 4, 1, 'optionc'),
(95, 4, 5, -0.33, 'optionc'),
(95, 4, 6, 1, 'optiond'),
(95, 4, 7, 1, 'optiond'),
(95, 4, 8, -0.33, 'optiona'),
(95, 4, 9, -0.33, 'optiona'),
(95, 4, 10, 1, 'optionc'),
(95, 4, 11, -0.33, 'optionb'),
(95, 4, 12, 1, 'optionc'),
(95, 4, 13, 1, 'optionb'),
(95, 4, 14, 1, 'optiond'),
(95, 4, 15, 1, 'optiona'),
(95, 4, 16, 1, 'optiona'),
(95, 4, 17, 1, 'optiond'),
(95, 4, 18, 1, 'optionc'),
(95, 4, 19, 1, 'optionb'),
(95, 4, 20, 1, 'optiona'),
(95, 4, 21, 2, 'optiond'),
(95, 4, 22, 2, 'optionc'),
(95, 4, 23, 2, 'optionb'),
(95, 4, 24, 2, 'optionc'),
(95, 4, 25, 2, 'optiona'),
(95, 4, 26, 2, 'optionc'),
(95, 4, 28, 2, 'optiond'),
(95, 4, 29, 2, 'optionb'),
(95, 4, 30, 2, 'optionc'),
(95, 4, 31, 2, 'optionc'),
(95, 4, 32, 2, 'optiond'),
(95, 4, 33, 2, 'optionc'),
(95, 4, 34, 2, 'optiona'),
(95, 4, 36, 2, 'optionc'),
(95, 4, 37, 2, 'optiond'),
(95, 4, 38, 2, 'optiond'),
(95, 4, 39, 2, 'optionb'),
(95, 4, 40, 2, 'optiona'),
(95, 4, 45, -1.33, 'optionb'),
(95, 4, 46, -1.33, 'optiond'),
(95, 4, 47, 4, 'optionc'),
(95, 4, 48, 4, 'optionb'),
(66, 5, 3, 0, 'optiond'),
(66, 5, 5, 0, 'optione'),
(66, 5, 12, 0, 'optiond'),
(66, 5, 16, 0, 'optiond'),
(66, 5, 20, 0, 'optionb'),
(66, 5, 27, 0, 'optionb'),
(66, 5, 30, 0, 'optiond'),
(66, 5, 31, 0, 'optiona'),
(66, 5, 33, 0, 'optiond'),
(66, 5, 35, 0, 'optiond'),
(66, 5, 40, 0, 'optionc'),
(66, 5, 50, 0, 'optionc'),
(66, 5, 57, 0, 'optionb'),
(72, 21, 1, 1, 'optionb'),
(72, 21, 2, 1, 'optionb'),
(72, 21, 3, 1, 'optionb'),
(72, 21, 6, 1, 'optionb'),
(72, 21, 7, 1, 'optionc'),
(72, 21, 8, 1, 'optiond'),
(72, 21, 9, -0.33, 'optionb'),
(72, 21, 10, 1, 'optionc'),
(72, 21, 11, 1, 'optiona'),
(72, 21, 12, 1, 'optionb'),
(72, 21, 13, -0.33, 'optiond'),
(72, 21, 14, 1, 'optionc'),
(72, 21, 15, 1, 'optiona'),
(72, 21, 16, 1, 'optionc'),
(72, 21, 17, 1, 'optionb'),
(72, 21, 18, -0.33, 'optiona'),
(72, 21, 19, 1, 'optionc'),
(72, 21, 20, 1, 'optiona'),
(72, 21, 21, 1, 'optionb'),
(72, 21, 22, 1, 'optionb'),
(72, 21, 24, 1, 'optionc'),
(72, 21, 25, 1, 'optionb'),
(72, 21, 26, 2, 'optionb'),
(72, 21, 27, 2, 'optiond'),
(72, 21, 28, 2, 'optiond'),
(72, 21, 29, 2, 'optiond'),
(72, 21, 30, -0.66, 'optiond'),
(72, 21, 31, 2, 'optiona'),
(72, 21, 32, 2, 'optiond'),
(72, 21, 33, 2, 'optiond'),
(72, 21, 34, 2, 'optionc'),
(72, 21, 35, 2, 'optiond'),
(72, 21, 38, -0.66, 'optiond'),
(72, 21, 39, 2, 'optionb'),
(72, 21, 40, 2, 'optiond'),
(72, 21, 41, 2, 'optione'),
(72, 21, 42, 2, 'optiona'),
(72, 21, 45, -0.66, 'optionc'),
(72, 21, 47, 2, 'optiond'),
(72, 21, 48, 2, 'optionc'),
(72, 21, 49, -0.66, 'optiona'),
(72, 21, 50, -0.66, 'optiona'),
(72, 21, 51, 2, 'optionb'),
(72, 21, 52, 2, 'optiond'),
(72, 21, 54, 2, 'optiona'),
(72, 21, 55, 2, 'optionb'),
(72, 21, 56, 1, 'optionc'),
(72, 21, 57, -0.33, 'optiond'),
(72, 21, 59, 1, 'optionc'),
(72, 21, 61, 2, 'optionb'),
(72, 21, 62, 2, 'optiona'),
(72, 21, 63, 2, 'optionc'),
(72, 21, 64, -0.66, 'optiona'),
(72, 21, 65, 2, 'optiona'),
(66, 21, 1, 1, 'optionb'),
(66, 21, 2, 1, 'optionb'),
(66, 21, 5, 1, 'optionc'),
(66, 21, 6, -0.33, 'optiond'),
(66, 21, 7, 1, 'optionc'),
(66, 21, 8, 1, 'optiond'),
(66, 21, 9, -0.33, 'optiona'),
(66, 21, 10, 1, 'optionc'),
(66, 21, 11, 1, 'optiona'),
(66, 21, 12, 1, 'optionb'),
(66, 21, 13, 1, 'optiona'),
(66, 21, 14, 1, 'optionc'),
(66, 21, 16, 1, 'optionc'),
(66, 21, 17, 1, 'optionb'),
(66, 21, 18, 1, 'optionc'),
(66, 21, 19, 1, 'optionc'),
(66, 21, 20, 1, 'optiona'),
(66, 21, 21, -0.33, 'optionc'),
(66, 21, 22, 1, 'optionb'),
(66, 21, 23, 1, 'optionc'),
(66, 21, 24, -0.33, 'optionb'),
(66, 21, 25, 1, 'optionb'),
(66, 21, 27, 2, 'optiond'),
(66, 21, 28, 2, 'optiond'),
(66, 21, 29, 2, 'optiond'),
(66, 21, 30, -0.66, 'optionc'),
(66, 21, 31, 2, 'optiona'),
(66, 21, 32, 2, 'optiond'),
(66, 21, 33, 2, 'optiond'),
(66, 21, 34, 2, 'optionc'),
(66, 21, 36, 2, 'optionc'),
(66, 21, 37, -0.66, 'optionc'),
(66, 21, 39, 2, 'optionb'),
(66, 21, 42, 2, 'optiona'),
(66, 21, 43, 2, 'optionb'),
(66, 21, 45, -0.66, 'optionb'),
(66, 21, 47, 2, 'optiond'),
(66, 21, 49, 2, 'optionc'),
(66, 21, 50, -0.66, 'optiond'),
(66, 21, 51, 2, 'optionb'),
(66, 21, 52, -0.66, 'optionb'),
(66, 21, 53, 2, 'optiona'),
(66, 21, 54, 2, 'optiona'),
(66, 21, 55, -0.66, 'optiona'),
(66, 21, 59, 1, 'optionc'),
(66, 21, 62, 2, 'optiona'),
(66, 21, 63, 2, 'optionc'),
(66, 4, 1, 1, 'optiona'),
(66, 4, 3, 1, 'optionc'),
(66, 4, 4, 1, 'optionc'),
(66, 4, 6, -0.33, 'optionc'),
(66, 4, 7, 1, 'optiond'),
(66, 4, 9, 1, 'optionb'),
(66, 4, 10, 1, 'optionc'),
(66, 4, 11, 1, 'optiona'),
(66, 4, 12, 1, 'optionc'),
(66, 4, 13, 1, 'optionb'),
(66, 4, 14, 1, 'optiond'),
(66, 4, 16, 1, 'optiona'),
(66, 4, 17, 1, 'optiond'),
(66, 4, 18, 1, 'optionc'),
(66, 4, 19, 1, 'optionb'),
(66, 4, 20, 1, 'optiona'),
(66, 4, 22, 2, 'optionc'),
(66, 4, 23, 2, 'optionb'),
(66, 4, 24, 2, 'optionc'),
(66, 4, 25, 2, 'optiona'),
(66, 4, 26, 2, 'optionc'),
(66, 4, 27, 2, 'optionc'),
(66, 4, 28, 2, 'optiond'),
(66, 4, 29, 2, 'optionb'),
(66, 4, 30, 2, 'optionc'),
(66, 4, 31, -0.66, 'optionb'),
(66, 4, 32, 2, 'optiond'),
(66, 4, 33, 2, 'optionc'),
(66, 4, 34, 2, 'optiona'),
(66, 4, 35, 2, 'optionc'),
(66, 4, 36, 2, 'optionc'),
(66, 4, 37, 2, 'optiond'),
(66, 4, 38, 2, 'optiond'),
(66, 4, 39, 2, 'optionb'),
(66, 4, 40, -0.66, 'optionc'),
(66, 4, 41, 4, 'optionc'),
(66, 4, 42, 4, 'optionc'),
(66, 4, 43, -1.33, 'optionb'),
(66, 4, 44, 4, 'optionb'),
(66, 4, 45, -1.33, 'optionb'),
(66, 4, 46, 4, 'optione'),
(66, 4, 50, 4, 'optionc'),
(105, 17, 2, 1, 'optionb'),
(105, 17, 3, 1, 'optionb'),
(105, 17, 5, -0.33, 'optionb'),
(105, 17, 6, -0.33, 'optionb'),
(105, 17, 8, 1, 'optiona'),
(105, 17, 13, -0.33, 'optiona'),
(105, 17, 14, 1, 'optionc'),
(105, 17, 17, 1, 'optiona'),
(105, 17, 18, -0.33, 'optiond'),
(105, 17, 21, -0.33, 'optiond'),
(105, 17, 25, -0.33, 'optiond'),
(105, 17, 26, 2, 'optionc'),
(105, 17, 28, 2, 'optiond'),
(105, 17, 29, -0.66, 'optiona'),
(105, 17, 30, 2, 'optiona'),
(105, 17, 31, -0.66, 'optionb'),
(105, 17, 32, 2, 'optiona'),
(105, 17, 33, 2, 'optiona'),
(105, 17, 35, -0.66, 'optiond'),
(105, 17, 37, 2, 'optionc'),
(105, 17, 38, -0.66, 'optionb'),
(105, 17, 44, -0.66, 'optiona'),
(105, 17, 45, -0.66, 'optionc'),
(105, 17, 47, -0.66, 'optionb'),
(105, 17, 54, -0.66, 'optionc'),
(105, 17, 57, -0.33, 'optionc'),
(105, 17, 61, 2, 'optionb'),
(105, 17, 63, 2, 'optiona'),
(64, 5, 9, 0, 'optionc'),
(64, 5, 10, 0, 'optionb'),
(64, 5, 12, 0, 'optiond'),
(64, 5, 24, 0, 'optionb'),
(64, 5, 46, 0, 'optione'),
(64, 5, 51, 0, 'optiona'),
(115, 13, 1, -0.66, 'optiond'),
(115, 13, 2, 2, 'optionb'),
(115, 13, 3, 2, 'optiona'),
(115, 13, 5, -0.66, 'optiond'),
(115, 13, 6, -0.66, 'optiona'),
(115, 13, 7, 2, 'optionb'),
(115, 13, 8, 2, 'optionc'),
(115, 13, 9, 2, 'optione'),
(115, 13, 10, 2, 'optione'),
(115, 13, 11, 2, 'optiond'),
(115, 13, 12, 2, 'optiona'),
(115, 13, 13, -0.66, 'optiona'),
(115, 13, 18, -0.66, 'optionb'),
(115, 13, 19, 2, 'optionb'),
(115, 13, 22, -0.66, 'optionb'),
(115, 13, 23, 2, 'optiona'),
(115, 13, 24, -0.66, 'optiond'),
(115, 13, 25, 2, 'optiona'),
(115, 13, 26, -0.66, 'optionc'),
(115, 13, 27, -0.66, 'optione'),
(115, 13, 28, 2, 'optionc'),
(115, 13, 29, 2, 'optionc'),
(115, 13, 30, 2, 'optiona'),
(115, 13, 31, 2, 'optiond'),
(115, 13, 32, 2, 'optiona'),
(115, 13, 33, 2, 'optionb'),
(115, 13, 34, 2, 'optiona'),
(115, 13, 35, 2, 'optionc'),
(115, 13, 36, 2, 'optionc'),
(115, 13, 37, -0.66, 'optionb'),
(115, 13, 38, 2, 'optionb'),
(115, 13, 39, 2, 'optiona'),
(115, 13, 40, 2, 'optiond'),
(115, 11, 1, 2, 'optionb'),
(115, 11, 2, 2, 'optionc'),
(115, 11, 3, -0.66, 'optiond'),
(115, 11, 4, 2, 'optiond'),
(115, 11, 5, 2, 'optionb'),
(115, 11, 6, 2, 'optionb'),
(115, 11, 7, 2, 'optionb'),
(115, 11, 8, 2, 'optiona'),
(115, 11, 9, 2, 'optionc'),
(115, 11, 10, -0.66, 'optionc'),
(115, 11, 11, 2, 'optiona'),
(115, 11, 12, 2, 'optiona'),
(115, 11, 13, 2, 'optionb'),
(115, 11, 15, -0.66, 'optiona'),
(115, 11, 17, 2, 'optiona'),
(115, 11, 18, -0.66, 'optiond'),
(115, 11, 19, -0.66, 'optiona'),
(115, 11, 20, -0.66, 'optionb'),
(115, 11, 21, 2, 'optionc'),
(115, 11, 22, -0.66, 'optionc'),
(115, 11, 23, 2, 'optionc'),
(115, 11, 24, 2, 'optiona'),
(115, 11, 25, 2, 'optionb'),
(115, 11, 26, 2, 'optionc'),
(115, 11, 27, 2, 'optione'),
(115, 11, 29, 2, 'optiond'),
(115, 11, 30, -0.66, 'optione'),
(115, 11, 31, 2, 'optione'),
(115, 11, 32, -0.66, 'optionb'),
(115, 11, 33, 2, 'optiond'),
(115, 11, 34, -0.66, 'optiona'),
(115, 11, 35, 2, 'optiond'),
(115, 11, 36, 2, 'optione'),
(115, 11, 37, 2, 'optionb'),
(115, 11, 38, 2, 'optiona'),
(115, 11, 39, 2, 'optiona'),
(115, 11, 40, -0.66, 'optionb'),
(115, 11, 41, 2, 'optionc'),
(115, 11, 42, 2, 'optione'),
(115, 11, 43, -0.66, 'optionc'),
(115, 11, 46, -0.66, 'optione'),
(115, 11, 47, 2, 'optione'),
(115, 11, 48, 2, 'optiond'),
(115, 11, 49, 2, 'optiond'),
(115, 11, 50, 2, 'optionc'),
(115, 11, 51, 2, 'optiond'),
(115, 11, 53, 2, 'optionc'),
(115, 11, 54, 2, 'optionb'),
(115, 11, 55, -0.66, 'optionc'),
(115, 11, 56, 2, 'optione'),
(115, 11, 57, 2, 'optionc'),
(115, 11, 58, 2, 'optione'),
(115, 12, 1, 2, 'optionc'),
(115, 12, 2, 2, 'optionc'),
(115, 12, 3, 2, 'optiond'),
(115, 12, 4, 2, 'optionc'),
(115, 12, 5, -0.66, 'optionb'),
(115, 12, 6, -0.66, 'optiona'),
(115, 12, 7, 2, 'optionb'),
(115, 12, 8, 2, 'optionb'),
(115, 12, 9, -0.66, 'optionb'),
(115, 12, 11, -0.66, 'optiona'),
(115, 12, 12, -0.66, 'optiona'),
(115, 12, 13, 2, 'optionb'),
(115, 12, 14, -0.66, 'optiond'),
(115, 12, 15, 2, 'optiond'),
(115, 12, 16, 2, 'optionc'),
(115, 12, 26, 2, 'optionb'),
(115, 12, 27, -0.66, 'optiond'),
(115, 12, 29, -0.66, 'optionb'),
(115, 12, 30, 2, 'optionb'),
(115, 12, 31, -0.66, 'optione'),
(134, 16, 1, -0.33, 'optiona'),
(134, 16, 6, 1, 'optionb'),
(134, 16, 9, 1, 'optionc'),
(134, 16, 10, 1, 'optionc'),
(134, 16, 12, -0.33, 'optionc'),
(134, 16, 13, 1, 'optionb'),
(134, 20, 1, -0.33, 'optionc'),
(134, 20, 5, 1, 'optiona'),
(134, 20, 6, 1, 'optionc'),
(134, 20, 7, 1, 'optionc'),
(134, 20, 8, -0.33, 'optionc'),
(134, 20, 9, 1, 'optionc'),
(134, 20, 12, -0.33, 'optiona'),
(134, 20, 13, 1, 'optiona'),
(134, 20, 15, 1, 'optionb'),
(134, 20, 16, 1, 'optionc'),
(134, 20, 17, -0.33, 'optiond'),
(134, 20, 18, 1, 'optiona'),
(134, 20, 20, 1, 'optiona'),
(134, 20, 21, 1, 'optionc'),
(134, 20, 22, 1, 'optiond'),
(134, 20, 23, 1, 'optiona'),
(134, 20, 65, 2, 'optionb'),
(99, 10, 1, 2, 'optione'),
(99, 10, 2, 2, 'optionb'),
(99, 10, 3, 2, 'optiond'),
(99, 10, 4, 2, 'optionc'),
(99, 10, 5, 2, 'optionb'),
(99, 10, 6, 2, 'optionb'),
(99, 10, 8, 2, 'optione'),
(99, 10, 9, 2, 'optionc'),
(99, 10, 10, 2, 'optiond'),
(99, 10, 12, 2, 'optionb'),
(99, 10, 13, 2, 'optionc'),
(99, 10, 14, 2, 'optionb'),
(99, 10, 16, 2, 'optiona'),
(99, 10, 17, 2, 'optionb'),
(99, 10, 18, 2, 'optiona'),
(99, 10, 20, 2, 'optionc'),
(99, 10, 21, 2, 'optionb'),
(99, 10, 22, 2, 'optionb'),
(99, 10, 23, -0.66, 'optionc'),
(174, 21, 1, 1, 'optionb'),
(174, 21, 2, 1, 'optionb'),
(174, 21, 3, -0.33, 'optiona'),
(174, 21, 5, 1, 'optionc'),
(174, 21, 6, 1, 'optionb'),
(174, 21, 7, 1, 'optionc'),
(174, 21, 8, 1, 'optiond'),
(174, 21, 9, -0.33, 'optiona'),
(174, 21, 10, -0.33, 'optiond'),
(174, 21, 11, 1, 'optiona'),
(174, 21, 12, -0.33, 'optiond'),
(174, 21, 13, 1, 'optiona'),
(174, 21, 14, 1, 'optionc'),
(174, 21, 15, 1, 'optiona'),
(174, 21, 16, 1, 'optionc'),
(174, 21, 17, 1, 'optionb'),
(174, 21, 19, 1, 'optionc'),
(174, 21, 20, 1, 'optiona'),
(174, 21, 21, -0.33, 'optionc'),
(174, 21, 22, 1, 'optionb'),
(174, 21, 23, -0.33, 'optionb'),
(174, 21, 24, 1, 'optionc'),
(174, 21, 26, 2, 'optionb'),
(174, 21, 27, -0.66, 'optionb'),
(174, 21, 28, 2, 'optiond'),
(174, 21, 29, 2, 'optiond'),
(174, 21, 30, -0.66, 'optiond'),
(174, 21, 31, -0.66, 'optionb'),
(174, 21, 33, 2, 'optiond'),
(174, 21, 34, 2, 'optionc'),
(174, 21, 35, 2, 'optiond'),
(174, 21, 36, 2, 'optionc'),
(174, 21, 37, -0.66, 'optionb'),
(174, 21, 39, 2, 'optionb'),
(174, 21, 41, 2, 'optione'),
(174, 21, 43, -0.66, 'optiona'),
(174, 21, 44, -0.66, 'optiond'),
(174, 21, 45, -0.66, 'optiona'),
(174, 21, 47, 2, 'optiond'),
(174, 21, 49, -0.66, 'optiond'),
(174, 21, 50, -0.66, 'optionc'),
(174, 21, 51, 2, 'optionb'),
(174, 21, 52, 2, 'optiond'),
(174, 21, 53, 2, 'optiona'),
(174, 21, 54, 2, 'optiona'),
(174, 21, 55, 2, 'optionb'),
(174, 21, 56, 1, 'optionc'),
(174, 21, 57, -0.33, 'optiona'),
(174, 21, 58, 1, 'optiona'),
(174, 21, 61, 2, 'optionb'),
(174, 21, 63, 2, 'optionc'),
(174, 21, 65, -0.66, 'optionc'),
(170, 16, 1, -0.33, 'optiona'),
(170, 16, 3, -0.33, 'optionb'),
(170, 16, 4, 1, 'optiond'),
(170, 16, 5, -0.33, 'optionc'),
(170, 16, 6, 1, 'optionb'),
(170, 16, 8, 1, 'optiona'),
(170, 16, 9, 1, 'optionc'),
(170, 16, 10, 1, 'optionc'),
(170, 16, 12, -0.33, 'optionb'),
(170, 16, 13, -0.33, 'optiona'),
(170, 16, 14, -0.33, 'optionb'),
(170, 16, 15, -0.33, 'optiond'),
(170, 16, 16, -0.33, 'optionc'),
(170, 16, 21, -0.33, 'optiona'),
(170, 16, 22, 1, 'optionb'),
(170, 16, 24, 1, 'optiona'),
(170, 16, 25, -0.33, 'optiona'),
(170, 16, 30, -0.66, 'optiond'),
(170, 16, 38, -0.66, 'optionc'),
(170, 16, 39, -0.66, 'optionc'),
(170, 16, 40, 2, 'optiona'),
(170, 16, 41, -0.66, 'optionb'),
(170, 16, 42, -0.66, 'optionb'),
(170, 16, 44, 2, 'optiond'),
(170, 16, 45, 2, 'optiona'),
(170, 16, 46, -0.66, 'optiond'),
(170, 16, 47, 2, 'optionc'),
(170, 16, 48, 2, 'optiona'),
(170, 16, 51, -0.66, 'optionb'),
(170, 16, 52, -0.66, 'optionc'),
(170, 16, 58, -0.33, 'optiond'),
(170, 16, 60, -0.33, 'optiona'),
(170, 16, 61, 2, 'optionb'),
(69, 21, 1, -0.33, 'optiona'),
(69, 21, 2, -0.33, 'optiona'),
(69, 21, 3, 1, 'optionb'),
(69, 21, 5, 1, 'optionc'),
(69, 21, 6, 1, 'optionb'),
(69, 21, 7, 1, 'optionc'),
(69, 21, 8, 1, 'optiond'),
(69, 21, 9, -0.33, 'optiona'),
(69, 21, 10, 1, 'optionc'),
(69, 21, 11, 1, 'optiona'),
(69, 21, 12, -0.33, 'optiond'),
(69, 21, 13, 1, 'optiona'),
(69, 21, 14, 1, 'optionc'),
(69, 21, 15, 1, 'optiona'),
(69, 21, 16, 1, 'optionc'),
(69, 21, 17, 1, 'optionb'),
(69, 21, 18, 1, 'optionc'),
(69, 21, 19, 1, 'optionc'),
(69, 21, 20, 1, 'optiona'),
(69, 21, 21, 1, 'optionb'),
(69, 21, 22, 1, 'optionb'),
(69, 21, 24, 1, 'optionc'),
(69, 21, 25, -0.33, 'optionc'),
(69, 21, 26, 2, 'optionb'),
(69, 21, 27, -0.66, 'optionb'),
(69, 21, 29, 2, 'optiond'),
(69, 21, 30, -0.66, 'optiond'),
(69, 21, 32, 2, 'optiond'),
(69, 21, 33, 2, 'optiond'),
(69, 21, 34, 2, 'optionc'),
(69, 21, 35, 2, 'optiond'),
(69, 21, 36, 2, 'optionc'),
(69, 21, 38, -0.66, 'optionc'),
(69, 21, 39, 2, 'optionb'),
(69, 21, 40, 2, 'optiond'),
(69, 21, 42, 2, 'optiona'),
(69, 21, 43, 2, 'optionb'),
(69, 21, 44, -0.66, 'optionb'),
(69, 21, 45, 2, 'optiond'),
(69, 21, 47, 2, 'optiond'),
(69, 21, 48, -0.66, 'optionb'),
(69, 21, 49, -0.66, 'optionb'),
(69, 21, 50, -0.66, 'optiond'),
(69, 21, 51, 2, 'optionb'),
(69, 21, 52, 2, 'optiond'),
(69, 21, 54, 2, 'optiona'),
(69, 21, 55, 2, 'optionb'),
(69, 21, 56, 1, 'optionc'),
(69, 21, 57, -0.33, 'optiona'),
(69, 21, 59, -0.33, 'optionb'),
(69, 21, 61, -0.66, 'optionc'),
(69, 21, 64, -0.66, 'optionc'),
(105, 20, 59, -0.33, 'optiona'),
(105, 20, 61, -0.66, 'optionb'),
(105, 20, 65, 2, 'optionb'),
(64, 21, 1, 1, 'optionb'),
(64, 21, 2, 1, 'optionb'),
(64, 21, 3, 1, 'optionb'),
(64, 21, 4, 1, 'optiond'),
(64, 21, 5, 1, 'optionc'),
(64, 21, 6, -0.33, 'optionc'),
(64, 21, 7, 1, 'optionc'),
(64, 21, 9, 1, 'optionc'),
(64, 21, 10, 1, 'optionc'),
(64, 21, 11, 1, 'optiona'),
(64, 21, 13, 1, 'optiona'),
(64, 21, 14, 1, 'optionc'),
(64, 21, 15, 1, 'optiona'),
(64, 21, 16, 1, 'optionc'),
(64, 21, 17, 1, 'optionb'),
(64, 21, 18, 1, 'optionc'),
(64, 21, 19, 1, 'optionc'),
(64, 21, 20, 1, 'optiona'),
(64, 21, 21, 1, 'optionb'),
(64, 21, 22, 1, 'optionb'),
(64, 21, 23, 1, 'optionc'),
(64, 21, 24, 1, 'optionc'),
(64, 21, 25, 1, 'optionb'),
(64, 21, 26, 2, 'optionb'),
(64, 21, 27, 2, 'optiond'),
(64, 21, 30, 2, 'optionb'),
(64, 21, 31, 2, 'optiona'),
(64, 21, 32, 2, 'optiond'),
(64, 21, 34, 2, 'optionc'),
(64, 21, 35, 2, 'optiond'),
(64, 21, 36, 2, 'optionc'),
(64, 21, 38, 2, 'optionb'),
(64, 21, 39, 2, 'optionb'),
(64, 21, 40, -0.66, 'optionb'),
(64, 21, 47, 2, 'optiond'),
(64, 21, 51, 2, 'optionb'),
(64, 21, 52, 2, 'optiond'),
(64, 21, 53, 2, 'optiona'),
(64, 21, 54, 2, 'optiona'),
(64, 21, 56, 1, 'optionc'),
(64, 21, 57, 1, 'optionc'),
(64, 21, 58, 1, 'optiona'),
(64, 21, 59, 1, 'optionc'),
(64, 21, 61, 2, 'optionb'),
(64, 21, 62, 2, 'optiona'),
(64, 21, 63, -0.66, 'optiona'),
(64, 21, 64, 2, 'optiond'),
(122, 22, 6, 1, 'optionb'),
(122, 22, 7, 1, 'optionc'),
(122, 22, 8, 1, 'optiona'),
(122, 22, 9, 1, '1.2');

-- --------------------------------------------------------

--
-- Table structure for table `studenttest`
--

CREATE TABLE IF NOT EXISTS `studenttest` (
  `stdid` bigint(20) NOT NULL DEFAULT '0',
  `testid` bigint(20) NOT NULL DEFAULT '0',
  `starttime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `correctlyanswered` int(11) DEFAULT NULL,
  `score` float DEFAULT NULL,
  `status` enum('over','inprogress') DEFAULT NULL,
  `normalized_percentage` double DEFAULT NULL,
  PRIMARY KEY (`stdid`,`testid`),
  KEY `testid` (`testid`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `studenttest`
--

INSERT INTO `studenttest` (`stdid`, `testid`, `starttime`, `correctlyanswered`, `score`, `status`, `normalized_percentage`) VALUES
(20, 7, '2014-01-26 05:11:16', 43, 56.75, 'over', 55.13),
(20, 8, '2014-01-15 05:20:45', 32, 29.36, 'over', 38.35),
(20, 9, '2014-01-17 05:20:34', 15, 25.38, 'over', 1.9),
(20, 10, '2014-01-22 05:47:50', 20, 38.68, 'over', 95.91),
(20, 11, '2014-01-22 07:24:44', 41, 73.42, 'over', 28.9),
(20, 12, '2014-01-23 05:27:18', 37, 66.08, 'over', 41.47),
(20, 13, '2014-01-24 05:36:52', 22, 40.04, 'over', 55.16),
(20, 15, '2014-02-04 09:27:38', 44, 55.74, 'over', 18.09),
(20, 16, '2014-02-05 09:40:48', 29, 41.07, 'over', 40.2),
(20, 17, '2014-02-06 09:01:45', 32, 43.06, 'over', 11.4),
(20, 18, '2014-02-07 09:01:51', 50, 71.05, 'over', 90.58),
(22, 7, '2014-01-26 05:11:17', 32, 41.41, 'over', 13.94),
(22, 8, '2014-01-15 05:18:14', 31, 26.38, 'over', 21.67),
(22, 9, '2014-01-17 05:17:09', 12, 19.38, 'over', 16.49),
(22, 10, '2014-01-22 06:11:01', 13, 22.7, 'over', 5.11),
(22, 11, '2014-01-22 07:22:57', 41, 75.4, 'over', 33.36),
(22, 12, '2014-01-23 05:25:07', 37, 69.38, 'over', 50.05),
(22, 13, '2014-01-24 05:37:14', 23, 41.38, 'over', 61.11),
(22, 15, '2014-02-04 09:26:24', 46, 63.37, 'over', 39.01),
(22, 16, '2014-02-05 09:40:42', 31, 40.06, 'over', 36.68),
(22, 17, '2014-02-06 09:01:47', 34, 41.41, 'over', 6.26),
(22, 18, '2014-02-07 05:57:47', 38, 47.75, 'over', 11.39),
(128, 4, '2013-11-24 09:15:47', 35, 62.72, 'over', 40.46),
(28, 4, '2013-11-24 09:16:20', 22, 32.41, 'over', 37.9),
(28, 7, '2014-01-26 05:26:25', 36, 48.38, 'over', 32.65),
(28, 8, '2014-01-15 05:18:44', 29, 25.7, 'over', 17.86),
(28, 9, '2014-01-17 05:29:29', 16, 31.34, 'over', 20.17),
(28, 10, '2014-01-22 05:54:37', 13, 22.7, 'over', 5.11),
(28, 11, '2014-01-22 07:25:23', 36, 64.74, 'over', 9.35),
(28, 12, '2014-01-23 05:27:08', 29, 48.1, 'over', 5.28),
(28, 13, '2014-01-24 05:41:52', 18, 30.72, 'over', 13.73),
(28, 15, '2014-02-04 09:25:52', 42, 57.06, 'over', 21.71),
(28, 16, '2014-02-05 09:40:26', 21, 24.05, 'over', 19.14),
(28, 17, '2014-02-06 09:13:26', 27, 35.41, 'over', 12.43),
(28, 18, '2014-02-07 05:57:26', 27, 31.07, 'over', 45.31),
(33, 4, '2013-11-24 09:14:16', 29, 57.71, 'over', 27.51),
(33, 7, '2014-02-04 09:04:51', 3, 1.35, 'over', 93.64),
(33, 15, '2014-02-04 09:26:28', 30, 33.75, 'over', 42.19),
(33, 17, '2014-02-06 08:29:30', 19, 19.75, 'over', 61.21),
(33, 18, '2014-02-07 08:56:54', 18, 15.1, 'over', 99.59),
(36, 4, '2013-11-24 09:26:40', 19, 21.35, 'over', 66.49),
(36, 7, '2014-01-26 05:01:22', 44, 57.74, 'over', 57.79),
(36, 8, '2014-01-15 05:16:08', 38, 36.02, 'over', 75.64),
(36, 9, '2014-01-17 05:19:53', 23, 42.7, 'over', 55),
(36, 10, '2014-01-22 05:44:25', 18, 32.7, 'over', 61.93),
(36, 11, '2014-01-22 07:23:57', 37, 70.04, 'over', 21.28),
(36, 12, '2014-01-23 05:22:49', 40, 72.74, 'over', 58.79),
(36, 13, '2014-01-24 05:36:16', 25, 42.74, 'over', 67.16),
(36, 15, '2014-02-04 09:26:44', 56, 83.36, 'over', 93.8),
(36, 16, '2014-02-05 09:42:39', 33, 42.73, 'over', 45.99),
(36, 17, '2014-02-06 08:31:54', 45, 61.72, 'over', 69.53),
(36, 18, '2014-02-07 08:59:02', 51, 72.38, 'over', 95.11),
(38, 4, '2013-11-24 09:12:14', 27, 28.09, 'over', 49.07),
(39, 4, '2013-11-24 09:25:28', 19, 21.02, 'over', 67.35),
(39, 7, '2014-01-26 05:01:38', 40, 50.09, 'over', 37.24),
(39, 8, '2014-01-15 05:14:41', 35, 32.36, 'over', 55.15),
(39, 9, '2014-01-17 05:19:22', 13, 22.04, 'over', 8.34),
(39, 10, '2014-01-22 05:44:22', 15, 24.72, 'over', 16.59),
(39, 11, '2014-01-22 07:23:39', 39, 68.1, 'over', 16.91),
(39, 12, '2014-01-23 05:22:42', 37, 66.08, 'over', 41.47),
(39, 13, '2014-01-24 05:36:05', 23, 42.04, 'over', 64.04),
(39, 15, '2014-02-04 09:26:41', 42, 56.74, 'over', 20.83),
(39, 16, '2014-02-05 09:42:44', 33, 48.69, 'over', 66.77),
(39, 17, '2014-02-06 08:45:56', 45, 67.03, 'over', 86.07),
(39, 18, '2014-02-07 08:57:59', 43, 50.76, 'over', 21.62),
(44, 7, '2014-01-26 05:07:34', 23, 25.1, 'over', 29.86),
(44, 8, '2014-01-15 05:21:42', 20, 17.03, 'over', 30.68),
(44, 10, '2014-01-22 05:57:45', 15, 27.36, 'over', 31.59),
(44, 11, '2014-01-22 07:27:10', 25, 32.18, 'over', 63.99),
(44, 12, '2014-01-23 05:26:43', 22, 34.1, 'over', 41.68),
(44, 13, '2014-01-24 05:35:35', 15, 22.74, 'over', 21.73),
(44, 15, '2014-02-04 09:25:46', 24, 22.46, 'over', 73.14),
(44, 16, '2014-02-05 09:39:53', 15, 12.77, 'over', 58.47),
(44, 17, '2014-02-06 08:36:44', 17, 15.43, 'over', 74.67),
(44, 18, '2014-02-07 05:59:19', 27, 31.75, 'over', 43),
(47, 4, '2013-11-24 09:35:06', 13, 26.69, 'over', 52.69),
(47, 7, '2014-01-26 05:01:29', 25, 30.42, 'over', 15.57),
(47, 8, '2014-01-15 05:14:24', 29, 24.38, 'over', 10.47),
(47, 9, '2014-01-17 05:21:12', 9, 10.08, 'over', 45),
(47, 10, '2014-01-22 05:44:22', 10, 13.4, 'over', 47.73),
(47, 11, '2014-01-22 07:23:25', 26, 39.46, 'over', 47.59),
(47, 13, '2014-01-24 05:36:19', 12, 12.78, 'over', 66),
(47, 15, '2014-02-04 09:25:58', 33, 40.73, 'over', 23.05),
(47, 16, '2014-02-05 09:39:48', 18, 18.42, 'over', 38.77),
(47, 17, '2014-02-06 08:33:44', 18, 14.46, 'over', 77.69),
(47, 18, '2014-02-07 08:57:46', 29, 36.07, 'over', 28.31),
(52, 4, '2013-11-24 09:22:06', 37, 69.35, 'over', 57.6),
(52, 7, '2014-02-04 09:05:41', 8, 7.34, 'over', 77.55),
(52, 9, '2014-01-17 06:52:35', 0, 0, 'over', 75.9),
(52, 13, '2014-02-04 10:19:40', 8, 14.02, 'over', 60.49),
(52, 15, '2014-02-04 09:26:36', 47, 63.39, 'over', 39.06),
(52, 16, '2014-02-05 09:37:32', 30, 39.71, 'over', 35.46),
(52, 17, '2014-02-06 08:52:21', 39, 55.72, 'over', 50.84),
(52, 18, '2014-02-07 05:57:29', 39, 53.07, 'over', 29.47),
(56, 4, '2013-11-24 09:26:30', 38, 67.36, 'over', 52.46),
(56, 7, '2014-01-26 05:18:17', 42, 54.74, 'over', 49.73),
(56, 8, '2014-01-15 05:25:38', 34, 32.35, 'over', 55.1),
(56, 9, '2014-01-17 05:21:45', 17, 29.38, 'over', 14.16),
(56, 10, '2014-01-22 06:22:01', 17, 31.36, 'over', 54.32),
(56, 11, '2014-01-22 07:38:34', 53, 102.7, 'over', 94.84),
(56, 12, '2014-01-23 05:28:41', 39, 74.7, 'over', 63.88),
(56, 13, '2014-01-24 05:40:00', 19, 31.4, 'over', 16.76),
(56, 15, '2014-02-04 09:31:15', 48, 65.4, 'over', 44.57),
(56, 16, '2014-02-05 09:41:33', 34, 45.71, 'over', 56.38),
(56, 17, '2014-02-06 08:39:51', 41, 55.73, 'over', 50.87),
(56, 18, '2014-02-07 06:01:04', 42, 58.38, 'over', 47.52),
(59, 8, '2014-01-15 05:22:10', 14, 7.07, 'over', 86.45),
(59, 9, '2014-01-17 05:19:55', 12, 6.84, 'over', 54.94),
(59, 10, '2014-01-22 05:45:48', 8, 10.06, 'over', 66.7),
(59, 11, '2014-01-22 07:22:56', 21, 29.46, 'over', 70.11),
(60, 7, '2014-01-26 05:01:10', 29, 37.07, 'over', 2.28),
(60, 8, '2014-01-15 05:21:51', 30, 27.36, 'over', 27.16),
(60, 9, '2014-01-17 05:19:06', 14, 26.02, 'over', 3.86),
(60, 10, '2014-01-22 05:41:36', 16, 28.7, 'over', 39.2),
(60, 11, '2014-01-22 07:25:33', 39, 69.42, 'over', 19.89),
(60, 13, '2014-01-24 07:19:17', 15, 23.4, 'over', 18.8),
(60, 15, '2014-02-04 09:26:00', 34, 40.41, 'over', 23.93),
(60, 16, '2014-02-05 09:40:25', 20, 19.11, 'over', 36.37),
(60, 17, '2014-02-06 08:35:28', 28, 34.41, 'over', 15.55),
(60, 18, '2014-02-07 08:57:02', 34, 42.73, 'over', 5.68),
(62, 7, '2014-01-26 05:00:42', 35, 48.41, 'over', 32.73),
(62, 8, '2014-01-15 05:21:48', 30, 27.69, 'over', 29),
(62, 10, '2014-01-22 05:41:32', 11, 18.04, 'over', 21.36),
(62, 11, '2014-01-22 07:22:41', 46, 87.38, 'over', 60.34),
(62, 12, '2014-01-23 05:26:30', 30, 51.42, 'over', 3.35),
(62, 13, '2014-01-24 05:35:09', 22, 39.38, 'over', 52.22),
(62, 15, '2014-02-04 09:26:36', 53, 77.7, 'over', 78.29),
(62, 16, '2014-02-05 09:39:25', 30, 42.71, 'over', 45.92),
(62, 17, '2014-02-06 08:34:44', 37, 53.73, 'over', 44.64),
(62, 18, '2014-02-07 08:57:39', 39, 51.73, 'over', 24.92),
(63, 7, '2014-01-26 05:00:35', 35, 46.41, 'over', 27.36),
(63, 8, '2014-01-15 05:12:26', 35, 33.02, 'over', 58.85),
(63, 9, '2014-01-17 05:18:18', 17, 26.74, 'over', 6.07),
(63, 10, '2014-01-22 05:46:08', 14, 24.7, 'over', 16.48),
(63, 11, '2014-01-22 07:22:56', 40, 71.42, 'over', 24.39),
(63, 12, '2014-01-23 05:23:44', 38, 71.38, 'over', 55.25),
(63, 13, '2014-01-24 05:35:00', 25, 44.72, 'over', 75.96),
(63, 15, '2014-02-04 09:25:33', 35, 47.73, 'over', 3.87),
(63, 16, '2014-02-05 09:37:25', 35, 49.05, 'over', 68.03),
(63, 17, '2014-02-06 08:31:05', 32, 40.43, 'over', 3.21),
(63, 18, '2014-02-07 08:57:32', 43, 56.05, 'over', 39.6),
(64, 7, '2014-01-26 05:03:06', 24, 23.46, 'over', 34.26),
(64, 8, '2014-01-15 05:21:25', 29, 26.03, 'over', 19.71),
(64, 9, '2014-01-17 05:22:06', 14, 18.76, 'over', 18.39),
(64, 10, '2014-01-22 06:19:33', 13, 22.7, 'over', 5.11),
(64, 11, '2014-01-22 07:22:53', 31, 52.76, 'over', 17.64),
(64, 12, '2014-01-23 05:24:46', 23, 34.78, 'over', 39.91),
(64, 13, '2014-01-24 05:36:29', 16, 26.72, 'over', 4.04),
(64, 15, '2014-02-04 09:27:25', 24, 26.07, 'over', 63.24),
(64, 16, '2014-02-05 09:40:48', 20, 20.42, 'over', 31.8),
(64, 17, '2014-02-06 08:34:10', 16, 13.1, 'over', 81.93),
(64, 18, '2014-02-07 05:57:49', 18, 15.11, 'over', 99.56),
(65, 7, '2014-01-26 05:06:53', 41, 60.39, 'over', 64.9),
(65, 8, '2014-01-15 05:18:35', 27, 23.04, 'over', 2.97),
(65, 9, '2014-01-17 05:15:54', 14, 23.38, 'over', 4.23),
(65, 10, '2014-01-22 05:48:02', 17, 29.38, 'over', 43.07),
(65, 11, '2014-01-22 07:23:30', 34, 59.42, 'over', 2.64),
(65, 12, '2014-01-23 05:25:35', 32, 54.76, 'over', 12.04),
(65, 13, '2014-01-24 05:35:03', 19, 32.72, 'over', 22.62),
(65, 15, '2014-02-04 09:25:11', 46, 64.05, 'over', 40.87),
(65, 16, '2014-02-05 09:39:06', 33, 45.72, 'over', 56.42),
(65, 17, '2014-02-06 08:45:25', 42, 60.71, 'over', 66.39),
(65, 18, '2014-02-07 05:57:59', 43, 56.41, 'over', 40.82),
(66, 7, '2014-01-26 05:00:31', 37, 48.74, 'over', 33.62),
(66, 8, '2014-01-15 05:22:35', 27, 23.7, 'over', 6.66),
(66, 9, '2014-01-17 05:20:29', 23, 42.7, 'over', 55),
(66, 10, '2014-01-22 06:02:51', 14, 26.68, 'over', 27.73),
(66, 11, '2014-01-22 07:23:13', 42, 76.74, 'over', 36.37),
(66, 12, '2014-01-23 05:24:08', 31, 57.38, 'over', 18.85),
(66, 13, '2014-01-24 05:38:42', 16, 28.04, 'over', 1.82),
(67, 7, '2014-01-26 05:01:16', 39, 54.4, 'over', 48.82),
(67, 8, '2014-01-15 05:20:28', 35, 33.02, 'over', 58.85),
(67, 9, '2014-01-17 05:17:57', 17, 26.74, 'over', 6.07),
(67, 10, '2014-01-22 05:44:44', 16, 28.04, 'over', 35.45),
(67, 11, '2014-01-22 07:25:33', 47, 86.08, 'over', 57.41),
(67, 12, '2014-01-23 05:28:30', 42, 78.72, 'over', 74.34),
(67, 13, '2014-01-24 05:34:41', 24, 41.4, 'over', 61.2),
(67, 15, '2014-02-04 09:26:38', 47, 63.08, 'over', 38.21),
(67, 16, '2014-02-05 09:38:14', 37, 47.74, 'over', 63.46),
(67, 17, '2014-02-06 08:34:43', 37, 50.42, 'over', 34.33),
(67, 18, '2014-02-07 08:58:07', 44, 62.05, 'over', 59.99),
(68, 7, '2014-01-26 05:09:40', 38, 49.4, 'over', 35.39),
(68, 8, '2014-01-15 05:21:05', 30, 27.69, 'over', 29),
(68, 10, '2014-01-22 05:57:11', 17, 30.04, 'over', 46.82),
(68, 11, '2014-01-22 07:23:08', 38, 68.74, 'over', 18.36),
(68, 12, '2014-01-23 05:23:07', 38, 68.08, 'over', 46.67),
(68, 13, '2014-01-24 05:34:20', 26, 46.72, 'over', 84.84),
(68, 15, '2014-02-04 09:25:14', 55, 80.7, 'over', 86.51),
(68, 16, '2014-02-05 09:42:14', 28, 37.05, 'over', 26.19),
(68, 17, '2014-02-06 09:00:07', 42, 60.38, 'over', 65.36),
(68, 18, '2014-02-07 05:57:46', 45, 62.04, 'over', 59.96),
(69, 7, '2014-01-26 05:03:06', 25, 25.78, 'over', 28.03),
(69, 8, '2014-01-15 05:20:25', 28, 25.36, 'over', 15.96),
(69, 9, '2014-01-17 05:29:39', 18, 30.06, 'over', 16.25),
(69, 10, '2014-01-22 07:17:23', 0, 0, 'over', 123.86),
(69, 11, '2014-01-22 07:22:29', 27, 39.48, 'over', 47.55),
(69, 12, '2014-01-23 05:25:14', 33, 59.4, 'over', 24.1),
(69, 13, '2014-01-24 05:38:21', 17, 29.38, 'over', 7.78),
(70, 7, '2014-01-26 05:17:01', 26, 33.72, 'over', 6.71),
(70, 8, '2014-01-15 05:21:19', 26, 23.36, 'over', 4.76),
(70, 9, '2014-01-17 05:17:48', 12, 16.08, 'over', 26.61),
(70, 10, '2014-01-22 06:08:43', 8, 9.4, 'over', 70.45),
(70, 11, '2014-01-22 07:23:29', 29, 46.78, 'over', 31.1),
(70, 12, '2014-01-23 05:25:25', 20, 33.4, 'over', 43.5),
(70, 13, '2014-01-24 05:36:40', 17, 27.4, 'over', 1.02),
(70, 15, '2014-02-04 09:25:17', 31, 40.72, 'over', 23.08),
(70, 16, '2014-02-05 09:39:58', 14, 16.72, 'over', 44.7),
(70, 17, '2014-02-06 09:08:12', 26, 33.73, 'over', 17.66),
(70, 18, '2014-02-07 08:54:11', 26, 33.05, 'over', 38.58),
(72, 7, '2014-01-26 05:36:40', 33, 46.38, 'over', 27.28),
(72, 8, '2014-01-15 05:20:38', 25, 21.7, 'over', 4.54),
(72, 9, '2014-01-17 05:20:48', 16, 31.34, 'over', 20.17),
(72, 10, '2014-01-22 05:47:30', 11, 14.74, 'over', 40.11),
(72, 11, '2014-01-22 07:22:08', 47, 88.72, 'over', 63.36),
(72, 12, '2014-01-23 05:21:25', 40, 76.04, 'over', 67.37),
(72, 13, '2014-01-24 05:33:54', 15, 25.38, 'over', 10),
(73, 7, '2014-01-26 05:01:06', 40, 50.1, 'over', 37.27),
(73, 8, '2014-01-15 05:17:46', 30, 27.69, 'over', 29),
(73, 9, '2014-01-17 05:23:39', 22, 38.72, 'over', 42.8),
(73, 10, '2014-01-22 05:48:37', 21, 40.68, 'over', 107.27),
(73, 11, '2014-01-22 07:26:55', 48, 91.38, 'over', 69.35),
(73, 12, '2014-01-23 05:26:12', 36, 64.74, 'over', 37.99),
(73, 13, '2014-01-24 05:38:48', 22, 42.02, 'over', 63.96),
(73, 15, '2014-02-04 09:29:48', 54, 77.04, 'over', 76.48),
(73, 17, '2014-02-06 08:51:15', 46, 64.7, 'over', 78.82),
(73, 18, '2014-02-07 09:01:11', 44, 59.72, 'over', 52.07),
(74, 7, '2014-01-26 05:03:41', 29, 33.75, 'over', 6.63),
(74, 8, '2014-01-15 05:21:12', 25, 21.04, 'over', 8.23),
(74, 9, '2014-01-17 05:19:08', 14, 24.7, 'over', 0.18),
(74, 10, '2014-01-22 05:46:33', 11, 17.38, 'over', 25.11),
(74, 11, '2014-01-22 07:23:41', 26, 44.74, 'over', 35.7),
(74, 12, '2014-01-23 05:23:34', 25, 38.12, 'over', 31.23),
(74, 13, '2014-01-24 05:34:28', 13, 20.72, 'over', 30.71),
(74, 15, '2014-02-04 09:25:13', 27, 31.73, 'over', 47.72),
(74, 16, '2014-02-05 09:59:00', 17, 19.07, 'over', 36.51),
(74, 17, '2014-02-06 08:34:13', 26, 31.42, 'over', 24.86),
(74, 18, '2014-02-07 05:58:02', 30, 41.39, 'over', 10.23),
(75, 7, '2014-01-26 05:03:22', 27, 37.72, 'over', 4.03),
(75, 8, '2014-01-15 05:14:43', 24, 19.71, 'over', 15.68),
(75, 9, '2014-01-17 05:18:30', 13, 18.74, 'over', 18.45),
(75, 10, '2014-01-22 05:59:21', 9, 12.06, 'over', 55.34),
(75, 11, '2014-01-22 07:24:16', 25, 36.14, 'over', 55.07),
(75, 12, '2014-01-23 05:23:48', 30, 52.08, 'over', 5.07),
(75, 13, '2014-01-24 05:35:55', 14, 19.42, 'over', 36.49),
(75, 15, '2014-02-04 09:25:10', 32, 38.4, 'over', 29.44),
(75, 16, '2014-02-05 09:39:46', 18, 17.08, 'over', 43.44),
(75, 17, '2014-02-06 08:35:58', 24, 30.74, 'over', 26.98),
(75, 18, '2014-02-07 09:00:30', 29, 34.42, 'over', 33.92),
(76, 7, '2014-01-26 05:01:44', 18, 17.74, 'over', 49.62),
(76, 8, '2014-01-15 05:27:04', 25, 22.03, 'over', 2.69),
(76, 9, '2014-01-17 05:21:10', 9, 14.04, 'over', 32.86),
(76, 10, '2014-01-22 05:45:50', 10, 16.04, 'over', 32.73),
(76, 11, '2014-01-22 07:24:12', 19, 26.78, 'over', 76.15),
(76, 12, '2014-01-23 05:25:24', 16, 22.1, 'over', 72.88),
(76, 13, '2014-01-24 05:35:14', 8, 11.38, 'over', 72.22),
(76, 15, '2014-02-04 09:26:58', 25, 31.05, 'over', 49.59),
(76, 16, '2014-02-05 09:38:50', 10, 8.72, 'over', 72.59),
(76, 17, '2014-02-06 08:34:37', 21, 25.72, 'over', 42.62),
(76, 18, '2014-02-07 05:57:49', 22, 25.06, 'over', 65.74),
(77, 8, '2014-01-15 05:12:57', 27, 24.36, 'over', 10.36),
(77, 16, '2014-02-05 09:39:20', 11, 9.72, 'over', 69.11),
(77, 17, '2014-02-06 08:42:21', 31, 43.06, 'over', 11.4),
(77, 18, '2014-02-07 08:33:10', 28, 32.06, 'over', 41.94),
(78, 4, '2013-11-24 09:10:39', 28, 48.71, 'over', 4.24),
(78, 7, '2014-01-26 05:06:30', 29, 34.43, 'over', 4.81),
(78, 8, '2014-01-15 05:24:08', 13, 7.72, 'over', 82.81),
(78, 10, '2014-01-22 05:45:35', 8, 10.06, 'over', 66.7),
(78, 11, '2014-01-22 07:23:57', 18, 17.52, 'over', 97),
(78, 12, '2014-01-23 05:26:07', 14, 14.14, 'over', 93.58),
(78, 13, '2014-02-04 09:07:42', 0, 0, 'over', 122.8),
(78, 15, '2014-02-04 09:25:49', 30, 34.09, 'over', 41.26),
(78, 16, '2014-02-06 07:39:17', 15, 12.09, 'over', 60.84),
(78, 17, '2014-02-06 08:33:38', 21, 18.12, 'over', 66.29),
(78, 18, '2014-02-07 05:56:43', 26, 23.78, 'over', 70.09),
(79, 7, '2014-01-26 05:01:54', 29, 40.38, 'over', 11.17),
(79, 8, '2014-01-15 05:23:29', 23, 18.05, 'over', 24.97),
(79, 9, '2014-01-17 05:20:58', 14, 19.42, 'over', 16.37),
(79, 10, '2014-01-22 05:49:15', 14, 25.36, 'over', 20.23),
(79, 11, '2014-01-22 07:23:39', 33, 62.04, 'over', 3.27),
(79, 12, '2014-01-23 05:25:06', 25, 44.06, 'over', 15.78),
(79, 13, '2014-01-24 05:35:53', 20, 36.7, 'over', 40.31),
(79, 15, '2014-02-04 09:26:46', 35, 46.05, 'over', 8.47),
(79, 16, '2014-02-06 07:38:59', 18, 17.74, 'over', 41.14),
(79, 17, '2014-02-06 08:35:01', 24, 29.75, 'over', 30.06),
(79, 18, '2014-02-07 05:57:57', 28, 31.07, 'over', 45.31),
(80, 7, '2014-02-04 09:06:19', 0, 0, 'inprogress', 97.26),
(80, 8, '2014-01-15 05:26:01', 31, 27.04, 'over', 25.36),
(80, 15, '2014-02-04 09:27:12', 37, 52.37, 'over', 8.85),
(80, 16, '2014-02-05 09:39:20', 24, 34.69, 'over', 17.96),
(80, 17, '2014-02-06 08:32:16', 22, 28.72, 'over', 33.27),
(80, 18, '2014-02-07 05:56:51', 33, 40.72, 'over', 12.51),
(81, 4, '2013-11-24 09:10:39', 36, 48.39, 'over', 3.41),
(81, 7, '2014-01-26 05:08:46', 47, 66.39, 'over', 81.02),
(81, 8, '2014-01-15 05:18:37', 38, 36.02, 'over', 75.64),
(81, 9, '2014-01-17 05:18:36', 42, 82.68, 'over', 177.56),
(81, 10, '2014-01-22 05:47:35', 13, 22.04, 'over', 1.36),
(81, 11, '2014-01-22 07:23:31', 40, 70.1, 'over', 21.42),
(81, 12, '2014-01-23 05:24:32', 45, 87.36, 'over', 96.8),
(81, 13, '2014-01-24 05:35:47', 20, 32.08, 'over', 19.78),
(81, 15, '2014-02-04 09:26:56', 62, 94.01, 'over', 123),
(81, 16, '2014-02-05 09:39:42', 49, 69.04, 'over', 137.73),
(81, 17, '2014-02-06 08:58:51', 59, 87.03, 'over', 148.38),
(81, 18, '2014-02-07 05:56:45', 55, 76.05, 'over', 107.58),
(82, 4, '2013-11-24 09:17:15', 24, 35.78, 'over', 29.19),
(82, 7, '2014-01-26 07:52:09', 32, 40.42, 'over', 11.28),
(82, 8, '2014-01-15 05:15:42', 34, 31.03, 'over', 47.7),
(82, 9, '2014-01-17 05:19:29', 19, 25.46, 'over', 2.15),
(82, 11, '2014-01-22 07:25:08', 37, 63.44, 'over', 6.42),
(82, 12, '2014-01-23 05:25:14', 25, 41.42, 'over', 22.65),
(82, 13, '2014-01-24 05:35:48', 17, 29.38, 'over', 7.78),
(82, 15, '2014-02-04 09:27:00', 43, 55.09, 'over', 16.31),
(82, 16, '2014-02-05 09:39:33', 24, 25.78, 'over', 13.11),
(82, 17, '2014-02-06 08:46:25', 26, 28.47, 'over', 34.05),
(82, 18, '2014-02-07 05:56:25', 36, 44.1, 'over', 1.02),
(83, 7, '2014-01-26 05:02:19', 36, 50.37, 'over', 38),
(83, 8, '2014-01-15 05:17:47', 26, 22.37, 'over', 0.78),
(83, 9, '2014-01-17 05:22:44', 20, 35.38, 'over', 32.56),
(83, 10, '2014-01-22 05:47:46', 14, 22.72, 'over', 5.23),
(83, 11, '2014-01-22 07:26:26', 36, 62.1, 'over', 3.4),
(83, 12, '2014-01-23 05:23:44', 35, 61.42, 'over', 29.36),
(83, 13, '2014-01-24 05:38:41', 16, 28.7, 'over', 4.76),
(83, 15, '2014-02-04 09:26:31', 48, 69.37, 'over', 55.46),
(83, 16, '2014-02-05 09:41:37', 20, 22.09, 'over', 25.98),
(83, 17, '2014-02-06 08:38:42', 37, 47.09, 'over', 23.96),
(83, 18, '2014-02-07 08:57:10', 44, 58.38, 'over', 47.52),
(84, 7, '2014-02-04 09:06:21', 0, 0, 'over', 97.26),
(84, 8, '2014-01-15 05:12:36', 24, 19.71, 'over', 15.68),
(84, 13, '2014-02-04 09:14:48', 0, 0, 'over', 122.8),
(84, 15, '2014-02-04 09:26:46', 36, 46.04, 'over', 8.5),
(84, 17, '2014-02-06 08:32:02', 18, 22.05, 'over', 54.05),
(84, 18, '2014-02-07 05:56:57', 21, 19.76, 'over', 83.75),
(85, 7, '2014-01-26 05:16:48', 24, 30.4, 'over', 15.63),
(85, 8, '2014-01-15 05:18:33', 26, 22.04, 'over', 2.63),
(85, 9, '2014-01-17 05:22:41', 17, 26.08, 'over', 4.05),
(85, 10, '2014-01-22 05:49:20', 14, 24.7, 'over', 16.48),
(85, 11, '2014-01-22 07:26:42', 22, 32.12, 'over', 64.12),
(85, 12, '2014-01-23 05:20:44', 16, 23.42, 'over', 69.45),
(85, 15, '2014-02-04 09:25:40', 22, 24.43, 'over', 67.74),
(85, 17, '2014-02-07 05:52:26', 0, 0, 'over', 122.74),
(85, 18, '2014-02-07 08:56:24', 24, 31.38, 'over', 44.26),
(86, 8, '2014-01-15 05:18:02', 23, 19.37, 'over', 17.58),
(86, 10, '2014-01-22 05:48:26', 15, 27.36, 'over', 31.59),
(86, 11, '2014-01-22 07:25:49', 36, 63.42, 'over', 6.37),
(86, 12, '2014-01-23 05:25:18', 27, 44.76, 'over', 13.96),
(86, 13, '2014-01-24 05:39:39', 8, 10.06, 'over', 78.09),
(86, 15, '2014-02-04 09:26:27', 26, 34.37, 'over', 40.49),
(86, 16, '2014-02-05 09:41:25', 22, 22.77, 'over', 23.61),
(86, 17, '2014-02-06 08:43:56', 23, 28.4, 'over', 34.27),
(87, 7, '2014-01-26 05:07:11', 36, 46.76, 'over', 28.3),
(87, 8, '2014-01-15 05:18:02', 29, 26.36, 'over', 21.56),
(87, 9, '2014-01-17 05:21:47', 17, 27.4, 'over', 8.09),
(87, 10, '2014-01-22 06:20:16', 17, 31.36, 'over', 54.32),
(87, 11, '2014-01-22 07:26:10', 30, 46.14, 'over', 32.55),
(87, 12, '2014-01-23 05:17:51', 35, 61.42, 'over', 29.36),
(87, 13, '2014-01-24 05:35:02', 14, 20.74, 'over', 30.62),
(87, 15, '2014-02-04 11:53:56', 46, 60.07, 'over', 29.96),
(87, 17, '2014-02-06 09:53:06', 39, 54.4, 'over', 46.73),
(87, 18, '2014-02-07 08:56:05', 35, 44.41, 'over', 0.03),
(88, 7, '2014-01-26 05:00:24', 32, 38.76, 'over', 6.82),
(88, 8, '2014-01-15 05:17:37', 28, 24.7, 'over', 12.26),
(88, 9, '2014-01-17 05:21:01', 19, 29.42, 'over', 14.29),
(88, 10, '2014-01-22 05:47:17', 16, 28.7, 'over', 39.2),
(88, 11, '2014-01-22 07:25:54', 32, 51.46, 'over', 20.56),
(88, 12, '2014-01-23 05:18:02', 31, 50.78, 'over', 1.69),
(88, 13, '2014-01-24 05:34:25', 13, 19.4, 'over', 36.58),
(88, 15, '2014-02-04 09:25:19', 46, 61.07, 'over', 32.7),
(88, 17, '2014-02-06 08:39:21', 32, 43.08, 'over', 11.46),
(88, 18, '2014-02-07 08:59:02', 39, 51.06, 'over', 22.64),
(90, 7, '2014-01-26 05:01:38', 40, 51.43, 'over', 40.84),
(90, 8, '2014-01-15 05:23:38', 35, 32.69, 'over', 57),
(90, 9, '2014-01-17 05:15:58', 10, 10.76, 'over', 42.92),
(90, 10, '2014-01-22 05:40:34', 15, 24.72, 'over', 16.59),
(90, 11, '2014-01-22 07:23:23', 52, 98.72, 'over', 85.88),
(90, 12, '2014-01-23 05:22:27', 49, 96.02, 'over', 119.32),
(90, 13, '2014-01-24 05:34:39', 24, 42.06, 'over', 64.13),
(90, 15, '2014-02-04 09:27:33', 49, 69.39, 'over', 55.51),
(90, 16, '2014-02-05 09:42:31', 25, 30.74, 'over', 4.18),
(90, 17, '2014-02-06 08:33:29', 40, 57.38, 'over', 56.01),
(90, 18, '2014-02-07 08:58:17', 38, 51.06, 'over', 22.64),
(92, 8, '2014-01-15 05:24:14', 15, 8.4, 'over', 79),
(93, 8, '2014-01-15 05:17:25', 29, 26.69, 'over', 23.4),
(93, 9, '2014-01-17 05:20:57', 16, 28.04, 'over', 10.06),
(93, 10, '2014-01-22 05:52:31', 14, 24.7, 'over', 16.48),
(93, 11, '2014-01-22 07:22:38', 42, 76.08, 'over', 34.89),
(93, 12, '2014-01-23 05:25:52', 30, 48.12, 'over', 5.23),
(93, 15, '2014-02-04 09:26:08', 33, 41.73, 'over', 20.31),
(93, 16, '2014-02-05 09:40:45', 21, 26.38, 'over', 11.02),
(93, 17, '2014-02-06 11:36:21', 29, 38.73, 'over', 2.09),
(93, 18, '2014-02-07 05:57:18', 32, 41.73, 'over', 9.08),
(94, 8, '2014-01-15 05:25:05', 33, 30.36, 'over', 43.95),
(94, 9, '2014-01-17 05:20:53', 25, 42.74, 'over', 55.12),
(94, 12, '2014-01-23 05:25:30', 24, 41.4, 'over', 22.7),
(94, 13, '2014-01-24 05:43:53', 17, 25.42, 'over', 9.82),
(94, 15, '2014-02-04 09:27:04', 53, 72.39, 'over', 63.73),
(94, 17, '2014-02-06 09:03:51', 39, 51.4, 'over', 37.38),
(94, 18, '2014-02-07 05:57:26', 43, 60.38, 'over', 54.32),
(95, 7, '2014-01-26 05:01:07', 46, 65.05, 'over', 77.42),
(95, 8, '2014-01-15 05:17:29', 33, 30.03, 'over', 42.11),
(95, 9, '2014-01-17 05:16:32', 20, 33.4, 'over', 26.49),
(95, 10, '2014-01-22 05:44:39', 14, 24.04, 'over', 12.73),
(95, 11, '2014-01-22 07:23:26', 44, 83.38, 'over', 51.33),
(95, 12, '2014-01-23 05:24:27', 37, 67.4, 'over', 44.9),
(95, 13, '2014-01-24 05:35:04', 22, 38.06, 'over', 46.36),
(95, 15, '2014-02-04 09:25:36', 44, 62.73, 'over', 37.25),
(95, 16, '2014-02-05 09:40:42', 37, 49.74, 'over', 70.43),
(95, 17, '2014-02-06 08:35:41', 41, 58.39, 'over', 59.16),
(95, 18, '2014-02-07 05:57:30', 39, 53.74, 'over', 31.75),
(96, 7, '2014-01-26 05:01:14', 37, 47.42, 'over', 30.08),
(96, 8, '2014-01-15 05:19:50', 33, 29.37, 'over', 38.41),
(96, 9, '2014-01-17 05:23:08', 19, 33.38, 'over', 26.43),
(96, 10, '2014-01-22 06:04:00', 0, 0, 'over', 123.86),
(96, 11, '2014-01-22 07:25:22', 44, 82.72, 'over', 49.84),
(96, 12, '2014-01-23 05:23:34', 27, 42.78, 'over', 19.11),
(96, 13, '2014-01-24 05:37:55', 18, 30.72, 'over', 13.73),
(96, 15, '2014-02-04 09:25:50', 41, 53.41, 'over', 11.71),
(96, 16, '2014-02-05 09:40:48', 32, 46.69, 'over', 59.8),
(96, 17, '2014-02-06 08:36:46', 33, 45.07, 'over', 17.66),
(96, 18, '2014-02-07 08:58:21', 39, 53.4, 'over', 30.59),
(97, 8, '2014-01-15 05:20:33', 25, 21.04, 'over', 8.23),
(97, 18, '2014-02-07 05:58:29', 30, 37.4, 'over', 23.79),
(98, 7, '2014-01-26 05:08:22', 41, 55.73, 'over', 52.39),
(98, 8, '2014-01-15 05:19:50', 27, 22.38, 'over', 0.73),
(98, 9, '2014-01-17 05:22:34', 24, 43.38, 'over', 57.08),
(98, 10, '2014-01-22 05:59:10', 12, 20.04, 'over', 10),
(98, 11, '2014-01-22 07:23:30', 37, 62.78, 'over', 4.93),
(98, 12, '2014-01-23 05:24:29', 31, 52.76, 'over', 6.84),
(98, 13, '2014-01-24 05:34:23', 20, 32.08, 'over', 19.78),
(98, 15, '2014-02-04 09:25:12', 41, 59.39, 'over', 28.1),
(98, 16, '2014-02-05 09:39:26', 26, 30.75, 'over', 4.22),
(98, 17, '2014-02-06 08:33:34', 40, 56.4, 'over', 52.96),
(98, 18, '2014-02-07 05:57:28', 42, 56.73, 'over', 41.91),
(99, 4, '2013-11-24 09:22:10', 28, 43.39, 'over', 9.51),
(99, 7, '2014-01-26 05:01:36', 22, 20.45, 'over', 42.35),
(99, 8, '2014-01-15 05:13:26', 29, 25.04, 'over', 14.17),
(99, 9, '2014-01-17 05:17:20', 0, 0, 'over', 75.9),
(99, 13, '2014-01-24 05:37:07', 8, 6.76, 'over', 92.76),
(99, 15, '2014-02-04 09:26:47', 29, 31.09, 'over', 49.48),
(99, 16, '2014-02-05 09:40:32', 11, 9.42, 'over', 70.15),
(99, 17, '2014-02-06 08:52:50', 23, 30.07, 'over', 29.07),
(99, 18, '2014-02-07 05:57:06', 27, 38.38, 'over', 20.46),
(100, 7, '2014-01-26 05:03:33', 36, 48.41, 'over', 32.73),
(100, 8, '2014-01-15 05:20:41', 33, 30.69, 'over', 45.8),
(100, 9, '2014-01-17 05:20:43', 10, 14.72, 'over', 30.78),
(100, 10, '2014-01-22 05:48:02', 14, 23.38, 'over', 8.98),
(100, 11, '2014-01-22 07:24:38', 51, 100.68, 'over', 90.29),
(100, 12, '2014-01-23 05:25:36', 36, 65.4, 'over', 39.7),
(100, 13, '2014-01-24 05:38:37', 18, 28.74, 'over', 4.93),
(100, 15, '2014-02-04 09:25:32', 40, 56.39, 'over', 19.87),
(100, 16, '2014-02-05 09:39:18', 27, 41.36, 'over', 41.21),
(100, 17, '2014-02-06 08:41:08', 32, 46.06, 'over', 20.75),
(100, 18, '2014-02-07 08:56:57', 37, 54.03, 'over', 32.73),
(101, 7, '2014-01-26 05:02:15', 38, 51.05, 'over', 39.82),
(101, 8, '2014-01-15 05:24:03', 26, 22.37, 'over', 0.78),
(101, 9, '2014-01-17 05:28:00', 0, 0, 'over', 75.9),
(101, 10, '2014-01-22 05:45:34', 10, 13.4, 'over', 47.73),
(101, 11, '2014-01-22 07:25:27', 43, 79.4, 'over', 42.36),
(101, 12, '2014-01-23 05:25:18', 26, 45.4, 'over', 12.3),
(101, 13, '2014-01-24 05:38:14', 20, 38.68, 'over', 49.11),
(101, 15, '2014-02-04 09:27:22', 45, 64.69, 'over', 42.63),
(101, 16, '2014-02-05 09:42:35', 24, 32.72, 'over', 11.09),
(101, 17, '2014-02-06 08:37:30', 35, 51.06, 'over', 36.32),
(101, 18, '2014-02-07 08:53:45', 40, 53.74, 'over', 31.75),
(102, 7, '2014-01-26 05:01:16', 35, 47.39, 'over', 29.99),
(102, 8, '2014-01-15 05:17:49', 22, 19.03, 'over', 19.48),
(102, 10, '2014-01-22 05:49:05', 14, 25.36, 'over', 20.23),
(102, 11, '2014-01-22 07:26:18', 26, 44.08, 'over', 37.18),
(102, 12, '2014-01-23 05:25:01', 28, 46.76, 'over', 8.76),
(102, 13, '2014-01-24 05:39:21', 16, 29.36, 'over', 7.69),
(102, 15, '2014-02-04 09:29:22', 30, 39.72, 'over', 25.82),
(102, 16, '2014-02-05 09:42:37', 11, 10.38, 'over', 66.81),
(102, 17, '2014-02-06 08:36:39', 25, 31.06, 'over', 25.98),
(102, 18, '2014-02-07 08:59:01', 28, 26.1, 'over', 62.2),
(104, 8, '2014-01-15 05:10:26', 0, 0, 'over', 126.04),
(104, 11, '2014-01-22 07:23:47', 27, 40.14, 'over', 46.06),
(105, 7, '2014-01-26 05:03:35', 32, 42.39, 'over', 16.57),
(105, 8, '2014-01-15 05:20:37', 19, 15.7, 'over', 38.13),
(105, 9, '2014-01-17 05:21:25', 9, 9.42, 'over', 47.03),
(105, 10, '2014-01-22 05:55:57', 0, 0, 'over', 123.86),
(105, 11, '2014-01-22 07:23:35', 24, 35.46, 'over', 56.6),
(105, 12, '2014-01-23 05:27:36', 15, 23.4, 'over', 69.5),
(105, 13, '2014-01-24 05:49:39', 12, 19.38, 'over', 36.67),
(107, 7, '2014-02-04 09:12:29', 0, 0, 'over', 97.26),
(107, 8, '2014-01-15 05:20:25', 33, 30.69, 'over', 45.8),
(107, 9, '2014-01-17 05:29:34', 0, 0, 'over', 75.9),
(107, 10, '2014-01-22 05:43:18', 14, 22.06, 'over', 1.48),
(107, 11, '2014-01-22 07:27:37', 42, 76.74, 'over', 36.37),
(107, 12, '2014-01-23 05:25:51', 38, 71.38, 'over', 55.25),
(107, 13, '2014-01-24 07:32:15', 22, 38.72, 'over', 49.29),
(107, 15, '2014-02-04 09:26:14', 40, 54.07, 'over', 13.51),
(107, 16, '2014-02-05 09:39:18', 25, 24.77, 'over', 16.63),
(107, 17, '2014-02-06 08:36:47', 30, 39.42, 'over', 0.06),
(107, 18, '2014-02-07 08:56:42', 36, 49.06, 'over', 15.84),
(108, 7, '2014-01-26 05:08:39', 22, 25.73, 'over', 28.17),
(108, 8, '2014-01-15 05:20:21', 0, 0, 'over', 126.04),
(108, 11, '2014-01-22 07:22:55', 29, 46.78, 'over', 31.1),
(108, 12, '2014-01-23 05:25:17', 23, 39.4, 'over', 27.9),
(108, 13, '2014-01-24 05:38:59', 12, 20.7, 'over', 30.8),
(108, 15, '2014-02-04 09:26:45', 30, 36.05, 'over', 35.88),
(109, 4, '2013-11-24 09:17:11', 40, 70.71, 'over', 61.12),
(109, 7, '2014-01-26 05:50:01', 36, 53.72, 'over', 46.99),
(109, 8, '2014-01-15 05:17:15', 32, 29.69, 'over', 40.2),
(109, 10, '2014-01-22 06:31:47', 15, 24.06, 'over', 12.84),
(109, 11, '2014-01-22 09:02:06', 41, 74.08, 'over', 30.38),
(109, 13, '2014-01-24 07:20:05', 25, 46.7, 'over', 84.76),
(109, 17, '2014-02-06 08:49:16', 20, 24.09, 'over', 47.69),
(109, 18, '2014-02-07 05:56:51', 37, 48.4, 'over', 13.6),
(111, 7, '2014-01-26 05:00:35', 32, 43.06, 'over', 18.37),
(111, 8, '2014-01-15 05:21:39', 25, 22.69, 'over', 1.01),
(111, 10, '2014-01-22 05:43:02', 10, 14.06, 'over', 43.98),
(111, 11, '2014-01-22 07:22:31', 32, 56.08, 'over', 10.16),
(111, 12, '2014-01-23 05:38:32', 21, 36.72, 'over', 34.87),
(111, 13, '2014-01-24 05:35:04', 13, 21.38, 'over', 27.78),
(111, 15, '2014-02-04 09:25:51', 31, 37.74, 'over', 31.25),
(111, 16, '2014-02-05 09:41:08', 15, 15.06, 'over', 50.49),
(111, 17, '2014-02-06 08:37:42', 18, 19.06, 'over', 63.36),
(112, 8, '2014-01-15 05:16:44', 28, 25.36, 'over', 15.96),
(112, 9, '2014-01-17 05:27:01', 9, 11.4, 'over', 40.96),
(112, 13, '2014-01-24 05:34:58', 16, 24.74, 'over', 12.84),
(112, 15, '2014-02-04 09:28:58', 22, 30.69, 'over', 50.58),
(112, 16, '2014-02-05 09:41:08', 17, 22.03, 'over', 26.19),
(112, 17, '2014-02-06 08:34:07', 22, 31.05, 'over', 26.01),
(112, 18, '2014-02-07 05:57:33', 25, 29.72, 'over', 49.9),
(113, 7, '2014-02-05 09:40:41', 0, NULL, 'inprogress', 97.26),
(113, 8, '2014-01-15 05:17:27', 24, 19.71, 'over', 15.68),
(113, 9, '2014-01-17 05:25:36', 18, 30.72, 'over', 18.27),
(113, 13, '2014-01-24 05:35:03', 14, 19.42, 'over', 36.49),
(113, 15, '2014-02-04 09:26:18', 20, 22.72, 'over', 72.42),
(113, 16, '2014-02-05 09:42:24', 13, 18.72, 'over', 37.73),
(113, 17, '2014-02-06 08:33:52', 16, 15.77, 'over', 73.61),
(114, 7, '2014-02-04 09:08:48', 0, 0, 'inprogress', 97.26),
(114, 8, '2014-01-15 05:26:47', 30, 26.37, 'over', 21.61),
(114, 9, '2014-01-17 05:26:16', 21, 38.04, 'over', 40.71),
(114, 15, '2014-02-04 09:26:28', 47, 64.7, 'over', 42.65),
(114, 16, '2014-02-05 09:39:33', 21, 24.4, 'over', 17.92),
(114, 17, '2014-02-06 08:49:12', 22, 25.74, 'over', 42.55),
(114, 18, '2014-02-07 05:59:13', 31, 39.39, 'over', 17.03),
(115, 7, '2014-02-05 08:58:43', 0, 0, 'over', 97.26),
(115, 8, '2014-01-15 05:20:55', 0, 0, 'over', 126.04),
(115, 9, '2014-01-17 05:25:08', 18, 30.06, 'over', 16.25),
(115, 16, '2014-02-05 09:38:27', 27, 37.06, 'over', 26.22),
(115, 17, '2014-02-06 08:43:00', 33, 42.74, 'over', 10.4),
(115, 18, '2014-02-07 07:11:05', 36, 47.39, 'over', 10.16),
(116, 7, '2014-01-26 08:02:21', 49, 70.06, 'over', 90.87),
(116, 8, '2014-01-15 05:21:49', 37, 35.35, 'over', 71.89),
(116, 9, '2014-01-17 05:17:12', 0, 0, 'over', 75.9),
(116, 10, '2014-01-22 05:54:51', 15, 27.36, 'over', 31.59),
(116, 11, '2014-01-22 07:29:34', 36, 62.1, 'over', 3.4),
(116, 12, '2014-01-23 05:26:24', 42, 78.72, 'over', 74.34),
(116, 13, '2014-01-24 05:34:21', 19, 29.42, 'over', 7.96),
(116, 15, '2014-02-04 09:25:02', 58, 84.69, 'over', 97.45),
(116, 16, '2014-02-05 09:39:23', 41, 60.7, 'over', 108.65),
(116, 17, '2014-02-06 08:44:49', 45, 64.38, 'over', 77.82),
(116, 18, '2014-02-07 05:58:02', 51, 71.38, 'over', 91.71),
(117, 7, '2014-02-04 09:07:47', 0, 0, 'over', 97.26),
(117, 8, '2014-01-15 05:18:28', 27, 23.7, 'over', 6.66),
(117, 9, '2014-01-17 05:20:39', 38, 74.02, 'over', 151.01),
(117, 13, '2014-02-04 09:04:46', 0, -0.66, 'over', 125.73),
(117, 15, '2014-02-04 09:25:02', 37, 45.73, 'over', 9.35),
(117, 16, '2014-02-05 09:38:59', 21, 21.43, 'over', 28.28),
(117, 17, '2014-02-06 09:06:55', 35, 43.41, 'over', 12.49),
(117, 18, '2014-02-07 05:57:02', 41, 56.07, 'over', 39.67),
(119, 7, '2014-01-26 05:00:56', 42, 57.05, 'over', 55.93),
(119, 8, '2014-01-15 05:21:37', 30, 27.69, 'over', 29),
(119, 9, '2014-01-17 05:20:01', 24, 41.4, 'over', 51.01),
(119, 10, '2014-01-22 05:49:00', 9, 13.38, 'over', 47.84),
(119, 11, '2014-01-22 07:22:15', 36, 64.08, 'over', 7.86),
(119, 12, '2014-01-23 05:21:39', 30, 51.42, 'over', 3.35),
(119, 13, '2014-01-24 05:35:23', 19, 32.72, 'over', 22.62),
(119, 15, '2014-02-04 09:25:45', 36, 46.06, 'over', 8.44),
(119, 16, '2014-02-05 09:39:41', 39, 56.71, 'over', 94.74),
(120, 8, '2014-01-15 05:21:42', 30, 28.02, 'over', 30.85),
(121, 7, '2014-01-26 05:13:25', 37, 49.38, 'over', 35.34),
(121, 8, '2014-01-15 05:25:40', 26, 23.03, 'over', 2.91),
(121, 9, '2014-01-17 05:25:23', 18, 32.04, 'over', 22.32),
(121, 10, '2014-01-22 05:49:26', 14, 26.02, 'over', 23.98),
(121, 11, '2014-01-22 07:24:47', 44, 83.38, 'over', 51.33),
(121, 12, '2014-01-23 05:24:58', 35, 66.04, 'over', 41.37),
(121, 13, '2014-01-24 05:38:45', 23, 42.7, 'over', 66.98),
(121, 15, '2014-02-04 09:25:39', 40, 57.01, 'over', 21.57),
(121, 16, '2014-02-05 09:44:32', 27, 35.69, 'over', 21.44),
(121, 17, '2014-02-06 08:41:44', 35, 49.37, 'over', 31.06),
(121, 18, '2014-02-07 05:56:48', 35, 48.04, 'over', 12.37),
(122, 7, '2014-01-26 05:17:22', 32, 44.05, 'over', 21.03),
(122, 8, '2014-01-15 05:22:40', 22, 17.71, 'over', 26.88),
(122, 9, '2014-01-17 05:17:24', 7, 8.72, 'over', 49.17),
(122, 10, '2014-01-22 05:48:49', 15, 28.02, 'over', 35.34),
(122, 11, '2014-01-22 07:23:56', 42, 76.08, 'over', 34.89),
(122, 12, '2014-01-23 05:23:36', 37, 66.74, 'over', 43.19),
(122, 13, '2014-01-24 05:37:10', 22, 40.04, 'over', 55.16),
(122, 15, '2014-02-04 09:28:14', 35, 46.73, 'over', 6.61),
(122, 16, '2014-02-05 09:45:55', 27, 34.72, 'over', 18.06),
(122, 17, '2014-02-06 08:37:46', 35, 45.74, 'over', 19.75),
(122, 18, '2014-02-07 05:59:30', 35, 44.41, 'over', 0.03),
(111, 18, '2014-02-14 11:20:20', 18, 19.09, 'over', 86.03),
(123, 8, '2014-01-15 05:25:08', 30, 28.02, 'over', 30.85),
(123, 9, '2014-01-17 05:20:23', 17, 30.04, 'over', 16.19),
(123, 10, '2014-01-22 06:11:10', 16, 30.02, 'over', 46.7),
(123, 11, '2014-01-22 07:27:56', 43, 82.7, 'over', 49.8),
(123, 12, '2014-01-23 05:25:32', 27, 48.06, 'over', 5.38),
(123, 13, '2014-01-24 05:39:14', 9, 13.38, 'over', 63.33),
(123, 15, '2014-02-04 09:27:23', 45, 64.38, 'over', 41.78),
(123, 16, '2014-02-05 09:42:02', 27, 32.73, 'over', 11.12),
(123, 17, '2014-02-06 08:41:36', 34, 44.75, 'over', 16.67),
(123, 18, '2014-02-07 05:56:42', 37, 51.06, 'over', 22.64),
(124, 7, '2014-01-26 05:07:04', 24, 24.75, 'over', 30.8),
(124, 8, '2014-01-15 05:25:22', 22, 18.37, 'over', 23.18),
(124, 10, '2014-01-22 05:51:17', 14, 26.02, 'over', 23.98),
(124, 11, '2014-01-22 07:22:44', 36, 64.08, 'over', 7.86),
(124, 12, '2014-01-23 05:25:04', 16, 18.8, 'over', 81.46),
(124, 13, '2014-01-24 05:37:24', 22, 40.7, 'over', 58.09),
(124, 15, '2014-02-04 09:25:20', 29, 38.75, 'over', 28.48),
(124, 16, '2014-02-05 09:44:54', 20, 23.74, 'over', 20.22),
(124, 17, '2014-02-06 08:38:40', 22, 27.08, 'over', 38.38),
(124, 18, '2014-02-07 08:56:36', 28, 36.38, 'over', 27.26),
(125, 7, '2014-01-26 05:08:24', 29, 37.41, 'over', 3.2),
(125, 8, '2014-01-15 05:23:15', 27, 24.36, 'over', 10.36),
(125, 11, '2014-01-22 07:23:28', 45, 86.04, 'over', 57.32),
(125, 12, '2014-01-23 05:24:28', 20, 24.16, 'over', 67.52),
(125, 16, '2014-02-05 09:41:21', 19, 18.09, 'over', 39.92),
(127, 7, '2014-01-26 05:02:13', 38, 53.06, 'over', 45.22),
(127, 8, '2014-01-15 05:41:50', 39, 37.68, 'over', 84.94),
(127, 9, '2014-01-17 05:19:25', 28, 51.38, 'over', 81.61),
(127, 10, '2014-01-22 06:01:04', 16, 29.36, 'over', 42.95),
(127, 11, '2014-01-22 07:26:22', 32, 50.8, 'over', 22.05),
(127, 12, '2014-01-23 05:25:30', 32, 58.06, 'over', 20.62),
(127, 13, '2014-01-24 05:34:28', 12, 17.4, 'over', 45.47),
(127, 15, '2014-02-04 09:25:07', 54, 74.05, 'over', 68.28),
(127, 16, '2014-02-05 09:40:46', 35, 51.04, 'over', 74.97),
(127, 17, '2014-02-06 08:45:49', 48, 67.72, 'over', 88.22),
(127, 18, '2014-02-07 05:59:44', 41, 56.71, 'over', 41.84),
(128, 7, '2014-01-26 05:00:39', 36, 46.73, 'over', 28.22),
(128, 8, '2014-01-15 05:42:20', 0, 0, 'over', 126.04),
(128, 9, '2014-01-17 05:16:12', 29, 48.1, 'over', 71.55),
(128, 10, '2014-01-22 05:56:56', 16, 30.02, 'over', 46.7),
(128, 11, '2014-01-22 07:26:30', 30, 47.46, 'over', 29.57),
(128, 12, '2014-01-23 05:20:50', 27, 43.44, 'over', 17.39),
(128, 13, '2014-01-24 05:34:35', 17, 29.38, 'over', 7.78),
(130, 7, '2014-01-26 05:00:54', 12, 5.46, 'over', 82.6),
(130, 8, '2014-01-15 06:01:14', 21, 16.38, 'over', 34.32),
(130, 9, '2014-01-17 06:55:24', 9, 14.7, 'over', 30.84),
(130, 10, '2014-01-22 05:42:35', 15, 26.04, 'over', 24.09),
(130, 11, '2014-01-22 07:23:29', 17, 19.48, 'over', 92.59),
(130, 12, '2014-01-23 05:20:57', 14, 22.06, 'over', 72.98),
(130, 13, '2014-01-24 05:36:31', 15, 25.38, 'over', 10),
(130, 15, '2014-02-04 09:26:26', 29, 32.44, 'over', 45.78),
(130, 16, '2014-02-05 09:40:27', 10, 10.05, 'over', 67.96),
(130, 17, '2014-02-06 08:35:49', 19, 21.08, 'over', 57.07),
(130, 18, '2014-02-07 08:56:25', 20, 22.41, 'over', 74.75),
(134, 7, '2014-01-26 07:44:22', 35, 44.07, 'over', 21.08),
(134, 8, '2014-01-15 07:11:10', 26, 23.36, 'over', 4.76),
(134, 11, '2014-01-22 09:24:07', 44, 82.72, 'over', 49.84),
(134, 13, '2014-01-24 05:35:58', 16, 26.72, 'over', 4.04),
(135, 7, '2014-01-26 05:01:01', 28, 39.05, 'over', 7.6),
(135, 8, '2014-01-15 07:15:47', 24, 20.7, 'over', 10.13),
(135, 9, '2014-01-17 05:22:59', 15, 24.06, 'over', 2.15),
(135, 10, '2014-01-22 05:47:10', 10, 15.38, 'over', 36.48),
(135, 11, '2014-01-22 09:10:32', 30, 50.1, 'over', 23.63),
(135, 12, '2014-01-23 05:22:33', 33, 58.08, 'over', 20.67),
(135, 15, '2014-02-04 09:24:54', 21, 23.39, 'over', 70.59),
(135, 16, '2014-02-05 09:39:01', 16, 18.72, 'over', 37.73),
(135, 18, '2014-02-07 05:56:10', 25, 31.73, 'over', 43.07),
(136, 8, '2014-01-15 07:18:06', 25, 21.7, 'over', 4.54),
(136, 9, '2014-01-17 05:30:12', 0, 0, 'over', 75.9),
(138, 7, '2014-01-26 08:02:05', 28, 36.74, 'over', 1.4),
(138, 8, '2014-01-15 07:33:31', 30, 27.36, 'over', 27.16),
(138, 9, '2014-01-17 05:44:03', 0, 0, 'over', 75.9),
(138, 10, '2014-01-22 06:49:10', 16, 28.7, 'over', 39.2),
(138, 11, '2014-01-22 09:49:22', 35, 59.44, 'over', 2.59),
(138, 13, '2014-01-24 07:19:52', 13, 22.04, 'over', 24.84),
(138, 15, '2014-02-04 09:25:18', 38, 50.39, 'over', 3.43),
(138, 16, '2014-02-05 09:41:04', 17, 21.7, 'over', 27.34),
(138, 17, '2014-02-06 11:36:30', 25, 30.08, 'over', 29.03),
(138, 18, '2014-02-07 09:02:39', 34, 41.4, 'over', 10.2),
(139, 8, '2014-01-17 06:59:03', 0, 0, 'over', 126.04),
(139, 9, '2014-01-17 05:25:48', 11, 15.4, 'over', 28.69),
(139, 17, '2014-02-06 08:49:41', 12, 10.74, 'over', 89.28),
(139, 18, '2014-02-07 05:57:38', 15, 13.06, 'over', 106.53),
(140, 8, '2014-01-17 06:56:23', 0, -0.33, 'over', 127.88),
(140, 9, '2014-01-17 05:24:15', 12, 15.42, 'over', 28.63),
(141, 8, '2014-01-15 05:29:18', 24, 20.37, 'over', 11.98),
(141, 9, '2014-01-17 05:20:45', 9, 8.76, 'over', 49.05),
(141, 10, '2014-01-22 05:47:12', 12, 18.72, 'over', 17.5),
(141, 11, '2014-01-22 07:23:57', 27, 41.46, 'over', 43.09),
(141, 12, '2014-01-23 05:24:04', 23, 32.14, 'over', 46.78),
(141, 13, '2014-01-24 05:35:32', 9, 11.4, 'over', 72.13),
(141, 15, '2014-02-04 09:27:52', 27, 29.09, 'over', 54.96),
(141, 17, '2014-02-06 08:36:46', 16, 14.76, 'over', 76.76),
(141, 18, '2014-02-07 05:57:40', 26, 31.39, 'over', 44.22),
(142, 7, '2014-01-26 05:08:54', 32, 42.74, 'over', 17.51),
(142, 8, '2014-01-17 06:56:35', 26, 25.67, 'over', 17.69),
(142, 9, '2014-01-17 05:24:12', 16, 27.38, 'over', 8.03),
(142, 10, '2014-01-22 05:48:39', 16, 29.36, 'over', 42.95),
(142, 11, '2014-01-22 07:24:26', 38, 70.06, 'over', 21.33),
(142, 12, '2014-01-23 05:27:41', 30, 54.06, 'over', 10.22),
(142, 13, '2014-01-24 05:38:43', 20, 34.06, 'over', 28.58),
(142, 15, '2014-02-04 09:27:28', 33, 40.75, 'over', 23),
(142, 16, '2014-02-05 09:40:37', 22, 21.76, 'over', 27.13),
(142, 17, '2014-02-06 09:07:42', 27, 30.77, 'over', 26.88),
(142, 18, '2014-02-07 05:59:17', 33, 41.42, 'over', 10.13),
(143, 4, '2013-11-24 09:21:43', 32, 57.69, 'over', 27.46),
(143, 7, '2014-02-04 09:13:53', 0, 0, 'inprogress', 97.26),
(143, 9, '2014-01-17 05:21:32', 12, 17.4, 'over', 22.56),
(143, 15, '2014-02-04 09:26:04', 29, 35.73, 'over', 36.76),
(143, 16, '2014-02-05 09:39:24', 19, 20.09, 'over', 32.95),
(143, 17, '2014-02-06 08:33:04', 30, 40.06, 'over', 2.06),
(143, 18, '2014-02-07 08:57:09', 34, 43.06, 'over', 4.55),
(144, 7, '2014-02-04 09:09:48', 0, 0, 'inprogress', 97.26),
(144, 15, '2014-02-04 09:26:33', 38, 49.73, 'over', 1.62),
(144, 16, '2014-02-05 12:16:17', 28, 38.06, 'over', 29.71),
(144, 17, '2014-02-06 08:43:03', 33, 42.75, 'over', 10.44),
(144, 18, '2014-02-07 05:57:28', 39, 49.42, 'over', 17.06),
(145, 7, '2014-01-26 05:01:25', 36, 39.12, 'over', 7.79),
(145, 9, '2014-01-17 05:32:23', 21, 35.4, 'over', 32.62),
(145, 10, '2014-01-22 05:48:45', 13, 19.4, 'over', 13.64),
(145, 11, '2014-01-22 07:25:14', 44, 84.04, 'over', 52.82),
(145, 12, '2014-01-23 05:26:01', 37, 66.74, 'over', 43.19),
(145, 13, '2014-01-24 05:38:23', 22, 35.42, 'over', 34.62),
(145, 15, '2014-02-04 09:26:00', 55, 78.04, 'over', 79.22),
(145, 16, '2014-02-05 09:40:30', 32, 47.04, 'over', 61.02),
(145, 17, '2014-02-06 08:41:19', 37, 53.72, 'over', 44.61),
(145, 18, '2014-02-07 05:57:19', 48, 66.37, 'over', 74.68),
(146, 9, '2014-01-17 05:27:13', 26, 45.4, 'over', 63.27),
(148, 9, '2014-01-17 05:51:28', 5, 8.68, 'over', 49.29),
(148, 12, '2014-01-23 05:40:17', 21, 30.78, 'over', 50.31),
(149, 7, '2014-01-26 05:21:29', 0, 0, 'over', 97.26),
(149, 9, '2014-01-22 05:44:42', 0, 0, 'over', 75.9),
(149, 10, '2014-01-22 05:46:27', 10, 11.42, 'over', 58.98),
(149, 13, '2014-01-24 05:38:08', 13, 18.74, 'over', 39.51),
(149, 18, '2014-02-07 05:59:06', 12, 12.03, 'over', 110.03),
(150, 7, '2014-01-26 05:49:49', 32, 37.41, 'over', 3.2),
(150, 10, '2014-01-22 05:50:54', 14, 22.72, 'over', 5.23),
(150, 11, '2014-01-22 07:42:05', 30, 50.1, 'over', 23.63),
(150, 12, '2014-01-23 07:12:07', 23, 38.08, 'over', 31.33),
(151, 7, '2014-01-26 05:49:48', 28, 30.43, 'over', 15.55),
(151, 10, '2014-01-22 05:50:55', 15, 26.04, 'over', 24.09),
(151, 11, '2014-01-22 07:24:36', 35, 61.42, 'over', 1.87),
(151, 12, '2014-01-23 05:22:51', 13, 16.1, 'over', 88.48),
(151, 13, '2014-01-24 05:39:31', 17, 26.08, 'over', 6.89),
(152, 7, '2014-01-26 05:21:24', 25, 31.08, 'over', 13.8),
(152, 10, '2014-01-22 06:27:21', 7, 8.06, 'over', 78.07),
(152, 11, '2014-01-22 07:23:07', 26, 43.42, 'over', 38.67),
(152, 13, '2014-01-24 05:37:50', 14, 21.4, 'over', 27.69),
(152, 15, '2014-02-04 09:25:25', 36, 46.4, 'over', 7.51),
(152, 17, '2014-02-06 08:45:18', 18, 17.75, 'over', 67.45),
(153, 7, '2014-01-26 05:11:47', 33, 38.44, 'over', 5.96),
(153, 8, '2014-01-15 06:51:28', 29, 25.04, 'over', 14.17),
(153, 9, '2014-01-17 05:24:07', 20, 32.08, 'over', 22.44),
(153, 10, '2014-01-22 06:07:20', 16, 29.36, 'over', 42.95),
(153, 11, '2014-01-22 07:22:38', 0, 0, 'over', 136.46),
(153, 12, '2014-01-23 05:22:45', 26, 42.76, 'over', 19.16),
(153, 13, '2014-01-24 05:41:49', 18, 30.06, 'over', 10.8),
(153, 15, '2014-02-04 09:28:57', 38, 44.77, 'over', 11.98),
(153, 16, '2014-02-05 09:40:26', 26, 30.41, 'over', 3.03),
(153, 17, '2014-02-06 08:42:46', 32, 37.1, 'over', 7.17),
(153, 18, '2014-02-07 05:56:04', 31, 36.08, 'over', 28.28),
(154, 7, '2014-01-26 05:06:56', 30, 40.74, 'over', 12.14),
(154, 10, '2014-01-22 06:12:26', 14, 21.4, 'over', 2.27),
(154, 12, '2014-01-23 05:24:29', 23, 32.14, 'over', 46.78),
(154, 13, '2014-01-24 05:35:36', 14, 24.04, 'over', 15.96),
(154, 15, '2014-02-04 09:26:13', 38, 50.73, 'over', 4.36),
(154, 16, '2014-02-05 09:40:55', 26, 33.41, 'over', 13.49),
(154, 17, '2014-02-06 08:48:24', 22, 28.42, 'over', 34.21),
(154, 18, '2014-02-07 05:56:30', 35, 50.03, 'over', 19.14),
(156, 7, '2014-01-26 06:57:05', 17, 18.72, 'over', 46.99),
(156, 11, '2014-01-22 09:45:06', 0, 0, 'over', 136.46),
(156, 12, '2014-01-24 05:37:15', 0, 0, 'over', 130.34),
(158, 15, '2014-02-04 09:25:33', 39, 49.41, 'over', 0.74),
(158, 17, '2014-02-06 08:40:32', 38, 55.06, 'over', 48.79),
(159, 15, '2014-02-04 09:26:37', 29, 32.42, 'over', 45.83),
(159, 16, '2014-02-05 09:39:17', 16, 16.08, 'over', 46.93),
(159, 17, '2014-02-06 08:41:33', 18, 20.41, 'over', 59.16),
(160, 8, '2014-01-15 05:21:31', 21, 17.04, 'over', 30.63),
(160, 15, '2014-02-04 09:32:57', 25, 29.71, 'over', 53.26),
(160, 17, '2014-02-11 00:30:24', 20, 21.75, 'over', 54.98),
(161, 15, '2014-02-04 09:25:38', 9, 4.72, 'over', 121.77),
(162, 7, '2014-01-26 05:04:11', 34, 43.72, 'over', 20.14),
(162, 8, '2014-01-15 05:18:23', 0, 0, 'over', 126.04),
(162, 9, '2014-01-17 05:20:24', 18, 31.38, 'over', 20.29),
(162, 11, '2014-01-22 07:40:28', 40, 74.72, 'over', 31.82),
(162, 12, '2014-01-23 05:24:28', 33, 60.72, 'over', 27.54),
(162, 13, '2014-01-24 05:49:18', 21, 36.72, 'over', 40.4),
(162, 15, '2014-02-04 09:26:30', 33, 45.37, 'over', 10.33),
(162, 16, '2014-02-05 09:41:43', 22, 28.06, 'over', 5.16),
(162, 17, '2014-02-06 08:41:22', 34, 49.36, 'over', 31.03),
(162, 18, '2014-02-07 05:57:20', 43, 60.69, 'over', 55.37),
(163, 15, '2014-02-05 16:26:33', 1, 1, 'over', 146.33),
(163, 16, '2014-02-06 07:54:44', 0, -0.33, 'over', 114.1),
(84, 21, '2014-02-22 11:51:09', 0, NULL, 'inprogress', NULL),
(29, 16, '2014-02-09 10:34:15', 0, 0, 'over', NULL),
(29, 8, '2014-02-09 10:44:29', 0, NULL, 'inprogress', NULL),
(166, 11, '2014-02-10 15:12:07', 2, 2.02, 'over', 131.91),
(164, 16, '2014-02-10 16:30:44', 0, 0, 'over', 103),
(145, 8, '2014-02-09 18:18:58', 14, 12.68, 'over', 55.04),
(160, 4, '2014-02-11 10:18:35', 24, 31.37, 'over', 40.59),
(160, 11, '2014-02-10 04:50:19', 30, 46.8, 'over', 31.06),
(108, 10, '2014-02-10 09:19:45', 19, 38, 'over', 92.05),
(160, 16, '2014-02-10 10:43:51', 14, 13.42, 'over', 56.21),
(164, 8, '2014-02-10 16:32:21', 0, NULL, 'inprogress', 126.04),
(164, 9, '2014-02-10 16:37:00', 0, 0, 'over', 75.9),
(164, 15, '2014-02-10 16:40:25', 0, 0, 'over', 134.7),
(164, 13, '2014-02-10 16:43:56', 0, 0, 'over', 122.8),
(164, 17, '2014-02-10 16:46:16', 0, 0, 'over', 122.74),
(164, 18, '2014-02-10 16:49:08', 0, 0, 'over', 150.92),
(164, 12, '2014-02-10 16:51:53', 0, 0, 'over', 130.34),
(152, 18, '2014-02-10 16:54:14', 0, NULL, 'inprogress', 150.92),
(152, 16, '2014-02-11 03:26:13', 0, NULL, 'inprogress', 103),
(62, 4, '2014-02-11 16:10:04', 0, NULL, 'inprogress', 121.69),
(177, 8, '2014-02-12 13:35:58', 23, 18.38, 'over', 23.12),
(72, 18, '2014-02-12 15:16:56', 41, 58.05, 'over', 46.4),
(72, 4, '2014-02-12 15:27:05', 28, 37.36, 'over', 25.1),
(164, 11, '2014-02-12 15:52:49', 0, NULL, 'inprogress', 136.46),
(108, 17, '2014-02-14 08:46:41', 31, 42.71, 'over', 10.31),
(160, 9, '2014-02-13 04:03:55', 16, 27.38, 'over', 8.03),
(68, 9, '2014-02-13 05:40:07', 23, 42.04, 'over', 52.97),
(108, 18, '2014-02-13 08:53:28', 34, 45.37, 'over', 3.3),
(101, 4, '2014-02-14 09:22:09', 0, NULL, 'inprogress', 121.69),
(123, 7, '2014-02-14 16:59:32', 42, 57.41, 'over', 56.9),
(66, 18, '2014-02-21 03:26:39', 37, 51.38, 'over', 23.73),
(44, 4, '2014-02-15 04:24:10', 23, 26.06, 'over', 54.32),
(69, 15, '2014-02-15 04:29:20', 31, 38.75, 'over', 28.48),
(178, 8, '2014-02-15 09:19:44', 0, NULL, 'inprogress', 126.04),
(160, 10, '2014-02-15 16:02:38', 16, 30.02, 'over', 46.7),
(164, 7, '2014-02-15 17:15:35', 15, 13.02, 'over', 62.3),
(93, 7, '2014-02-16 07:37:49', 31, 41.08, 'over', 13.05),
(80, 12, '2014-02-21 03:14:11', 0, NULL, 'inprogress', 130.34),
(184, 4, '2014-02-17 08:18:24', 0, 0, 'over', 121.69),
(184, 12, '2014-02-17 08:23:39', 0, 0, 'over', 130.34),
(184, 7, '2014-02-17 08:34:33', 0, 0, 'over', 97.26),
(184, 16, '2014-02-17 08:39:10', 0, 0, 'over', 103),
(77, 19, '2014-02-18 05:47:44', 22, 24.09, 'over', 0),
(74, 19, '2014-02-18 05:47:58', 18, 16.75, 'over', 0),
(33, 19, '2014-02-18 05:48:11', 29, 38.72, 'over', 0),
(114, 19, '2014-02-18 05:48:33', 21, 26.72, 'over', 0),
(63, 19, '2014-02-18 05:48:34', 27, 30.09, 'over', 0),
(94, 19, '2014-02-18 05:48:42', 34, 43.08, 'over', 0),
(144, 19, '2014-02-18 05:48:44', 26, 30.07, 'over', 0),
(85, 19, '2014-02-18 05:48:45', 16, 20.72, 'over', 0),
(60, 19, '2014-02-18 05:49:15', 21, 23.73, 'over', 0),
(130, 19, '2014-02-18 05:49:18', 12, 6.12, 'over', 0),
(111, 19, '2014-02-18 05:49:24', 22, 22.42, 'over', 0),
(36, 19, '2014-02-18 05:49:37', 44, 60.73, 'over', 0),
(68, 19, '2014-02-18 05:49:39', 33, 43.4, 'over', 0),
(152, 19, '2014-02-18 05:49:48', 22, 24.72, 'over', 0),
(158, 19, '2014-02-18 05:50:02', 23, 32.38, 'over', 0),
(87, 19, '2014-02-18 05:50:06', 22, 18.78, 'over', 0),
(99, 19, '2014-02-18 05:50:14', 18, 19.06, 'over', 0),
(80, 19, '2014-02-18 05:50:14', 26, 37.38, 'over', 0),
(70, 19, '2014-02-18 05:50:14', 19, 23.39, 'over', 0),
(108, 19, '2014-02-18 05:50:15', 22, 26.72, 'over', 0),
(52, 19, '2014-02-18 05:50:15', 28, 34.75, 'over', 0),
(28, 19, '2014-02-18 05:50:19', 24, 33.73, 'over', 0),
(143, 19, '2014-02-18 05:50:20', 24, 28.75, 'over', 0),
(141, 19, '2014-02-18 05:50:29', 10, 7.4, 'over', 0),
(47, 19, '2014-02-18 05:50:39', 15, 12.11, 'over', 0),
(90, 19, '2014-02-18 05:50:50', 31, 36.75, 'over', 0),
(62, 19, '2014-02-18 05:50:51', 31, 42.4, 'over', 0),
(95, 19, '2014-02-18 05:50:57', 29, 31.11, 'over', 0),
(64, 19, '2014-02-18 05:50:57', 22, 21.42, 'over', 0),
(69, 19, '2014-02-18 05:50:57', 23, 22.1, 'over', 0),
(93, 19, '2014-02-18 05:51:05', 18, 18.43, 'over', 0),
(100, 19, '2014-02-18 05:51:12', 18, 20.07, 'over', 0),
(86, 19, '2014-02-18 05:51:17', 28, 35.06, 'over', 0),
(139, 19, '2014-02-18 05:51:19', 10, 12.37, 'over', 0),
(67, 19, '2014-02-18 05:51:43', 32, 43.75, 'over', 0),
(39, 19, '2014-02-18 05:51:47', 41, 57.39, 'over', 0),
(97, 19, '2014-02-18 05:51:47', 22, 25.4, 'over', 0),
(142, 19, '2014-02-18 05:51:47', 26, 25.11, 'over', 0),
(44, 19, '2014-02-18 05:51:53', 22, 22.41, 'over', 0),
(92, 19, '2014-02-18 05:51:53', 11, 6.09, 'over', 0),
(83, 19, '2014-02-18 05:51:59', 29, 39.07, 'over', 0),
(22, 19, '2014-02-18 05:52:04', 31, 41.39, 'over', 0),
(153, 19, '2014-02-18 05:52:06', 28, 35.06, 'over', 0),
(124, 19, '2014-02-18 05:52:08', 18, 15.11, 'over', 0),
(75, 19, '2014-02-18 05:52:12', 22, 24.75, 'over', 0),
(73, 19, '2014-02-18 05:53:09', 32, 39.74, 'over', 0),
(81, 19, '2014-02-18 05:53:17', 48, 66.72, 'over', 0),
(107, 19, '2014-02-18 05:53:25', 23, 27.76, 'over', 0),
(145, 19, '2014-02-18 05:53:35', 32, 42.4, 'over', 0),
(96, 19, '2014-02-18 05:53:46', 21, 24.08, 'over', 0),
(160, 19, '2014-02-18 05:53:47', 19, 22.39, 'over', 0),
(79, 19, '2014-02-18 05:53:53', 19, 24.06, 'over', 0),
(98, 19, '2014-02-18 05:54:01', 29, 36.74, 'over', 0),
(102, 19, '2014-02-18 05:54:04', 19, 19.05, 'over', 0),
(65, 19, '2014-02-18 05:54:09', 32, 38.42, 'over', 0),
(76, 19, '2014-02-18 05:54:16', 14, 10.07, 'over', 0);
INSERT INTO `studenttest` (`stdid`, `testid`, `starttime`, `correctlyanswered`, `score`, `status`, `normalized_percentage`) VALUES
(116, 19, '2014-02-18 05:54:20', 45, 62.4, 'over', 0),
(121, 19, '2014-02-18 05:54:36', 29, 40.69, 'over', 0),
(117, 19, '2014-02-18 05:54:38', 46, 68.38, 'over', 0),
(101, 19, '2014-02-18 05:54:44', 29, 40.06, 'over', 0),
(123, 19, '2014-02-18 05:54:50', 26, 31.08, 'over', 0),
(20, 19, '2014-02-18 05:55:09', 34, 42.41, 'over', 0),
(56, 19, '2014-02-18 05:55:39', 33, 46.37, 'over', 0),
(122, 19, '2014-02-18 05:56:02', 24, 28.07, 'over', 0),
(162, 19, '2014-02-18 05:56:52', 33, 46.05, 'over', 0),
(127, 19, '2014-02-18 05:58:21', 46, 64.05, 'over', 0),
(154, 19, '2014-02-18 06:13:10', 17, 14.11, 'over', 0),
(82, 19, '2014-02-18 06:13:40', 21, 20.46, 'over', 0),
(113, 19, '2014-02-18 06:20:12', 14, 8.11, 'over', 0),
(112, 19, '2014-02-18 06:22:10', 17, 18.06, 'over', 0),
(115, 19, '2014-02-18 07:43:38', 25, 28.07, 'over', 0),
(138, 19, '2014-02-18 08:50:49', 21, 25.7, 'over', 0),
(88, 19, '2014-02-18 08:51:04', 20, 17.45, 'over', 0),
(105, 15, '2014-02-18 12:41:23', 22, 18.44, 'over', 84.16),
(119, 17, '2014-02-18 14:19:55', 0, 0, 'over', 122.74),
(72, 19, '2014-02-18 15:04:08', 0, NULL, 'inprogress', 0),
(164, 4, '2014-02-21 04:02:27', 0, 0, 'over', 121.69),
(66, 19, '2014-02-19 02:05:38', 19, 21.07, 'over', 0),
(78, 19, '2014-02-19 02:11:00', 0, 0, 'over', 0),
(85, 16, '2014-02-19 10:45:46', 20, 22, 'over', 26.29),
(94, 20, '2014-02-19 05:46:55', 39, 51.07, 'over', 0),
(135, 20, '2014-02-19 05:47:01', 21, 25.07, 'over', 0),
(70, 20, '2014-02-19 05:47:33', 31, 38.07, 'over', 0),
(107, 20, '2014-02-19 05:47:59', 33, 41.4, 'over', 0),
(138, 20, '2014-02-19 05:48:25', 26, 32.04, 'over', 0),
(60, 20, '2014-02-19 05:48:27', 31, 38.07, 'over', 0),
(152, 20, '2014-02-19 05:48:29', 25, 31.05, 'over', 0),
(130, 20, '2014-02-19 05:48:59', 19, 22.38, 'over', 0),
(77, 20, '2014-02-19 05:49:19', 29, 36.08, 'over', 0),
(65, 20, '2014-02-19 05:49:21', 40, 53.05, 'over', 0),
(108, 20, '2014-02-19 05:49:31', 27, 33.38, 'over', 0),
(85, 20, '2014-02-19 05:49:38', 17, 16.74, 'over', 0),
(33, 20, '2014-02-19 05:49:42', 28, 32.08, 'over', 0),
(73, 20, '2014-02-19 05:49:59', 47, 69.7, 'over', 0),
(102, 20, '2014-02-19 05:50:00', 23, 26.05, 'over', 0),
(86, 20, '2014-02-19 05:50:05', 26, 25.44, 'over', 0),
(74, 20, '2014-02-19 05:50:06', 26, 30.07, 'over', 0),
(36, 20, '2014-02-19 05:50:36', 51, 71.72, 'over', 0),
(81, 20, '2014-02-19 05:50:51', 59, 89.02, 'over', 0),
(39, 20, '2014-02-19 05:50:57', 45, 63.04, 'over', 0),
(101, 20, '2014-02-19 05:51:06', 39, 50.41, 'over', 0),
(78, 20, '2014-02-19 05:51:11', 22, 24.74, 'over', 0),
(153, 20, '2014-02-19 05:51:14', 37, 44.09, 'over', 0),
(121, 20, '2014-02-19 05:51:14', 39, 53.04, 'over', 0),
(62, 20, '2014-02-19 05:51:15', 38, 50.39, 'over', 0),
(96, 20, '2014-02-19 05:51:21', 42, 60.71, 'over', 0),
(117, 20, '2014-02-19 05:51:41', 33, 40.75, 'over', 0),
(76, 20, '2014-02-19 05:51:44', 18, 22.05, 'over', 0),
(100, 20, '2014-02-19 05:51:45', 35, 45.71, 'over', 0),
(111, 20, '2014-02-19 05:51:47', 35, 50.03, 'over', 0),
(160, 20, '2014-02-19 05:51:47', 21, 25.39, 'over', 0),
(47, 20, '2014-02-19 05:51:47', 25, 27.74, 'over', 0),
(143, 20, '2014-02-19 05:51:48', 36, 45.73, 'over', 0),
(141, 20, '2014-02-19 05:51:49', 22, 22.74, 'over', 0),
(90, 20, '2014-02-19 05:52:12', 42, 56.07, 'over', 0),
(22, 20, '2014-02-19 05:52:18', 43, 60.71, 'over', 0),
(145, 20, '2014-02-19 05:52:21', 37, 50.07, 'over', 0),
(162, 20, '2014-02-19 05:52:28', 38, 53.06, 'over', 0),
(56, 20, '2014-02-19 05:52:29', 47, 70.35, 'over', 0),
(95, 20, '2014-02-19 05:52:45', 43, 58.4, 'over', 0),
(75, 20, '2014-02-19 05:53:24', 28, 32.09, 'over', 0),
(52, 20, '2014-02-19 05:53:49', 35, 50.71, 'over', 0),
(44, 20, '2014-02-19 05:53:53', 26, 28.43, 'over', 0),
(144, 20, '2014-02-19 05:54:11', 33, 43.05, 'over', 0),
(83, 20, '2014-02-19 05:54:31', 36, 46.09, 'over', 0),
(114, 20, '2014-02-19 05:54:56', 33, 46.71, 'over', 0),
(98, 20, '2014-02-19 05:55:14', 38, 45.09, 'over', 0),
(123, 20, '2014-02-19 05:55:37', 45, 65.04, 'over', 0),
(124, 20, '2014-02-19 05:55:54', 25, 28.74, 'over', 0),
(112, 20, '2014-02-19 05:55:56', 26, 33.05, 'over', 0),
(113, 20, '2014-02-19 05:56:04', 24, 29.05, 'over', 0),
(79, 20, '2014-02-19 05:57:14', 33, 44.38, 'over', 0),
(122, 20, '2014-02-19 05:57:21', 34, 40.08, 'over', 0),
(69, 20, '2014-02-19 06:03:34', 25, 24.78, 'over', 0),
(127, 20, '2014-02-19 05:59:27', 34, 45.73, 'over', 0),
(63, 20, '2014-02-19 06:01:06', 34, 41.74, 'over', 0),
(67, 20, '2014-02-19 06:01:33', 40, 54.38, 'over', 0),
(64, 20, '2014-02-19 06:03:34', 22, 18.44, 'over', 0),
(116, 20, '2014-02-19 06:03:50', 52, 73.04, 'over', 0),
(93, 20, '2014-02-19 06:04:17', 37, 49.06, 'over', 0),
(154, 20, '2014-02-19 06:07:23', 29, 34.09, 'over', 0),
(68, 20, '2014-02-19 06:22:13', 41, 60.37, 'over', 0),
(115, 20, '2014-02-19 08:04:36', 32, 43.38, 'over', 0),
(20, 20, '2014-02-19 08:55:18', 41, 55.07, 'over', 0),
(66, 16, '2014-02-19 15:24:09', 17, 20.71, 'over', 30.79),
(87, 20, '2014-02-19 15:34:35', 29, 28.1, 'over', 0),
(88, 20, '2014-02-19 15:37:17', 30, 33.76, 'over', 0),
(164, 20, '2014-02-19 16:37:41', 0, NULL, 'inprogress', 0),
(186, 19, '2014-02-19 18:01:22', 0, 0, 'over', 0),
(186, 20, '2014-02-19 18:01:55', 0, 0, 'over', 0),
(80, 20, '2014-02-19 18:34:54', 34, 46.7, 'over', 0),
(66, 17, '2014-02-20 04:44:30', 29, 40.06, 'over', 2.06),
(178, 7, '2014-02-20 07:36:12', 0, NULL, 'inprogress', 97.26),
(178, 12, '2014-02-20 11:39:53', 0, NULL, 'inprogress', 130.34),
(72, 20, '2014-02-20 14:47:53', 30, 36.06, 'over', 0),
(60, 5, '2014-02-20 05:52:11', 18, 21.4, 'over', 0),
(128, 5, '2014-02-20 05:52:15', 30, 34.09, 'over', 0),
(67, 5, '2014-02-20 05:52:29', 38, 52.07, 'over', 0),
(52, 5, '2014-02-20 05:52:44', 25, 31.72, 'over', 0),
(102, 5, '2014-02-20 05:52:48', 25, 33.4, 'over', 0),
(70, 5, '2014-02-20 05:53:02', 15, 19.37, 'over', 0),
(63, 5, '2014-02-20 05:53:22', 21, 20.78, 'over', 0),
(88, 5, '2014-02-20 05:53:31', 19, 18.43, 'over', 0),
(121, 5, '2014-02-20 05:53:32', 22, 27.72, 'over', 0),
(62, 5, '2014-02-20 05:53:34', 31, 37.41, 'over', 0),
(99, 5, '2014-02-20 05:53:40', 13, 7.78, 'over', 0),
(152, 5, '2014-02-20 05:53:42', 18, 19.42, 'over', 0),
(144, 5, '2014-02-20 05:53:45', 28, 35.72, 'over', 0),
(78, 5, '2014-02-20 05:53:55', 9, -0.19, 'over', 0),
(74, 5, '2014-02-20 05:54:07', 20, 22.09, 'over', 0),
(130, 5, '2014-02-20 05:54:13', 8, 1.43, 'over', 0),
(108, 5, '2014-02-20 05:54:16', 21, 24.74, 'over', 0),
(85, 5, '2014-02-20 05:54:20', 16, 13.41, 'over', 0),
(158, 5, '2014-02-20 05:54:32', 20, 21.4, 'over', 0),
(77, 5, '2014-02-20 05:54:33', 23, 25.41, 'over', 0),
(87, 5, '2014-02-20 05:54:49', 19, 17.77, 'over', 0),
(98, 5, '2014-02-20 05:55:12', 28, 33.76, 'over', 0),
(111, 5, '2014-02-20 05:55:30', 22, 25.41, 'over', 0),
(101, 5, '2014-02-20 05:55:36', 29, 34.75, 'over', 0),
(36, 5, '2014-02-20 05:55:48', 38, 51.08, 'over', 0),
(90, 5, '2014-02-20 05:55:49', 32, 38.75, 'over', 0),
(39, 5, '2014-02-20 05:55:51', 26, 30.43, 'over', 0),
(112, 5, '2014-02-20 05:55:51', 19, 21.72, 'over', 0),
(47, 5, '2014-02-20 05:55:55', 16, 15.1, 'over', 0),
(96, 5, '2014-02-20 05:55:57', 31, 40.73, 'over', 0),
(160, 5, '2014-02-20 05:56:00', 19, 21.42, 'over', 0),
(141, 5, '2014-02-20 05:56:00', 11, 3.45, 'over', 0),
(153, 5, '2014-02-20 05:56:02', 30, 38.42, 'over', 0),
(93, 5, '2014-02-20 05:56:06', 27, 33.41, 'over', 0),
(76, 5, '2014-02-20 05:56:08', 15, 18.06, 'over', 0),
(95, 5, '2014-02-20 05:56:15', 36, 46.4, 'over', 0),
(143, 5, '2014-02-20 05:56:15', 23, 24.77, 'over', 0),
(81, 5, '2014-02-20 05:56:33', 37, 47.09, 'over', 0),
(80, 5, '2014-02-20 05:56:36', 22, 22.75, 'over', 0),
(73, 5, '2014-02-20 05:56:37', 31, 38.76, 'over', 0),
(56, 5, '2014-02-20 05:56:38', 37, 47.39, 'over', 0),
(119, 5, '2014-02-20 05:56:41', 29, 38.71, 'over', 0),
(114, 5, '2014-02-20 05:56:41', 23, 30.03, 'over', 0),
(124, 5, '2014-02-20 05:56:45', 19, 22.07, 'over', 0),
(83, 5, '2014-02-20 05:56:48', 30, 37.09, 'over', 0),
(145, 5, '2014-02-20 05:57:05', 34, 43.74, 'over', 0),
(107, 5, '2014-02-20 05:57:26', 23, 28.06, 'over', 0),
(127, 5, '2014-02-20 05:57:28', 25, 32.42, 'over', 0),
(123, 5, '2014-02-20 05:57:37', 29, 33.76, 'over', 0),
(75, 5, '2014-02-20 05:57:39', 18, 19.42, 'over', 0),
(86, 5, '2014-02-20 05:57:40', 26, 29.41, 'over', 0),
(162, 5, '2014-02-20 05:57:44', 30, 41.37, 'over', 0),
(100, 5, '2014-02-20 05:57:48', 25, 30.74, 'over', 0),
(116, 5, '2014-02-20 05:57:49', 44, 60.4, 'over', 0),
(68, 5, '2014-02-20 05:57:51', 26, 32.07, 'over', 0),
(65, 5, '2014-02-20 05:57:55', 26, 28.45, 'over', 0),
(22, 5, '2014-02-20 05:58:44', 27, 27.77, 'over', 0),
(142, 5, '2014-02-20 05:58:52', 16, 14.78, 'over', 0),
(44, 5, '2014-02-20 05:59:14', 16, 12.42, 'over', 0),
(113, 5, '2014-02-20 05:59:19', 14, 13.4, 'over', 0),
(20, 5, '2014-02-20 06:00:28', 34, 39.11, 'over', 0),
(122, 5, '2014-02-20 06:01:21', 20, 23.07, 'over', 0),
(28, 5, '2014-02-20 06:06:03', 19, 23.41, 'over', 0),
(94, 5, '2014-02-20 06:08:22', 35, 46.08, 'over', 0),
(79, 5, '2014-02-20 06:23:06', 15, 15.07, 'over', 0),
(114, 12, '2014-02-20 18:13:45', 24, 44.04, 'over', 15.83),
(164, 5, '2014-02-21 04:04:49', 16, 0, 'over', 0),
(142, 20, '2014-02-21 08:23:36', 0, NULL, 'inprogress', 0),
(72, 5, '2014-02-21 14:44:00', 14, 0, 'over', 0),
(170, 12, '2014-02-21 15:35:44', 0, NULL, 'over', 130.34),
(135, 21, '2014-02-21 04:45:29', 25, 31.72, 'over', 67.8),
(152, 21, '2014-02-21 04:45:57', 30, 35.4, 'over', 54.98),
(85, 21, '2014-02-21 04:45:58', 26, 29.74, 'over', 74.7),
(119, 21, '2014-02-21 04:46:04', 37, 52.69, 'over', 5.26),
(70, 21, '2014-02-21 04:47:06', 27, 31.42, 'over', 68.85),
(60, 21, '2014-02-21 04:47:09', 31, 44.36, 'over', 23.76),
(68, 21, '2014-02-21 04:47:11', 50, 68.72, 'over', 61.11),
(130, 21, '2014-02-21 04:47:45', 25, 29.75, 'over', 74.67),
(128, 21, '2014-02-21 04:48:13', 38, 46.08, 'over', 17.77),
(67, 21, '2014-02-21 04:48:27', 50, 73.03, 'over', 76.13),
(63, 21, '2014-02-21 04:48:55', 40, 54.4, 'over', 11.22),
(108, 21, '2014-02-21 04:49:22', 35, 50.7, 'over', 1.67),
(52, 21, '2014-02-21 04:49:28', 44, 64.37, 'over', 45.96),
(77, 21, '2014-02-21 04:49:29', 36, 44.07, 'over', 24.77),
(62, 21, '2014-02-21 04:49:35', 45, 63.71, 'over', 43.66),
(36, 21, '2014-02-21 04:49:42', 52, 75.38, 'over', 84.32),
(90, 21, '2014-02-21 04:49:48', 52, 73.72, 'over', 78.54),
(88, 21, '2014-02-21 04:49:49', 35, 50.04, 'over', 3.97),
(144, 21, '2014-02-21 04:50:02', 46, 65.7, 'over', 50.59),
(22, 21, '2014-02-21 04:50:12', 44, 55.1, 'over', 13.66),
(39, 21, '2014-02-21 04:50:17', 42, 56.73, 'over', 19.34),
(47, 21, '2014-02-21 04:50:36', 27, 32.75, 'over', 64.22),
(158, 21, '2014-02-21 04:50:41', 40, 56.37, 'over', 18.08),
(98, 21, '2014-02-21 04:50:47', 45, 62.05, 'over', 37.87),
(141, 21, '2014-02-21 04:50:49', 23, 26.39, 'over', 86.38),
(93, 21, '2014-02-21 04:50:50', 34, 40.74, 'over', 36.38),
(81, 21, '2014-02-21 04:50:51', 49, 72.7, 'over', 74.98),
(117, 21, '2014-02-21 04:51:06', 35, 50.39, 'over', 2.75),
(121, 21, '2014-02-21 04:51:13', 40, 53.38, 'over', 7.67),
(87, 21, '2014-02-21 04:51:16', 31, 41.74, 'over', 32.89),
(124, 21, '2014-02-21 04:51:18', 26, 28.75, 'over', 78.15),
(100, 21, '2014-02-21 04:51:20', 48, 69.03, 'over', 62.2),
(122, 21, '2014-02-21 04:51:23', 36, 48.07, 'over', 10.84),
(80, 21, '2014-02-21 04:51:28', 44, 63.03, 'over', 41.29),
(143, 21, '2014-02-21 04:51:32', 30, 32.78, 'over', 64.11),
(86, 21, '2014-02-21 04:51:33', 38, 52.38, 'over', 4.18),
(113, 21, '2014-02-21 04:51:51', 19, 20.07, 'over', 108.4),
(112, 21, '2014-02-21 04:51:55', 30, 39.72, 'over', 39.93),
(95, 21, '2014-02-21 04:51:57', 48, 70.37, 'over', 66.86),
(153, 21, '2014-02-21 04:52:01', 39, 48.76, 'over', 8.43),
(78, 21, '2014-02-21 04:52:06', 22, 24.75, 'over', 92.09),
(162, 21, '2014-02-21 04:52:10', 40, 52.05, 'over', 3.03),
(145, 21, '2014-02-21 04:52:11', 48, 67.38, 'over', 56.45),
(76, 21, '2014-02-21 04:52:20', 24, 30.39, 'over', 72.44),
(101, 21, '2014-02-21 04:52:22', 48, 71.02, 'over', 69.13),
(114, 21, '2014-02-21 04:52:23', 36, 48.4, 'over', 9.69),
(83, 21, '2014-02-21 04:52:26', 46, 64.73, 'over', 47.21),
(102, 21, '2014-02-21 04:52:36', 32, 36.74, 'over', 50.31),
(73, 21, '2014-02-21 04:52:37', 50, 72.38, 'over', 73.87),
(44, 21, '2014-02-21 04:52:50', 34, 45.07, 'over', 21.29),
(123, 21, '2014-02-21 04:53:07', 38, 47.09, 'over', 14.25),
(96, 21, '2014-02-21 04:53:10', 44, 60.72, 'over', 33.24),
(20, 21, '2014-02-21 04:53:24', 47, 64.39, 'over', 46.03),
(75, 21, '2014-02-21 04:53:32', 41, 57.39, 'over', 21.64),
(111, 21, '2014-02-21 04:53:47', 33, 41.06, 'over', 35.26),
(160, 21, '2014-02-21 04:54:35', 29, 38.38, 'over', 44.6),
(56, 21, '2014-02-21 04:54:43', 47, 68.03, 'over', 58.71),
(65, 21, '2014-02-21 04:56:30', 41, 57.72, 'over', 22.79),
(127, 21, '2014-02-21 04:57:57', 49, 66.72, 'over', 54.15),
(116, 21, '2014-02-21 04:58:10', 46, 60.09, 'over', 31.05),
(82, 21, '2014-02-21 05:08:34', 37, 46.76, 'over', 15.4),
(74, 21, '2014-02-21 05:12:16', 27, 34.41, 'over', 58.43),
(79, 21, '2014-02-21 05:28:34', 30, 41.37, 'over', 34.18),
(94, 21, '2014-02-21 05:35:42', 47, 64.4, 'over', 46.06),
(28, 21, '2014-02-21 05:37:13', 41, 55.06, 'over', 13.52),
(115, 21, '2014-02-21 06:57:25', 45, 63.04, 'over', 41.32),
(138, 21, '2014-02-21 07:48:42', 30, 43.03, 'over', 28.4),
(178, 5, '2014-02-21 20:12:34', 0, NULL, 'inprogress', 0),
(97, 21, '2014-02-22 05:04:54', 44, 55.75, 'over', 15.92),
(92, 5, '2014-02-22 05:36:26', 5, 0, 'over', 0),
(66, 20, '2014-02-22 06:26:06', 34, 49.7, 'over', 0),
(164, 21, '2014-02-22 06:33:53', 33, 39.08, 'over', 42.16),
(52, 11, '2014-02-22 06:42:51', 0, NULL, 'inprogress', 136.46),
(105, 16, '2014-02-22 07:18:59', 0, NULL, 'inprogress', 103),
(52, 10, '2014-02-22 08:01:33', 12, 20.04, 'over', 10),
(67, 4, '2014-02-22 08:35:17', 49, 94.67, 'over', 123.06),
(114, 13, '2014-02-22 10:56:00', 0, NULL, 'inprogress', NULL),
(92, 4, '2014-02-23 13:55:30', 12, 8.71, 'over', NULL),
(66, 15, '2014-02-23 15:39:48', 37, 47.73, 'over', NULL),
(66, 5, '2014-02-23 15:53:18', 20, 0, 'over', NULL),
(95, 4, '2014-02-23 16:01:05', 36, 56.02, 'over', NULL),
(178, 16, '2014-02-23 18:41:04', 0, NULL, 'inprogress', NULL),
(178, 19, '2014-02-23 18:45:55', 0, NULL, 'inprogress', NULL),
(72, 21, '2014-02-24 03:34:17', 44, 61.72, 'over', NULL),
(66, 21, '2014-02-24 03:56:11', 37, 49.72, 'over', NULL),
(66, 4, '2014-02-24 07:10:24', 37, 64.69, 'over', NULL),
(98, 4, '2014-02-24 09:04:55', 0, NULL, 'inprogress', NULL),
(105, 17, '2014-02-24 09:35:51', 13, 13.41, 'over', NULL),
(159, 7, '2014-02-24 11:00:45', 0, NULL, 'inprogress', NULL),
(159, 18, '2014-02-24 12:19:06', 0, 0, 'over', NULL),
(159, 19, '2014-02-24 12:24:02', 0, 0, 'over', NULL),
(159, 20, '2014-02-24 12:26:06', 0, 0, 'over', NULL),
(159, 21, '2014-02-24 12:27:58', 0, 0, 'over', NULL),
(164, 19, '2014-02-24 12:54:55', 0, 0, 'over', NULL),
(140, 21, '2014-02-24 13:21:10', 0, 0, 'over', NULL),
(120, 5, '2014-02-24 13:22:39', 0, NULL, 'inprogress', NULL),
(140, 19, '2014-02-24 13:36:36', 0, 0, 'over', NULL),
(140, 17, '2014-02-24 13:45:56', 0, 0, 'over', NULL),
(64, 5, '2014-02-24 14:41:40', 34, 0, 'over', NULL),
(69, 16, '2014-02-25 05:16:09', 0, NULL, 'inprogress', NULL),
(115, 13, '2014-02-25 10:10:34', 23, 39.4, 'over', NULL),
(115, 11, '2014-02-25 12:53:09', 38, 66.76, 'over', NULL),
(170, 8, '2014-02-25 12:59:53', 0, NULL, 'inprogress', NULL),
(115, 12, '2014-02-25 18:53:48', 11, 16.06, 'over', NULL),
(128, 15, '2014-02-26 06:39:21', 0, NULL, 'inprogress', NULL),
(96, 4, '2014-02-26 08:38:46', 0, NULL, 'inprogress', NULL),
(115, 5, '2014-02-26 18:47:19', 0, NULL, 'inprogress', NULL),
(105, 5, '2014-02-27 01:41:23', 0, NULL, 'inprogress', NULL),
(134, 21, '2014-02-27 05:03:40', 0, NULL, 'inprogress', NULL),
(134, 5, '2014-02-27 06:12:50', 0, NULL, 'inprogress', NULL),
(134, 16, '2014-02-27 07:37:21', 4, 3.34, 'over', NULL),
(134, 20, '2014-02-27 08:27:43', 13, 12.68, 'over', NULL),
(92, 13, '2014-02-27 17:17:39', 0, NULL, 'inprogress', NULL),
(168, 21, '2014-02-27 18:08:14', 0, NULL, 'inprogress', NULL),
(52, 12, '2014-02-28 06:41:40', 0, NULL, 'inprogress', NULL),
(174, 21, '2014-02-28 08:00:33', 35, 43.09, 'over', NULL),
(170, 5, '2014-02-28 08:03:53', 0, NULL, 'inprogress', NULL),
(99, 10, '2014-02-28 08:34:06', 18, 35.34, 'over', NULL),
(105, 20, '2014-02-28 09:53:09', 1, 1.01, 'over', NULL),
(184, 21, '2014-02-28 11:32:38', 0, 0, 'over', NULL),
(69, 21, '2014-02-28 12:05:43', 36, 44.75, 'over', NULL),
(170, 16, '2014-02-28 12:14:52', 13, 9.76, 'over', NULL),
(107, 4, '2014-02-28 16:36:12', 0, 0, 'over', NULL),
(107, 21, '2014-02-28 17:37:11', 0, NULL, 'over', NULL),
(64, 21, '2014-03-01 14:37:12', 44, 60.35, 'over', NULL),
(70, 4, '2014-03-02 16:23:59', 0, NULL, 'inprogress', NULL),
(120, 4, '2014-03-10 10:14:52', 0, NULL, 'inprogress', NULL),
(195, 22, '2014-03-22 11:44:16', 0, NULL, 'inprogress', NULL),
(122, 22, '2014-03-29 12:45:10', 4, 4, 'over', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `subject`
--

CREATE TABLE IF NOT EXISTS `subject` (
  `subid` int(11) NOT NULL AUTO_INCREMENT,
  `subname` varchar(40) DEFAULT NULL,
  `subdesc` varchar(100) DEFAULT NULL,
  `tcid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`subid`),
  UNIQUE KEY `subname` (`subname`),
  KEY `subject_fk1` (`tcid`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=24 ;

--
-- Dumping data for table `subject`
--

INSERT INTO `subject` (`subid`, `subname`, `subdesc`, `tcid`) VALUES
(0, 'MISCELLAMEOUS', NULL, NULL),
(2, 'Demo', 'Demo Test', NULL),
(4, 'Quiz-I', NULL, NULL),
(5, 'COA_Test1', NULL, NULL),
(6, 'Mock Test 1', NULL, NULL),
(7, 'Mock Test-2', NULL, NULL),
(8, 'Mock Test-3', NULL, NULL),
(9, 'Mock Test-4', NULL, NULL),
(10, 'DS', NULL, NULL),
(11, 'Math', NULL, NULL),
(12, 'C Test', NULL, NULL),
(13, 'Software Engineering Test', NULL, NULL),
(14, 'DBMS', NULL, NULL),
(15, 'Digital Design', NULL, NULL),
(16, '26jan', NULL, NULL),
(17, '2010', NULL, NULL),
(18, 'test_5feb', NULL, NULL),
(19, 'Test_2008IT', NULL, NULL),
(20, 'Test_2006_IT', NULL, NULL),
(21, 'IT_2005', NULL, NULL),
(22, 'Test 2004 IT', NULL, NULL),
(23, 'Final_Test', NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `subj_question`
--

CREATE TABLE IF NOT EXISTS `subj_question` (
  `qnid_s` int(11) NOT NULL AUTO_INCREMENT,
  `subid` int(11) NOT NULL,
  `level` varchar(11) CHARACTER SET latin1 NOT NULL,
  `question` text,
  `figure` varchar(100) CHARACTER SET latin1 DEFAULT NULL,
  `optiona` text,
  `optionb` text,
  `optionc` text,
  `optiond` text,
  `optione` text,
  `correct` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `type` char(2) NOT NULL DEFAULT 'MC',
  PRIMARY KEY (`qnid_s`),
  KEY `subid` (`subid`),
  KEY `subid_2` (`subid`),
  KEY `level` (`level`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1107 ;

--
-- Dumping data for table `subj_question`
--

INSERT INTO `subj_question` (`qnid_s`, `subid`, `level`, `question`, `figure`, `optiona`, `optionb`, `optionc`, `optiond`, `optione`, `correct`, `type`) VALUES
(10, 2, 'level_e', 'The total  number of Boolean functions that can be generated by n variables is equal to	', NULL, '2^2^n', '2^2n ', '2^(n-1) ', '2^(n-2)', ' ', 'optiona', 'MC'),
(11, 2, 'level_e', 'The bit sequence 0010 is serially entered (right-most bit first) into a 4-bit parallel out shift register that is initially clear. What are the Q outputs after two clock pulses?								', '', '0000', '0010    ', '1000    ', '1111', '', 'optionc', 'MC'),
(12, 2, 'level_e', 'An equivalent 2s complement representation of the 2s complement number 1101 is			', NULL, '110100', '001101', '110111', '111101', '', 'optiond', 'MC'),
(13, 2, 'level_e', 'How many 2  : 2 : 1 mux are required to construct 4 : 4 : 1 mux?	', NULL, '2', '4 ', '3 ', '6', ' ', 'optionc', 'MC'),
(14, 2, 'level_e', 'Which of the following statements is correct?\r\n1. A flip-flop is used to store 1-bit of information.\r\n2. Race around condition occurs in a J-K flip-flop when both inputs are 1.\r\n3. Master slave configuration is used in flip-flops to store 2-bits of information.\r\n4. A transparent latch consists of a D-type flip flop.\r\nSelect the correct answer using the codes given above.		', '', '1, 4 and 3', '1, 2 and 3  ', '1, 2 and 4  ', '2, 4 and 3', '', 'optionc', 'MC'),
(15, 2, 'level_e', '1 Flip Flop stores?	', NULL, '1 Byte Memory', '1 KB Memory ', '1 Bit Memory ', 'None of the above', ' ', 'optionc', 'MC'),
(29, 4, 'level_e', 'Suppose T1(n)=O(f(n)) and T2(n)=O(f(n)). Which of the following is true?', '', 'T1(n)+ T2(n) =O(f(n))', ' T1(n)/ T2(n) =O(1)	', ' T1(n)=O( T2(n))', 'T1(n)=O( T1(T2(n)))', ' ', 'optiona', 'MC'),
(30, 4, 'level_e', 'Which of the following statements is not valid C++ code?', NULL, 'int ptr = &amp;num1;', 'int ptr = int *num1;', 'float num1 = &amp;ptr2;', 'All of the above are invalid  ', '', 'optiond', 'MC'),
(31, 4, 'level_e', 'A lecturer is about to ask his students to not talk in the class. Just as he is about to make the announcement a student starts talking, so he waits until the talking is finished. Just as he is about to make the announcement (for the second time) another student starts talking, so he waits until this conversation is finished. This process continues forever. This is an example of: ', NULL, 'a critical section  ', 'starvation ', 'FCFS  ', 'Deadlock', '', 'optionb', 'MC'),
(32, 4, 'level_e', 'If there are five routers and six networks in an inter-network using Link State routing, how many routing tables are there?', NULL, '4', '5', '6', '30', '', 'optionb', 'MC'),
(33, 4, 'level_e', 'Suppose there are three routers between a source host and a destination host. Ignoring fragmentation an IP segment sent from the source host to the destination host will travel over how many interfaces? How many forwarding tables will be indexed to move the datagram from the source to the destination?', NULL, '7 interfaces; 3 routing tables', '7 interfaces; 4 routing tables', '8 interfaces; 3 routing tables', '8 interfaces; 4 routing tables', '', 'optiond', 'MC'),
(34, 4, 'level_e', 'An interpreter is: ', NULL, 'faster than a compiler ', 'translates and executes programs statement by statement ', 'converts a program to machine code ', 'uses advanced predictive mechanisms', '', 'optionb', 'MC'),
(35, 4, 'level_e', 'When a hardware interrupt occurs, the instruction pointer (program counter) is pushed onto a stack by:    ', NULL, 'fast assembler code. ', 'the first instruction in the ISR. ', 'hardware in the CPU. ', 'instructions in the ISR.          ', '', 'optionc', 'MC'),
(36, 4, 'level_e', 'Consider the context-free grammar\r\nS→X S | d S | ε\r\nX → Y | Z b | a Y\r\nY → c Z\r\nZ → e\r\nThe symbols S, X, Y and Z are non-terminals with S as the start symbol while a, b, c, d, e are terminal symbols. FOLLOW (x) and FIRST (X) are:\r\n', NULL, '{a, c, d, e, $},{a, c, e},', '{a, b, c, d, e, $},{a, c, e},', '{a, c, d, e, $},{a,c,d,e, ε}', '{c,e, $}, {a,c,d,e, ε}', '', 'optiona', 'MC'),
(37, 4, 'level_e', 'A Round robin scheduler in a preemptive system might be implemented using code like that shown in the following listing. This code assumes 10 processes  in a process table, and just switches to the next one. However, this code reads and writes  the global variable current, containing the index of the current process in the table. Which one of the following will be required in order for safe execution?\r\nVoid SwitchNext(){    \r\nSavestate(current);\r\ncurrent = current + 1 %10;   /* i.e., mod 10  */\r', NULL, 'Semaphores using queue wait and signal around Savestate(current)', 'Critical region around the entire SwitchNext', 'Monitor around current = current+1%10;', 'D.	None of the above required', '', 'optiond', 'MC'),
(38, 5, 'level_e', '[Question 1 to 20 carry 1 Mark]\r\n\r\nCache:-\r\n\r\nConsider a direct mapped cache of size 32 KB with block size 32 bytes. The CPU generates 32 bit addresses. The number of bits needed for cache indexing and the number of tag bits are respectively.\r\n		', NULL, '10, 17 ', '10, 22   ', '15, 17 	  ', '5, 17', '', 'optiona', 'MC'),
(39, 5, 'level_e', 'The average memory access time for a machine with a cache hit rate of 90% where the cache access time is 10ns and the memory access time is 100ns is:', NULL, '55ns', '45ns ', '90ns', '19ns', '', 'optiond', 'MC'),
(40, 5, 'level_e', 'Pipeline:-\r\n\r\nRegister renaming is done in pipelined processors\r\n', NULL, 'as an alternative to register allocation at compile time', 'for efficient access to function parameters and local variables', 'to handle certain kinds of hazards', 'as part of address translation', '', 'optionc', 'MC'),
(41, 5, 'level_e', 'A 4-stage pipeline has the stage delays as 150, 120, 160 and 140 nanoseconds respectively. Registers that are used between the stages have a delay of 5 nanoseconds each. Assuming constant clocking rate, the total time taken to process 1000 data items on this pipeline will be', NULL, '120.4 microseconds', '160.5 microseconds', '165.5 microseconds ', '590.0 microseconds', '', 'optionc', 'MC'),
(42, 5, 'level_e', 'Select the false statement.', NULL, 'Actual speedup is less than the number of stages in a pipeline.', 'Pipelining improves the latency of executing an instruction.', 'Pipelining uses parallel processing to improve performance.', 'Hazards can sometimes be resolved by reordering the instructions.', '', 'optionb', 'MC'),
(43, 5, 'level_e', 'Which of the following is not used for resolving data hazards?', NULL, 'Forwarding  ', 'Reordering instructions ', 'Stall  ', 'Prediction', '', 'optiond', 'MC'),
(44, 5, 'level_e', 'Memory:-\r\n\r\nA ROM is used to store the table for multiplication of two 8-bit unsigned integers. The size of ROM required is\r\n', NULL, '256 × 16 ', '64 K × 8 ', '4 K × 16 ', '64 K × 16', '', 'optiond', 'MC'),
(45, 5, 'level_e', 'In comparison with static RAM memory, the dynamic RAM memory has', NULL, 'lower bit density and higher power consumption', 'higher bit density and higher power consumption', 'lower bit density and lower power consumption', 'higher bit density and lower power consumption', '', 'optionb', 'MC'),
(46, 5, 'level_e', 'More than one word are put in one cache block to', NULL, 'exploit the temporal locality of reference in a program   ', 'exploit the spatial locality of reference in a program', 'reduce the miss penalty	', 'none of these', '', 'optionb', 'MC'),
(47, 5, 'level_e', 'Which of the following statements is true?', NULL, 'ROM is a Read/Write memory ', 'PC points to the last instruction that was executed', 'Stack works on the principle of LIFO    ', 'All instructions affect the flags', '', 'optionc', 'MC'),
(48, 5, 'level_e', 'In interleaved memory organization, consecutive words are stored in consecutive memory modules in _______________ interleaving, whereas consecutive words are stored within the module in _______________ interleaving.', NULL, 'Low-order, high order ', 'High order, low order ', 'Low order, low order ', 'High order, high order', '', 'optiona', 'MC'),
(49, 5, 'level_e', 'Addressing mode:-\r\n\r\nWhich of the following addressing modes are suitable for program relocation at run time?\r\n(i) Absolute addressing 		(ii) Based addressing\r\n(iii) Relative addressing 		(iv) Indirect addressing\r\n', NULL, '(i) and (iv)', '(i) and (ii)	', '(ii) and (iii) 	', '(i), (ii) and (iv)', '', 'optionc', 'MC'),
(50, 5, 'level_e', 'In the absolute addressing mode', NULL, 'the operand is inside the instruction	', 'the address of the operand is inside the instruction', 'the register containing the address of the operand is specified inside the instruction', 'the location of the operand is implicit', '', 'optionb', 'MC'),
(51, 5, 'level_e', 'In which addressing mode, the effective address of the operand is generated by adding a constant value to the content of the register?', NULL, 'Absolute mode ', 'Indirect mode ', 'Immediate mode ', 'Index mode', '', 'optiond', 'MC'),
(52, 5, 'level_e', 'Assembly Language and Operations:-\r\n\r\nAn assembly language program is typically\r\n', NULL, 'non-portable ', 'shorter than an equivalent HLL program ', 'harder to read than a machine code program ', 'slower to execute than a compiled HLL program', '', 'optiona', 'MC'),
(53, 5, 'level_e', 'I/O:-\r\n\r\nAn interrupt in which the external device supplies its address as well as interrupt requests is known as\r\n', NULL, 'vectored interrupt', 'maskable interrupt	', 'non maskable interrupt    ', 'designated interrupt', '', 'optiona', 'MC'),
(54, 5, 'level_e', 'The ability to temporarily halt the CPU and use this time to send information on buses is called', NULL, 'direct memory access', 'vectoring the interrupt', 'polling	', 'cycle stealing', '', 'optiond', 'MC'),
(55, 5, 'level_e', 'Access to moving head disks requires three periods of delay before information is brought into memory. The response that correctly lists the three time delay for the physical access of data in the order of their relative speeds from slowest to fastest is', NULL, 'latency time, cache overhead time, seek time', 'cache overhead time,  latency time, seek time', 'seek time, latency time, transmission time	', 'queue wait time, cache overhead time, transmission time', '', 'optionc', 'MC'),
(56, 5, 'level_e', 'In a vectored interrupt', NULL, 'the branch address is assigned to a fixed location in memory', 'the interrupt source supplies the branch information to the processor through an interrupt vector', 'the branch address is obtained from a register in the processor', 'none of the above', '', 'optionb', 'MC'),
(57, 5, 'level_e', 'For the daisy chain scheme of connecting I/O devices, which of the following statements is true?', NULL, 'It gives non-uniform priority to various devices.', 'It gives uniform priority to all devices.', 'It is only useful for connecting slow devices to a processor device.', 'It requires a separate interrupt pin on the processor for each device.', '', 'optiona', 'MC'),
(58, 5, 'level_m', '[Question 21 to 40 carry 2 Marks]\r\n\r\nCache:-\r\n\r\nYou have a two-way set associative cache with block size of 2 words and total size of 16 words, initially empty. After  a sequence of word addresses 2,5,10, which of the following addresses will result in a hit?\r\n', NULL, '1 only     ', '2 only ', '3 only  ', '2 or 3', '', 'optiond', 'MC'),
(59, 5, 'level_m', 'Consider a 32-byte direct mapped cache with 4-byte block size. The cache is initially empty. What is the number of hits for the following sequence of byte address references (in decimal): 0, 32, 0, 5, 4, 32, 35, 36, 4, 5 ?', NULL, '1', '2', '3', '4', '5', 'optionc', 'MC'),
(60, 5, 'level_m', 'Suppose L1 hit time = 1 cycle, L1 hit rate = 90%, L2 hit time = 2 cycles, L2 miss penalty = 50 cycles, L2 hit rate = 90%. What is the average access time of the memory system?', NULL, '1.34 cycles ', '1.58 cycles ', '2.12 cycles ', '2.45 cycles ', '2.80 cycles', 'optionb', 'MC'),
(61, 5, 'level_m', 'A computer has a 256 Kbyte, 4-way set-associative, write back data cache with block size of 32 bytes. The processor sends 32 bit addresses to the cache controller. Each cache tag directory entry contains, in addition to address tag, 2 valid bits, 1 modified bit and 1 replacement bit.\r\n\r\nThe number of bits in the tag of an address is\r\n', NULL, '11', '14', '16', '27', '', 'optionc', 'MC'),
(62, 5, 'level_m', 'A computer has a 256 Kbyte, 4-way set-associative, write back data cache with block size of 32 bytes. The processor sends 32 bit addresses to the cache controller. Each cache tag directory entry contains, in addition to address tag, 2 valid bits, 1 modified bit and 1 replacement bit.\r\n\r\nThe size of the cache tag directory is\r\n', NULL, '160 Kbits ', '136 Kbits ', '40 Kbits ', '32 Kbits', '', 'optiona', 'MC'),
(63, 5, 'level_m', 'Consider a machine with a byte addressable main memory of  216 bytes. Assume that a direct mapped data cache consisting of 32 lines of 64 bytes each is used in the system. A 50 × 50 two-dimensional array of bytes is stored in the main memory starting from memory location 1100H. Assume that the data cache is initially empty. The complete array is accessed twice. Assume that the contents of the data cache do not change in between the two accesses.\r\n\r\nHow many data cache misses will occur in total', NULL, '48', '50', '56', '59', '', 'optionc', 'MC'),
(64, 5, 'level_m', 'Consider a machine with a byte addressable main memory of  216 bytes. Assume that a direct mapped data cache consisting of 32 lines of 64 bytes each is used in the system. A 50 × 50 two-dimensional array of bytes is stored in the main memory starting from memory location 1100H. Assume that the data cache is initially empty. The complete array is accessed twice. Assume that the contents of the data cache do not change in between the two accesses.\r\n\r\nWhich of the following lines of the data cache', NULL, 'line 4 to line 11', 'line 4 to line 12	', 'line 0 to line 7 ', 'line 0 to line 8', '', 'optionc', 'MC'),
(65, 1, 'level_m', 'An 8KB direct mapped write-back cache is organized as multiple blocks, each of size 32-bytes. The processor generates 32-bit addresses. The cache controller maintains the tag information for each cache block comprising of the following.\r\n               1 Valid bit\r\n               1 Modified bit\r\nAs many bits as the minimum needed to identify the memory block mapped in the cache. What is the total size of memory needed at the cache controller to store metadata (tags) for the cache?\r\n', NULL, '4864 bits 	', '6144bits ', '6656bits', '5376bits', '', 'optiond', 'MC'),
(68, 5, 'level_m', 'An 8KB direct mapped write-back cache is organized as multiple blocks, each of size 32-bytes. The processor generates 32-bit addresses. The cache controller maintains the tag information for each cache block comprising of the following.\r\n     1 Valid bit\r\n     1 Modified bit\r\nAs many bits as the minimum needed to identify the memory block mapped in the cache. What is the total size of memory needed at the cache controller to store metadata (tags) for the cache?\r\n', NULL, '4864 bits ', '6144bits', '6656bits', '5376bits', '', 'optiond', 'MC'),
(69, 5, 'level_m', 'Pipeline:-\n\nConsider an instruction pipeline with four stages (S1, S2, S3 and S4) each with combinational circuit only. The pipeline registers are required between each stage and at the end of the last stage. Delays for the stages and for the pipeline registers are as given in the figure below.\n \nWhat is the approximate speed up of the pipeline in steady state under ideal conditions when compared to the corresponding non-pipeline implementation?\n		', '1385105126.jpg', '4.0', '2.5', '1.1', '3.0', '', 'optionb', 'MC'),
(70, 5, 'level_m', 'Memory:-\r\n\r\nThe capacity of a memory unit is defined by the number of words multiplied by the number of bits/word. How many separate address and data lines are needed for a memory of 4K x 16?\r\n', NULL, '10 address, 16 data lines ', '11 address, 8 data lines', '12 address, 16 data lines', '12 address, 12 data lines', '', 'optionc', 'MC'),
(71, 5, 'level_m', 'Four 256x8 PROM chips are used to produce a total capacity of 1024x8. How many address bus lines are required?', NULL, '4', '8', '10', '16', '32', 'optionc', 'MC'),
(72, 5, 'level_m', 'Addressing mode:-\r\n\r\nConsider a hypothetical processor with an instruction of type LW R1, 20(R2), which during execution reads a 32-bit word from memory and stores it in a 32-bit register R1. The effective address of the memory location is obtained by the addition of constant 20 and the contents of register R2. Which of the following best reflects the addressing mode implemented by this instruction for the operand in memory?\r\n', NULL, 'Immediate Addressing', 'Register Addressing', 'Register Indirect Scaled Addressing 	', 'Base Indexed Addressing', '', 'optiond', 'MC'),
(73, 5, 'level_m', 'Match each of the high level language statements given on the left hand side with the most natural addressing mode from those listed on the right hand side.\r\n              (1) A[I] = B[J]; 				(a) Indirect addressing\r\n              (2) while (*A++);			        (b) Indexed addressing\r\n              (3) int temp =*x;			        (c) Auto increment\r\n', NULL, '(1, c), (2, b), (3, a) ', '(1, a), (2, c), (3, b)', '(1, b), (2, c), (3, a)', '(1, a), (2, b), (3, c)', '', 'optionc', 'MC'),
(74, 5, 'level_m', 'Which is the most appropriate match for the items in the first column with the items in the second column\r\n   X. Indirect Addressing 			 I. Array implementation\r\n   Y. Indexed Addressing 			II. Writing re-locatable code\r\n   Z. Base Register Addressing 		       III. Passing array as parameter\r\n', NULL, '(X, III) (Y, I) (Z, II) ', '(X, II) (Y, III) (Z, I)', '(X, III) (Y, II) (Z, I)', '(X, I) (Y, III) (Z, II)', '', 'optiona', 'MC'),
(75, 5, 'level_m', 'Control Unit:-\r\n\r\nA micro program control unit is required to generate a total of 25 control signals. Assume that during any micro instruction, at most two control signals are active. Minimum number of bits required in the control word to generate the required control signals will be\r\n', NULL, '2', '2.5', '10', '12', '', 'optionc', 'MC'),
(76, 5, 'level_m', 'Assembly Language and Operations:-\r\n\r\nA CPU has 24-bit instructions. A program starts at address 300. Which one of the following is a legal program counter(all values in decimal)?\r\n', NULL, '400', '500', '600', '700', '', 'optionc', 'MC'),
(77, 5, 'level_m', 'How many different instructions would a computer with an eight bit operation code and a 16-bit operand address is capable of performing?', NULL, '8', '16', '64', '256', '', 'optiond', 'MC'),
(78, 5, 'level_m', 'In reference to the above question, how many different addresses would be possible?', NULL, '256', '1,024', '32,768', '65,536', '', 'optiond', 'MC'),
(79, 5, 'level_m', 'I/O:-\r\n\r\nThe correct matching for the following pairs is\r\n   (A) DMA I/O 				(1) High speed RAM\r\n   (B) Cache				(2) Disk\r\n   (C) Interrupt I/O		 	(3) Printer\r\n   (D) Condition Code Register 		(4) ALU\r\n', NULL, 'A - 4 B - 3 C - 1 D - 2 ', 'A - 2 B - 1 C - 3 D – 4        ', 'A - 4 B - 3 C - 2 D - 1 	', 'A - 2 B - 3 C - 4 D - 1', '', 'optionb', 'MC'),
(80, 5, 'level_m', 'What is interrupt-driven I/O and what is its major advantage?', NULL, 'An I/O device needing service sends a request to the PIC (Programmable interrupt controller), which in turn notification the CPU of the request based on the assigned priority level of the specific I/O', 'Each individual I/O device is serviced sequentially on a regular basis by the PIC. This speeds up the I/O process.', 'Individual I/O device regularly send inquiries to the CPU to see if it is available for a specific I/O operation, if the CPU is available, the I/O device then proceeds to carry out its operation.', 'Each individual I/O device is checked sequentially on a regular basis to see if it needs to be serviced. This slows down the CPU operation; it is not very efficient.', '', 'optiona', 'MC'),
(81, 5, 'level_h', '[Question 41 to 50 carry 4 Marks]\r\n\r\nPipeline:-\r\n\r\nA 5-stage pipelined processor has Instruction Fetch (IF), Instruction Decode (ID), Operand Fetch (OF), Perform Operation (PO) and Write Operand (WO) stages. The IF, ID, OF and WO stages take 1 clock cycle each for any instruction. The PO stage takes 1 clock cycle for ADD and SUB instructions, 3 clock cycles for MUL instruction, and 6 clock cycles for DIV instruction respectively. Operand forwarding is used in the pipeline. What is the number of ', NULL, '13', '15', '17', '19', '', 'optionc', 'MC'),
(82, 5, 'level_h', 'Consider a pipelined processor with the following four stages:\r\nIF: Instruction Fetch\r\nID: Instruction Decode and Operand Fetch\r\nEX: Execute\r\nWB: Write Back\r\nThe IF, ID and WB stages take one clock cycle each to complete the operation. The number of clock cycles for the EX stage depends on the instruction. The ADD and SUB instructions need 1 clock cycle and the MUL instruction needs 3 clock cycles in the EX stage. Operand forwarding is used in the pipelined processor.\r\nWhat is the number of cloc', NULL, '7', '8', '10', '14', '', 'optionc', 'MC'),
(83, 5, 'level_h', 'A CPU has a five-stage pipeline and runs at 1 GHz frequency. Instruction fetch happens in the first stage of the pipeline. A conditional branch instruction computes the target address and evaluates the condition in the third stage of the pipeline. The processor stops fetching new instructions following a conditional branch until the branch outcome is known. A program executes 109 instructions out of which 20% are conditional branches. If each instruction takes one cycle to complete on average, t', NULL, '1.0 second', '1.2 seconds', '1.4 seconds	', '1.6 seconds', '', 'optionc', 'MC'),
(84, 5, 'level_h', 'A 5 stages pipelined CPU has the following sequence of stages:\r\nIF – Instruction fetch from instruction memory.\r\nRD – Instruction decode and register read.\r\nEX – Execute: ALU operation for data and address computation.\r\nMA – Data memory access – for write access, the register read at RD state is used.\r\nWB – Register write back.\r\nConsider the following sequence of instructions:\r\nI1: Load R0, loc 1; 				R0 &lt;=M[loc1]\r\nI2: Add R0, R0 1; 				R0 &lt;= R0 + R0\r\nI3: Store R2, R0 1; 				R2', NULL, '8', '10', '12', '15', '', 'optionb', 'MC'),
(85, 5, 'level_h', 'Assembly Language and Operations:-\r\n\r\nIn an 11-bit computer instruction format, the size of address field is 4 bits. The computer uses expanding OP code technique and has 5 two-address instructions and 32 one-address instructions and the number of zero-address instructions it can support is ______________.\r\n', NULL, '128 ', '256', '512', 'none of these', '', 'optiond', 'MC'),
(86, 5, 'level_h', 'Consider the following set of micro-operation:\r\nt0:	MAR&lt;--(PC)\r\nt1:	IR&lt;--(MDR), PC&lt;--(PC + 1)\r\nt2: 	Decoder &lt;-- (IR)\r\nt3: 	ABUS &lt;-- (R1), BBUS &lt;-- (R2)\r\nt4:	ALU &lt;--(R1 + R2)\r\nt5:	CBUS &lt;-- (ALU)\r\nt6:	R1 &lt;-- CBUS\r\nThe operation(s) that make up the entire fetch phase of the instruction cycle include\r\n', NULL, 't3', 't4', 't5, t6', 't0,t1', 't0,t1,t2', 'optione', 'MC'),
(87, 5, 'level_h', 'Consider the following data path of a simple non-pipelined CPU. The registers A,B, A1, A2, MDR, the bus and the ALU are 8-bit wide. SP and MAR are 16-bit registers. The MUX is of size 8 ', '1385108253.jpg', '3', '4 ', '5 ', '6', ' ', 'optionc', 'MC'),
(88, 5, 'level_h', 'I/O:-\r\nAn application loads 100 libraries at startup. Loading each library requires exactly one disk access. The seek time of the disk to a random location is given as 10ms. Rotational speed of disk is 6000rpm. If all 100 libraries are loaded from random locations on the disk, how long does it take to load all libraries? (The time to transfer data from the disk block once the head has been positioned at the start of the block may be neglected)\r\n', NULL, '0.50s ', '1.50s ', '1.25s ', '1.00s', '', 'optionb', 'MC'),
(89, 5, 'level_h', 'On a non-pipelined sequential processor, a program segment, which is a part of the interrupt service routine, is given to transfer 500 bytes from an I/O device to memory. \r\n  Initialize the address register \r\n  Initialize the count to 500\r\n  LOOP: Load a byte from device\r\n  Store in memory at address given by address register\r\n  Increment the address register\r\n  Decrement the count\r\n  If count! = 0 go to LOOP\r\nAssume that each statement in this program is equivalent to a machine instruction whic', NULL, '3.4', '4.4', '5.1', '6.7', '', 'optiona', 'MC'),
(90, 5, 'level_h', 'Control Unit:-\r\n\r\nA micro instruction is to be designed to specify\r\n    (i) none or one of the three micro operations of one kind and\r\n    (ii) none or upto six micro operations of another kind \r\nThe minimum number of bits in the micro-instruction is\r\n', NULL, '9', '5', '8', 'None of the above', '', 'optionc', 'MC'),
(91, 2, 'level_m', 'sdfsf', '1385550463.jpeg', 'sdf', 'sdf', 'sf', 'sdf', '', 'optiona', 'MC'),
(92, 6, 'level_e', '1  Marks Questions (Question 1 to Question 25)\r\n\r\nThe postfix form of the expression (A + B)∗(C∗D − E)∗F / G is    \r\n ', NULL, 'AB   + CD∗E − FG /∗∗', '/ AB + CD ∗ E − F ∗∗G', '/ AB + CD ∗ E − ∗F ∗ G ', '/ AB + CDE ∗ − ∗', '', 'optiona', 'MC'),
(93, 6, 'level_e', 'A full binary tree with 2n+1 nodes contain', NULL, 'n leaf nodes ', 'n non-leaf nodes', 'n-1 leaf nodes ', 'n-1 non-leaf nodes', '', 'optionb', 'MC'),
(94, 6, 'level_e', 'What is the number of vertices in an undirected connected graph with 27 edges, 6 vertices of degree 2, 3 vertices of degree 4 and remaining of degree 3? ', NULL, '10', '11', '18', '19', '21', 'optiond', 'MC'),
(95, 6, 'level_e', 'The simplified form of f(x,y,z) = x&#039;y(z + y&#039;x) + y&#039;z is ', NULL, 'x&#039;z + y&#039;z    ', 'xz+y’z   ', 'x’z+yz  ', 'xz+yz ', 'None of the above', '', 'MC'),
(96, 6, 'level_e', '5.	Which of the following is not a permissible input combinations for a 4:2 encoder, assuming that the inputs are A, B, C and D? ', NULL, 'ABCD = 1000', 'ABCD = 0100', 'ABCD = 0010', 'ABCD = 1001', 'All of them are permissible', 'optiond', 'MC'),
(97, 6, 'level_e', 'A process executes the following segment of code\r\n              for (j = 1; j &lt;= n; j++)\r\n              fork();\r\n	The number of new processes created is\r\n', '1387260047.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(98, 6, 'level_e', 'Paging gives rise to which one of the following problems', NULL, 'Internal fragmentation', 'External fragmentation', 'Thrashing', 'Segmentation', 'Both thrashing and segmentation', 'optiona', 'MC'),
(99, 6, 'level_e', 'Please see below', '1387260397.jpeg', '', ' ', ' ', '', '', 'optionc', 'MC'),
(100, 6, 'level_e', 'Which of the following deadlock problem is solved by Banker’s algorithm ', NULL, 'Avoidance', 'Detection', 'Prevention', 'Recovery', 'None of the above', 'optiona', 'MC'),
(101, 6, 'level_e', 'Consider a  function F(A,B,C) = Sum m(1,2,4,5,6,7).  To implement this function using a 4:1 multiplexer without any other logic gates, which of the following is correct?  (Assume that only the constant logic 0 and 1, and the literals A, B, C are available, but not A&#039;, B&#039;, C&#039;.)', NULL, 'connect AB to the selection lines', 'connect AC to the selection lines', 'connect BC to the selection lines  ', 'connect nothing to the selection lines', '', 'optionc', 'MC'),
(102, 6, 'level_e', 'Which one of the following statements about threads is false?', NULL, 'Creating a thread is faster than creating a process.', 'In the pure user-level model, if one thread blocks then all threads associated with the same process block. ', 'In the pure kernel-level model, if one thread blocks then all threads associated with the same process block. ', 'Threads can execute simultaneously if there are multiple processors.', '', 'optionc', 'MC'),
(103, 6, 'level_e', 'Given memory partitions of 100K, 500K, 200K, 300K, and 600K (in order), each of the First-fit, Best-fit, and Worst-fit algorithms place processes of 212K, 417K, 112K, and 426K (in order). Which algorithm makes the most efficient use of memory? ', NULL, 'Best Fit', 'Worst Fit  ', 'First –Fit ', 'Both First fit and Best fit', '', 'optiona', 'MC'),
(104, 6, 'level_e', 'If you were to reduce the time quantum in a pre-emptive multi- tasking system, the effective speed of each process will: ', NULL, 'go UP. ', 'go DOWN. ', 'not be affected  ', 'None of these', '', 'optionb', 'MC'),
(105, 6, 'level_e', 'Given G(a,b,c,d,e) = (a + b + c + d).(b + c + d + e).  Express G in product-of-maxterms form.', '1387260934.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(106, 6, 'level_e', 'What is the output of the following segment of code if a 4 is input by the user when asked to enter a number?\r\nintnum;  int total = 0;\r\ncout&lt;&lt; &quot;Enter a number from 1 to 10: &quot;;\r\ncin&gt;&gt;num;\r\nswitch (num){\r\ncase 1:\r\ncase 2:total = 5;\r\ncase 3:total = 10;\r\ncase 4:total = total + 3;\r\ncase 8:total = total + 6;\r\ndefault:total = total + 4;\r\n}\r\ncout&lt;&lt; total &lt;&lt;endl;\r\n', NULL, '0', '3', '13', '28', '', 'optionc', 'MC'),
(107, 6, 'level_e', 'Given the function definition:\r\n		void calc (int a, int&amp; b)\r\n                  {\r\n			int c;\r\n                        c = a + 2;\r\n                        a = a * 3;\r\n                        b = c + a;\r\n		}\r\n\r\n	What is the output of the following code fragment that invokes calc?  \r\n	(All variables are of type int)\r\n			x = 1;   y = 2;   z = 3;\r\n			calc(x, y);\r\n			cout&lt;&lt; x &lt;&lt; &#039;  &#039;&lt;&lt; y &lt;&lt; &#039;  &#039;&lt;&lt; z &lt;&lt;endl;\r\n', NULL, '1  2  3       ', '1  6  3', '3  6  3      ', '1  14  9        ', '', 'optionb', 'MC'),
(108, 6, 'level_e', 'What are the main advantages of the microkernel approach to system design?', NULL, 'Adding a new service does not require modifying the kernel', 'It is more secure as more operations are done in user mode than in kernel mode', 'A simpler kernel design and functionality typically results in a more reliable operating system. ', 'All of the above. ', '', 'optiond', 'MC'),
(109, 6, 'level_e', 'A difference between OS system calls and program subroutine calls is: \r\n', NULL, 'System calls don’t return. ', 'OS system calls set the Protection bit ', 'OS system calls stack Program Counter. ', 'None - no difference. ', '', 'optionb', 'MC'),
(110, 6, 'level_e', 'One difference between kernel mode and user mode is ', NULL, 'Kernel mode runs faster than user mode. ', 'Kernel mode is internal to the CPU; it does not require accessing memory in RAM. ', 'Some operations are permitted in kernel mode that are prohibited in user mode. ', 'Address translation is not needed in kernel mode. ', '', 'optionc', 'MC'),
(111, 6, 'level_e', 'In the readers-writers problem, processes P and Q are allowed to simultaneously access the shared resource if and only if: ', NULL, 'P and Q are both reading. ', 'P and Q are both writing.', 'Either P or Q or both is reading ', 'P is reading and Q is writing, or vice versa. ', '', 'optiona', 'MC'),
(112, 6, 'level_e', 'Suppose that the operating system is running a non-preemptive scheduler and that process P is currently running. A context switch can occur: ', NULL, 'When P terminates. ', 'When another process unblocks. ', 'When another process enters. ', 'When the priority of some other process exceeds the priority of P. ', '', 'optiona', 'MC'),
(113, 6, 'level_e', 'Which of the following are equivalent to num[i] :', NULL, '*(num+i)', 'i[num]', 'Both (a) and (b)', 'None', '', 'optionc', 'MC'),
(114, 6, 'level_e', 'Which of the following represents a postorder traversal of T ?	', '1387263998.jpeg', 'P Q U W X V Y Z', 'U Q X W P V Z Y ', 'U X W Q Z Y V P ', 'U X Z Q W Y V P', '', 'optiond', 'MC'),
(115, 6, 'level_e', 'A full binary tree with 2n+1 nodes contain ', NULL, 'n leaf nodes  ', 'n non-leaf nodes', 'n-1 leaf nodes  ', 'n-1 non-leaf nodes ', '', 'optionb', 'MC'),
(116, 6, 'level_e', 'Consider the following pseudocode.\r\nx := 1;\r\ni := 1;\r\nwhile (x &lt;= 1000)\r\nbegin\r\nx := 2x ;\r\ni := i + 1;\r\nend;\r\nWhat is the value of i at the end of the pseudocode?\r\n', NULL, '4', '5', '6', '7', '8', 'optionb', 'MC'),
(117, 6, 'level_e', 'Verbal  - Aptitude(One marks)\r\nA’s expenditure is 20 % more than B’s expenditure, whereas B’s expenditure is 30% less than C‘s expenditure. By what percentage is A’s expenditure less than C’s expenditure?\r\n', NULL, '16% ', '12%', '14%', '18%', '17%', 'optionb', 'MC'),
(118, 6, 'level_e', 'The difference between 6/7 th of a 7/8 of a natural number and ¼ of 6/7 of that number Is 840.\r\nFind the number.\r\n', NULL, '1498', '1638', '1568', '1708', '', 'optionc', 'MC'),
(119, 6, 'level_e', 'The antonym of antidote is', NULL, 'Medicine', 'Poison ', 'Anodyne     ', 'Amity', '', '', 'MC'),
(120, 6, 'level_e', 'In a bag, there are 150 coins of Re. 1, 50p and 25p denominations. If the total value of coins is Rs. 150, how many rupees can be constituted by 50p coins?', NULL, '16', '20', '150', 'None of these', '', '', 'MC'),
(121, 6, 'level_e', 'Identify the best way of writing the sentence in the context of the correct usage of standard written English, but the message conveyed by the sentence should remain same.\r\n\r\nExcept for you and I, everyone brought a present for the little birthday boy.\r\n', NULL, 'Except for him and I, everyone brought a present for the little birthday boy.', 'With the exception of you and I, everyone brought a present for the little birthday boy.', 'Except for you and I, everyone had brought a present for the little birthday boy.', 'Except for you and me, everyone brought a present for the little birthday boy.', 'Except for you and me, all brought present for the little boy.', '', 'MC'),
(122, 6, 'level_m', '2  Marks Questions (Question 26 to Question 55)\r\n\r\nLet A and B be two sets of words (strings) from S*, for some alphabet of symbols S. Suppose that B is a subset of A. Which of the following statements must always be true of A and B ?\r\nI. If A is finite, then B is finite.\r\nII. If A is regular, then B is regular.\r\nIII. If A is context-free, then B is context-free.\r\n', NULL, 'I only ', 'II only ', 'III only ', 'I and II only ', 'I, II, and III', 'optiona', 'MC'),
(123, 6, 'level_m', 'Fred created a new automation model which is a pushdown automaton but with two stacks and the added ability of having commands which don’t read the input tape but which can pop from one stack and push into the other ( and the reverse). This new automaton can recognize: (choose the strongest result)', NULL, 'context-free language ', 'context-sensitive languages', 'regular language', 'languages recognizable by Turing machines', 'none of the above', 'optiond', 'MC'),
(124, 6, 'level_m', 'How many articulation points are there in the following graph	', '1387263965.jpeg', '5', '6 ', '7 ', '8', '', 'optionb', 'MC'),
(125, 6, 'level_m', 'Consider a doubly linked list. If you want to delete an element pointed to by the curr (assume not at end), which of the following codes can accomplish this:', NULL, 'curr --&gt; prev = curr --&gt; next;		             curr --&gt; next = curr --&gt;prev;', 'curr --&gt; prev = curr --&gt; next --&gt; prev;	             curr --&gt; next = curr --&gt; prev --&gt; next;', 'curr --&gt; prev = curr --&gt; next --&gt; next;	             curr --&gt; next = curr --&gt; prev --&gt; prev;', 'curr --&gt; next --&gt; prev = curr --&gt; prev;	             curr --&gt; prev --&gt; next = curr --&gt; next;', 'curr --&gt; next --&gt; next = curr --&gt; prev;	             curr --&gt; prev --&gt; prev = curr --&gt; next;         ', 'optiond', 'MC'),
(126, 6, 'level_m', 'Suppose L1 hit time = 1 cycle, L1 hit rate = 90%,  L2 hit time = 2 cycles,  L2 miss penalty = 50 cycles,  L2 hit rate = 90%. What is the average access time of the memory system?', NULL, '1.34 cycles', '1.58 cycles', '2.12 cycles', '2.45 cycles', '2.80 cycles', '', 'MC'),
(127, 6, 'level_m', 'The figure below shows a 1-bit ALU with A, B, and CarryIn as the three inputs.  The operations are selected by E and F. \r\n \r\nWhat is the combination of E, F, and CarryIn (in order) required to output C = A – B’\r\n', '1387264650.jpeg', '0, 2, 0', '0, 1, 0', '0, 2, 1', '0, 0, 0', 'None of the above', 'optionc', 'MC'),
(128, 6, 'level_m', 'Referring to below figure, what is the combination of E, F, and CarryIn (in order) required to produce output C = A + B’', '1387264765.jpeg', '0, 2, 0', '1, 1, 0', '1, 1, 1', '1, 2, 1', 'None of the above', 'optionb', 'MC'),
(129, 6, 'level_m', 'It is known that the propagation delay of AND, OR, XOR and NOT gate is 10 units and propagation delay for multiplexers is 20 units. The full adder is constructed from XOR, AND, OR and NOT gate. What is the maximum propagation delay for the above 1-bit ALU?', NULL, '50 units', '60 units', '70 units', '80 units', '90 units', '', 'MC'),
(130, 6, 'level_m', 'Let ∑={0,1}. Give a CFG that generates all strings of the form wx, where w, xε ∑+, |w|=|x| and w is not the reverse of x. Which of the following set of strings can be derived from each non-terminal', NULL, 'all strings of 0s and 1s of even length (including ε).', 'all strings of even length (&gt;=2) with different first and last symbol', 'all strings of even length 2k (k&gt;=1) such that for some 1&lt;= i&lt;= k, the ith symbol from the beginning is different from the ith symbol from the end. ', 'All', 'None', 'optiond', 'MC'),
(131, 6, 'level_m', 'Which of the following is not a CFL.', '1387265225.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(132, 6, 'level_m', 'Study the following program \r\nvoid mixtra (int x, int *y)\r\n{\r\nint c;\r\nc = x + *y;\r\nx = c + 1;\r\n  *y = c + 1;\r\nc = c + 1;\r\ncout&lt;&lt; x &lt;&lt;  *y &lt;&lt; c;\r\n}\r\nint main()\r\n{\r\nint a, b;\r\nint *c;\r\na = 1;\r\nb = 2;\r\nc = &amp;b;\r\n  /***/\r\ncout&lt;&lt; a &lt;&lt;b&lt;&lt; *c;\r\n}\r\nAt /***/ a call to mixtra is done. For which of the following call, the output is:  333322\r\n', NULL, 'mixtra(a,&amp;b); ', 'mixtra(b,&amp;a);', 'mixtra(a,&amp;a);  ', 'mixtra(a,c);', 'mixtra(b,c);', 'optionb', 'MC'),
(133, 6, 'level_m', 'What is the output of the following program?\r\nint fun(int, float);\r\nint x = 6;\r\nint main() {\r\nint x = 4;\r\ncout&lt;&lt; (x + ::x + fun(::x, (float) x) );\r\ncin&gt;&gt; x;\r\nreturn 0;}\r\nint fun(int x, float y) {return x - y + ::x;}\r\n', NULL, '8', '10', '18', '12', '14', 'optionc', 'MC'),
(134, 6, 'level_m', 'What is the output of the following program?\r\nint rek(int x);\r\nint main(void) {\r\n	int tal=5;\r\n	while (tal &lt; 40) {\r\n		tal = rek(tal);\r\n		cout&lt;&lt;tal&lt;&lt;  ” 	”; }\r\n	return 0; }\r\n\r\nint rek(int x) {\r\n	if (x &lt; 0)		return -x;\r\n	else	return x+rek(x-2);\r\n}\r\n', NULL, '10  32   274', '10  32   152', '8   32   152', '10  18   274', '8   18   152', 'optiona', 'MC'),
(135, 6, 'level_m', '\r\n', '1387344545.jpeg', '', '', '', '', '', 'optione', 'MC'),
(136, 6, 'level_m', 'Consider the circuit diagram showing the connection of a JK-flip-flop and the timing diagram given below.\r\nWhat are the respective values of Q1 at A, B, C and D?', '1387344737.jpeg', 'A – 0	B – 0 	C – 0	D – 0', 'A – 0	B – 0 	C – 1	D – 0', 'A – 1	B – 1 	C – 0	D – 1', 'A – 0	B – 1	C – 1	D – 1', 'A – 1	B – 0 	C – 1	D – 0', 'optionb', 'MC'),
(137, 6, 'level_m', 'The IEEE short floating point representation with no excess to exponent of the binary number -1001.1011 is  ', NULL, '0   00000011    00110110000000000000000', '1   00000011    00000000000000000011011', '1   00000011    00110110000000000000000', '1   00011011    00000000000000000000011', '1   00011011    11000000000000000000000', 'optionc', 'MC'),
(138, 6, 'level_m', 'The following data is provided about a hard disk.\r\n\r\nNumber of cylinders = 65,356\r\nNumber of heads = 12 \r\nNumber of sectors = 63 \r\nSize of a sector = 512 bytes\r\nNumber of discs = 6\r\n\r\nWhat is the capacity of this particular hard disk?\r\n', NULL, '25.297 GB', '151.785 GB', '25 GB', '141.360 GB', '23.560 GB', 'optione', 'MC'),
(139, 6, 'level_m', 'The following C code is executed “if (fork()!=0) {fork();} fork();”.How many NEW processes are created?  ', NULL, '2', '3', '4', '5', '', 'optiond', 'MC'),
(140, 6, 'level_m', 'If process P executes a non-blocking system call, i.e., a call to the kernel of a type that can always be satisfied immediately, then ', NULL, 'The program counter in Process P does not have to be saved. ', 'There is no need to switch to kernel mode.', 'The process should do a DOWN on a semaphore. ', 'There is no need to call the process scheduler. ', '', 'optiond', 'MC'),
(141, 6, 'level_m', 'Consider the following function.\r\n    f(k)\r\n     {\r\n           x = 2;\r\n           for i = 1 to k\r\n           x = x * x;\r\n           return x;\r\n     }\r\nIf n and k are positive integers, then the least value of k such that f(k) &gt;n is approximately\r\n', NULL, 'log2(log2n) ', 'log2 n', 'n (D) nlog2n ', '2^n', '', 'optiona', 'MC'),
(142, 6, 'level_m', 'If a disk has a seek time of 20 ms, rotates 20 revolutions per second, has 100 words per block, and each track has a capacity of 300 words, then the total time required to access a one block is: (Choose the closest answer)', NULL, '25', '30', '40', '50', '60', 'optione', 'MC'),
(143, 6, 'level_m', 'Let M be a single-tape, deterministic Turing machine with tape alphabet blank,0,1, and let C denote the (possibly infinite) computation of M starting with a blank tape. The input to each problem below is M, together with a positive integer n. Which of the following problems is (are) decidable?\r\n   I. The computation C lasts for at least n steps.\r\n   II. The computation C lasts for at least n steps, and M prints a 1 at some point after the nth step.\r\n   III. M scans at least n distinct tape', NULL, 'None', 'III only', 'I and II only', 'I and III only', 'I, II, and III', 'optiond', 'MC'),
(144, 6, 'level_m', 'Consider the following two languages.\r\n          L1 = {x belongs to {a,b}*|x has equally many a’s and  b’s}\r\n          L2 = {x belongs to {a,b,c}*|x has equally many a’s, b’s and c’s}\r\nWhich of the following is true about L1 and L2?\r\n', NULL, 'L1 and L2 are both regular.', 'L1 is regular, and L2 is context-free but not regular.', 'Neither L1 nor L2 is regular, but both are context-free.', 'L1 is context-free but not regular, and L2 is not context-free.', 'Neither L1 nor L2 is context-free.', 'optiond', 'MC'),
(145, 6, 'level_m', 'Which of the following problems is (are) decidable?\r\n  I. Given a (finite) string w, is w a prefix of the decimal expansion of p ?\r\n  II. Given a program and an input, is the program’s output the decimal expansion of p ?\r\n  III. Given a program that takes as input a prefix of the decimal expansion of p, is the program’s output always the same for every prefix?\r\n', NULL, 'I only', 'II only', 'III only', 'I and II only', 'I, II, and III', 'optiona', 'MC'),
(146, 6, 'level_m', 'Consider languages L and L1, each over the alphabet {a,b}, where\r\n   L1={w | w contains some x belongs to L as a substring}.\r\nWhich of the following must be true about L and L1 ?\r\n       I. If L is regular, then L1 is regular.\r\n      II. If L is context-free, then L1 is context-free.\r\n     III. If L is recursive, then L1 is recursive.\r\n', NULL, 'I only ', 'III only ', 'I and III only ', 'II and III only ', 'I, II, and III', 'optione', 'MC'),
(147, 6, 'level_m', 'Consider a system that uses paging. Suppose an instruction in process P references virtual address V, which is located in page G, offset O. A page fault occurs if ', NULL, 'There is no pair [G,F] in the transition lookaside buffer. ', 'G is larger then the number of frames in memory. ', 'G is a page in some other process. ', 'The page table entry PageTable[G] indicates that page G is not in memory. ', '', 'optiond', 'MC'),
(148, 6, 'level_m', 'Suppose that the following processes arrive for execution at the times indicated. Each process will run the listed amount of time. In answering the questions, use nonpreemptive scheduling and base all decisions on the information you have at the time the decision must be made.\r\nProcess       Arrival Time            Burst Time\r\nP1                 0.0                      8\r\nP2                 0.4                      4\r\nP3                 1.0                      1\r\n\r\nThe average turnaround time ', NULL, '11.5', '10.5 ', '9.5   ', '7.3', '', 'optionc', 'MC'),
(149, 6, 'level_m', 'Suppose there is a BST with numbers {30, 20, 40, 35, 50, 33, 38, 45, 60, 43} inserted in some order. Which of the following is not a possible sequence of search of BST?', NULL, '30, 40, 50, 45, 43   ', '30, 40, 35, 38  ', '30, 40, 50, 38, 45, 43  ', '30, 40, 50, 60 ', 'All are possible', '', 'MC'),
(150, 6, 'level_m', 'A min-heap is constructed on n elements. The times to find 7th minimum element and 7th maximum element are of the order: ', NULL, 'O(n) and O(n) ', 'O(log(n)) and O(log(n))  ', 'O(1) and O(n)  ', 'O(1) and O(1) ', 'O(1) and O(log(n)) ', 'optionc', 'MC'),
(151, 6, 'level_m', 'Consider the collection of all undirected graphs with 10 nodes and 6 edges. Let M and m, respectively, be the maximum and minimum number of connected components in any graph in the collection. If a graph has no selfloops and there is at most one edge between any pair of nodes, which of the following is true?', NULL, 'M = 10, m = 10', 'M = 10, m = 1', 'M = 7, m = 4', 'M = 6, m = 4', 'M = 6, m = 3', 'optionc', 'MC'),
(152, 6, 'level_m', 'Two marks( Q. 61- 65)', '1387346009.jpeg', '', ' ', ' ', '', '', '', 'MC'),
(153, 6, 'level_m', '', '1387346106.jpeg', '', '', '', '', '', '', 'MC'),
(154, 6, 'level_m', 'Mayank, Mirza, Little and Jaspal bought a motorbike for $60. Mayank paid one-half of the sum of the amounts paid by the other boys. Mirza pad one-third of the sum of the amounts paid by the other boys. Little paid one-fourth of the sum of the amounts paid by the other boys. How much did Jaspal have to pay? ', NULL, '$13', '$12', '$15', '$16', '', 'optiona', 'MC'),
(155, 6, 'level_m', 'The passage below is followed by a question and four alternative answers. Select the best alternative.\r\nIn the Panchatantra, a woodpecker offered the following words of consolation to a hen sparrow whose eggs had been crushed by an elephant with spring fever;\r\nFor the lost and dead and past The wise have no laments Between the wise and fools  Is just this difference\r\nThis stanza highlights an important lesson that:\r\n', NULL, 'Wisdom is a direct function of retaining the lessons contained in the past.', 'There is no end to the reward of discriminating judgment.', 'One must be sensitive to the past only in so far as it offers wisdom, not as an object of brooding or regret.', 'Joy results from resolute yet circumspect use of the active powers; only the foolish would do otherwise.', '', '', 'MC'),
(156, 6, 'level_m', 'Complete the sentence:\r\nThe equipments that were being used in the survey were ____, and because of the below zero temperature, it was feared that they would freeze and ____.\r\n', NULL, 'Icy…..capsize ', 'Frosty….Shide    ', 'Fragile….Shatter ', 'Frozen….dehydrate    ', 'Useless….capsize', '', 'MC'),
(214, 7, 'level_m', 'A sum is divided between A and B in the ratio of 1:2. A purchased a car from his part, which depreciates 14.3% per annum and B deposited his amount in a bank, which pays him 20% interest per annum compounded annually. By what percentage, total sum of money increase after 2 years due to this investment pattern (approximately)?', NULL, '20%', '26.66%                           ', '30%', '25%', '', 'optiona', 'MC'),
(213, 7, 'level_m', 'Man has no choice but to seek truth, he is made uncomfortable and frustrated without truth—thus, the quest for truth is part of what makes us ___________ .', NULL, 'noble', 'different', 'human', 'intelligent', 'aggressive', 'optionc', 'MC'),
(212, 7, 'level_m', '2 Marks questions (Q61-Q65)\r\n\r\nDeliberations of our governing bodies are held in public in order to allow public scrutiny of each body&#039;s actions and take to task those actions that citizens feel are not, for whatever reason, in their best interest.\r\nQ: with which of the following statements would the author of the above passage probably agree?\r\n', NULL, 'Deliberations of our governing bodies should be held in public.', 'public scrutiny usually results in the criticism of governing bodies.', 'The best interests of the public usually do not coincide with the motives of our governing bodies.', 'No government decisions ought to be kept from the public.', 'citizens in other countries are not cared for by the government.', 'optiona', 'MC'),
(211, 7, 'level_m', 'Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.  Array B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192. Assume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged,direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.	\r\n\r\nfor (i = 0; i&lt; 256; i++) A[i] = A[i] + B[2*i];\r\n\r\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-back policy?', NULL, '0', '256 ', '1,024 ', '2,000', '4,000 ', 'optiona', 'MC');
INSERT INTO `subj_question` (`qnid_s`, `subid`, `level`, `question`, `figure`, `optiona`, `optionb`, `optionc`, `optiond`, `optione`, `correct`, `type`) VALUES
(210, 7, 'level_m', 'Array A contains 256 elements of 4 bytes each. Its first element is stored at physical address 4,096.  Array B contains 512 elements of 4 bytes each. Its first element is stored at physical address 8,192. Assume that only arrays A and B can be cached in an initially empty, physically addressed, physically tagged,direct-mapped, 2K-byte cache with an 8-byte block size. The following loop is then executed.	\r\n\r\nfor (i = 0; i&lt; 256; i++) A[i] = A[i] + B[2*i];\r\n\r\nDuring the execution of the loop, how many bytes will be written to memory if the cache has a write-through policy?', NULL, '0', '256 ', '1,024 ', '2,048	', '4,096 ', 'optionc', 'MC'),
(209, 7, 'level_m', 'Company X shipped 5 computer chips, 1 of which was defective, and Company Y shipped 4 computer chips, 2 of which were defective. One computer chip is to be chosen uniformly at random from the 9 chips shipped by the companies. If the \r\nchosen chip is found to be defective, what is the probability that the chip came from Company Y ?\r\n', NULL, '2/9', '4/9', '1/2	', '2/3', '5/7', 'optiond', 'MC'),
(208, 7, 'level_m', 'An Euler circuit of an undirected graph is a circuit in which each edge of the graph appears exactly once. Which\r\nof the following undirected graphs must have an Euler circuit?\r\n\r\nI. A complete graph with 12 vertices		\r\nII. A complete graph with 13 vertices	       \r\nIII. A tree with 13 vertices', NULL, 'I only ', 'II only', 'III only ', 'I and II', 'I and III', 'optionb', 'MC'),
(207, 7, 'level_m', 'A transaction schedule is serializable if its effect is equivalent to that of some serial schedule. Consider a bookkeeping operation consisting of two transactions — T1 and T2— that are required to keep the sum A + B + C unchanged. Which of the following pairs of transactions will always result in a serializable schedule?\r\n\r\nI. 	T1 			       T2         \r\n      Lock A; 		             Lock B;\r\n      A = A - 10; 	             B = B - 20;\r\n      Unlock A; 		     Unlock B;\r\n      B = B + 10; 	             C = C + 20;\r\n\r\n\r\nII. 	T1 		T2\r\n     A = A - 10; 	Lock B;\r\n     Lock B; 	        B = B - 20;\r\n     B = B + 10; 	Unlock B;\r\n     Unlock B; 	        C = C + 20;\r\n\r\nIII. 	T1 	             T2\r\n       Lock A; 	             Lock A;\r\n       A = A - 10;           B = B - 20;\r\n       Unlock A; 	     Unlock A;\r\n       B = B + 10;           C = C + 20;\r\n		', NULL, 'I only', 'II only ', 'III only ', 'I and II', 'II and III ', 'optionb', 'MC'),
(204, 7, 'level_m', 'Which of the following predicate calculus formulas must be true under all interpretations?', '1387438165.jpeg', 'I only 	', 'III only ', 'I and II ', 'I and III', 'II and III', 'optiond', 'MC'),
(205, 7, 'level_m', 'Of the following problems concerning a given undirected graph G, which is currently known to be solvable in polynomial time?', NULL, 'Finding a longest simple cycle in G	', 'Finding a shortest cycle in G', 'Finding ALL spanning trees of G', 'Finding a largest clique in G', 'Finding a node coloring of G (where adjacent nodes receive distinct colors) with the minimum number of colors', 'optionb', 'MC'),
(206, 7, 'level_m', 'Two processors, M-5 and M-7, implement the same instruction set. Processor M-5 uses a 5-stage pipeline and a\r\nclock cycle of 10 nanoseconds. Processor M-7 uses a 7-stage pipeline and a clock cycle of 7.5 nanoseconds. Which of the following is (are) true?\r\nI. M-7’s pipeline has better maximum throughput than M-5’s pipeline.\r\nII. The latency of a single instruction is shorter on M-7’s pipeline than on M-5’s pipeline.\r\nIII. Programs executing on M-7 will always run faster than programs executing on M-5.	', NULL, 'I only ', 'II only ', 'I and III only  ', 'II and III only ', 'I, II, and III ', 'optiona', 'MC'),
(202, 7, 'level_m', '', '1387437831.jpeg', '12', '4', '8', '16', '32', 'optiond', 'MC'),
(203, 7, 'level_m', 'Suppose that P(x, y) means “x is a parent of y” and M(x) means “x is male”. If F(v, w) equals \r\n\r\nwhat is the meaning of the expression F(v, w)? ', '1387438001.jpeg', 'v is a brother of w.   ', 'v is a nephew of w.    ', 'v is an uncle of w.    ', 'v is a grandfather of w.     ', 'v is a male cousin of w.', 'optionc', 'MC'),
(200, 7, 'level_m', '', '1387389584.jpeg', 'III only 	', 'I and III only ', 'II and III only', 'I, II, and III ', 'None of the above', 'optiona', 'MC'),
(201, 7, 'level_m', 'Which of the options shown below is an optimal Huffman code for the following distribution?\r\na occurs 10% of the time \r\nb occurs 14% of the time \r\nc occurs 16% of the time \r\nd occurs 18% of the time \r\ne occurs 42% of the time', NULL, 'a = 00, b = 01, c = 110, d = 111, e = 10 ', 'a = 0, b = 100, c=101, d= 110, e = 111 ', 'a = 000, b = 001, c = 010, d = 011, e = 1 ', 'a = 000, b = 001, c = 1, d = 011, e = 010 ', 'a = 00, b = 10, c = 010, d = 011, e = 11', 'optionc', 'MC'),
(199, 7, 'level_m', 'Suppose a program transmits 64 short UDP packets to a certain host. Which of the following statements is not true, assuming that none of the packets get dropped?	', NULL, 'If the packets are transmitted over a circuit-switched network, then the packets are guaranteed to arrive in order.', 'If the packets are transmitted over a local area packet-switched network with fixed routing tables, then the packets are guaranteed to arrive in order. ', 'If the packets are transmitted over a wide area packet-switched network with virtual circuit routing, and all the packets are transmitted in the same session, then the packets are guaranteed to arrive in order.', 'If the packets are transmitted over a wide area packet-switched network with dynamic routing, then the packets are guaranteed to arrive in order.', 'Regardless of the routers or underlying network, there is a non-zero probability that the packets will arrive in order. ', 'optiond', 'MC'),
(198, 7, 'level_m', 'Consider the following function.\r\nFunction EXPL( int n ) \r\n{ if ( n &lt;= 2 ) then return 1 return EXPL( n / 2 ) * lg( n )} \r\nWhat does EXPL(n) return, if n is a power of 2?\r\n', NULL, 'lg(n) ', 'n*lg(n) 	', 'n! *lg(n) ', '(lg(n))! ', 'n! * (lg(n))!', 'optiond', 'MC'),
(196, 7, 'level_m', 'Given two square, non-singular matrices A and B, which of the following statements is not always true?', '1387388635.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(197, 7, 'level_m', 'Suppose that on a certain system, every function call puts 10 bytes onto the stack plus another 4 bytes onto the stack for every integer formal parameter. Consider the following function definitions.\r\nFunction walk( int n ) {\r\nif ( n &lt;= 1) then return run( n, n / 2 )}\r\nFunction run(int x, int y ) { \r\nif ( x &gt;= y ) then walk( y )}\r\nIf n is a power of 2, then how much stack space must be available so that walk(n) can be called?\r\n', NULL, '14 * log2 (n)', '18 * log2 (n) ', '32*log2(n)−18', '32*log2(n)+14 ', '32*log2(n)+18', 'optiond', 'MC'),
(195, 7, 'level_m', 'A certain computer has a TLB cache, a one-level physically-addressed data cache, DRAM, and a disk backing store for virtual memory. The processor loads the instruction below and then begins to execute it.	\r\nlw R3, 0(R4)\r\nThis indicates that the computer should access the virtual address currently stored in register 4 and load that address’s contents into register 3. Which of the following is true about what might happen while executing this instruction?\r\n	', NULL, 'If a TLB miss occurs, then a page fault definitely occurs as well. ', 'If a data cache miss occurs, then a page fault definitely occurs as well.  ', 'No more than one data cache miss can occur.  ', 'No more than one page fault can occur. ', 'If a page fault occurs, then a data cache miss definitely does not occur as well.', 'optionc', 'MC'),
(194, 7, 'level_m', 'Consider the following two designs for a little cache.\r\nDesign #1 is a direct-mapped cache of 8 1-word cache lines. The miss penalty is 8 clock cycles.\r\nDesign #2 can store the same total number of items as Design #1, but it is a two-way associative cache of 1-word cache lines. Least-recently-used is utilized to determine which items should be removed from the cache. The miss penalty is 10 clock cycles. Suppose that the following eight memory references arrive.\r\nMemory References: 0, 3, 14, 11, 4, 11, 8, 0\r\nHow much times will these designs spend on cache miss penalties, assuming that the caches start empty?\r\n	', NULL, 'Design #1 spends 56 cycles and Design #2 spends 60 cycles ', 'Design #1 spends 56 cycles and Design #2 spends 70 cycles  ', 'Design #1 spends 48 cycles and Design #2 spends 70 cycles ', 'Design #1 spends 64 cycles and Design #2 spends 60 cycles ', 'Design #1 spends 64 cycles and Design #2 spends 80 cycles ', 'optionb', 'MC'),
(193, 7, 'level_m', 'A router using Distance-Vector routing has the following routing table\r\n	 \r\n        Net2		6	A\r\n	Net3		4	C\r\n	Net4		3	A\r\n	Net6		2	C\r\n	Net7		3	B\r\n\r\nThe router receives the following packet from router C.\r\n	Net2		4	\r\n	Net3		5	\r\n	Net4		4	\r\n	Net6		3	\r\n	Net7		2	\r\n \r\nThe updated routing table for the router at Net2 and Net3 respectively are: \r\n', NULL, 'Net2 	5	C\r\nNet3	6	C', 'Net2	6	A\r\nNet3	4	C', 'Net2	6	C\r\nNet3	6	A', 'Net2	6	B\r\nNet3    4	A', '', 'optiona', 'MC'),
(192, 7, 'level_m', 'Assume that you are the address administrator at an ISP. You have a  128.20.224.0/20 address block. You have one customers with networks of size 1000 nodes and another of size 500 nodes. What are the address blocks you will assign to these customers? Use notation similar to 128.20.224.0/20 to denote the address blocks you allocate', NULL, '128.20.224.20/23, 128.20.228.0/23', '128.20.224.20/22, 128.20.228.0/22', '128.20.224.20/22, 128.20.228.0/23 ', 'None of these', '', 'optionc', 'MC'),
(191, 7, 'level_m', 'In each case the depth-first sequence of an ordered rooted spanning tree for a graph G is given. Also given are the non-tree edges of G. Which of these spanning trees is a depth-first spanning tree?', NULL, '123242151 and {3, 4}, {1, 4} ', '123242151 and {4, 5}, {1, 3} 	', '123245421 and {2, 5}, {1, 4}', '123245421 and {3, 4}, {1, 4} ', '123245421 and {3, 5}, {1, 4}', 'optionc', 'MC'),
(189, 7, 'level_m', 'Consider the following C code.\r\nint f(int x) {\r\n             }\r\nif (x &lt; 1) return 1; else return f(x-1) + g(x);\r\nint g(int x) {\r\nif (x &lt; 2) return 2; else return f(x-1) + g(x/2); }\r\nOf the following, which best describes the growth of f(x) as a function of x? \r\n', NULL, 'Logarithmic ', 'Linear ', 'Quadratic', 'Cubic ', 'Exponential', 'optione', 'MC'),
(190, 7, 'level_m', 'For which of the following does there exist a graph G=(V,E,φ) satisfying the specified conditions?', NULL, 'A tree with 9 vertices and the sum of the degrees of all the vertices is 18.', 'A graph with 5 components 12 vertices and 7 edges.', 'A graph with 5 components 30 vertices and 24 edges. ', 'A graph with 9 vertices, 9 edges, and no cycles', 'A connected graph with 12 edges 5 vertices and fewer than 8 cycles.', 'optionb', 'MC'),
(188, 7, 'level_m', 'Referring to cache of previous question, assume it takes 1 cycle to access the cache, and 300 cycles to access main memory. Also assume the cache starts out empty. How many cycles would it take to access memory sequentially one byte at a time from address 0 to 99?', NULL, '30200 ', '15100', '402 ', '100', '', 'optionb', 'MC'),
(187, 7, 'level_m', 'Consider a direct mapped cache containing 16 bytes of data storage grouped into 2 byte blocks.Consider the following sequence of memory accesses: 12 8 2 13 5 12 3. How many cache hits would there be?', NULL, '1', '2', '3', '4', '', 'optionc', 'MC'),
(185, 7, 'level_m', 'Given the relational schema consisting of Course (Cnumber, Cname, Dept) and Enroll (SSN, Cnumber, Grade), which SQL query retrieves the Dept and Cname for courses where no student made an A in the course?  The domain for Grade is {‘A’,’B’,’C’,’D’,’F’}.', NULL, 'SELECT Dept, Cname FROM Course, Enroll WHERE Course.Cnumber¬= Enroll.Cnumber AND NOT (Grade = ‘A’);', 'SELECT Dept, Cname FROM Course, Enroll WHERE Course.Cnumber¬=  Enroll.Cnumber AND (Grade = ‘B’ OR \r\nGrade = ‘C’ OR Grade = ‘D’ OR Grade = ‘F’);', 'Both (a) and (b)', 'SELECT Dept, Cname FROM Course WHERE Cnumber  IN (SELECT Cnumber FROM ENROLL WHERE Cnumber \r\nNOT IN  (SELECT Cnumber FROM ENROLL WHERE Grade = ‘A’));', '', 'optiond', 'MC'),
(186, 7, 'level_m', 'Given the relational schema consisting of Faculty (Fnumber, Fname, Homedeptnumber), Course(Cnumber, Cname, Deptnumber) and Teaches(Fnumber, Cnumber),which SQL query returns the courses (names and number) that are taught by more than one faculty.', NULL, 'SELECT C.Cname, C.Cnumber\r\nFROM Course C, Teaches T, Teaches S\r\nWHERE C.Cnumber = T.Cnumber AND\r\n       NOT(T.Fnumber = S.Fnumber);', 'SELECT C.Cname, C.Cnumber\r\nFROM Course C, Teaches T, Teaches S\r\nWHERE C.Cnumber = T.Cnumber AND\r\n			T.Cnumber =S.Cnumber AND \r\n			NOT(T.Fnumber = S.Fnumber);', 'SELECT C.Cname, C.Cnumber\r\nFROM Course C\r\nWHERE  NOT EXISTS \r\n(SELECT * \r\nFROM Teaches T, Teaches S \r\nWHERE 	T.Cnumber =C.Cnumber AND \r\n	NOT(T.Fnumber = S.Fnumber);', 'None of the above.', '', 'optionb', 'MC'),
(184, 7, 'level_m', 'Given the following relation schema, Employee(ssn,lname,fname,salary,city,deptnumber), and the following SQL query:    \r\nSELECT deptnumber, AVG (salary)\r\n                              FROM Employee\r\n                                         WHERE salary &gt;\r\n                                                      (SELECT MAX (salary)\r\n                                                                            FROM Employee\r\n                                                                                  WHERE deptnumber = 5)\r\n                                                                                        GROUP BY deptnumber;\r\nWhat is returned by the above query?\r\n                                                                          	', NULL, 'the department by department average and max salaries ', 'the departmentwise average salary of those employees in each department who make more than the maximum salary in department 5 ', 'the salary of employees who make more than the maximum  salary in deptnumber 5   ', 'the departmentwise average salary of those employees in each department for those employees whose salary exceeds the average salary of all employees in department 5', 'none of the above ', 'optionb', 'MC'),
(180, 7, 'level_e', 'If the system of equations ax + y = 3, x + 2y = 3, 3x + 4y = 7 is consistent, then value of a is given by	', NULL, '2', '1 ', '-1 ', '0', ' ', 'optiona', 'MC'),
(181, 7, 'level_e', 'The system of linear equations x + y + z = 2, 2x + y – z = 3, 3x + 2y + kz = 4 has a unique solution if	', NULL, 'k ≠ 0           ', '-1&lt; k &lt; 1       ', '-2 &lt; k &lt; 2                   ', 'k = 0', ' ', 'optiona', 'MC'),
(182, 7, 'level_m', 'Two Marks questions (Q.26- Q.55)\r\n\r\n\r\n', '1387386900.jpeg', 'All of the above', '(i) only  ', '(i), (iii), (v)   ', '(i), (ii), (iii), (iv)	', 'None of the above', 'optionc', 'MC'),
(183, 7, 'level_m', 'For each of the following assertions, indicate whether it is True: known to be true, False: known to be false, or Unknown: unknown based on our current scientific knowledge. In each case provide a short explanation for your answer.\r\n(i) No problems in NP can be solved in polynomial time. \r\n(ii) Every NP-complete problem requires at least exponential time to be solved.\r\n(iii) X is in NP and X ≤P SAT. Then X is NP-complete.\r\n', NULL, 'True, True, True  ', 'False, True, True ', 'False, Unknown, False ', 'False, Unknown, True', '', 'optiond', 'MC'),
(179, 7, 'level_e', 'The letters of the word COCHIN are permuted and all the permutations are arranged in an alphabetical order as in an English dictionary. The number of words that appear before the word COCHIN is', NULL, '360', '192', '96', '48 ', '', 'optionc', 'MC'),
(178, 7, 'level_e', 'In the Internet Protocol (IP) suite of protocols, which of the following best describes the purpose of the Address Resolution Protocol?', NULL, 'To translate Web addresses to host names ', 'To determine the IP address of a given host name ', 'To determine the hardware address of a given host name     ', 'To determine the hardware address of a given IP address ', 'To determine the appropriate route for a datagram', 'optiond', 'MC'),
(177, 7, 'level_e', 'Consider a hard disk with 8 read heads, 10,000 tracks per surface, 600 sectors per track, and 512 bytes per sector. Assuming the drive rotates at 6,000 RPM, what is the approximate peak data transfer rate from the disk drive? (How fast can data be read from the disk?)', NULL, '300 KB/s', '30 MB/s ', '240 MB/s	', '2.4 GB/s', '', 'optionc', 'MC'),
(176, 7, 'level_e', 'Which of the following problems is not NP-complete?', NULL, 'Determining whether a Boolean proposition is satisfiable ', 'Determining the clique of maximum size within a graph ', 'Determining whether a directed graph contains a Hamiltonian circuit ', 'Determining whether an undirected graph contains an Eulerian circuit ', 'Determining the shortest round-trip route that visits all vertices in a graph', 'optiond', 'MC'),
(175, 7, 'level_e', 'Suppose that the architecture outlined in the previous question, above, is implemented with a multi-cycle five-stage pipeline with no forwarding. The first stage corresponds to instruction fetch from memory, the second corresponds to data load from registers, the third corresponds to ALU operation, the fourth corresponds to memory access, and the fifth corresponds to register update. Each stage occupies one processor cycle.\r\nSuppose that a certain instruction in a program needs to read from a register that is written by the previous instruction in the program (read-after-write data hazard). How many cycles, if any, are wasted due to a pipeline stall?', NULL, '0 cycles ', '1 cycle  ', '2 cycles  ', '3 cycles ', '4 cycles  ', 'optiond', 'MC'),
(174, 7, 'level_e', 'Given an undirected graph G with vertex set V and edge set E, which of the following statements about single-source shortest path algorithms is not true?	', NULL, 'Dijkstra’s algorithm is different than Prim’s algorithm in that Dijkstra’s algorithm can use a priority queue, but Prim’s algorithm cannot use a priority queue.', 'Dijkstra’s algorithm runs on G in asymptotic algorithmic complexity O(|E| + |V | lg |V |), assuming that a Fibonacci heap is used for the priority queue of waiting vertices and edges are represented in adjacency lists (rather than an adjacency matrix).', 'Dijkstra’s algorithm possesses lower average asymptotic algorithmic complexity than the Bellman-Ford algorithm, especially if G is so dense that |E| ≈ |V |2. ', 'The Bellman-Ford algorithm can handle edges with negative weights, whereas Dijkstra’s algorithm may fail if G possesses edges with negative weights.', 'Dijkstra’s algorithm resembles breadth-first search in that each algorithm grows a tree of “finished” nodes (none of which are modified again later by the algorithm). ', 'optiona', 'MC'),
(173, 7, 'level_e', 'Why are the tag bits of a memory address important in a cache memory system?', NULL, 'The more tag bits there are, the higher the hit ratio. ', 'The more tag bits there are, the lower the hit ratio. ', 'The tag bits tell which block of main memory is occupying a cache line. ', 'The tag bits are needed to tell whether a cache line has been modified or not. ', 'The tag bits determine which level of cache is closest to the CPU.', 'optionc', 'MC'),
(171, 7, 'level_e', 'Ram writes down a number between 1 and 1,000. Shyam must identify that number by asking ”yes/no” questions to Ram. Shyam knows that Ram always tells the truth. If Shyam uses an optimal strategy, then he will determine the answer at the end of exactly how many questions in the worst case?', NULL, '1,000 ', '999 ', '500', '32 ', '10', 'optione', 'MC'),
(172, 7, 'level_e', 'Assume a protocol that uses variable length packets of maximum payload size 250 bytes.  In addition to the payload there are 25 bytes of header and 12 bytes of trailer in each packet.  For a 600 byte message, what is the overhead (in %) for this protocol?', NULL, '70%', '80% ', '90% ', 'None of these', '', 'optionb', 'MC'),
(167, 7, 'level_e', 'Using a pipeline, which of the following instructions can cause the pipeline to have junk instructions already in the pipeline? ', NULL, 'Load', 'Multiply  ', 'Branch', 'Store', '', 'optionc', 'MC'),
(168, 7, 'level_e', '', '1387364071.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(169, 7, 'level_e', '', '1387364127.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(170, 7, 'level_e', '    Let I denote the formula: (q =⇒ p) =⇒ (p =⇒ q)  \r\n    Let II denote the formula (p =⇒ q) ∧ q \r\n    Which of the following is true?\r\n', NULL, 'I is not a tautology and II is not satisfiable. ', 'I is not a tautology and II is satisfiable. ', 'I is satisfiable and II is not satisfiable. ', 'I is a tautology and II is satisfiable.', 'I is satisfiable and II is a tautology.', 'optionb', 'MC'),
(165, 7, 'level_e', 'For hashing by the division method, which of the following is the best value for the modulus m?', NULL, '256 ', '128            ', '10', '181', '', 'optiond', 'MC'),
(166, 7, 'level_e', 'A two-word instruction is stored at location 300 with the address field at location 301.  The address field has the\r\n value 400. What will be the effective address, if the addressing mode of the instruction is immediate?\r\n', NULL, '300           ', '400             ', '700             ', '701                       ', 'none of the above', 'optione', 'MC'),
(163, 7, 'level_e', 'The IP service model guarantees which of the following?', NULL, 'The contents of a packet will not be corrupted      ', 'That at least one copy of a packet will arrive at the destination', 'That no more than one copy of a packet will arrive at the destination', 'That packets sent in order will be delivered in order', 'None of the above', 'optione', 'MC'),
(164, 7, 'level_e', 'For hashing by the multiplication method, which of the following values for A is best: ', NULL, '.125           ', '0.01           ', '.618             ', '.618033988', '', 'optiond', 'MC'),
(161, 7, 'level_e', 'Public/private key encryption is usually avoided because', NULL, 'It is much slower than symmetric key encryption', 'It is only useful when encrypting large amounts of data', 'It is not as secure as symmetric key encryption', 'It cannot be used unless two parties can exchange their private keys securely ', 'None of the above', 'optiona', 'MC'),
(162, 7, 'level_e', 'Which of the following can I do without knowing your private key?', NULL, 'Pretend to send a private message on your behalf', 'Decrypt messages that were intended for only you', 'Send you a message that only you can read', 'Digitally sign a message on your behalf', 'I must know your private key to perform all of these operations', 'optionc', 'MC'),
(160, 7, 'level_e', 'Which of the following is NOT a property of Ethernet?', NULL, 'Nodes retransmit packets if there was a collision	', 'Sending packets that are too big does NOT affect collision detection', 'Nodes retransmit packets if an acknowledgement is not received', 'After a collision, both nodes wait a random amount of time before retransmitting a packet', 'These are all properties of Ethernet', 'optionc', 'MC'),
(159, 7, 'level_e', 'Which of the following is NOT a use of TCP sequence numbers?', NULL, 'To ensure that data is delivered to the application in the order it was sent', 'To distinguish duplicate packets', 'To determine how much data is left to send	', 'All of these are uses', '', 'optionc', 'MC'),
(158, 7, 'level_e', 'When compensating for link cost changes in the distance vector algorithm, it can generally be said that:', NULL, 'increased costs are propagated quickly, i.e., “bad news” travels fast', 'decreased costs are propagated rapidly, i.e., “good news” travels fast ', 'decreased costs do not converge', 'none of the above', '', 'optionb', 'MC'),
(221, 8, 'level_e', 'Q.1 – Q.25 carry one mark each.\r\n\r\nA set of Boolean connectives is functionally complete if all Boolean functions can be synthesized using those. Which of the following sets of connectives is NOT functionally complete?\r\n', NULL, 'EX-NOR', 'implication, negation', 'OR, negation ', 'NAND', '', '', 'MC'),
(222, 8, 'level_e', '', '1387516536.jpeg', '11/22', '10/12', '9/12 ', '8/12', '', '', 'MC'),
(223, 8, 'level_e', 'What is the chromatic number of the following graph?', '1387516623.jpeg', '2', '3', '4', '5', '', '', 'MC'),
(224, 8, 'level_e', 'What is the size of the smallest MlS (Maximal Independent Set) of a chain of nine nodes?', NULL, '5', '4', '3', '2', '', '', 'MC'),
(225, 8, 'level_e', 'Which of the following regular expressions describes the language over {0, 1} consisting of strings that contain \r\nexactly two 1&#039;s?\r\n', NULL, '(0 + 1)*11(0 + 1)*', '0*110*', '0*10*10* ', '(0 + 1)*1(0 + 1)*1(0 + 1)*', '', '', 'MC'),
(226, 8, 'level_e', 'Let N be an NFA with n states and let M be the minimized DFA with m states recognizing the same language. Which of the following in NECESSARILY true?\r\n', '1387516835.jpeg', '', '', '', '', '', '', 'MC'),
(227, 8, 'level_e', 'The following bit pattern represents a floating point number in IEEE754 single precision format \r\n            1   10000011   10100000000000000000000\r\nThe value of the number in decimal form is\r\n', NULL, '-10', '-13	', '-26 ', 'None of the above', '', '', 'MC'),
(228, 8, 'level_e', 'Consider the following Boolean function of four variables f(A, B, C, D) = ∑ (2 ,3,6,7,8,9,10,11,12,13)\r\nThe function is\r\n', NULL, 'independent of one variable', 'independent of two variables', 'independent of three variable', 'dependent on all  the variables', '', '', 'MC'),
(229, 8, 'level_e', 'What Boolean function does the circuit below realize?', '1387517113.jpeg', '', '', '', '', '', '', 'MC'),
(230, 8, 'level_e', '', '1387517215.jpeg', '', '', '', '', '', '', 'MC'),
(231, 8, 'level_e', 'For problems X and Y, Y is Np-complete and X reduces to Y in polynomial time. Which of the following is TRUE?', NULL, 'If X can be solved in polynomial time, then so can Y', 'X is NP-complete', 'X is NP-hard', 'X is in NP but not necessarily NP-complete', '', '', 'MC'),
(232, 8, 'level_e', 'Which of the following is TRUE?\r\n', NULL, 'The cost of searching an AVL tree is θ (log n) but that of a binary search tree is O (n)', 'The cost of searching an AVI- tree is θ (log n) but that of a complete binary tree is θ (n log n)', 'The cost of searching a binary search tree is O (log n) but that of an AVL tree is θ (n)', 'The cost of searching an AVL tree is θ (n log n) but that of a binary search tree is O(n)', '', '', 'MC'),
(233, 8, 'level_e', 'A processor that has carry, overflow and sign flag bits as part of its program status word (PSW) performs addition of\r\n the following two 2&#039;s complement  numbers 0 1001101 and 11101001. After the execution of this addition operation, the status of the carry, overflow and sign flags, respectively will be:\r\n', NULL, '1, 1, 0', '1, 0, 0', '0, 1, 0', '1, 0, 1', '', '', 'MC'),
(234, 8, 'level_e', 'A paging  scheme uses a Translation Look-aside Buffer (TLB). A TLB-access takes 10 ns and a main memory access takes 50 ns. What is the effective access time (in ns) if the TLB hit ratio is 90%  and there is no page-fault?', NULL, '54', '60', '65', '75', '', '', 'MC'),
(235, 8, 'level_e', 'Find if the following statements in the context of software testing are TRUE or FALSE.\r\n(S1) Statement coverage cannot guarantee execution of loops in a Program under test.\r\n(S2) Use of independent path testing criterion guarantees execution of each loop in a Program under test more than once\r\n', NULL, 'True, True ', 'True, False', 'False, True', 'False, False', '', '', 'MC'),
(236, 8, 'level_e', 'How many bytes of data can be sent in 15 seconds over a serial link with baud rate of 9600 in asynchronous mode with odd parity and two stop bits in the frame?\r\n', NULL, '10,000 bytes', '12,000 bytes	', '15,000 bytes', '27,000 bytes', '', '', 'MC'),
(237, 8, 'level_e', '', '1387517629.jpeg', '', '', '', '', '', '', 'MC'),
(238, 8, 'level_e', '', '1387517729.jpeg', '', '', '', '', '', '', 'MC'),
(239, 8, 'level_e', '', '1387517878.jpeg', '', '', '', '', '', '', 'MC'),
(240, 8, 'level_e', '', '1387518001.jpeg', '', '', '', '', '', '', 'MC'),
(241, 8, 'level_e', 'For the undirected, weighted graph given below, which of  the following sequence of edges represents a correct execution of Prim&#039;s algorithm to construct a Minimum Spanning tree?', '1387518134.jpeg', '(a, b), (d, f), (f, c) (g, i), (d, a), (g, h), (c ,e), (f, h)', '(c, e), (c, f), (f, d) (d, a), (a, b), (g, h), (h, f), (g, i)', '(d, f), (f, c), (d, a) (a, b), (c, e), (f, h), (g ,h), (g, i)', '(h, g), (g, i), (h, f) (f, c), (f, d), (d, a), (a, b), (c, e)', '', '', 'MC'),
(242, 8, 'level_e', 'How many distinct BSTs can be constructed with 3 distinct keys?', NULL, '4', '5', '6', '9', '', '', 'MC'),
(243, 8, 'level_e', 'Consider a hash table of size 11 that uses open addressing with linear probing. Let h(k) = k mod 11 be the hash function used. A sequence of records with keys 43 36 92 87 11 4 71 13 14 is inserted into an initially empty hash table, the bins of which are indexed from zero to ten. What is the index of bin into which the last record is inserted?', NULL, '3', '4', '6', '7', '', '', 'MC'),
(244, 8, 'level_e', 'What is the output printed by the following C code?\r\n \r\n# inc;ude <stdio.h>\r\n	int main()\r\n       {\r\n	char  a[6] = “world”;                               //Line1\r\n	int i, j;                                           //Line2\r\n	for (i = 0, j = 5; i < j; a[i++] = a[j – i]);       //Line3\r\n	printf(“%s”, a);                                    //line4\r\n       } \r\n	', NULL, 'dlrow', 'Null string ', 'dlrld  ', 'worow', '', '', 'MC'),
(245, 8, 'level_e', 'An operating system implements a policy that requires a process to release all resources before making a request \r\nfor another resource. Select the TRUE statement from the following:\r\n', NULL, 'Both starvation and deadlock can occur	', 'Starvation can occur but deadlock cannot occur', 'Starvation cannot occur but deadlock can occur', 'Neither starvation nor deadlock can occur', '', '', 'MC'),
(246, 8, 'level_e', 'Questions 56- 60: One marks each\r\n\r\nThe closest meaning of the word EXHORT is	', NULL, 'Urge', 'restrain ', 'condemn ', 'scold', '', '', 'MC'),
(247, 8, 'level_e', 'PREAMBLE: CONSTITUTION    ', NULL, 'Amendment: Law        ', 'Prologue: Play     ', 'Episode: Serial', 'plot: story', '', '', 'MC'),
(248, 8, 'level_e', 'Fill in the blanks        \r\n\r\nThe committee wrote a ...................report extolling only the strength of the proposal\r\n', NULL, 'reasonable ', 'supportive ', 'biased ', 'fragmented', '', '', 'MC'),
(249, 8, 'level_e', 'If the country has to achieve real prosperity, it is ...............that the fruits of progress reach all in equal measures', NULL, 'Inevitable', 'Contingent ', 'Oblivious ', 'Imperative', '', '', 'MC'),
(250, 8, 'level_e', 'A person invest Rs. 1000 at 10% CI compounded annually for 2 years. At the end of 2 years the whole amount is invested at an annual Sl of 12% pa for 5 years. The total value of investment finally is ', NULL, '1776 ', '1760 ', '1920', '1936', '', '', 'MC'),
(251, 8, 'level_m', '2 Marks Questions(Q26-Q55)\r\n\r\nIf the time-slice used in the round-robin scheduling policy is more than the maximum  time required to execute any process, then the policy will	', NULL, 'degenerate to shortest job first', 'degenerate to priority scheduling ', 'degenerate to first come first serve ', 'none of the above', '', '', 'MC'),
(252, 8, 'level_m', 'The total number of keys required for a set of n Individuals to be able to communicate with each other using secret \r\nkey and public key cryptosystems, respectively are:\r\n', NULL, 'n(n -1) and 2n', '2n and (n(n-1))/2	', '(n(n-1))/2 and 2n', '(n(n-1))/2 and n', '', '', 'MC'),
(253, 8, 'level_m', 'Match the following flag bits used in the context of virtual memory management on the left side with the different Purposes on the right side of the table below.\r\n           Name of the bit		           Purpose\r\n      I.	 Dirty	               a.	Page initialization\r\n     II.	 R/W	               b.	Write-back policy\r\n    III.	Reference	       c.	Page protection\r\n     IV.	Valid	               d.	Page replacement policy\r\n', NULL, 'I-d, Il-a, III-b, IV-c', 'I-b, II-c, III-a, IV-d', 'I-c, II-d, III-a, IV-b', 'I-b, II-c, III-d, IV-a', '', '', 'MC'),
(254, 8, 'level_m', 'Which of the following statements are TRUE?\r\n\r\n(S1) TCP handles both congestion and flow control 	           \r\n(S2) UDP handles congestion but not flow control\r\n(S3) Fast retransmit deals with congestion but not flow control   \r\n(S4) Slow start mechanism deals with both congestion and flow control\r\n', NULL, 'S1, S2 and S3 only', 'S1 and S3 only', 'S3 and S4 only', 'S1, S3 and S4 only', '', '', 'MC'),
(255, 8, 'level_m', 'Consider the following Hasse diagrams\r\n\r\nWhich all of the above represent a lattice?', '1387519785.jpeg', '(i) and (iv) only	', '(ii) and (iii)only', '(iii)only', '(i), (ii) and (iv) only', '', '', 'MC'),
(256, 8, 'level_m', 'If M is a square matrix with a zero determinant, which of the following assertion(s) is (are) correct?\r\n\r\n(S1) Each row of M can be represented as a Linear combination of the other rows\r\n(S2) Each column of M can be represented as a linear combination of the other columns\r\n(S3) MX = 0 has a nontrivial solution	\r\n(S4) M has an inverse\r\n', NULL, 'S3 and S2', 'S1 and S4', 'S1 and S3', 'S1, S2 and S3', '', '', 'MC'),
(257, 8, 'level_m', '', '1387519965.jpeg', '2.417', '2.419', '2.423 ', '2.425', '', '', 'MC'),
(258, 8, 'level_m', 'lf the final states and non-final states in the DFA below are interchanged, then which of the following languages over the alphabet {a, b} will be accepted by the new DFA?', '1387520097.jpeg', 'Set of all strings that do not end with ab', 'Set of all strings that begin with either an a or a b', 'Set of all strings that do not contain the sub strings ab ', 'The set described by the regular expression b*aa*(ba)*b*', '', '', 'MC'),
(259, 8, 'level_m', 'The following three are known to be the preorder, inorder and postorder sequences of a binary tree. But it is not \r\nknown which is which. 	\r\nI. MBCAFHPYK		\r\nII. KAMCBYPFH	\r\nIII. MABCKYFPH\r\nPick the true statement from the following\r\n', NULL, 'I and Il are preorder and inorder sequences, respectively   ', 'I and IIl are preorder and postorder sequences, respectively', 'Il is the inorder sequence, but nothing more can be said about the other two sequences', 'II and IIl are preorder and inorder sequences, respectively', '', '', 'MC'),
(260, 8, 'level_m', 'Consider the following sequence of node for the undirected graph given by\r\nI. a b e f d g c		II. a b e f c g d 		III. a d g e b c f		IV. a d b c g e f\r\nA Depth First Search (DFS) is started at node a. the nodes are listed in the order they are first visited. Which all of the \r\nabove is (are) possible output(s)?\r\n', '1387520257.jpeg', 'I and Ill only', 'II and Ill only             ', 'II, III and lV only', 'I, II and Ill only', '', '', 'MC'),
(261, 8, 'level_m', '', '1387523313.jpeg', '', '', '', '', '', '', 'MC'),
(262, 8, 'level_m', 'Consider the C program below what does it print?\r\n \r\n#  include <stdio.h>\r\n# define swap1(a,b) tmp = a; a = b; b = tmp;\r\nvoid swap2 ( int a, int b)\r\n{	int  tmp;\r\n	tmp = a; a= b; b = tmp;\r\n}\r\nvoid swap3 ( int * a, int * b)\r\n{	int  tmp;\r\n	tmp = *a; *a= *b; *b = tmp;\r\n }\r\nint  main( )\r\n{\r\n	int num1 = 5, num2 = 4, tmp;\r\n	if (num1 < num2) {swap1 (num1, num2); }\r\n	if (num1 < num2) {swap2 (num1 + 1, num2); }\r\n	if (num1 >= num2) {swap3 (&num1, &num2); }\r\n	printf (“ %d, %d”, num1, num2);\r\n}\r\n', NULL, '5, 5', '5, 4  ', '4, 5  ', '4, 4', '', '', 'MC'),
(263, 8, 'level_m', 'Consider the C program below what does it print?\r\n \r\n#  include &lt;stdio.h&gt;\r\nint  main( )\r\n{	int i, j;\r\n	int a[8] = {1, 2, 3, 4, 5, 6, 7, 8};\r\n	for( i = 0; i &lt; 3; i++) \r\n{\r\n	a[i] = a[i] + 1;\r\n	i++; \r\n}\r\ni--;\r\nfor( j = 7; j &gt;4; j--) \r\n{\r\nint i = j/2;\r\na[i] = a[i] - 1;}\r\nprintf (“ %d, %d”, i, a[i]);\r\n}\r\n', NULL, '2, 3', '2, 4', '3, 2', '3, 3', '', '', 'MC'),
(264, 8, 'level_m', 'A C program is given below:\r\n \r\n#  include <stdio.h>\r\nint  main( )\r\n{	int i, j;\r\n	char  a[2] [3] = {‘a’, ‘b’, ‘c’ }, {‘d’, ‘e’, ‘f’};\r\n	char  b[3] [2];\r\n	char *p = *b;\r\n	for( i = 0; i < 2; i++) \r\n{\r\n	for( j = 0; j < 3; j++) \r\n{\r\n	*(p + 2*j + 1) = a[i] [j];\r\n             \r\n }  \r\n } \r\n }\r\n \r\nWhat should be the contents of the array b at the end of the program?\r\n	a	b		a	d		a	c		a	e\r\n(a)	c	d	(b)	b	e	(c)	e	b	(d)	d	c\r\n	e	f		c	f		d	f		b	f\r\n		', NULL, '', '  ', '  ', '', '', '', 'MC'),
(265, 8, 'level_m', 'Consider a CPU where all the instructions require 7 clock cycles to complete execution. There are 140 instructions in the instruction set. It is found that 125 control signals are needed to be generated by the control unit. While designing the\r\nhorizontal micro programmed control unit, single address field format is used for branch control logic. What is the minimum size of the control word and control address register?\r\n	', NULL, '125, 7 ', '125, 10 ', '135, 9 ', '135, 10', '', '', 'MC'),
(266, 8, 'level_m', 'A nonpipelined single cycle processor operating at 100 MHz is converted into a synchronous pipelined processor with five stages requiring 2 .5 nsec, 1.5 nsec, 2 nsec, 1.5 nsec and 2.5 nesec, respectively. The delay of the latches is 0.5 nsec. The speedup of the pipeline processor for a large number of instructions is\r\n', NULL, '4.5', '4.0	', '3.33 ', '3.0', '', '', 'MC'),
(267, 8, 'level_m', 'Assume that a main memory with only 4 pages, each of 16 bytes, is initially empty. the CPU generates the following sequence of virtual addresses and uses the Least  Recently Used( LRU) page replacement policy.\r\n0, 4, 8, 20, 24, 36, 44, 12, 68, 72, 80, 84, 28, 32, 88, 92\r\nHow many page faults does this sequence cause? What are the page numbers of the pages present in the main memory at the end of the sequence?\r\n', NULL, '6 and 1,2,3,4', '7 and 1,2,4,5', '8 and 1,2,4,5', '9 and 1,2,3,5', '', '', 'MC'),
(268, 8, 'level_m', '', '1387523972.jpeg', '', '', '', '', '', '', 'MC'),
(269, 8, 'level_m', '', '1387524112.jpeg', '120 bytes', '60 bytes	', '240 bytes	', '90 bytes', '', '', 'MC'),
(270, 8, 'level_m', '', '1387524225.jpeg', '125 bytes	', '250 bytes', '500 bytes', 'None of the above', '', '', 'MC'),
(271, 8, 'level_m', 'Data transmitted on a link uses the following 2D parity scheme for error detection:\r\nEach sequence of 28 bits is arranged in a 4 x 7 matrix, ( rows r0  through r3 and columns d7 through d1) and is padded with a column d0 and row r4, of parity bits computed using the Even parity scheme. Each bit of column d0 (respectively, r4) gives the parity of the corresponding row (respectively, column). These 40 bits are transmitted over the data link.\r\n \r\nThe table shows data received by a receiver and has ', '1387524352.jpeg', '1', '2', '3', '4', '', '', 'MC'),
(272, 8, 'level_m', 'Let R (A, B ,C ,D ) be a relational schema with the following functional dependencies:\r\n	A  → B, B → C		\r\n        C → D and D → B.\r\nThe decomposition of R into (A,B),( B,C)(, B,D)\r\n', NULL, 'gives a lossless join, and is dependency preserving              ', 'gives a lossless join, but is not dependency preserving', 'does not give a lossless join, but is dependency preserving  ', 'does not give a lossless join and is not dependency preserving   ', '', '', 'MC'),
(273, 8, 'level_m', 'Let R (A, B, C, D, E, P, G) be a relational schema in which the following functional dependencies are known to hold: \r\n           AB → CD, DE → P, C → E, P → C and B → G. \r\nThe relational schema R is\r\n', NULL, 'in BCNF', 'in 3NF, but not in BCNF', 'in 2NF, but not in 3NF', 'not in 2NF', '', '', 'MC'),
(274, 8, 'level_m', 'Consider the following three schedules of transactions T1, T2 and T3. [Notation: In the following N YO represents the action Y (R for read W for write) performed by transaction N on object O]\r\n(S1)	2RA	2WA	3RC	2WB	3WA\r\n	3WC	1RA	1RB	1WA	1WB\r\n					\r\n(S2)	3RC	2RA	2WA	2WB	3WA\r\n	1RA	1RB	1WA	1WB	3WC\r\n					\r\n(S3)	2RA	3RC	3WA	2WA	2WB\r\n	3WC	1RA	1RB	1WA	1WB\r\nWhich of the following statements is TRUE?\r\n', NULL, 'S1, S2 and S3 are all conflict equivalent to each other ', 'No two of S1, S2 and S3 are conflict equivalent to each other', 'S2 is conflict equivalent to S3, but not to S1                 ', 'S1 is conflict equivalent to S2, but not to S3', '', '', 'MC'),
(275, 8, 'level_m', 'A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys,\r\nl.    81, 537, 102, 439, 285, 376, 305		\r\nII.   52, 97,  121, 195, 242, 381, 472\r\nIII.  142, 248, 520, 386, 345, 270, 307		\r\nIV.   550, 149, 507, 395, 463, 402, 270\r\n\r\nSuppose the BST has been unsuccessfully searched for key 273.Which all of the above sequences list nodes in the order in which we could have encountered them in the search?\r\n	', NULL, 'II and III only', 'I and III only ', 'Ill and IV only ', 'III only', '', '', 'MC'),
(276, 8, 'level_m', 'A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys,\r\nl.    81, 537, 102, 439, 285, 376, 305		\r\nII.   52, 97, 121,195, 242, 381, 472\r\nIII.  142, 248, 520, 386, 345, 270, 307		\r\nIV.   550, 149, 507, 395, 463, 402, 270\r\n\r\nWhich of the following statements is TRUE?\r\n\r\n\r\n', NULL, 'I,II and IV are inorder sequences of three different BSTs', 'I is a preorder sequence of some BST with, 439 as the root', 'II is an inorder sequence of some BST where 121 is the root and 52 is a leaf', 'IV is a postorder sequence of some BST with 149 as the root', '', '', 'MC'),
(277, 8, 'level_m', 'A CFG C is given with the following productions where S is the start symbol, A is a non-terminal and a and b are terminals\r\n\r\n	S → aS | A				\r\n        A → aAb | bAa | ϵ\r\n\r\nWhich of the following strings is generated by the grammar above\r\n', NULL, 'aabbaba', 'aabaaba', 'abababb', 'aabbaab', '', '', 'MC'),
(278, 8, 'level_m', 'A CFG C is given with the following productions where S is the start symbol, A is a non-terminal and a and b are terminals\r\n\r\n	S → aS | A				\r\n        A → aAb | bAa | ϵ\r\n\r\nFor the correct answer in Q. 52 how many steps are required to derive the string and how many parse trees are there?', NULL, '6 and 1', '6 and 2', '7 and 2', '4 and 2', '', '', 'MC'),
(279, 8, 'level_m', 'Consider a computer with a 4-ways set-associative mapped cache of the following characteristics: a total of 1MB of main memory, a word size of 1 byte, a block size of 128 words and a cache size of 8 KB.\r\n\r\nThe number of bits in the TAG, SET and WORD fields, respectively are:\r\n', NULL, '7,6,7', '8,5,7', '8,6,6', '9, 4,7', '', '', 'MC'),
(280, 8, 'level_m', 'Consider a computer with a 4-ways set-associative mapped cache of the following characteristics: a total of 1MB of main memory, a word size of 1 byte, a block size of 128 words and a cache size of 8 KB.\r\n\r\nWhile accessing the memory location 0C795H by the CPU, the contents of the TAG field of the corresponding cache line is	', NULL, '000011000', '110001111', '00011000', '110010101', '', '', 'MC'),
(281, 8, 'level_m', ' Questions 61 - 65: Two marks Each\r\n\r\n&quot;The ban on smoking in designated public places can save a large number of well known effects of environmental Tobacco smoke, and the passive smokers are the worst affected from it&quot;. Which of the following sentences sums up  the meaning of the above passage.\r\n', NULL, 'Effect of tobacco are well known', 'The ban of smoking in public places protects the non smokers', 'Passive smoking is bad for your health', 'The ban of smoking in public places excludes passive smokers', '', '', 'MC'),
(282, 8, 'level_m', 'Consider the set of integers(1 2,3..............,5000) the number of integers that is divisible by neither 3 nor 4 is : \r\n', NULL, '1668 		', '2084		', '2500 		', '2916', '', '', 'MC'),
(283, 8, 'level_m', 'Given the sequence A, BB, CCC, DDDD...........and so on , the 240th letter in the sequence will be: ', NULL, 'V', 'U', 'T', 'W', '', '', 'MC'),
(284, 8, 'level_m', 'A positive integer m in base 10 when represented in base 2 has the representation p and the base 3 has the representation q, We get p - q= 990,where the subtraction is done in base 10, Which of the following is necessarily true:\r\n\r\n', NULL, 'm&gt;=14', '9&lt;m&lt;13', '6&lt;m&lt;8', 'm&lt;6', '', '', 'MC'),
(285, 8, 'level_m', '', '1387525218.jpeg', '', '', '', '', '', '', 'MC'),
(157, 7, 'level_e', 'Q.1 - Q.25 (1 Marks)\r\nDynamic Host Configuration Protocol (DHCP) is used to:	', NULL, 'assign CIDR subnet masks to routers ', 'allocate the host part of an IP address to a host ', 'assign the network component of an IP address to a router  ', 'manage the assignment of MAC addresses', '', 'optionb', 'MC'),
(287, 9, 'level_e', 'Q. No. 1 – 25 Carry One Marks Each\r\n\r\nWhich of the following represents a postorder traversal of T ?		', '1390667810.jpeg', 'P Q U W X V Y Z', 'U Q X W P V Z Y  ', 'U X W Q Z Y V P   ', 'U X Z Q W Y V P', 'X Z U W Y Q V P   ', 'optionc', 'MC'),
(288, 9, 'level_e', 'Assume there are 4 stages in pipeline with each stage taking 1ns, 2ns, 1ns and 3ns.What is the speed up ratio of pipelining over non pipelining?	', NULL, '1.33                           ', '1.66                            ', '2 ', '2.33', ' ', 'optiond', 'MC'),
(289, 9, 'level_e', 'Total number of constant functions from set of 6 elements to a set of 8 elements is:	', '1388131883.jpeg', '', ' ', ' ', '', ' ', 'optionb', 'MC'),
(290, 9, 'level_e', 'The symmetric difference of the set S = {1, 2, 3, 4, 5} and T = {4, 5, 6, 7, 8} is	', NULL, '{4, 5} 	', '∅	 ', '{1, 2, 3, 4, 5, 6, 7, 8} 	 ', '{1, 2, 3, 6, 7, 8}', ' ', 'optiond', 'MC'),
(291, 9, 'level_e', 'Given function is F(a, b, c, d) = ∑m(0, 4, 5, 6, 7, 9, 10, 12, 13, 15).The number of essential prime implicants of the function is: 			', NULL, '4', '5   ', '6   ', '7', '   ', 'optionc', 'MC'),
(292, 9, 'level_e', 'Consider the following pseudocode.\r\nx := 1;\r\ni := 1;\r\nwhile (x &lt;= 1000)\r\nbegin\r\nx := 2x ;\r\ni := i + 1;\r\nend;\r\nWhat is the value of i at the end of the pseudocode?\r\n', NULL, '4                        ', '5                        ', '6                  ', '7              ', '8', 'optionb', 'MC'),
(293, 9, 'level_e', 'Linked lists are not suitable data structures of which one of the following problems?\r\n', NULL, 'Insertion sort', 'Binary search', 'Radix sort', 'Polynomial manipulation', '  ', 'optionb', 'MC'),
(294, 9, 'level_e', 'To implement \r\nF=AB’ + ABC’+ABCD +ABCD’\r\nUsing only two input NAND gates, the minimum number of gates required is:\r\n	', NULL, '8', '0 ', '2 ', '4', ' ', 'optionb', 'MC'),
(295, 9, 'level_e', 'What is the probability that the total of two dice will be greater than equal to 8, with the first die having 4 is: 	', NULL, '1/2', '1/3 ', '2/3  ', '2/5', ' ', 'optiona', 'MC'),
(296, 9, 'level_e', 'Translate the following string in English\r\n“ ∀x(B(x) ∨∃ y (F(x, y) ∧ B(y)))\r\nWhere, B(x): x rides bicycle and F(x, y): x and y are friends.The universe of x and y is all students in the school.\r\n	', NULL, 'All students of the school ride bicycle and friends of each other ', 'Every student of the school ride bicycle and has at least one friend who rides bicycle ', 'Every student in the school rides bicycle or has a friend who rides bicycle ', 'None of these', ' ', 'optionc', 'MC'),
(297, 9, 'level_e', 'The postfix form of the expression (A + B)∗(C∗D − E)∗F / G is    ', NULL, 'AB   + CD∗E − FG /∗∗ ', '/ AB + CD ∗ E − F ∗∗G', '/ AB + CD ∗ E − ∗F ∗ G ', '/ AB + CDE ∗ − ∗', '  ', 'optiona', 'MC'),
(298, 9, 'level_e', 'An advantage of chained hash table (external hashing) over the open addressing scheme is', '', 'Worst case complexity of search operations is less', 'Space used is less ', 'Deletion is easier', 'None of the above', '  ', 'optionb', 'MC'),
(299, 9, 'level_e', 'In a glass factory, fifty percent of the glasses produced are defective. A sample of 10 glasses is selected at random. What is the probability that exactly 2 glasses will be defective?	', '1388251395.jpeg', '', ' ', ' ', '', ' ', 'optionc', 'MC'),
(300, 9, 'level_e', 'A language with string manipulation facilities uses the following operations\r\nHead(s): first character of a string\r\nTall(s): all but the first character of a string\r\nConcat(s1, s2): s1 s2\r\nFor the string acbc what will be the output of \r\nConcat(head(s),head(tall(tall(s))))', NULL, 'ac', 'bc', 'ab', 'cc', '  ', 'optionc', 'MC'),
(301, 9, 'level_e', 'The tree as shown in the figure is traversed postorder and each element is pushed on to a character stack s as it is encountered. The following code segment is then executed\r\n \r\nWhat value is contained in the variable “cha” after the segment is executed?\r\n	', '1388251736.jpeg', 'F', 'D ', 'G ', 'B', ' ', 'optionb', 'MC');
INSERT INTO `subj_question` (`qnid_s`, `subid`, `level`, `question`, `figure`, `optiona`, `optionb`, `optionc`, `optiond`, `optione`, `correct`, `type`) VALUES
(302, 9, 'level_e', 'In a particular schedule, transaction T2 reads a value previously written by transaction T1 and transaction T3 reads a value previously written by transaction T2. Which of the following ensure the schedule to be cascadeless schedule?	', NULL, 'T1 commits before read operation of T2 and T2 commits before read operation of T3', 'T1 commits before T2 and T2 commits before T3 ', 'T1 commits before write operation of T2 and T2 commits before write operation of T3 ', 'T1 commits at last and T2 and T3 can commit in any order.', ' ', 'optiona', 'MC'),
(303, 9, 'level_e', 'For relation R(ABCDE), the given FD’s are A →BC, BC →E and E →DA. Similarly S be a relation with attributes ABCDE \r\nand FD’s A →BC, B→E and E→DA.\r\nWhich among R and S are in BCNF?	\r\n	', NULL, 'R only	', 'S only ', 'both ', 'Neither', ' ', 'optionc', 'MC'),
(304, 9, 'level_e', 'The memory unit a computer has 512 K words of 32 bits each. The computer has instruction format, with 4 fields: an opcode field; a mode field to specify one of 7 addressing modes; a register address field to specify one of 60 registers; and a memory address field. If an instruction is 32 bits long, how large is the opcode field?	', NULL, '4 bits', '5 bits ', '6 bits  ', '8 bits', ' ', 'optiona', 'MC'),
(305, 9, 'level_e', 'Match the following:\r\n(a) 	Accumulator			 (i) 	 Holds instruction to be executed\r\n(b) 	Instruction register		(ii) 	 Holds the data CPU needs to process\r\n(c) 	Program counter		       (iii)	 Holds Status of operations\r\n(d)	Flag register			(iv)	 Holds address of next instruction to be executed\r\n	', NULL, 'a – i, b – ii, c – iv, d – iii', 'a – ii, b – i, c – iii, d – iv ', 'a – ii, b – iv, c – i, d – iii ', 'a – ii, b – i, c – iv, d – iii', ' ', 'optiond', 'MC'),
(306, 9, 'level_e', '	', '1388252280.jpeg', 'a = 5; b = -2', 'a = 2; b = -3 ', 'a = 3; b = 2 ', 'a = 5; b = -1', ' ', 'optiona', 'MC'),
(307, 9, 'level_e', 'Let G be the set of all 2 x 2 real matrices, trace of which is 0, and + denotes the operation of matrix addition. Then the algebraic structure (G, +) is	', NULL, 'A groupoid only', 'A semi group only ', 'A monoid only ', 'A group', ' ', 'optiond', 'MC'),
(308, 9, 'level_e', 'How many numbers that are greater than 3000 formed by the digits 3, 5, 6, 7, 8, 9 (without repetition)	', NULL, '360                                     ', '720                           ', '1024                      ', '1800', ' ', 'optiond', 'MC'),
(309, 9, 'level_e', 'Which of the following is false?	', NULL, 'Travelling salesman problem is NP complete', 'Graph coloring problem is NP complete ', 'Hamiltonian path problem is NP complete ', 'None of these', ' ', 'optiond', 'MC'),
(310, 9, 'level_e', 'Consider the following statements:\r\n(i) First-in-first out types of computations are efficiently supported by STACKS.\r\n(ii) Implementing LISTS on linked lists is more efficient than implementing LISTS on an array for almost al the basic LIST operations.\r\n(iii) Implementing QUEUES on a circular array is more efficient than Implementing QUEUES on a linear array with two indices.\r\n(iv) Last-in-first-out type of computations are efficient supported by QUEUES.', NULL, '(ii) and (iii) are true', '(i) and (ii) are true', '(iii) and (iv) are true', '(ii) and (iv) are true', '  ', 'optiona', 'MC'),
(311, 9, 'level_e', 'Total number of subsets of even cardinality of set A is 32. What is cardinality of  A?	', NULL, '4', '5 ', '6 ', '7', ' ', 'optionc', 'MC'),
(312, 9, 'level_e', 'Q. No. 56 – 60 Carry One Mark Each\r\n\r\nThere are two candidates P and Q in an election. During the campaign, 40% of the voters promised to vote for P, and rest for Q. However, on the day of election 15% of the voters went back on their promise to vote for P and instead voted for Q. 25% of the voters went back on their promise to vote for Q and instead voted for P. Suppose, P lost by 2 votes, then what was the total number of voters?	', NULL, '100', '110 ', '90 ', '95', '    ', 'optiona', 'MC'),
(313, 9, 'level_e', 'Choose the most appropriate word from the options given below to complete the following sentence:\r\nIt was her view that the country&#039;s problems had been_________ by foreign technocrats, so that to invite them to come back would be counter-productive \r\n	', NULL, 'Identified  ', 'Ascertained  ', 'Exacerbated  ', 'Analysed', ' ', 'optionc', 'MC'),
(314, 9, 'level_e', 'Choose the word from the options given below that is most nearly opposite inmeaning to the given word: Frequency	', NULL, 'periodicity', 'rarity    ', 'gradualness               ', 'persistency', ' ', 'optionb', 'MC'),
(315, 9, 'level_e', 'Choose the most appropriate word from the options given below to complete the following sentence: Under ethical guidelines recently adopted by the Indian Medical Association, human genes are to be manipulated only to correct diseases for which______________ treatments are unsatisfactory.	', NULL, 'Similar ', 'Most  ', 'Uncommon  ', 'Available', ' ', 'optiond', 'MC'),
(316, 9, 'level_e', 'The passage below is followed by a question and four alternative answers. Select the best alternative.\r\nIn the Panchatantra, a woodpecker offered the following words of consolation to a hensparrow whose eggs had been crushed by an elephant with spring fever;\r\n“For the lost and dead and past\r\nThe wise have no laments\r\nBetween the wise and fools   \r\n Is just this difference”\r\nThis stanza highlights an important lesson that:', NULL, 'Wisdom is a direct function of retaining the lessons contained in the past.', 'There is no end to the reward of discriminating judgment.  ', 'One must be sensitive to the past only in so far as it offers wisdom, not as an object of brooding or regret.', 'Joy results from resolute yet circumspect use of the active powers; only the foolish would do otherwise.', '  ', 'optionc', 'MC'),
(317, 9, 'level_m', 'Q. No. 26 – 51 Carry Two Marks Each\r\n\r\n\r\n	', '1388479171.jpeg', '1/2', '- 1/2 ', '0 ', '1', ' ', 'optiona', 'MC'),
(318, 9, 'level_m', 'A sequential circuit has one input and one output. In the input sequence whenever a pattern 010 or 0001 is detected, the output becomes 1 when the last symbol of the pattern is received. Otherwise, the output equals to 0. What will be the minimum number of states of the equivalent state diagram of this synchronous sequential circuit?		', NULL, '4', '5 ', '6 ', '7', ' ', 'optionb', 'MC'),
(319, 9, 'level_m', 'A Computer has 32-bit instructions and 12-bit address. Suppose there are 251 two-address instructions. How many \r\n1-address instructions can be formulated?\r\n	', NULL, '20480', '24576 ', '4096 ', '131072', ' ', 'optiona', 'MC'),
(320, 9, 'level_m', 'Let K indistinguishable balls are successively distributed (allocated) into n distinguishable urns, of infinite (unlimited) capacity. The number of different distributions is	', '1388479343.jpeg', '', ' ', ' ', '', ' ', 'optiond', 'MC'),
(321, 9, 'level_m', '	', '1388479441.jpeg', '4, 5', '5, 4 ', '4, 4 ', '5, 5', ' ', 'optionc', 'MC'),
(322, 9, 'level_m', 'Given  a set A={1,2,3,4,5,6} and binary relation R on A={(1,1),(1,3),(3,1),(2,2),(3,3),(4,4),(5,5)} .Minimum number of elements needed to add in R to make it equivalence relation is:	', NULL, '1', '2 ', '3 ', '4', ' ', 'optiona', 'MC'),
(323, 9, 'level_m', 'The number of accidents occurring in a city in a day is a Poisson variant with mean 0.8. Find the probability that on a randomly selected day there are accidents.	', NULL, '0.551                                       ', '0.449                     ', '0.78                        ', '0.39', ' ', 'optiona', 'MC'),
(324, 9, 'level_m', 'Determine the probability of four 4’s in six tosses of an unbiased die.	', NULL, '0.5', '0.003 ', '0.004 ', '0.008', ' ', 'optiond', 'MC'),
(325, 9, 'level_m', 'A binary search tree is to be formed inserting number 10, 20, 30, 40, 50 in some order. The number of binary search tree  possible are 	', '', '140', '252 ', '14 ', '42', 'None of these ', 'optiond', 'MC'),
(326, 9, 'level_m', 'Suppose there is a BST with numbers {30,20,40,35, 50, 33, 38,45, 60, 43} inserted in some order. Which of the following is not a possible sequence of search of BST?', NULL, '30, 40, 50, 45, 43', '30, 40, 35, 38', '30, 40, 50, 38, 45, 43', '30, 40, 50, 60', 'All are possible', 'optionc', 'MC'),
(327, 9, 'level_m', 'A min-heap is constructed on n elements. The times to find 7th minimum element and 7th maximum element are of the order:', NULL, 'O(n) and O(n)', 'O(log(n)) and O(log(n))', 'O(1) and O(n)', 'O(1) and O(1)', 'O(1) and O(log(n))', 'optionc', 'MC'),
(328, 9, 'level_m', 'If a disk has a seek time of 20 ms, rotates 20 revolutions per second, has 100 words per block, and each track has a capacity of 300 words, then the total time required to access a one block is: (Choose the closest answer)		', NULL, '25', '30  ', '45', '50', '60  ', 'optionc', 'MC'),
(329, 9, 'level_m', 'Consider the following function.\r\nf(k)\r\n{x = 2;\r\nfor i = 1 to k\r\nx = x * x;\r\nreturn x;\r\n}\r\nIf n and k are positive integers, then the least value of k such that f(k) &gt;n is approximately', NULL, 'log(logn)', 'logn', 'n  ', 'nlogn', '2^n', 'optiona', 'MC'),
(330, 9, 'level_m', 'The following data is provided about a hard disk.\r\nNumber of cylinders = 65,356\r\nNumber of heads = 12 \r\nNumber of sectors = 63 \r\nSize of a sector = 512 bytes\r\nNumber of discs = 6\r\nWhat is the capacity of this particular hard disk?', NULL, '25.297 GB', '151.785 GB', '25 GB', '141.360 GB', '23.560 GB', 'optione', 'MC'),
(331, 9, 'level_m', 'The function void qr(int n, int m, int *q, int *r) is designed to compute the quotient\r\nand remainder (q and r) of n on division by m. For example, the quotient and remainder of 25 on division by 7 are 3 and 4, since 3 times 7 is 21, which is 4 less than 25. How would you use qr? Fill in the missing lines of code:\r\nvoid main(void)\r\n{ int n = 25;\r\nint m = 7;\r\nint q, r;\r\nqr( __ , __ , __ , __ ); // This is the answer\r\nprintf(q = %d and r = %d&quot;, q, r); // prints &quot;q = 3 and r = 4&quot;, the values from the example.\r\n}	', NULL, '&amp;n, &amp;m, q,r', 'n,m,&amp;q,&amp;r', 'n,m,q,r', '&amp;n , &amp;m,&amp;q,&amp;r', '  ', 'optionb', 'MC'),
(332, 9, 'level_m', 'The size of a process is 17 kilo bytes. The paging system divides the process into pages of size 4K bytes each. Then which one of the following is True?\r\n	', NULL, 'In the above paging system there is an internal fragmentation of 1 K Bytes.', 'There is no internal fragmentation ', 'There is an internal fragmentation of 3 K bytes. ', 'None of these', ' ', 'optionc', 'MC'),
(333, 9, 'level_m', 'We have a stack S containing at least two data items, and we use an additional data structure S’ to reverse its data order. Separately consider a queue Q containing two data items, and we use an additional empty data structure Q’ to reverse the order of its data.\r\nThat means after \r\n\r\n{S → S’ (transfer all items from S to S’) and S’ → S} and {Q → Q’ and Q’ → Q}, \r\n\r\nthe order of all elements of S and Q are reversed.What are S’ and Q’ are most likely to be?\r\n	', NULL, 'S’ is queue, Q’ is a queue', 'S’ is stack, Q’ is a queue ', 'S’ is queue, Q’ is a stack ', 'S’ is stack, Q’ is a stack', ' ', 'optionc', 'MC'),
(334, 9, 'level_m', 'Choose advantages of object oriented methodology\r\n(A) OO methodology closely represents problem domain\r\n(B) Object in the system is immune to requirement change.Therefore allows changes more easily\r\n(C) OOM design do not encourage more re-use\r\n(D) Existing modules can be used effectively,thereby reducing development cost and cycle time\r\n	', NULL, 'a, b, c                      ', 'a, b, d                        ', 'a, b, c, d                      ', 'a, c, d', ' ', 'optionb', 'MC'),
(335, 9, 'level_m', 'Given a hash table with size = 11, hash function h (key) = key % 11, where collision are resolved using linear probing; following operations are performed sequentially:\r\n Insert (17)\r\n Insert (37)\r\n Insert (59)\r\n Insert (70)\r\n Delete (59)\r\n Insert (16)\r\nWhat is the number of collision while doing insert operation on the hash table?\r\n	', NULL, '3', '4 ', '5 ', '6', ' ', 'optionb', 'MC'),
(336, 9, 'level_m', 'Which of the following lists of the numbers produce the most balanced tree, when inserted, in the order given, into a binary search tree?\r\n\r\n	', NULL, '2, 5, 1, 4, 0, 3', '5, 1, 2, 6, 3, 4 ', '2, 4, 7, 5, 8, 11 ', '6, 4, 1, 8, 10, 5', ' ', 'optiond', 'MC'),
(337, 9, 'level_m', 'A priority queue Q is used to implement a stack stores characters. PUSH© is implemented INSERT (Q, C, K) where k is  an appropriate integer  key chosen by the implementation. POP is implemented as DELETEMIN(Q). for a sequence of operations, the keys chosen are in', NULL, 'Non-increasing order', 'Non-decreasing order', 'Strictly increasing order', 'Strictly decreasing order', '  ', 'optiond', 'MC'),
(338, 9, 'level_m', '	', '1388480966.jpeg', 'Schedule I is view equivalent to schedule II and schedule III', 'Schedule I is view equivalent to schedule II but not to schedule III ', 'Schedule I is view equivalent to schedule III but not to schedule II ', 'Schedule I is not view equivalent to schedule II and schedule III', ' ', 'optionb', 'MC'),
(339, 9, 'level_m', '	', '1388481183.jpeg', '', ' ', ' ', '', ' ', 'optionb', 'MC'),
(340, 9, 'level_m', 'Which of the following is true with respect to timing diagram of z?	', '1388481346.jpeg', 'z oscillates with period of 2 ns', 'z oscillates with period of 4 ns ', 'z oscillates with period of 8 ns ', 'z doesn’t oscillates ', ' ', 'optionb', 'MC'),
(341, 9, 'level_m', 'Consider the following C code\r\nstruct  node{\r\nint val;\r\nstruct node* next;\r\n};\r\nTypedef struct node Node;\r\nNode  * func(Node* head)\r\n{\r\nNode *t1, *t2;\r\nt1=head; \r\nif(t1!=NULL) \r\nt2=t1-&gt;next; \r\nelse return head; \r\nif(t2==NULL) \r\nreturn head;\r\nwhile(t2!=NULL){ \r\nif(t1.val!=t2.val)          //  Statement 1\r\n{\r\nt1-&gt;next=t2; t1=t2;    // Statement 2\r\n} \r\nt2=t2-&gt;next;\r\n}\r\nt1-&gt;next=NULL;\r\nreturn head;\r\n}\r\n\r\nAlso consider that func is called with the following linked list\r\n10-&gt;20-&gt;20-&gt;20-&gt;30-&gt;20-&gt;10\r\n\r\nHow many times is the comparison made in Statement 1?How many times does Statement 2 execute?', NULL, '4, 5', '5, 4', '6, 4 ', '7, 5', '  ', 'optionc', 'MC'),
(342, 9, 'level_m', 'Consider the following C code\r\nstruct  node{\r\nint val;\r\nstruct node* next;\r\n};\r\nTypedef struct node Node;\r\nNode  * func(Node* head)\r\n{\r\nNode *t1, *t2;\r\nt1=head; \r\nif(t1!=NULL) \r\nt2=t1-&gt;next; \r\nelse return head; \r\nif(t2==NULL) \r\nreturn head;\r\nwhile(t2!=NULL){ \r\nif(t1.val!=t2.val)          //  Statement 1\r\n{\r\nt1-&gt;next=t2; t1=t2;    // Statement 2\r\n} \r\nt2=t2-&gt;next;\r\n}\r\nt1-&gt;next=NULL;\r\nreturn head;\r\n}\r\n\r\nAlso consider that func is called with the following linked list\r\n10-&gt;20-&gt;20-&gt;20-&gt;30-&gt;20-&gt;10\r\n\r\nWhat would be the linked list returned by the function func?', NULL, '10-&gt;20-&gt;20-&gt;20-&gt;30-&gt;20-&gt;10   ', '10-&gt;20-&gt;30-&gt;20-&gt;10', '10-&gt;20-&gt;30 ', '10-&gt;20-&gt;30-&gt;20', '  ', 'optionb', 'MC'),
(343, 9, 'level_m', 'Depth first search (DFs) algorithm is to be applied on the given graph:\r\n \r\n\r\nAssuming it starts at node A and that the adjacency lists are in alphabetical order, in which of the \r\nfollowing order nodes will be visited?\r\n	', '1388481785.jpeg', 'A, C, D, E, H, B, G, F, K', 'A, K, B, G, F, C, D, E, H ', 'A, F, G, H, E, D, C, B, K	 ', 'A, C, D, E, H, B, K, F, G', ' ', 'optiona', 'MC'),
(344, 9, 'level_m', 'Depth first search (DFs) algorithm is to be applied on the given graph:\r\n\r\nWhat is the weight of the resulting depth first spanning tree?\r\n	', '1388481841.jpeg', '48 units', '64 units ', '58 units ', '42 units', ' ', 'optionb', 'MC'),
(345, 9, 'level_m', '	', '1388482038.jpeg', '', ' ', ' ', '', ' ', 'optiond', 'MC'),
(346, 9, 'level_m', 'Consider the set S = {1, 2, 3, 4, 5, 6}\r\nWhat is the cardinality of the equivalence relation induced by the above partition?		', NULL, '22', '36  ', '16  ', '14', '  ', 'optionb', 'MC'),
(347, 9, 'level_m', 'Q. No. 61 – 65 Carry Two Marks Each\r\n\r\nThe fuel consumed by a motorcycle during a journey while traveling at various\r\nspeeds is indicated in the graph below.\r\n\r\nThe distances covered during four laps of the journey are listed in the table below\r\nLap 			Distance (kilometers) 			Average speed\r\n								(kilometers per hour)\r\nP 				15 					15\r\nQ 				75 					45\r\nR 				40 					75\r\nS 				10 					10\r\n\r\nFrom the given data, we can conclude that the fuel consumed per kilometre was least during the lap  	', '1388482618.jpeg', 'P', 'Q ', 'R ', 'S', ' ', 'optionb', 'MC'),
(348, 9, 'level_m', 'Three friends, R, S and T shared toffee from a bowl. R took 1/3rd of the toffees, but returned four to the bowl. S took 1/4th of what was left but returned three toffees to the bowl. T took half of the remainder but returned two back into the bowl. If the bowl had 17 toffees left, how many toffees-were originally there in the bowl?	', NULL, '38', '31 ', '48 ', '41', ' ', 'optionc', 'MC'),
(349, 9, 'level_m', 'Given that f(y) = | y | / y, and q is any non-zero real number, \r\nthe value of  | f(q) - f(-q) | is\r\n	', NULL, 'O', '-1 ', '1 ', '2', ' ', 'optiond', 'MC'),
(350, 9, 'level_m', '	', '1388482818.jpeg', '', ' ', ' ', '', ' ', 'optionc', 'MC'),
(351, 9, 'level_m', 'The horse has played a little known but very important role in the field of  medicine. Horses were injected with toxins of diseases until their blood built up immunities. Then a serum was made from their blood. Serums to fight with diphtheria and tetanus were developed this way.\r\nIt can be inferred from the passage that horses were\r\n\r\n	', NULL, 'given immunity to diseases', 'generally quite immune to diseases ', 'given medicines to fight toxins  ', 'given diphtheria and tetanus serums', ' ', 'optionb', 'MC'),
(353, 10, 'level_e', 'Which of the following expressions evaluates to the largest number?', NULL, 'The prefix expression + * - 2 3 5 7', 'The infix expression 2 + 3 * 5 - 7', 'The infix expression (2 + 3) * (5 - 7)', 'The postfix expression 2 3 + 5 7 - *', 'The postfix expression 2 3 + 5 * 7 –    ', 'optione', 'MC'),
(354, 10, 'level_e', 'The underflow condition for the circular queue is when.', NULL, 'font=rear', 'front = rear+1', 'rear-front=1	', 'none', '', 'optiona', 'MC'),
(355, 10, 'level_e', 'Consider the following statement about the linked list\r\n	\r\na. Global data structure		\r\nb. linear data Structure		\r\nc. traversal requires O(n) time\r\n', NULL, 'a &amp; b are true whereas c is false', 'all a, b &amp; c are true', 'b &amp; c are true and a is false', 'only b is true', '', 'optionb', 'MC'),
(356, 10, 'level_e', 'Which among the following function will require the concept of previous node pointer (for linear  linked list)', NULL, 'Ordered insertion', 'Deletion of all occurrences of x', 'Insertion in the end', 'all', '', 'optiond', 'MC'),
(357, 10, 'level_e', 'Minimum number of queues needed to implement the priority queue is', NULL, '1', '3', '2', '0', '', 'optionc', 'MC'),
(358, 10, 'level_e', 'A procedure that printed the binary tree in postorder would produce as output(below Fig.) \r\n\r\nIn postorder would produce as outputs', '1389677631.jpeg', 'A B C D E F ', 'A B D C E F ', 'D B E A F C ', 'D E B F C A', 'D E F B C A', 'optiond', 'MC'),
(359, 10, 'level_e', 'In a binary tree the number of internal nodes of degree 1 is 5 and the number of internal nodes of degree 2 is 10. The number of leaf nodes in the binary tree is…\r\n', NULL, '10', '11', '12', '15', '', 'optionb', 'MC'),
(360, 10, 'level_e', 'In a binary tree, for every node the difference between the number of nodes in the left and right subtree is at most two. If the height of tree is h&gt;0, then the minimum number of nodes in the tree is…..\r\n', '1389677814.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(361, 10, 'level_e', 'An array X of n distinct integers is interpreted as complete binary tree. The index of first element of the array is 0. The index of parent of X[i], i not equal to 0 is\r\n', NULL, 'floor(i/2)', 'Ceil((i-1)/2)', 'Ceil(i/2)', 'Ceil(i/2)-1', '', 'optiond', 'MC'),
(362, 10, 'level_e', 'Suppose that we have numbers between 1 and 100 in a binary search tree and we want to search for the number 55. Which of the following sequences CANNOT be sequence of the nodes examined…\r\n', NULL, '{10,75,64,43,60,57,55}', '{90,12,68,34,62,45,55}', '{9,85,47,68,43,57,55}	        ', '{79,14,72,56,16,53,55}', '', 'optionc', 'MC'),
(363, 10, 'level_e', 'A binary search tree contains the numbers 1,2,3,4,5,6,7,8. When the tree is traversed in preorder and the value in each node printed out, the sequence of values obtained is 5,3,1,2,4,6,8,7. If the tree is traversed in  post-order the sequence obtained would be\r\n', NULL, '8,7,6,5,4,3,2,1', '1,2,3,4,8,7,6,5', '2,1,4,3,6,7,8,5', '2,1,4,3,7,8,6,5', '', 'optiond', 'MC'),
(364, 10, 'level_e', 'Which of the following statements is true regarding a queue?', NULL, 'It may be implemented either by an array or a linked list.', 'It may be implemented by a linked list because insertions and deletions may be from the same end.', 'It may be implemented by an array without providing for wrap-around', 'None of the above', '', 'optiona', 'MC'),
(365, 10, 'level_e', 'The minimum height of a binary search tree containing n nodes is: ', '1389678222.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(366, 10, 'level_e', '	', '1389678524.jpeg', '', ' ', ' ', '', ' ', 'optiona', 'MC'),
(367, 10, 'level_e', 'What does the following code do to the parameter n?\r\n               int Mystery(Tree* tree, int &amp;n) //Tree is a structure\r\n                 {\r\n                  if(tree != NULL) {\r\n                                         n++;\r\n                                         Mystery(tree-&gt;left, n);\r\n                                         Mystery(tree-&gt;right, n);\r\n                                   }\r\n                 }\r\n', NULL, 'Returns the height of the tree                     ', 'Returns the number of leaves in the tree', 'Returns the number of nodes in the tree   ', 'Returns (total nodes -1) ', '', 'optionc', 'MC'),
(368, 10, 'level_e', 'A k-ary tree is a tree in which every node has at most k children. In a k-ary tree with n nodes and height h, which of the following is an upper bound for the maximum number of leaves as a function of h, k, and n ?\r\n', NULL, 'logk n                 ', 'logk h                 ', 'k h', 'h k', '', 'optionc', 'MC'),
(369, 10, 'level_e', 'Mergesort works by splitting a list of n numbers in half, sorting each half recursively, and merging the two halves. Which of the following data structures will allow mergesort to work in O(n log n) time?\r\n             \r\nI. A singly linked list	             \r\nII. A doubly linked list	             \r\nIII. An array\r\n', NULL, 'None             ', 'III only              ', 'I and II only           ', 'II and III only         ', 'I, II, and III', 'optione', 'MC'),
(370, 10, 'level_e', 'Consider the following possible data structures for a set of n distinct integers.\r\n \r\nI. A min-heap      \r\nII. An array of length n sorted in increasing order      \r\nIII. A balanced binary search tree\r\n\r\nFor which of these data structures is the number of steps needed to find and remove the 7th largest element O(logn) in the worst case?\r\n', NULL, 'I only            ', 'II only              ', 'I and II                    ', 'I and III                     ', 'II and III', 'optione', 'MC'),
(371, 10, 'level_e', 'Which of the following is essential for converting an infix expression to the postfix from efficiently?', NULL, 'An operator stack	', 'An operand stack ', 'An operand stack and an operator stack ', 'A parse tree', '', 'optiona', 'MC'),
(372, 10, 'level_e', 'Let T denote nonempty binary tree in which every node either is a leaf or has two children. Then n(T) denotes the number of non-leaf nodes of T (where n(T) = 0 if T is a leaf), h(T) denotes the height of T (where h(T) = 0 if T is a leaf),\r\nTL denotes the left subtree of T, and TR denotes the right subtree of T.\r\nIf F is a function defined by\r\n	', '1389679208.jpeg', 'n(T) + h(T) - 1', 'n(T) + h(T) ', 'n(T) + h(T) + 1', 'n(T) - h(T) – 1', 'n(T) - h(T) ', 'optione', 'MC'),
(373, 10, 'level_e', 'Consider the following code\n \n        void func(int element)\n               {     ensureCapacity(2*contents.length 1);\n                      manyItems;\n                if (currentIndex == manyItems) \n         			         {   contents[currentIndex] = element;} \n             else if (currentIndex == 0)\n                    {    for (int i=manyItems; i > 0; --i) \n                         contents[i] = contents[i-1];\n                       } \n             else {  for (int i=currentIndex	\n             else {  for (int i=currentIndex; i < manyItems;   i)\n                                     contents[i 1] = contents[i];\n                 }\n          contents[currentIndex] = element;\n            }\n\n What error does the function ensureCapacity prevent from occuring?\n', NULL, 'Array going out of bounds', 'Segmentation fault ', 'Page fault ', 'Not needed here', ' ', 'optiona', 'MC'),
(374, 10, 'level_e', 'Consider the following code\n \n        void func(int element)\n               {     ensureCapacity(2*contents.length 1);\n                      manyItems;\n                if (currentIndex == manyItems) \n         			         {   contents[currentIndex] = element;} \n             else if (currentIndex == 0)\n                    {    for (int i=manyItems; i > 0; --i) \n                         contents[i] = contents[i-1];\n                       } \n             else {  for (int i=currentIndex	\n             else {  for (int i=currentIndex; i < manyItems;   i)\n                                     contents[i 1] = contents[i];\n                 }\n          contents[currentIndex] = element;\n            }\nWhat does the variable manyelements do?', NULL, 'Stores the old count of elements', 'Stores the new count of elements ', 'Stores the location of insertion    ', 'Stores the current length of the array contents', ' ', 'optiona', 'MC'),
(375, 10, 'level_e', 'Consider the following code\n \n        void func(int element)\n               {     ensureCapacity(2*contents.length 1);\n                      manyItems;\n                if (currentIndex == manyItems) \n         			         {   contents[currentIndex] = element;} \n             else if (currentIndex == 0)\n                    {    for (int i=manyItems; i > 0; --i) \n                         contents[i] = contents[i-1];\n                       } \n             else {  for (int i=currentIndex	\n             else {  for (int i=currentIndex; i < manyItems;   i)\n                                     contents[i 1] = contents[i];\n                 }\n          contents[currentIndex] = element;\n            }\n\nWhich of the following is true about currentIndex?', NULL, 'contains the position of the element to be insert       ', 'contains the number of elements in the array contents ', 'must be always equal to 0          ', 'must be always equal to manyelements', ' ', 'optiona', 'MC'),
(376, 10, 'level_e', 'Consider the following code\n \n        void func(int element)\n               {     ensureCapacity(2*contents.length 1);\n                      manyItems;\n                if (currentIndex == manyItems) \n         			         {   contents[currentIndex] = element;} \n             else if (currentIndex == 0)\n                    {    for (int i=manyItems; i > 0; --i) \n                         contents[i] = contents[i-1];\n                       } \n             else {  for (int i=currentIndex	\n             else {  for (int i=currentIndex; i < manyItems;   i)\n                                     contents[i 1] = contents[i];\n                 }\n          contents[currentIndex] = element;\n            }\nWhat does the code do?', NULL, 'Inserts an element in contents at the currentIndex        ', 'Inserts an element at the end ', 'inserts the element at the beginning	 ', 'shifts all the elements by one ', ' ', 'optiona', 'MC'),
(377, 10, 'level_e', 'Given a binary search tree T , what is the path from a node x to its successor y, assuming that both x and y exist in T ?\r\n', NULL, 'y is the right child of x            ', 'y is the rightmost descendant of x', 'if x has a right child, then y is the right child of x; otherwise, if x is a left child, then y is the parent of x; otherwise,y is the left child  \r\n', 'if x has a right child, then y is the leftmost descendant of x’s right child; otherwise, if x is a left child, then y is the parent of x; otherwise, y is the parent of x’s first ancestor z such th', 'if x has a right child, then y is the right child of x; otherwise, y is the parent of x', 'optiond', 'MC'),
(378, 10, 'level_e', 'In a height-balanced binary search tree, the heights of the left and right descendents of any node differ by at most 1. \r\nWhich of the following are true of such a tree?\r\n\r\nI. Worst-case search time is logarithmic in the number of nodes.\r\nII. Average-case search time is logarithmic in the number of nodes.\r\nIII. Best-case search time is proportional to the number of nodes.\r\nIV. The height of the tree is logarithmic in the number of nodes.\r\n', NULL, 'I and III only', 'II and III only', 'II and IV only', 'I, II and IV', 'I, III and IV', 'optiond', 'MC'),
(379, 10, 'level_e', 'Which single node label of the tree below should be replaced so as to make the resulting tree a valid binary search tree?', '1389679985.jpeg', 'J', 'M', 'Q', 'R', 'X', 'optiond', 'MC'),
(380, 10, 'level_e', 'A “strictly binary tree&quot; is a binary tree in which every node that is not a leaf has two children. Suppose that for a class of  strictly binary tree there exists c &gt; 0 such that, for nay tree in the class, the ratio of the lengths of any two root-to-leaf paths is bounded above by c. which of the following best characterizes the height h of any tree in this class, where N is the number of nodes in the tree and N &gt; 1?', '1389680148.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(381, 10, 'level_e', 'In the balanced binary tree in Figure given below, how many nodes will become unbalanced when a node is inserted as a child of the node “g”?', '1389680239.jpeg', '1', '3', '7', '8', '', 'optionb', 'MC'),
(382, 10, 'level_e', 'Which of the following sequences denotes the post order traversal sequence of the tree given below?', '1389680424.jpeg', 'f e g c d b a', 'g c b d a f e ', 'g c d b f e a ', 'f e d g c b a ', '', 'optionc', 'MC'),
(383, 10, 'level_e', '', '1389714643.jpeg', 'b a c', 'b c a', 'c a b', 'a b c', '', 'optionc', 'MC'),
(384, 10, 'level_e', '', '1389714825.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(385, 10, 'level_e', '', '1389715038.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(386, 10, 'level_e', '	', '1389715157.jpeg', '', ' ', ' ', '', ' ', 'optiond', 'MC'),
(387, 10, 'level_e', 'The minimum number of fields with each node of doubly linked list is', NULL, '1', '2', '3', '4', '', 'optionc', 'MC'),
(388, 10, 'level_e', '', '1389715400.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(389, 10, 'level_e', '', '1389715516.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(390, 10, 'level_e', 'What is the max size of the operator stack during the conversion of the infix exp A+B*C-D/E?	', NULL, '1', '2 ', '3 ', '4', ' ', 'optionb', 'MC'),
(391, 10, 'level_e', 'what is the max size of the operand stack while evaluating the postfix exp 6 2 3 + - 3 8 2 / + * ?', NULL, '1', '2', '3', '4', '', 'optiond', 'MC'),
(392, 10, 'level_e', 'To o/p a binary tree level by level we have to use the following data structure	', NULL, 'array', 'stack ', 'queue ', 'list', ' ', 'optionc', 'MC'),
(393, 10, 'level_e', 'Which one of the following arrays satisfies max-heap property?', NULL, '16,10,12,8,3,5', '16,8,5,10,12,3', '16,12,8,3,5,10', '10,16,12,8,5,3', '', 'optiona', 'MC'),
(394, 10, 'level_e', 'A binary tree can be uniquely reconstructed from the following traversal(s):\r\n', NULL, 'preorder', 'postorder', 'preorder and postorder', 'inorder and preorder', '', 'optiond', 'MC'),
(395, 10, 'level_e', '', '1389716367.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(396, 10, 'level_e', 'Minimum number of queues needed to implement the priority queue is/are….	', NULL, 'One', 'Two ', 'Three ', 'Can’t be implemented', ' ', 'optionb', 'MC'),
(397, 10, 'level_e', 'Sorting is not possible by using which of the following methods?', NULL, 'Insertion      ', 'Selection     ', 'Exchange     ', 'Deletion', '', 'optiond', 'MC'),
(398, 11, 'level_e', 'The total number of all proper factors of 75600 is 						', NULL, '120 ', '119      ', '118       ', '58', '', 'optionc', 'MC'),
(399, 11, 'level_e', 'The number of ways in which 52 cards can be divided into 4 sets, three of them having 17 cards each and the fourth one having just one card  is 	', '1389794976.jpeg', ' ', '  ', '  ', ' ', '', 'optionb', 'MC'),
(400, 11, 'level_e', '	', '1389850158.jpeg', '', ' ', ' ', '', '', 'optiona', 'MC'),
(401, 11, 'level_e', '', '1389850223.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(402, 11, 'level_e', 'The following simultaneous equations\r\nx+y+z=3\r\nx+2y+3z=4\r\nx+4y+kz=6\r\n\r\nwill NOT have a unique solution for k equal to\r\n', NULL, '0', '30', '6', '7', '', 'optiond', 'MC'),
(403, 11, 'level_e', '', '1389850498.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(404, 11, 'level_e', 'The eigen value of skew-symmetric matrix are', NULL, 'always zero', 'always pure imaginary', 'always zero or pure imaginary', 'always real', '', 'optionc', 'MC'),
(405, 11, 'level_e', '', '1389851274.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(406, 11, 'level_e', '', '1389851337.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(407, 11, 'level_e', 'A screening test is carried out to detect a certain disease. It is found that 12% of the positive reports and 15% of the negative reports are incorrect. Assuming that the probability of a person getting a positive report is 0.01, the probability that a person tested gets an incorrect report is', NULL, '0.0027', '0.0173', '0.1497', '0.2100', '', 'optionc', 'MC'),
(408, 11, 'level_e', 'A random variable is uniformly distributed over the interval 2 to 10. Its variance will be', NULL, '16/3', '6', '256/9', '36', '', 'optiona', 'MC'),
(409, 11, 'level_e', 'A person on a trip has a choice between private car and public transport. The probability of using a private car is 0.45. While using the public transport, further choices available are bus and metro, out of which the probability of communing by a bus is 0.55. in such a situation, the probability (rounded up to two decimals) of using a car, bus and metro, respectively would be	', NULL, '0.45, 0.30 and 0.25	', '0.45, 0.25 and 0.30 ', '0.45, 0.55 and 0.00 ', '0.45, 0.35 and 0.20', '', 'optiona', 'MC'),
(410, 11, 'level_e', 'A class of first year B. Tech. students is composed of four batches A, B, C and D, each consisting of 30 students. It is found that the sessional marks of students in Engineering Drawing in batch C have a mean of 6.6 and standard deviation of 2.3.\r\nThe mean and standard deviation of the marks for the entire class are 5.5 and 4.2, respectively. It is decided by the course instructor to normalize the marks of the students of all batches to have the same mean and standard deviation as that of the entire class. Due to this, the marks of a student in batch C are changed from 8.5 to', NULL, '6.0', '7.0', '8.0', '9.0', '', 'optiond', 'MC'),
(411, 11, 'level_e', 'There are 25 calculators in a box. Two of them are defective. Suppose 5 calculators are randomly picked for inspection (i.e., each has the same change of being selected), what is the probability that only one of the calculators will be in the inspection?', NULL, '1/2', '1/3', '1/4', '1/5', '', 'optionb', 'MC'),
(412, 11, 'level_e', '', '1389853506.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(413, 11, 'level_e', 'In a 12 storey house ten people enter a lift cabin. It is known that they will leave in well defined groups of 2, 3, and 5 people at different storeys. The number of ways they can do so if the lift does not stop on second storey is:	', NULL, '78 ', '112 ', '720 ', '990', '', 'optionc', 'MC'),
(414, 11, 'level_e', 'The total number of ways of arranging AAAA BBB CC D E F in a row such that letters C are separated from one another is: ', NULL, '2772000  ', '1386000   ', '4158000 ', 'None of these', '', 'optionb', 'MC'),
(415, 11, 'level_e', 'An n-digit number is a positive number with exactly n digits. Nine hundred distinct n-digit numbers are to be formed using only the three digits 2, 5, and 7. The smallest value for which this is possible is ', NULL, '6', '7', '8', '9', '', 'optionb', 'MC'),
(416, 11, 'level_e', 'The trace and determinant of a 2x2 matrix are known to be -2 and -35 respectively. Its eigen values are', NULL, '-30 and -5', '-37 and -1', '-7 and 5', '17.5 and -2', '', 'optionc', 'MC'),
(417, 11, 'level_e', '	', '1389854450.jpeg', '', ' ', ' and D', '', '', 'optionc', 'MC'),
(418, 11, 'level_e', '', '1389854935.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(419, 11, 'level_e', '', '1389854948.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(420, 11, 'level_e', 'The diameters of 10000 ball bearings were measured. The mean diameter and standard deviation were found to be 10mm and 0.05mm respectively. Assuming Gaussian distribution of measurements, it can be expected that the number of measurements more than 10.15mm will be', NULL, '230', '115', '15', '2', '', 'optionc', 'MC'),
(421, 11, 'level_e', 'A box contains 2 washers, 3 nuts and 4 bolts. Items are drawn from the box at random one at a time without replacement. The probability of drawing 2 washers first followed by 3 nuts and subsequently the 4 bolts is', NULL, '2/315', '1/630', '1/1260', '1/2520', '', 'optionc', 'MC'),
(422, 11, 'level_e', 'Let (Z, *) be an algebraic structure, where Z  is the set if integers and the operation * is defined by n*m = maximum (n, m). Which of the following statements is true for (Z, *)?', NULL, '(Z, *) is a monoid', '(Z, *) is an abelian group', '(Z, *) is a group ', 'None of the above', '', 'optiond', 'MC'),
(423, 11, 'level_e', 'Which of the following propositions is a tautology?		', NULL, '(p v q)--> p', 'p v (q -->p)  ', 'p v (p -->q)  ', 'p --> (p --> q)', '', 'optionc', 'MC'),
(424, 11, 'level_e', 'In the lattice defined by the Hasse diagram given in following figure, how many complements does the element `e` have?	', '1389856293.jpeg', '2', '3 ', '0 ', '1', '', 'optionb', 'MC'),
(425, 11, 'level_e', '', '1389856403.jpeg', ' ', ' ', ' ', ' ', ' ', 'optionb', 'MC'),
(426, 11, 'level_e', '', '1389856491.jpeg', ' ', ' ', ' ', ' ', ' ', 'optionc', 'MC'),
(427, 11, 'level_e', '', '1389856606.jpeg', ' ', ' ', ' ', ' ', ' ', 'optionb', 'MC'),
(428, 11, 'level_e', 'The less-than relation, &lt;, on reals is', NULL, 'A partial ordering since it is asymmetric  and reflexive', 'A partial ordering since it is antiasymmetric  and reflexive', 'Not a partial ordering because it is not  asymmetric  and not reflexive', 'Not  a partial ordering because it is not  antiasymmetric  and reflexive', 'None of the above', 'optione', 'MC'),
(429, 11, 'level_e', '', '1389873770.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(430, 11, 'level_e', '', '1389873832.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(431, 11, 'level_e', 'Let A be the set of all non-singular matrices over real number and let * be the matrix multiplication operation. Then \r\n\r\n', NULL, 'A is closed under * but &lt;A, *&gt; is not a semigroup', '&lt;A, *&gt; is a semigroup but not a monoid', '&lt;A, *&gt; is a monoid but not a group', '&lt;A, *&gt; is a  group but not an abelian group', '', 'optiond', 'MC'),
(432, 11, 'level_e', '', '1389874239.jpeg', '3', '4', '9', 'None of the above', '', 'optionb', 'MC'),
(433, 11, 'level_e', 'Which of the following statements is false?\r\n\r\n\r\n\r\n\r\n', NULL, 'The set of rational numbers is an abelian group under addition.', 'The set of integers is an abelian group under addition.', 'The set of rational numbers from an abelian group under multiplication.', 'The set of real numbers excluding zero in an abelian group under multiplication.', '', 'optionc', 'MC'),
(434, 11, 'level_e', '', '1389874952.jpeg', '(i)-(a), (ii)-(b), (iii)-(c), (iv)-(d)', '(i)-(b), (ii)-(c), (iii)-(d), (iv)-(a)', '(i)-(b), (ii)-(a), (iii)-(c), (iv)-(d)', '(i)-(b), (ii)-(c), (iii)-(a), (iv)-(d)', '', 'optionb', 'MC'),
(435, 11, 'level_e', '	', '1390129158.jpeg', '', ' ', ' ', '', '', 'optionc', 'MC'),
(436, 11, 'level_e', '', '1389875095.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(437, 11, 'level_e', '	', '1389875152.jpeg', '', ' ', ' ', '', '', 'optiona', 'MC'),
(438, 11, 'level_e', '', '1389875217.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(439, 11, 'level_e', '', '1389875517.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(440, 11, 'level_e', 'The number of points at which the function f(x) = 1/log|x|  is discontinuous is:', NULL, '1', '2', '3', '4', '', 'optionc', 'MC'),
(441, 11, 'level_e', '	', '1389875881.jpeg', '', ' ', ' ', '', '', 'optionc', 'MC'),
(442, 11, 'level_e', '	', '1389875945.jpeg', '', ' ', ' ', '', '', 'optionc', 'MC'),
(443, 11, 'level_e', '			', '1389876032.jpeg', '', '   ', '   ', '', '', 'optiond', 'MC'),
(444, 11, 'level_e', '', '1389876122.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(445, 11, 'level_e', 'The number of ways in which a committee of 3 women and 4 men be chosen from 8 women and 7 men if Ms. X refuses to serve on the committee if Mr. Y is a member of the committee is ', NULL, '420', '840', '1540', 'none of these', '', 'optionc', 'MC'),
(446, 11, 'level_e', 'A speaks the truth in 70 percent cases and B in 80 percent cases. The probability that they will contradict each other in describing a single event is', NULL, '0.36', '0.38	', '0.4', '0.42', '', 'optionb', 'MC'),
(447, 11, 'level_e', 'The minimum number of edges in a connected cyclic graph on n vertices is:', NULL, 'n - 1', 'n', 'n + 1', 'none of the above', '', 'optionb', 'MC'),
(448, 11, 'level_e', '', '1389934756.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(449, 11, 'level_e', 'Convert to first order logic\r\nEvery student who takes AI1 passes it', NULL, 'x,y Student(x) Semester(y) Takes(x, ∀ ∧ ∧ AI1, y)∧ Passes(x, AI1, y)', '∀x,y Student(x) ∧ Semester(y) ∧ Takes(x, AI1, y) ⇒ Passes(x, AI1, y)', '∀x,y Student(x) v Semester(y) ∧ Takes(x, AI1, y) ⇒ Passes(x, AI1, y)', '∀x,y Student(y) ∧ Semester(x) ∧ Takes(x, AI1, y) ⇒ Passes(x, AI1, x)', '', 'optionb', 'MC'),
(450, 11, 'level_e', 'Convert to English\r\n∀x EatsRamen(x) ⇒ IsHomeless(x) ∨ IsAGradStudent(x)	', NULL, 'Everyone who eats ramen is either homeless and a graduate student', 'Everyone who eats ramen is homeless or a graduate student ', 'Everyone who eats ramen is either homeless or a graduate student ', 'none of these', '', 'optionb', 'MC'),
(451, 11, 'level_e', 'The statement form (p ⇔ r) ⇒ (q ⇔ r) is equivalent to', NULL, '[(∼p ∨ r) ∧ (p ∨ ∼r)] ∨ ∼[(∼q ∨ r) ∧ (q ∨ ∼r)]', '∼[(∼p ∨ r) ∧ (p ∨ ∼r)] ∧ [(∼q ∨ r) ∧ (q ∨ ∼r)]', '[(∼p ∨ r) ∧ (p ∨ ∼r)] ∧ [(∼q ∨ r) ∧ (q ∨ ∼r)]', '[(∼p ∨ r) ∧ (p ∨ ∼r)] ∨ [(∼q ∨ r) ∧ (q ∨ ∼r)]', '∼[(∼p ∨ r) ∧ (p ∨ ∼r)] ∨ [(∼q ∨ r) ∧ (q ∨ ∼r)]', 'optione', 'MC'),
(452, 11, 'level_e', '', '1389935032.jpeg', ' ', ' ', ' ', ' ', ' ', 'optionb', 'MC'),
(453, 12, 'level_e', 'Statement 1: Assume array1 and array2 are the names of arrays. To assign the contents of array2 to array1, \r\n             you would use the following statement: array1 = array2;\r\n\r\nStatement 2: When you pass an array as an argument to a function, the function can modify the contents of the array.  ', NULL, 'Statement 1 is correct, 2 is incorrect   ', 'Statement 2 is correct, 1 is incorrect', 'Both statements are correct', 'Both statements are incorrect     ', '', 'optionb', 'MC'),
(454, 12, 'level_e', 'Which of the following is the correct way to declare a function pointer named pMyFunc that returns an int and has an int parameter?', NULL, '*(int pMyFunc(int));', '(int *pMyFunc int);', 'int (*pMyFunc)(int);', 'int *pMyFunc (int);', '', 'optionc', 'MC'),
(455, 12, 'level_e', 'What is the output of the following program?	\r\n  void myfunc(char** param){\r\n                            ++param;\r\n                         }\r\n  int main(){\r\n    char* string = (char*)malloc(64);\r\n    strcpy(string, &quot;hello_World&quot;);\r\n    myfunc(&amp;string);\r\n    myfunc(&amp;string);\r\n    printf(&quot;%s\\n&quot;, string);\r\n    // ignore memory leak for sake of quiz\r\n    return 0;\r\n}\r\n		', NULL, 'hello_World', 'ello_World  ', 'llo_World  ', 'Illegal memory access', '', 'optiona', 'MC'),
(456, 12, 'level_e', 'What will be the output of the following program:\r\nvoid g(int x)\r\n{\r\n     x=x+2;\r\n     printf(&quot;%d &quot;,x);\r\n}\r\nvoid f(int&amp; x)\r\n{\r\n     x=x+1;\r\n     g(x);\r\n     printf(&quot;%d &quot;,x);\r\n}\r\nint main()\r\n{\r\n    int x = 2;\r\n    f(x);\r\n    printf(&quot;%d &quot;,x);\r\n}\r\n', NULL, '5 5 5', '5 3 2', '4 3 2 ', '5 3 3 ', '', 'optiond', 'MC'),
(457, 12, 'level_e', 'What is the output of the following program?\r\nint y = 2;\r\nint f1(int x)\r\n{\r\n    return x+y;\r\n}\r\nint f1(int x, int y)\r\n{\r\n    return x+y;\r\n}\r\nint main()\r\n{\r\nprintf(&quot;%d %d %d&quot;,f1(1,0),f1(1),f1(1,1));\r\nsystem(&quot;pause&quot;);\r\n}\r\n', NULL, '3 3 3', '1 3 2 ', '1 3 3 ', '3 3 2', '', 'optionb', 'MC'),
(458, 12, 'level_e', 'The following is a recursive function. Assuming the input parameter n is a non-negative integer, what is the returned value for rec(3) and rec(4) ? \r\nint rec(const int n)\r\n{\r\n	if (n &lt; 2)\r\n		return n;\r\n	return rec(n-1) + rec(n-2)+1;\r\n}\r\n', NULL, '3, 6     ', '4, 7      ', '7, 12', '6, 11', '', 'optionb', 'MC'),
(459, 12, 'level_e', 'What is the output of the following program?\r\nvoid operation(const int a[], const int b[], int c[], int size) \r\n                  {		\r\n	            for (int i=0; i&lt;size; i++)		\r\n		    c[size-1-i] = abs(a[i]-b[i]);	 }\r\nvoid main() {\r\n	int A[4] = {1,2,3,4};\r\n	int B[4] = {-6,-3,0,3};\r\n	int C[4];\r\n	operation(A,B,C,4);\r\n	for (int i=0; i&lt;4; i++)\r\n		cout &lt;&lt; C[i] &lt;&lt; &quot; &quot;;\r\n}\r\n', NULL, '7 5 3 1 ', '1 3 5 7 ', '7 3 1 5', '5 1 3 7 ', '', 'optionb', 'MC'),
(460, 12, 'level_e', 'Consider the following code \r\nint f(const int a[], const int b[], int size){\r\n\r\n	int sum = 0;\r\n	for (int i=0; i&lt;size; i++){\r\n		if (a[i]&gt;b[i])\r\n			sum += a[i];\r\n		else\r\n			sum += b[i];\r\n	}\r\n	return sum;\r\n}\r\nvoid main() {\r\n	int a[5] = {2,10,4,12,6};\r\n	int b[5] = {0,3,6,9,12};\r\n	int x=f(a,b,5);\r\n	printf(&quot;%d &quot;,x);\r\n}\r\n \r\nWhat is the output of the above program?\r\n', NULL, '42	', '39', '36', '33', '', 'optiona', 'MC'),
(461, 12, 'level_e', 'Consider the following code \r\nint f(const int a[], const int b[], int size){\r\n\r\n	int sum = 0;\r\n	for (int i=0; i&lt;size; i++){\r\n		if (a[i]&gt;b[i])\r\n			sum += a[i];\r\n		else\r\n			sum += b[i];\r\n	}\r\n	return sum;\r\n}\r\nvoid main() {\r\n	int a[5] = {2,10,4,12,6};\r\n	int b[5] = {0,3,6,9,12};\r\n	int x=f(a,b,5);\r\n	printf(&quot;%d &quot;,x);\r\n}\r\nWhat should be a good name for the function f?\r\n\r\n', NULL, 'sum_Of_Smaller', 'Find_Smallest', 'Sum_Of_Largest', 'Find_Largest', '', 'optionc', 'MC'),
(462, 12, 'level_e', 'What is the output of the following program?\r\nvoid main(void){\r\n	 int a = 5, b = 3, c = 2, d = 2;\r\n	 printf(&quot;%d %d&quot;,++a/3-c*d,a-b*c%(d+3));\r\n               }\r\n', NULL, '-2 4', '-1 4', '-2 -1   ', '-1 4  ', '', 'optiona', 'MC'),
(463, 12, 'level_e', 'Consider the following code \r\ndouble oil1 = 52, oil2 = 30, oil3 = 18;\r\nvoid f() {	\r\n	double oil2 = 15.95;	\r\n	cout &lt;&lt; oil2 &lt;&lt; endl;\r\n         }\r\nvoid g(double oil1, double oil2) {	\r\n	                           oil2 = 58;\r\n                                 }	\r\nint main() {	\r\n	double oil1 = 32.4, oil2 = 39;\r\n	g(oil3, oil1);\r\n	f();//line 1\r\n	cout &lt;&lt; oil2 &lt;&lt;	endl; //line 2\r\n	return 0;\r\n}\r\nWhat is printed by line 1?\r\n', NULL, '15.95', '30	   ', '39	', 'Depends on compiler', '', 'optiona', 'MC'),
(464, 12, 'level_e', 'Consider the following code \r\ndouble oil1 = 52, oil2 = 30, oil3 = 18;\r\nvoid f() {	\r\n	double oil2 = 15.95;	\r\n	cout &lt;&lt; oil2 &lt;&lt; endl;\r\n         }\r\nvoid g(double oil1, double oil2) {	\r\n	                           oil2 = 58;\r\n                                 }	\r\nint main() {	\r\n	double oil1 = 32.4, oil2 = 39;\r\n	g(oil3, oil1);\r\n	f();//line 1\r\n	cout &lt;&lt; oil2 &lt;&lt;	endl; //line 2\r\n	return 0;\r\n}\r\nWhat is printed by line 2?\r\n\r\n', NULL, '39', '30 	', '15.95', 'Depends on the compiler', '', 'optiona', 'MC'),
(465, 12, 'level_e', 'Consider the following code \r\n#include &lt;stdio.h&gt;  \r\n     main() {\r\n              float sum = 0.0, j = 1.0, I = 2.0; \r\n              while (i/j&gt; 0.001) {\r\n                                   j = j + j; \r\n                                   sum = sum + i/l; \r\n                                   printf(“%f\\n”, sum);\r\n                                 }\r\n            }\r\nHow many lines of output does the program produce?\r\n		', NULL, '0-9', '10-19  ', '20-29  ', '30-39', '', 'optionb', 'MC');
INSERT INTO `subj_question` (`qnid_s`, `subid`, `level`, `question`, `figure`, `optiona`, `optionb`, `optionc`, `optiond`, `optione`, `correct`, `type`) VALUES
(466, 12, 'level_e', 'Consider the following code \r\n#include &lt;stdio.h&gt;  \r\n     main() {\r\n              float sum = 0.0, j = 1.0, I = 2.0; \r\n              while (i/j&gt; 0.001) {\r\n                                   j = j + j; \r\n                                   sum = sum + i/l; \r\n                                   printf(“%f”, sum);\r\n                                 }\r\n            }\r\n\r\nWhich of the following is the integer that best approximates the last number printed?	', NULL, '0', '1 ', '2 ', '3', '', 'optionc', 'MC'),
(467, 12, 'level_e', 'Consider the following code\r\nvoid main()\r\n{	int c =4, d=3;\r\n	if(c==1)if(d==2)c=5;else if(d==3) c=6;else c=7;else c=8;\r\n	cout &lt;&lt; c &lt;&lt; endl;\r\n}\r\nWhat is the output?\r\n', NULL, '6', '7', '8', '5', '', 'optionc', 'MC'),
(468, 12, 'level_e', 'Consider the following code\r\n# include&lt;stdio.h&gt; \r\nmain() { \r\n         float sum = 0.0, t = 1.0; \r\n          for(int i = 1; i &lt; 0; i ++) \r\n            { \r\n               sum = sum + t;\r\n               t = t*2.0/i; \r\n               printf(“%f\\n”, sum);\r\n            }\r\n      }\r\nWhich of the following integers is the closest to the last number printed?		', NULL, '5', '7  ', '9  ', '11', '', 'optionb', 'MC'),
(469, 12, 'level_e', 'What is the output of the following program?\r\nint x =1;\r\nvoid mystery1()\r\n{\r\n  static int x = 50;\r\n  cout &lt;&lt; x++ &lt;&lt; endl;\r\n}\r\nvoid mystery2()\r\n{\r\nx *= 10;\r\ncout &lt;&lt; x &lt;&lt; endl;\r\n} \r\n\r\n int main()\r\n{\r\n int x = 5;\r\n{	\r\n int x = 7;\r\n}\r\n  mystery1();\r\n  mystery1();\r\n  mystery2();}\r\n}\r\n', NULL, '50 51 10', '50 50 10', '50 51 510', '50 50 500', '', 'optiona', 'MC'),
(470, 12, 'level_e', 'Consider the following code and answer for program PARAM\r\nint m,n;\r\n \r\nvoid P(int x,int y)\r\n{\r\nint m =1;\r\nx=y+1;\r\n}\r\nvoid Q(int x, int y)\r\n{x=y+1;}\r\nmain(){\r\n        m=0;\r\n        P(m,m);\r\n        printf(“%d\\n”,m);\r\n        n=0;\r\n        Q(n*1,n);\r\n        printf(“%d\\n”,n);  \r\n      }\r\n\r\nThe value of m, output by the program PARAM is:\r\n		', NULL, '1, because m is a local variable in P', '0, because m is the actual parameter that corresponds to the formal parameter in p  ', '0, because both x and y are just reference to m, and y has the value 0  ', '0, because both x and y are just reference to m which gets modified in procedure P', '', 'optionb', 'MC'),
(471, 12, 'level_e', 'Consider the following code and answer for program PARAM\r\nint m,n;\r\n \r\nvoid P(int x,int y)\r\n{\r\nint m =1;\r\nx=y+1;\r\n}\r\nvoid Q(int x, int y)\r\n{x=y+1;}\r\nmain(){\r\n        m=0;\r\n        P(m,m);\r\n        printf(“%d\\n”,m);\r\n        n=0;\r\n        Q(n*1,n);\r\n        printf(“%d\\n”,n);  \r\n      }\r\nThe value of n, output by the program PARAM is:\r\n\r\n\r\n\r\n\r\n	', NULL, '0, because n is the actual parameter corresponds to x in procedure Q.', '0, because n is the actual parameter  to y in procedure Q. ', '1, because n is the actual parameter corresponds to x in procedure Q. ', '1, because n is the actual parameter corresponds to y in procedure Q.', '', 'optionb', 'MC'),
(472, 12, 'level_e', 'Consider the following code and answer for program PARAM\r\nint m,n;\r\n \r\nvoid P(int x,int y)\r\n{\r\nint m =1;\r\nx=y+1;\r\n}\r\nvoid Q(int x, int y)\r\n{x=y+1;}\r\nmain(){\r\n        m=0;\r\n        P(m,m);\r\n        printf(“%d\\n”,m);\r\n        n=0;\r\n        Q(n*1,n);\r\n        printf(“%d\\n”,n);  \r\n      }\r\nWhat is the scope of m declared in the main program?	', NULL, 'PARAM, P, Q', 'PARAM, P ', 'PARAM, Q ', 'P, Q', '', 'optiona', 'MC'),
(473, 12, 'level_e', 'What is the output of the following program?\r\nstruct arr{\r\n       int array[5];\r\n       int s;\r\n       };\r\n       void f(int* a)\r\n       {\r\n            printf(&quot;%d %d %d %d&quot;, a[2],a[3],a[4],a[5]);\r\n        }\r\n      int main()\r\n        {\r\n            arr a;\r\n            a.array[0] = 0;\r\n            a.array[1] = 1;\r\n            a.array[2] = 2;\r\n            a.array[3] = 4;\r\n            a.array[4] = 3;\r\n            a.s=128;\r\n            f(a.array);\r\n        return 0;\r\n        }\r\n', NULL, '2 3 4 0', '2 3 4 128', '2 4 3 128', '2 4 3 0', '', 'optionc', 'MC'),
(474, 12, 'level_e', 'What is the output of the following program?\r\nint main()\r\n{    float f =5.4;    int x=2;\r\n    float result = (f/x)*3 + 2;\r\n    int result1 = (f/x)*3 + 2;\r\n    float result2 = (int)(f/x)*3/4.0 + 2;\r\n    printf(&quot;%f %d %f&quot;,result,result1,result2);\r\n}\r\n\r\n', NULL, '10.1 10 3.5', '10.1 10 3', '10.1 8 3.5', '10.1 8 3', '', 'optiona', 'MC'),
(475, 12, 'level_e', 'Consider the following code\r\n#include&lt;stdio.h&gt; \r\nint main() {\r\nint sum = 0, maxsum = 0; i, n = 6; \r\nint a() = {2, -2, -1, 3, 4, 2}; \r\nfor (i = 0; i &lt; n; i ++) { \r\nif(i == 0 || a[i] &lt; 0 || a[i] &lt; a [i – 1]){ \r\nif (sum &gt; maxsum) maxsum = sum; \r\nsum = (a[i] &gt;0) ?a[i] :0;}\r\nslse sum += a[i]; \r\nif (sum &gt; maxsum) maxsum = sum; \r\nprintf (“11%d\\n”, maxsum);\r\n}\r\n}\r\nWhat is the output is printed out when the program is executed?		', NULL, '9', '8  ', '7  ', '6', '', 'optionc', 'MC'),
(476, 12, 'level_e', 'Consider the program below in a hypothetical programming language which allows global variables and a choice of static or dynamic scoping.\r\nInt i; \r\nprogram main() {\r\ni = 10; \r\ncall f();\r\n} \r\n procedure f() {\r\nint i = 20; \r\ncall g();\r\n} \r\nprocedure g(){\r\nprint i;\r\n}\r\nLet x be the value printed under static scoping and y be the value printed under dynamic scoping. Then x and y are\r\n', NULL, 'x = 10, y = 20', 'x = 20, y = 10', 'x = 10, y = 20', 'x = 20, y = 20', '', 'optiona', 'MC'),
(477, 12, 'level_e', 'What is the output of the following program:\r\nvoid main( ){\r\n	int A[3] = {33, 21, 34};\r\n	for (int i = 0; i &lt; 3; i++) {\r\n		for (int j = i+1; j &lt; 3; j++){\r\n			if (A[j] &gt; A[i]){\r\n				A[i] += A[j];  	A[j] = A[i] - A[j];\r\n				A[i] = A[i] - A[j];\r\n			}\r\n		}\r\n	}\r\n	for (i=0; i&lt;3; i++)  cout &lt;&lt; A[i] &lt;&lt; &quot; &quot; ;}\r\n', NULL, '21 33 34', '34 33 21', '33 21 34', '34 21 33', '', 'optionb', 'MC'),
(478, 12, 'level_e', 'Code:\r\nint z,x=5,y=-10,a=4,b=2; \r\nz = x++ - --y * b / a;\r\nWhat number will z in the sample code above contain? \r\n', NULL, '5', '6', '10', '11', '12', 'optionc', 'MC'),
(479, 12, 'level_e', 'With every use of a memory allocation function, what function should be used to release allocated memory which is no longer needed? ', NULL, 'unalloc() ', 'dropmem() ', 'dealloc() ', 'release() ', 'free() ', 'optione', 'MC'),
(480, 12, 'level_e', 'Code:\r\nvoid *ptr;\r\nmyStruct myArray[10];\r\nptr = myArray;\r\nWhich of the following is the correct way to increment the variable &quot;ptr&quot;? \r\n', NULL, 'ptr = ptr + sizeof(myStruct);', '++(int*)ptr; ', 'ptr = ptr + sizeof(myArray); ', 'increment(ptr); ', 'ptr = ptr + sizeof(ptr); ', 'optiona', 'MC'),
(481, 12, 'level_e', 'Code:\r\nchar* myFunc (char *ptr)\r\n{\r\n ptr += 3;\r\n return (ptr);\r\n} \r\nint main()\r\n{\r\n char *x, *y;\r\n x = &quot;HELLO&quot;;\r\n y = myFunc (x);\r\n printf (&quot;y = %s\\n&quot;, y);\r\n return 0;\r\n}\r\nWhat will print when the sample code above is executed? \r\n	', NULL, 'y = HELLO ', 'y = ELLO  ', 'y = LLO  ', 'y = LO ', '', 'optiond', 'MC'),
(482, 12, 'level_e', '&quot;My salary was increased by 15%!&quot; \r\nSelect the statement which will EXACTLY reproduce the line of text above. \r\n', NULL, 'printf(&quot;&quot;My salary was increased by 15/%!&quot;\n&quot;); ', 'printf(&quot;My salary was increased by 15%!\n&quot;); ', 'printf(&quot;My salary was increased by 15&#039;%&#039;!\n&quot;); ', 'printf(&quot;&quot;My salary was increased by 15%%!&quot;\n&quot;);', 'printf(&quot;&quot;My salary was increased by 15&#039;%&#039;!&quot;\n&quot;); ', 'optiond', 'MC'),
(483, 12, 'level_e', 'int testarray[3][2][2] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}; \r\nWhat value does testarray[2][1][0] in the sample code above contain? \r\n', NULL, '3', '5', '7', '9', '11', 'optione', 'MC'),
(484, 12, 'level_e', 'Code:\r\nint x[] = { 1, 4, 8, 5, 1, 4 }; \r\nint *ptr, y; \r\nptr  = x + 4; \r\ny = ptr - x;\r\nWhat does y in the sample code above equal? \r\n', NULL, '-3 ', '0', '4', '4 + sizeof( int ) ', '4 * sizeof( int ', 'optionc', 'MC'),
(485, 12, 'level_e', 'Code:\r\nvoid myFunc (int x) \r\n{ \r\n   if (x &gt; 0)\r\n   myFunc(--x); \r\n   printf(&quot;%d, &quot;, x); \r\n} \r\nint main() \r\n{ \r\n   myFunc(5); \r\n   return 0; \r\n}\r\nWhat will the above sample code produce when executed? \r\n', NULL, '1, 2, 3, 4, 5, 5, ', '4, 3, 2, 1, 0, 0, ', '5, 4, 3, 2, 1, 0, ', '0, 0, 1, 2, 3, 4, ', '0, 1, 2, 3, 4, 5, ', 'optiond', 'MC'),
(486, 12, 'level_e', '11 ^ 5 \r\nWhat does the operation shown above produce? \r\n', NULL, '1', '6', '8', '14', '15', 'optiond', 'MC'),
(487, 12, 'level_e', '#define MAX_NUM 15 \r\nReferring to the sample above, what is MAX_NUM? \r\n', NULL, 'MAX_NUM is an integer variable. ', 'MAX_NUM is a linker constant. ', 'MAX_NUM is a precompiler constant. ', 'MAX_NUM is a preprocessor macro. ', 'MAX_NUM is an integer constant. ', 'optiond', 'MC'),
(488, 12, 'level_e', 'Code:\r\nint i,j; \r\nint ctr = 0; \r\nint myArray[2][3]; \r\nfor (i=0; i&lt;3; i++) \r\n   for (j=0; j&lt;2; j++) \r\n   { \r\n      myArray[j][i] = ctr; \r\n      ++ctr; \r\n   }\r\nWhat is the value of myArray[1][2]; in the sample code above? \r\n', NULL, '1', '2', '3', '4', '5', 'optione', 'MC'),
(489, 12, 'level_e', 'Code:\r\nint x = 3; \r\nif( x == 2 );\r\n  x = 0; \r\nif( x == 3 )\r\n x++; \r\nelse x += 2;\r\nWhat value will x contain when the sample code above is executed? \r\n', NULL, '1', '2', '3', '4', '5', 'optionb', 'MC'),
(490, 12, 'level_e', 'Code:\r\nchar *ptr; \r\nchar myString[] = &quot;abcdefg&quot;; \r\nptr = myString; \r\nptr += 5;\r\nWhat string does ptr point to in the sample code above? \r\n', NULL, 'fg', 'efg ', 'defg ', 'cdefg ', 'None of the above ', 'optiona', 'MC'),
(491, 12, 'level_e', 'Code:\r\ndouble x = -3.5, y = 3.5; \r\nprintf( &quot;%.0f : %.0f\\n&quot;, ceil( x ), ceil( y ) ); \r\nprintf( &quot;%.0f : %.0f\\n&quot;, floor( x ), floor( y ) );\r\nWhat will the code above print when executed?\r\nceil =&gt;rounds up 3.2=4 floor =&gt;rounds down 3.2=3 \r\n	', NULL, '-3 : 4 \r\n-4 : 3 ', '-4 : 4 \r\n-3 : 3  ', '-4 : 3 \r\n-4 : 3  ', '-4 : 3 \r\n-3 : 4 ', '', 'optiona', 'MC'),
(492, 12, 'level_e', 'Which one of the following will declare a pointer to an integer at address 0x200 in memory? 	', NULL, 'int *x; \r\n*x = 0x200;', 'int *x = &amp;0x200;  ', 'int *x = *0x200;  ', 'int *x = 0x200; ', 'int *x( &amp;0x200 );  ', 'optiond', 'MC'),
(493, 12, 'level_e', 'Code:\r\nx = 3, counter = 0; \r\nwhile ((x-1)) \r\n{ \r\n   ++counter; \r\n   x--; \r\n}\r\nReferring to the sample code above, what value will the variable counter have when completed? \r\n', NULL, '0', '1', '2', '3', '4', 'optionc', 'MC'),
(494, 12, 'level_e', 'Which one of the following will read a character from the keyboard and will store it in the variable c? ', NULL, 'c = getc(); ', 'getc( &amp;c ); ', 'c = getchar( stdin ); ', 'getchar( &amp;c ) ', 'c = getchar(); ', 'optione', 'MC'),
(495, 12, 'level_e', 'Code:\r\n#include &lt;stdio.h&gt; \r\nint i; \r\nvoid increment( int i ) \r\n{ \r\n   i++; \r\n} \r\n\r\nint main() \r\n{ \r\n   for( i = 0; i &lt; 10; increment( i ) ) \r\n   { \r\n   } \r\n   printf(&quot;i=%d\r\n&quot;, i); \r\n   return 0; \r\n}\r\nWhat will happen when the program above is compiled and executed? \r\n				', NULL, 'It will not compile. ', 'It will print out: i=9.     ', 'It will print out: i=10.     ', 'It will loop indefinitely', '', 'optiond', 'MC'),
(496, 12, 'level_e', 'Code:\r\nchar ptr1[] = &quot;Hello World&quot;; \r\nchar *ptr2 = malloc( 5 ); \r\nptr2 = ptr1;\r\nWhat is wrong with the above code (assuming the call to malloc does not fail)? \r\n							', NULL, 'There will be a memory overwrite. ', 'There will be a memory leak.        ', 'There will be a segmentation fault.        ', 'It will not compile. ', ' ', 'optionb', 'MC'),
(497, 12, 'level_e', 'Code:\r\nint i = 4; \r\nswitch (i) \r\n{ \r\n   default: \r\n      ; \r\n   case 3: \r\n      i += 5; \r\n      if ( i == 8) \r\n      { \r\n         i++; \r\n         if (i == 9) break; \r\n         i *= 2; \r\n      } \r\n      i -= 4; \r\n      break; \r\n   case 8: \r\n      i += 5; \r\n      break;\r\n} \r\nprintf(&quot;i = %d\\n&quot;, i);\r\nWhat will the output of the sample code above be? \r\n', NULL, 'i = 5', 'i = 8 ', 'i = 9 ', 'i = 10 ', 'i = 18 ', 'optiona', 'MC'),
(498, 12, 'level_e', 'Which one of the following C operators is right associative? ', NULL, '=', ',', '[]', '^', '-&gt;', 'optiona', 'MC'),
(499, 12, 'level_e', 'What does the &quot;auto&quot; specifier do? 	', NULL, 'It automatically initializes a variable to 0;. ', 'It indicates that a variable&#039;s memory will automatically be preserved ', 'It automatically increments the variable when used.  ', 'It automatically initializes a variable to NULL. ', 'It indicates that a variable&#039;s memory space is allocated upon entry into the block.  ', 'optione', 'MC'),
(500, 12, 'level_e', 'Code:\r\nint x = 0; \r\nfor ( ; ; ) \r\n{ \r\n if (x++ == 4)\r\n  break; \r\n continue; \r\n} \r\nprintf(&quot;x=%d\\n&quot;, x);\r\nWhat will be printed when the sample code above is executed? \r\n', NULL, 'x=0 ', 'x=1 ', 'x=4 ', 'x=5', 'x=6 ', 'optiond', 'MC'),
(501, 12, 'level_e', 'Code:\r\nint y[4] = {6, 7, 8, 9}; \r\nint *ptr = y + 2; \r\nprintf(&quot;%d\\n&quot;, ptr[ 1 ] );  /*ptr+1 == ptr[1]*/\r\nWhat is printed when the sample code above is executed? \r\n', NULL, '6', '7', '8', '9', 'The code will not compile. ', 'optiond', 'MC'),
(502, 12, 'level_e', 'penny = one \r\nnickel = five \r\ndime = ten \r\nquarter = twenty-five \r\nHow is enum used to define the values of the American coins listed above? \r\n', NULL, 'enum coin {(penny,1), (nickel,5), (dime,10), (quarter,25)}; ', 'enum coin ({penny,1}, {nickel,5}, {dime,10}, {quarter,25}); ', 'enum coin {penny=1,nickel=5,dime=10,quarter=25};', 'enum coin (penny=1,nickel=5,dime=10,quarter=25); ', 'enum coin {penny, nickel, dime, quarter} (1, 5, 10, 25); ', 'optionc', 'MC'),
(503, 12, 'level_e', 'char txt [20] = &quot;Hello world!\\0&quot;; \r\nHow many bytes are allocated by the definition above? \r\n	', NULL, '11 bytes ', '12 bytes  ', '13 bytes  ', '20 bytes', '', 'optiond', 'MC'),
(504, 12, 'level_e', 'Code:\r\nint i = 4; \r\nint x = 6; \r\ndouble z; \r\nz =  x / i; \r\nprintf(&quot;z=%.2f\\n&quot;, z);\r\nWhat will print when the sample code above is executed? \r\n', NULL, 'z=0.00 ', 'z=1.00', 'z=1.50 ', 'z=2.00 ', 'z=NULL ', 'optionb', 'MC'),
(505, 12, 'level_e', 'Which one of the following variable names is NOT valid? ', NULL, 'go_cart ', 'go4it ', '4season', 'run4 ', '_what ', 'optionc', 'MC'),
(506, 12, 'level_e', 'int a [8] = { 0, 1, 2, 3 }; \r\nThe definition of a above explicitly initializes its first four elements. Which one of the following describes how the compiler treats the remaining four elements? \r\n', NULL, 'Standard C defines this particular behavior as implementation-dependent. The compiler writer has the freedom to decide how the remaining elements will be handled', 'The remaining elements are initialized to zero(0)', 'It is illegal to initialize only a portion of the array. Either the entire array must be initialized, or no part of it may be initialized. ', 'As with an enum, the compiler assigns values to the remaining elements by counting up from the last explicitly initialized element. The final four elements will acquire the values 4, 5, 6, and 7, respectively. ', 'They are left in an uninitialized state; their values cannot be relied upon. ', 'optionb', 'MC'),
(507, 12, 'level_e', 'Which one of the following statements allocates enough space to hold an array of 10 integers that are initialized to 0? 	', NULL, 'int *ptr = (int *) malloc(10, sizeof(int)); ', 'int *ptr = (int *) calloc(10, sizeof(int));  ', 'int *ptr = (int *) malloc(10*sizeof(int));  ', 'int *ptr = (int *) alloc(10*sizeof(int)); ', 'int *ptr = (int *) calloc(10*sizeof(int));  ', 'optionb', 'MC'),
(508, 12, 'level_e', 'Code:\r\nchar *buffer = &quot;0123456789&quot;; \r\nchar *ptr = buffer; \r\nptr += 5; \r\nprintf( &quot;%s\\n&quot;, ptr ); \r\nprintf( &quot;%s\\n&quot;, buffer );\r\nWhat will be printed when the sample code above is executed? \r\n', NULL, '0123456789 \r\n56789 ', '5123456789 \r\n5123456789 ', '56789 \r\n56789 ', '0123456789 \r\n0123456789 ', '56789 \r\n0123456789 ', 'optione', 'MC'),
(509, 12, 'level_e', 'Code:\r\nint x[] = {1, 2, 3, 4, 5}; \r\nint u; \r\nint *ptr = x; \r\n???? \r\nfor( u = 0; u &lt; 5; u++ )\r\n{\r\n printf(&quot;%d-&quot;, x[u]); \r\n}\r\nprintf( &quot;\\n&quot; ); \r\nWhich one of the following statements could replace the ???? in the code above to cause the string 1-2-3-10-5- to be printed when the code is executed? \r\n', NULL, '*ptr + 3 = 10; ', '*ptr[ 3 ] = 10; ', '*(ptr + 3) = 10;', '(*ptr)[ 3 ] = 10; ', '*(ptr[ 3 ]) = 10; ', 'optionc', 'MC'),
(510, 12, 'level_e', 'Code:\r\n#include &lt;stdio.h&gt; \r\nvoid func() \r\n{ \r\n   int x = 0; \r\n   static int y = 0; \r\n   x++; y++; \r\n   printf( &quot;%d -- %d\\n&quot;, x, y ); \r\n} \r\nint main() \r\n{ \r\n   func(); \r\n   func(); \r\n   return 0; \r\n}\r\nWhat will the code above print when it is executed? \r\n', NULL, '1 -- 1 \r\n1 -- 1 ', '1 -- 1 \r\n2 -- 1 ', '1 -- 1 \r\n2 -- 2 ', '1 -- 0 \r\n1 -- 0 ', '1 -- 1 \r\n1 -- 2 ', 'optione', 'MC'),
(511, 12, 'level_e', 'Code:\r\nint m = -14; \r\nint n = 6; \r\nint o; \r\no = m % ++n; \r\nn += m++ - o; \r\nm &lt;&lt;= (o ^ n) &amp; 3;\r\nAssuming two&#039;s-complement arithmetic, which one of the following correctly represents the values of m, n, and o after the execution of the code above? \r\n		', NULL, 'm = -26, n = -7, o = 0 ', 'm = -52, n = -4, o = -2   ', 'm = -26, n = -5, o = -2   ', 'm = -104, n = -7, o = 0 ', ' ', 'optiona', 'MC'),
(512, 12, 'level_e', 'short int x; /* assume x is 16 bits in size */ \r\nWhat is the maximum number that can be printed using printf(&quot;%d\\n&quot;, x), assuming that x is initialized as shown above? \r\n', NULL, '127 ', '128 ', '255 ', '32,767', '65,536 ', 'optiond', 'MC'),
(513, 13, 'level_e', 'What is meant by the term ‘software crisis’?', NULL, 'try to deliver software on time with good quality', 'AbiliA situation in which experienced developers leave the company', 'Inability of  new software to inter-operate with existing software', 'Instability in the development team', 'A situation in which large scale software projects took more time and budget than was planned', 'optione', 'MC'),
(514, 13, 'level_e', 'The items in column X have to be matched with the descriptions in column Y.\r\n		COLUMN X		            COLUMN Y	\r\n	1	Unit testing	        A	The finished system tested with users 	\r\n	2	Subsystem testing	B	The whole finished system tested by developers	\r\n	3	System testing   	C	Individual components are tested	\r\n	4	Acceptance testing	D	Collections of components are tested                              	\r\nWhich of the following match(es) is / are appropriate?\r\n', NULL, '1 &amp; C    2 &amp; D    3 &amp; A    4 &amp; B', '1 &amp; C    2 &amp; D    3 &amp; B    4 &amp; A  ', '1 &amp; B    2 &amp; D    3 &amp; C    4 &amp; A', '1 &amp; D    2 &amp; C    3 &amp; A    4 &amp; B', '1 &amp; D    2 &amp; B    3 &amp; A    4 &amp; C  ', 'optionb', 'MC'),
(515, 13, 'level_e', 'Consider the following flow chart.\r\n\r\nChoose the correct code fragment(s), which show(s) its logic.', '1390319169.jpeg', 'while a\r\n{ repeat c \r\n  until b\r\n  d \r\n}\r\n', 'if a then \r\n{ if b then c\r\n  else d\r\n }    \r\n', 'if a then\r\n{ while b \r\n  c\r\n  d\r\n}\r\n', 'while a\r\n{ while b \r\n  c\r\n  d \r\n}', 'while a\r\n{ do c \r\n  while b\r\n  d \r\n}\r\n', 'optiond', 'MC'),
(516, 13, 'level_e', 'An erroneous program module was handed over to a developer. He changed the code and checked whether it works according to the requirements specification. What did he do?   ', NULL, 'Beta Testing                     ', 'Top-Down Testing            ', 'Regression Testing', 'Bottom-Up Testing           ', 'Alpha Testing', 'optionc', 'MC'),
(517, 13, 'level_e', 'Which of the following sets represent the 5 stages defined by Capability Maturity Model in increasing order of maturity? ', NULL, 'Initial, Defined, Repeatable, Managed, Optimized', 'Initial, Repeatable, Defined, Managed, Optimized', 'Initial, Defined, Managed, Repeatable, Optimized', 'Initial, Managed, Repeatable, Defined, Optimized', 'Initial, Repeatable, Managed, Defined, Optimized', 'optionb', 'MC'),
(518, 13, 'level_e', 'What is the most important software quality attribute of a web based transaction processing system? ', NULL, 'Usability', 'Security', 'Efficiency', 'Safety', 'Modularity', 'optionb', 'MC'),
(519, 13, 'level_e', 'Which of the following is NOT the property of CASE tools ?', NULL, 'can completely automate the software development process.', 'minimize development costs and maintenance costs.', 'can be applied to all the phases of the software life cycle.    ', 'may be integrated across functions.        ', '', 'optiona', 'MC'),
(520, 13, 'level_e', 'Configuration management is the process concerned with managing an evolving software product.\r\n Which of the following are items managed in this process?   \r\n', NULL, 'program code, user manuals, version information, company policy', 'version information, user manuals, marketing information, design ', 'test data, version information, company policy, user manuals', 'version information, specifications, design, marketing information', 'specifications, design, program code, user manuals', 'optione', 'MC'),
(521, 13, 'level_e', 'Requirement validation', NULL, 'is part of the feasibility study.', 'is accomplished through unit and integration testing.', 'is the process that checks the accuracy and the completeness of the requirements.', 'ensures that the software does the right thing.', 'ensures that the client accepts the software.     ', 'optionc', 'MC'),
(522, 13, 'level_e', 'Which of the following are NOT the contents of a requirement specification?', NULL, 'constraints                       ', 'functional requirements             ', 'quality requirements       ', 'cost estimation', '', 'optiond', 'MC'),
(523, 13, 'level_e', 'The number of function points of a proposed system is calculated as 500. Suppose \r\nthat the system is planned to be developed in Visual Basic and the LOC/FP ratio of Visual Basic is 50. Estimate the effort (E) in required to complete the project using the effort formula of basic\r\nCOCOMO given below. \r\n\r\n\r\nAssume that the values of a and b are 2.5 and 1.0 respectively.	', '1390319784.jpeg', '25 person months               ', '75 person months                ', '62.5 person months ', '25 000 person months        ', '', 'optionc', 'MC'),
(524, 13, 'level_e', 'Consider the following flow graph.\r\n\r\nWhat is its’ Cyclomatic Complexity?', '1390319988.jpeg', '2', '4', '3', '6', '5 ', 'optionb', 'MC'),
(525, 13, 'level_e', 'Consider the following diagram. Modules A, B, C and D all access a common global data area shown as a darkened square at the centre.   \r\n\r\nWhat is the name given to the level of coupling exhibited by the modules?', '1390320190.jpeg', 'Content coupling               ', 'Object coupling              ', 'Common coupling', 'Stamp coupling                  ', 'Data coupling  ', 'optionc', 'MC'),
(526, 13, 'level_e', 'The most important feature of spiral model is', NULL, 'requirement analysis', 'risk management.', 'quality management', 'configuration management', '', 'optionb', 'MC'),
(527, 13, 'level_e', 'The worst type of coupling is', NULL, 'Data coupling.         ', 'control coupling.', 'stamp coupling.          ', 'content coupling.', '', 'optiond', 'MC'),
(528, 13, 'level_e', 'All activities lying on critical path have slack time equal to', NULL, '0', '1', '2', 'None of above', '', 'optiona', 'MC'),
(529, 13, 'level_e', 'Modules X and Y operate on the same input and output data, then the cohesion is', NULL, 'Sequential                ', 'Communicational', 'Procedural                ', 'Logical', '', 'optionb', 'MC'),
(530, 13, 'level_e', 'The model in which the requirements are implemented by category is', NULL, 'Evolutionary Development Model', 'Waterfall Model', 'Prototyping', 'Iterative Enhancement Model', '', 'optiona', 'MC'),
(531, 13, 'level_e', 'Given a source code wit 10 operators include 6 unique operators, and  6 operand including  2 unique operands. Te program volume is ?', NULL, '48', '720', '120', 'insufficient data', '', 'optiona', 'MC'),
(532, 13, 'level_e', 'In unit testing of a module, it is found that for a set of test data, at the maximum 90% of the code alone were tested with the probability of success 0.9. the reliability of module is ?', NULL, 'Greater than 0 .9 ', 'equal to 0.9   ', 'at most 0.81   ', 'at least 1/0.81', '', 'optionc', 'MC'),
(533, 13, 'level_e', 'What is the Cyclomatic Complexity of the program?\r\npublic void howComplex() \r\nint i=20;\r\n while (i&lt;10) {\r\n            System.out.printf(&quot;i is %d&quot;, i);\r\n            if (i%2 == 0) {\r\n                System.out.println(&quot;even&quot;);\r\n            } else {\r\n                System.out.println(&quot;odd&quot;);\r\n            }\r\n        }  )\r\n    }\r\n', NULL, '2', '3', '4', 'none of these', '', 'optionb', 'MC'),
(534, 13, 'level_e', 'Which of the following sentences is / are true?', NULL, 'In white box testing, test cases are derived from the system specification.', 'The objective of path testing is to ensure that the set of test cases is such that each path\r\nthrough the program is executed at least once.', 'Usually all the paths of a control flow graph are covered by the test cases leading to 100 %\r\npath coverage.', 'None of the above', '', 'optionb', 'MC'),
(535, 13, 'level_e', 'Consider the following incomplete statements.\r\n(i)   Low  __________  is desirable.\r\n(ii)  High ___________ is desirable.\r\n(iii)  _____________ allows programmers to hide important parts of the programs.\r\n(iv)  _____________  show kind-of relationship of objects.\r\n\r\nIdentify the correct order to fill the above blanks.\r\n', NULL, 'Cohesion, coupling, modularity, inheritance.', 'Inheritance, modularity, coupling, cohesion.', 'Coupling, cohesion, abstraction, inheritance.', 'Coupling, cohesion, encapsulation, inheritance', '', 'optiond', 'MC'),
(536, 13, 'level_e', 'Consider the following code \r\n IF (A = O)\r\nLAST: BEGIN \r\nGCD := B; \r\nRETURN \r\n\r\nIF (A = O)\r\nLAST: BEGIN \r\nGCD := B; \r\nRETURN \r\nEND;\r\nIF (B = O)\r\nBEGIN \r\nGCD := A; \r\nRETURN \r\nEND;\r\nHERE  :  G := A/B; R := A - B * G;\r\nIF (R = O) GO TO LAST;\r\nA := B; B := R; GO TO HERE\r\n\r\nWhat is the program length ?\r\n', NULL, '49   ', '55      ', '64', '110', '', 'optiona', 'MC'),
(537, 14, 'level_e', 'Consider the following schemes:\r\nBranch_scheme = (Branch_name, assets, Branch_city)\r\nCustomer_scheme = (Customer_name, street, Customer _city)\r\nDeposit_scheme = (Branch_name, account_number, Customer_name, balance)\r\nBorrow_scheme = (Branch_name, loan_number, Customer_name, amount)\r\nClient_scheme = (Customer_name, banker_name)\r\n\r\nWhich of the following queries finds the clients of banker Agassiand the city they live in?', '1390371961.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(538, 14, 'level_e', 'Consider the following schemes:\r\nBranch_scheme = (Branch_name, assets, Branch_city)\r\nCustomer_scheme = (Customer_name, street, Customer _city)\r\nDeposit_scheme = (Branch_name, account_number, Customer_name, balance)\r\nBorrow_scheme = (Branch_name, loan_number, Customer_name, amount)\r\nClient_scheme = (Customer_name, banker_name)\r\n\r\nWhich of the following tuple relational calculus finds all the customers who have a loan amount of more than 1200? ', '1390375512.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(539, 14, 'level_e', 'Third Normal Form is inadequate in situations where the relation', NULL, 'Has multiple candidate keys', 'Has candidate key that are composite', 'Has overlapped candidate keys', 'None of the above', '', 'optiond', 'MC'),
(540, 14, 'level_e', 'Manager’s salary details are hidden from the employee. This is', NULL, 'Conceptual level data hiding', 'Physical level data hiding', 'External level data hiding', 'None of the above', '', 'optionc', 'MC'),
(541, 14, 'level_e', 'If P and Q are predicates and P is the relational algebra expression, then which of the following equivalence are valid? ', '1390375684.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(542, 14, 'level_e', 'Consider the following set of functional dependencies on the scheme (A, B, C). \r\nA --&gt; BC\r\nB --&gt; C\r\nA --&gt; B\r\nAB --&gt; C\r\nThe canonical cover for this set is', NULL, 'A --&gt; BC and  B --&gt; C', 'A --&gt; BC and  AB --&gt; C', 'A --&gt; BC and  A --&gt; B', 'A --&gt; B and  --&gt; C', '', 'optiond', 'MC'),
(543, 14, 'level_e', 'Assume transaction A holds a shared lock R. If transaction B also requests for shared lock on R.', NULL, 'It will result in a deadlock situation', 'It will immediately be granted', 'It will immediately be rejected', 'It will be granted as soon as it is release by A.', '', 'optionb', 'MC'),
(544, 14, 'level_e', 'linked questions from 8 - 11\r\n\r\nCOURSES table describes all the courses that can be taken.\r\nCID: course number (primary key)           \r\nCTITLE: course title		\r\nCDUR: course duration (in days).\r\nPERSONS table describes all persons (instructors, enrollees, other persons).\r\n- PNO: person number (primary key).				\r\n- PNAME: name.\r\n- P_CONO: number of the company the person works for.\r\nSESSIONS table describes courses organized at a certain moment.\r\n- SNO: session number (primary key).			\r\n- S_CID: course number (foreign key to COURSES).\r\n- SDATE: start date of the session.				\r\n- SINS_PNO: session instructor (foreign key to PERSONS).\r\n- SCANCEL: indicates if the session is cancelled (“C” means cancelled, empty (NULL) means not cancelled).\r\n(please see figure below) \r\nENROLMENTS table describes all enrolment information on sessions.\r\n- E_SNO: session number for the enrolment (foreign key to SESSIONS) (primary key together with E_PNO)\r\n- E_PNO: the enrollee (foreign key to PERSONS) (primary key together with E_SNO)\r\n- ECANCEL: “C” when enrolment was cancelled, NULL if not cancelled.\r\n (please see figure below) \r\n\r\nHow many result rows are produced by this query?\r\nSELECT E_SNO FROM ENROLMENTS\r\nUNION\r\nSELECT SNO FROM SESSIONS WHERE SNO BETWEEN 14 AND 16\r\n			', '1390377745.jpeg', '0', '7   ', '8   ', '17', '', 'optionb', 'MC'),
(545, 14, 'level_e', 'COURSES table describes all the courses that can be taken.\r\nCID: course number (primary key)           \r\nCTITLE: course title		\r\nCDUR: course duration (in days).\r\nPERSONS table describes all persons (instructors, enrollees, other persons).\r\n- PNO: person number (primary key).				\r\n- PNAME: name.\r\n- P_CONO: number of the company the person works for.\r\nSESSIONS table describes courses organized at a certain moment.\r\n- SNO: session number (primary key).			\r\n- S_CID: course number (foreign key to COURSES).\r\n- SDATE: start date of the session.				\r\n- SINS_PNO: session instructor (foreign key to PERSONS).\r\n- SCANCEL: indicates if the session is cancelled (“C” means cancelled, empty (NULL) means not cancelled).\r\n(please see figure below) \r\nENROLMENTS table describes all enrolment information on sessions.\r\n- E_SNO: session number for the enrolment (foreign key to SESSIONS) (primary key together with E_PNO)\r\n- E_PNO: the enrollee (foreign key to PERSONS) (primary key together with E_SNO)\r\n- ECANCEL: “C” when enrolment was cancelled, NULL if not cancelled.\r\n (please see figure below) \r\n\r\nWhich ones of the following query is equivalent to this query? \r\nSELECT PNAME FROM PERSONS WHERE PNO = (SELECT MAX(PNO) FROM PERSONS )\r\n		', '1390377820.jpeg', 'SELECT PNAME FROM PERSONS WHERE PNO &gt;= ALL (SELECT PNO FROM PERSONS)', 'SELECT PNAME FROM PERSONS WHERE PNO &gt;= ANY (SELECT PNO FROM PERSONS)  ', 'SELECT PNAME FROM PERSONS P1 WHERE EXISTS (SELECT MAX(PNO) FROM PERSONS P2 WHERE P1.PNO = P2.PNO)  ', 'SELECT PNAME, MAX(PNO) FROM PERSONS GROUP BY PNAME', '', 'optiona', 'MC'),
(546, 14, 'level_e', 'COURSES table describes all the courses that can be taken.\r\nCID: course number (primary key)           \r\nCTITLE: course title		\r\nCDUR: course duration (in days).\r\nPERSONS table describes all persons (instructors, enrollees, other persons).\r\n- PNO: person number (primary key).				\r\n- PNAME: name.\r\n- P_CONO: number of the company the person works for.\r\nSESSIONS table describes courses organized at a certain moment.\r\n- SNO: session number (primary key).			\r\n- S_CID: course number (foreign key to COURSES).\r\n- SDATE: start date of the session.				\r\n- SINS_PNO: session instructor (foreign key to PERSONS).\r\n- SCANCEL: indicates if the session is cancelled (“C” means cancelled, empty (NULL) means not cancelled).\r\n(please see figure below) \r\nENROLMENTS table describes all enrolment information on sessions.\r\n- E_SNO: session number for the enrolment (foreign key to SESSIONS) (primary key together with E_PNO)\r\n- E_PNO: the enrollee (foreign key to PERSONS) (primary key together with E_SNO)\r\n- ECANCEL: “C” when enrolment was cancelled, NULL if not cancelled.\r\n (please see figure below) \r\n\r\nWhich query gives an answer to the following question?\r\nGive the list of all courses ids, session numbers, and the date on which each session starts, also list courses ids for which no session has been planned yet.\r\n	', '1390377913.jpeg', 'SELECT CID, SNO, SDATE FROM COURSES, SESSIONS WHERE CID = S_CID', 'SELECT CID, SNO, SDATE FROM COURSES INNER JOIN SESSIONS ON CID = S_CID ', 'SELECT CID, SNO, SDATE FROM COURSES RIGHT OUTER JOIN SESSIONS ON CID = S_CID ', 'SELECT CID, SNO, SDATE FROM COURSES LEFT OUTER JOIN SESSIONS ON CID = S_CID', '', 'optiond', 'MC'),
(547, 14, 'level_e', 'COURSES table describes all the courses that can be taken.\r\nCID: course number (primary key)           \r\nCTITLE: course title		\r\nCDUR: course duration (in days).\r\nPERSONS table describes all persons (instructors, enrollees, other persons).\r\n- PNO: person number (primary key).				\r\n- PNAME: name.\r\n- P_CONO: number of the company the person works for.\r\nSESSIONS table describes courses organized at a certain moment.\r\n- SNO: session number (primary key).			\r\n- S_CID: course number (foreign key to COURSES).\r\n- SDATE: start date of the session.				\r\n- SINS_PNO: session instructor (foreign key to PERSONS).\r\n- SCANCEL: indicates if the session is cancelled (“C” means cancelled, empty (NULL) means not cancelled).\r\n(please see figure below) \r\nENROLMENTS table describes all enrolment information on sessions.\r\n- E_SNO: session number for the enrolment (foreign key to SESSIONS) (primary key together with E_PNO)\r\n- E_PNO: the enrollee (foreign key to PERSONS) (primary key together with E_SNO)\r\n- ECANCEL: “C” when enrolment was cancelled, NULL if not cancelled.\r\n (please see figure below) \r\n\r\nWhich of the following SQL statements cannot be executed (gives a syntax error)? 	', '1390378016.jpeg', 'SELECT SNO, SDATE, PNAME FROM SESSIONS, PERSONS, ENROLMENTS WHERE SNO=E_SNO AND P_CONO=E_PNO AND ECANCEL IS NULL AND SCANCEL IS NULL', 'SELECT SNO, PNAME, SDATE FROM SESSIONS, PERSONS WHERE SINS_PNO = PNO\r\nUNION\r\nSELECT E_PNO, PNAME FROM PERSONS, ENROLMENTS WHERE PNO = E_PNO ', 'SELECT PNAME, COUNT(*) FROM PERSONS, SESSIONS WHERE SINS_PNO = PNO ', 'SELECT SNO, SDATE, S_CID FROM SESSIONS AS S1 WHERE SCANCEL IS NOT NULL AND SDATE &gt;= ALL (SELECT SDATE FROM SESSIONS WHERE S_CID = S1.S_CID)', ' ', 'optionb', 'MC'),
(548, 14, 'level_e', 'linked questions from 12 - 16\r\n\r\nConsider the following relation used for storing the result of multiple-choice tests:\r\n                                 Multiple-Choice Test\r\n                         STUDENT	QUESTION	ANSWER	   CORRECT\r\n                            Ali	            1	           b	      Y\r\n                            Ali	            2	           b	      N\r\n                            Ali	            3	           c	      N\r\n                            Noor	    1	           b	      Y\r\n                            Noor	    2	           c	      N\r\n                            Noor	    3	           a	      Y\r\nWe assume the following:\r\n1. Questions are identified by numbers (1, 2, 3).\r\n2. Possible answers (options among which the student must choose) are identified by the question and a letter. E.g. b may be the right answer for question 1, but the choice b for question 2 may be wrong.\r\n3. For every question, only one answer may be selected, and only one answer is correct.\r\nAssume that the following function dependencies hold:\r\no	{STUDENT, QUESTION} --&gt; ANSWER\r\no	{QUESTION, ANSWER} --&gt; CORRECT\r\n\r\nWhat does the functional dependency “{QUESTION, ANSWER} --&gt; CORRECT” mean?\r\n		', NULL, 'Every question has only one correct answer', 'The correctness of an answer to a question is independent from the student  ', 'It is not possible that the same answer is correct for two different questions  ', 'Every question has only one wrong answer', '', 'optionb', 'MC'),
(549, 14, 'level_e', 'Consider the following relation used for storing the result of multiple-choice tests:\r\n                                         Multiple-Choice Test\r\n                         STUDENT	QUESTION	ANSWER	   CORRECT\r\n                            Ali	            1	           b	      Y\r\n                            Ali	            2	           b	      N\r\n                            Ali	            3	           c	      N\r\n                            Noor	    1	           b	      Y\r\n                            Noor	    2	           c	      N\r\n                            Noor	    3	           a	      Y\r\nWe assume the following:\r\n1. Questions are identified by numbers (1, 2, 3).\r\n2. Possible answers (options among which the student must choose) are identified by the question and a letter. E.g. b may be the right answer for question 1, but the choice b for question 2 may be wrong.\r\n3. For every question, only one answer may be selected, and only one answer is correct.\r\nAssume that the following function dependencies hold:\r\no	{STUDENT, QUESTION} --&gt; ANSWER\r\no	{QUESTION, ANSWER} --&gt; CORRECT\r\n\r\nIn general, can a functional dependency be determined by looking at example data? 	', NULL, 'Yes', 'Example data can only show that functional dependencies do not hold. You cannot conclude from example data that a FD must hold in general. ', 'If an FD holds in an example relation, you can use it for the BCNF test. However, there might be further FDs, which do not hold in this database state, and which also have to be considered ', 'Only if the example satisfies 2NF', '', 'optionb', 'MC'),
(550, 14, 'level_e', 'Consider the following relation used for storing the result of multiple-choice tests:\r\n                                         Multiple-Choice Test\r\n                         STUDENT	QUESTION	ANSWER	   CORRECT\r\n                            Ali	            1	           b	      Y\r\n                            Ali	            2	           b	      N\r\n                            Ali	            3	           c	      N\r\n                            Noor	    1	           b	      Y\r\n                            Noor	    2	           c	      N\r\n                            Noor	    3	           a	      Y\r\nWe assume the following:\r\n1. Questions are identified by numbers (1, 2, 3).\r\n2. Possible answers (options among which the student must choose) are identified by the question and a letter. E.g. b may be the right answer for question 1, but the choice b for question 2 may be wrong.\r\n3. For every question, only one answer may be selected, and only one answer is correct.\r\nAssume that the following function dependencies hold:\r\no	{STUDENT, QUESTION} --&gt; ANSWER\r\no	{QUESTION, ANSWER} --&gt; CORRECT\r\n\r\nCan the FD “{STUDENT, QUESTION} --&gt; CORRECT” be derived from the given two FDs?	', NULL, 'Yes, by applying augmentation rule then transitive rule', 'Yes, by applying augmentation rule then reflexive rule  ', 'Yes, by applying augmentation rule then decomposition rule ', 'No', '', 'optiona', 'MC'),
(551, 14, 'level_e', 'Consider the following relation used for storing the result of multiple-choice tests:\r\n                                         Multiple-Choice Test\r\n                         STUDENT	QUESTION	ANSWER	   CORRECT\r\n                            Ali	            1	           b	      Y\r\n                            Ali	            2	           b	      N\r\n                            Ali	            3	           c	      N\r\n                            Noor	    1	           b	      Y\r\n                            Noor	    2	           c	      N\r\n                            Noor	    3	           a	      Y\r\nWe assume the following:\r\n1. Questions are identified by numbers (1, 2, 3).\r\n2. Possible answers (options among which the student must choose) are identified by the question and a letter. E.g. b may be the right answer for question 1, but the choice b for question 2 may be wrong.\r\n3. For every question, only one answer may be selected, and only one answer is correct.\r\nAssume that the following function dependencies hold:\r\no	{STUDENT, QUESTION} --&gt; ANSWER\r\no	{QUESTION, ANSWER} --&gt; CORRECT\r\n\r\nWhat is the (minimal) key of the relation with respect to the two given FDs?	', NULL, '{STUDENT, ANSWER}	', '{QUESTION, ANSWER} ', '{STUDENT}	 ', '{STUDENT, QUESTION}', '', 'optiond', 'MC'),
(552, 14, 'level_e', 'Consider the following relation used for storing the result of multiple-choice tests:\r\n                                         Multiple-Choice Test\r\n                         STUDENT	QUESTION	ANSWER	   CORRECT\r\n                            Ali	            1	           b	      Y\r\n                            Ali	            2	           b	      N\r\n                            Ali	            3	           c	      N\r\n                            Noor	    1	           b	      Y\r\n                            Noor	    2	           c	      N\r\n                            Noor	    3	           a	      Y\r\nWe assume the following:\r\n1. Questions are identified by numbers (1, 2, 3).\r\n2. Possible answers (options among which the student must choose) are identified by the question and a letter. E.g. b may be the right answer for question 1, but the choice b for question 2 may be wrong.\r\n3. For every question, only one answer may be selected, and only one answer is correct.\r\nAssume that the following function dependencies hold:\r\no	{STUDENT, QUESTION} --&gt; ANSWER\r\no	{QUESTION, ANSWER} --&gt; CORRECT\r\n\r\nWhich of the following representations is a true BCNF representation of the above relation?', NULL, 'R1(STUDENT, ANSWER),			R2(QUESTION, ANSWER, CORRECT)', 'R1(STUDENT, QUESTION),			R2(ANSWER, CORRECT)', 'R1(STUDENT, QUESTION, ANSWER),          R2(QUESTION, ANSWER, CORRECT)', 'None of the above', '', 'optionc', 'MC'),
(553, 14, 'level_e', 'linked questions from 17 - 25\r\n\r\nConsider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nWhich of the following functional dependencies is partial dependency?\r\n	', NULL, '{ISBN, SSN} --&gt; writing_quality', 'publisher_name --&gt; publisher_location ', '{ISBN, SSN} --&gt; author_name ', 'ISBN --&gt; book_title', '', 'optionc', 'MC'),
(554, 14, 'level_e', 'Consider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nWhich of the following functional dependencies is full dependency?', NULL, '{ISBN, SSN} --&gt; publisher_name	', '{ISBN, publisher_name} --&gt; publisher_location', '{ISBN, SSN} --&gt; author_name', '{ISBN, SSN} --&gt; writing_quality', '', 'optiond', 'MC'),
(555, 14, 'level_e', 'Consider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nWhich of the following is an example of a reflexive functional dependency?', NULL, 'ISBN --&gt;  publisher_name', 'SSN --&gt;  SSN', 'ISBN --&gt;  SSN', 'SSN --&gt;  writing_quality', '', 'optionb', 'MC');
INSERT INTO `subj_question` (`qnid_s`, `subid`, `level`, `question`, `figure`, `optiona`, `optionb`, `optionc`, `optiond`, `optione`, `correct`, `type`) VALUES
(556, 14, 'level_e', 'Consider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nWhich of the following is an example of transitive functional dependency?', NULL, 'SSN --&gt;  publisher_name', 'ISBN --&gt;  publisher_location', 'ISBN --&gt;  publisher_name', 'ISBN --&gt;  writing_quality', '', 'optionb', 'MC'),
(557, 14, 'level_e', 'Consider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nWhich of the following is an example of a prime attribute?', NULL, 'SSN', 'publisher_name', 'publisher_location', 'writing_quality', '', 'optiona', 'MC'),
(558, 14, 'level_e', 'Consider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nWhich of the following is an example of a non-prime attribute?', NULL, 'SSN', 'ISBN', 'A&amp;B', 'publisher_name', '', 'optiond', 'MC'),
(559, 14, 'level_e', 'Consider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nIs Book-Author relation in 1NF?', NULL, 'YES.	Since there is no derived attributes', 'YES.	Since there is no composite or multi-valued attributes', 'NO.	Because of this functional dependency ISBN --&gt;  publisher_name', 'NO.	Because of this functional dependency {SSN, ISBN} --&gt;  writing_quality', '', 'optionb', 'MC'),
(560, 14, 'level_e', 'Consider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nWhich of the following representations is a true 2NF representation of Book-Author relation?', NULL, 'BOOK(ISBN, book_title, publisher_name, publisher_location)\r\nAUTHOR(SSN, author_name, author_address)\r\nWRITE(ISBN, SSN, writing_quality)', 'BOOK(ISBN, book_title, publisher_name, publisher_location)\r\nAUTHOR(SSN, author_name, author_address, writing_quality)', 'BOOK(ISBN, book_title, publisher_name, publisher_location, writing_quality)\r\nAUTHOR(SSN, author_name, author_address)', 'BOOK(ISBN, book_title, publisher_name)\r\nAUTHOR(SSN, author_name, author_address, writing_quality)\r\nPUBLISHER(publisher_name, publisher_location)', '', 'optiona', 'MC'),
(561, 14, 'level_e', 'Consider the following relational schema that stores information about books and their authors\r\nBook-Author(ISBN, SSN, book_title, publisher-name, publisher-location, author-name, author-address, writing-quality)\r\nGiven that:\r\n•	A book may have several authors, each author writes different chapters.\r\n•	An author may write several books\r\n•	The primary key is {ISBN, SSN}:\r\n	{ISBN, SSN} --&gt; {book_title, publisher-name, publisher-location, author-name, author-address, writing-quality}\r\n•	ISBN is unique identifier for every book:		ISBN --&gt; book_title\r\n•	SSN is a unique identifier for every author:	         SSN --&gt; {author-name, author-address}\r\n•	A book is published by a single publisher:	        ISBN --&gt; publisher-name\r\n•	Each publisher has one location:	      publisher-name --&gt; publisher-location\r\n•	Publisher name is a unique identifier for publishers.\r\n•	An author may get different ranks for writing quality for different books as in the following table:\r\n	{ISBN, SSN} --&gt;  writing-quality\r\n                             ISBN	SSN	writing_quality\r\n                              B1	 A1	       A\r\n                              B2	 A1	       B\r\n                              B1	 A2	       C\r\n\r\nUse the above information when answering the following questions:\r\nIs Book-Author relation in 3NF after it is normalized into 2NF?', NULL, 'YES.', 'NO.	Because of 		ISBN --&gt;  publisher_name', 'NO.	Because of 		publisher_name --&gt;  publisher_location', 'NO.	Because of 		{SSN, ISBN} --&gt;  writing_quality', '', 'optionc', 'MC'),
(562, 14, 'level_e', 'Select the TRUE statement concerning normalization.	', NULL, 'Performance is increased.', 'Data consistency is improved. ', 'Redundancy is increased. ', 'The number of tables is reduced.', '', 'optionb', 'MC'),
(563, 14, 'level_e', 'A lack of normalization can lead to which one of the following problems:', NULL, 'Deadlock  ', 'Lost Updates', 'Insertion problems', 'Deferred updates', 'Deletion of data', 'optionc', 'MC'),
(564, 14, 'level_e', 'Each of the following is an argument which might be used to support the use of relations \r\nwhich are not fully normalized. Select the weakest argument. 	', NULL, 'A fully normalized database may have too many tables ', 'Full normalization may compromise existing applications/systems  ', 'Full normalization may make some queries too complicated  ', 'A fully normalized database may result in tables which are too large', '', 'optiond', 'MC'),
(565, 14, 'level_e', 'If a non-key attribute of a table can be null, that table automatically violates which normal \r\nform (choose the lowest one): \r\n   \r\n	', NULL, 'NONE  ', '1NF  2NF ', '3NF   ', 'BCNF  ', '', 'optiona', 'MC'),
(566, 14, 'level_e', 'If an attribute of a table can have multiple values, that table automatically violates which \r\nnormal form (choose the lowest one): 	', NULL, 'NONE', '1NF  2NF ', '3NF ', 'BCNF  ', '', 'optionb', 'MC'),
(567, 14, 'level_e', 'Given the following relation and dependences, state which normal form the relation is in. R(p,q,r,s,t) \r\np,q -&gt; r,s,t   r,s -&gt; p,q,t   t -&gt; s ', NULL, '1NF  ', '2NF', '3NF   ', 'BCNF  ', 'Unnormalized', 'optionc', 'MC'),
(568, 14, 'level_e', 'Which of the following is the highest normal form by which the R relation can be classified? \r\nR(patient, consultant, hospital, address, date, time) \r\nGiven patient, consultant -&gt; hospital, address, date, time \r\nhospital -&gt; address ', NULL, '1NF ', 'Unnormalised   ', '2NF', 'BCNF', '3NF ', 'optionc', 'MC'),
(569, 14, 'level_e', 'Assume the relation R(A, B, C ,D, E) is in at least 3NF. Which of the following \r\nfunctional dependencies must be FALSE? 	', NULL, 'A, B -&gt; C ', 'A, C -&gt; E ', 'A, B -&gt; D ', 'C, D -&gt; E ', '', 'optiond', 'MC'),
(570, 14, 'level_e', 'Consider the relational schema R(A,B,C,D,E) with non-key functional dependencies \r\nC,D -&gt; E and B -&gt; C. \r\nSelect the strongest statement that can be made about the schema R 	', NULL, 'R is in third normal form', 'R is in second normal form ', 'R is in BCNF normal form ', 'R is in first normal form', '', 'optiond', 'MC'),
(571, 14, 'level_e', 'Consider the following functional dependencies: \r\na, b -&gt; c, d  e -&gt; c   b -&gt; e, f \r\nGiven the same functional dependencies as shown above, which option shows the relations \r\nnormalized to 3NF of: R(a, b, c, d, e, f)\r\n	', NULL, 'R(a,b,c,d,e,f)  R(e,c)  R(b,e,f)', 'R(a,b,c,d)  R(c,e)  R(e,f,b) ', 'R(a,b,c,d)  R(c,e)  R(b,e,f) ', 'R(a,b,d)   R(e,c)   R(b,e,f) ', '', 'optiond', 'MC'),
(572, 14, 'level_e', 'Given the following relation and dependencies, select the option that is the result of fully \r\nnormalizing the relation to BCNF. \r\nR(a,b,c,d,e) \r\na -&gt; c    d -&gt; c,e 		', NULL, 'R1(a,c)   R2(d,e)  R(a,b,d)    and    R1(a,c)   R2(d,c,e)  R(a,b,d)', 'R1(a,c)   R2(d,c,e)  R(a,b,d)   and  R1(d,c,e)   R(a,b,d)  ', 'R1(d,c,e)   R(a,b,d)  and    R1(a,c)   R2(d,e)  R(a,b,d)  ', 'R(a,b,c,d,e)   and  R1(d,c,e)   R(a,b,d)', ' ', 'optionc', 'MC'),
(573, 14, 'level_e', 'If a relation schema contains  two different multi-valued dependencies, that table \r\nautomatically violates which normal form (choose the lowest one): 		', NULL, 'NONE', '1NF  2NF  ', '3NF    ', 'BCNF  ', ' ', 'optiona', 'MC'),
(574, 14, 'level_e', 'Given the following two tables, R and S,\r\nR				S		\r\nA	B	C		B	C	A\r\n11	21	31		22	31	12\r\n11	24	32		24	32	11\r\n12	21	31		25	33	12\r\n12	27	32		27	32	12\r\n12	27	33				\r\n14	27	33	\r\n			\r\nwhat is the result of the SQL query\r\nSELECT A,B FROM R \r\nINTERSECT\r\n(SELECT A,B FROM S);', NULL, 'A table with columns A,B whose contents are empty ', 'A table with columns A,B containing only the row (11,24) ', 'A table with columns A,B containing two rows: (11,24) and (12,27) ', 'A table with columns A,B containing four rows: (11,21),  (11,24), (12,21), (12,27)', '', 'optionc', 'MC'),
(575, 14, 'level_e', 'Which of these statements is not true about a B-Tree with height h and n nodes, assuming that each node takes exactly 1 disk operation to read?	', NULL, 'Rotations may be required during insertion to keep T balanced.', 'h cannot exceed logt((n + 1)/2), where t is the minimum node degree. ', 'If each node in T is augmented with an integer showing the size of that node’s sub-tree, then n additional nodes can be inserted into T in a total of O(n *h) CPU operations. ', 'Finding a node in T cannot require more than O(h) disk operations (in other words, O(h) time, if only disk reads and writes are counted).', 'Finding a node in T cannot require more than O(h) CPU operations (in other words, O(h) time, if only instruction executions on the CPU are counted). ', 'optiona', 'MC'),
(576, 14, 'level_e', 'A 2-3 tree is tree such that\r\n(a)  all internal nodes have either 2 or 3 children\r\n(b) all path from root to the leaves have the same length\r\nThe number of internal nodes of 2-3 tree having 9 leaves could be\r\n', NULL, '4', '5', '6', '7', '', 'optiona', 'MC'),
(577, 14, 'level_e', 'Given the following relation instance.\r\nX	Y	Z\r\n1	4	2\r\n1	5	3\r\n1	6	3\r\n3	2	2\r\nWhich of the following functional dependencies are satisfied by the instance ?', NULL, 'XY-&gt; Z  and Z-&gt;Y', 'YZ -&gt; X  and Y-&gt;Z', 'YZ-&gt; X and X-&gt;Z', 'XZ -&gt;Y  and Y-&gt;X', '', 'optionb', 'MC'),
(578, 14, 'level_e', 'Given relations r(w,x) and  s(y,z), the result of select distinct   w,x from   r,s:\r\nis guaranteed to be same as  r, provided :', NULL, 'r has no duplicates and s is non empty', 'r and s have no duplicates', 's has no duplicates and r is non empty', 'r and s have the same number of tuples', '', 'optiona', 'MC'),
(579, 14, 'level_e', 'Suppose the adjacency relation of vertices in a graph is represented in a table Adj (X,Y). Which of the following queries cannot be expressed by a relational algebra expression of constant length ?	', NULL, 'List all vertices adjacent to a given vertex.', 'List all vertices which have self loops ', 'List all vertices which belong to cycles of less than three vertices ', 'List all vertices reachable from a given vertex', ' ', 'optiond', 'MC'),
(580, 14, 'level_e', '', '1390415536.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(581, 14, 'level_e', 'Which of the following scenarios may lead to an irrecoverable error in a database system?	', NULL, 'A transaction writes a data item after it is read by an uncommitted transaction', 'A transaction read a data item after it is read by an uncommitted transaction ', 'A transaction read a data item after it is written by an committed transaction ', 'A transaction read a data item after it is written by an uncommitted transaction', ' ', 'optiond', 'MC'),
(582, 14, 'level_e', 'Consider a relation scheme  R=(A, B, C, D, E, H) on which the \r\nfollowing functional dependencies hold:\r\n{A-&gt;B,. BC -&gt; D, E-&gt;C, D-&gt;A}\r\nWhat are the candidate keys of R?', NULL, 'AE, BE', 'AE, BE, DE', 'AEH, BEH, BCH', 'AEH, BEH, DEH', '', 'optiond', 'MC'),
(583, 14, 'level_e', '', '1390415671.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(584, 14, 'level_e', 'A clustering index is defined on the fields which are of type', NULL, 'Non-key and ordering ', 'Non-key and non-ordering', 'key and ordering', 'Key and non-ordering', '', 'optiona', 'MC'),
(585, 14, 'level_e', 'Consider a file of 1684 records. Each record is 32 bytes long and its key field is of size 6 bytes. The file is ordered on a non-key field, and the file organization is unspanned. The file is stored in a file system with block size 1024 bytes, and the size of a block pointer is 10 bytes. If the secondary index is built on the key field of the file, and a multi-level index scheme is used to store the secondary index, the number of first-level and second-level blocks in the multi-level index are respectively', NULL, '8 and 0', '128 and 6', '256 and 4', '512 and 5', '', 'optionc', 'MC'),
(586, 14, 'level_e', 'Consider a B+-tree in which the maximum number of keys in a node is 5. What is the minimum number of keys in any non-root node?', NULL, '1', '2', '3', '4', '', 'optionb', 'MC'),
(587, 14, 'level_e', 'A relational schema for a train reservation database is given below.\r\nPassenger (pid, pname, age)\r\nReservation (pid, class, tid)\r\nTable : passenger\r\nPid		pname		 	Age\r\n0	 	&#039;Sachin’ 		65\r\n1		&#039;Rahul’		66\r\n2 		&#039;Sourav’ 		67\r\n3		 ‘Anil’ 		69\r\nTable : Reservation\r\npid 		class		 tid\r\n0 		‘AC’ 		8200\r\n1 		‘AC’ 		8201\r\n2 		‘SC’		8201\r\n3 		‘AC’		8203\r\n4		‘SC’ 		8204\r\n5 		‘AC’		8202\r\nWhat pids are returned by the following SQL query for the above instance of the tables ?\r\nSELECT pid\r\nFROM Reservation\r\nWHERE class= ‘AC’ AND\r\nEXISTS (SELECT)\r\nFROM Passenger\r\nWHERE age&gt;65 AND\r\nPassenger.pid = Reservation.pid)', NULL, '1, 0', '1, 2', '1, 3', '1, 5', '', 'optionc', 'MC'),
(588, 14, 'level_e', 'Which of the following concurrency control protocols ensure both conflict serializability and freedom from deadlock?\r\nI. 2-phase locking\r\nII Time-stamp ordering', NULL, 'I only ', 'II only', 'Both I and II', 'Neither I nor II', '', 'optionb', 'MC'),
(589, 14, 'level_e', '', '1390416011.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(590, 14, 'level_e', '', '1390416531.jpeg', '100', '200', '300', '2000', '', 'optiona', 'MC'),
(591, 15, 'level_e', '', '1390462368.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(592, 15, 'level_e', '', '1390462564.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(594, 15, 'level_e', '', '1390463124.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(595, 15, 'level_e', '', '1390463144.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(596, 15, 'level_e', '', '1390463288.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(597, 15, 'level_e', '', '1390466231.jpeg', '', '', '', '', '', 'optione', 'MC'),
(598, 15, 'level_e', '', '1390466321.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(599, 15, 'level_e', 'In general, a multiplexer has', NULL, 'one data input, several data outputs, and selection inputs', 'one data input, several data outputs, and one selection input', 'several data inputs, one data output, and selection inputs', 'several data inputs, one data output, and an enable input', 'several data inputs, several data outputs, and selection inputs', 'optionc', 'MC'),
(600, 15, 'level_e', 'The Boolean function K(A,B,C) outputs 1 if the value represented by the binary number ABC is divisible by 3, and 0 otherwise. Using a 4:1 multiplexer and by connecting AB to the selector lines, which of the following is the correct way to connect the inputs of the multiplexer?', NULL, 'D0 = 0; D1 = 1; D2 = 1; D3 = 0', 'D0 = C&#039;; D1 = C; D2 = C; D3 = 0', 'D0 = A&#039;; D1 = A; D2 = 0; D3 = A&#039;', 'D0 = 0; D1 = C; D2 = 0; D3 = C&#039;', 'D0 = C&#039;; D1 = C; D2 = 0; D3 = C&#039;', 'optione', 'MC'),
(601, 15, 'level_e', 'Which of the following is a minterm of the function \r\n     F(w,x,y,z) = y&#039;.z + w.x.y&#039; + w.x.z&#039; + w&#039;.x&#039;.z ?', NULL, 'w&#039;.x&#039;.y&#039;.z&#039; = m0', 'w&#039;.x.y&#039;.z&#039; = m4', 'w&#039;.x.y.z = m7', 'w.x.y.z = m15', 'none above', 'optione', 'MC'),
(602, 15, 'level_e', 'Given F(a,b,c) = ac&#039; + a&#039;b&#039; + b&#039;c&#039;.  Which of the following is the  product-of-maxterms form for F?', NULL, 'F = Product-of M(0,1,2,3)', 'F = Product-of M(0,1,4,6)', 'F = Product-of M(4,5,6,7)', 'F = Product-of M(2,3,5,7)', 'none above', 'optiond', 'MC'),
(603, 15, 'level_e', 'Given this K-map (zeroes are not shown for clarity) of a function F (W, X, Y, Z):\r\n\r\n      YZ\r\n   WX   11  10  00  01\r\n       +---+---+---+---+\r\n    00 | 1 | 1 |   |   |\r\n       +---+---+---+---+\r\n    01 | 1 | 1 |   |   |\r\n       +---+---+---+---+\r\n    11 |   | 1 | 1 |   |\r\n       +---+---+---+---+\r\n    10 | 1 | 1 | 1 | 1 |\r\n       +---+---+---+---+\r\n\r\nWhich of the following is NOT a prime implicant of the above K-map?\r\n', NULL, 'Y&#039;Z', 'W&#039;Y', 'WZ&#039;', 'YZ&#039;', 'WX&#039;', 'optiona', 'MC'),
(604, 15, 'level_e', 'Which of the following is a non-essential prime implicant of the K-map in question 12?', NULL, 'Y&#039;Z', 'W&#039;Y', 'WZ&#039;', 'YZ&#039;', 'WX&#039;', 'optiond', 'MC'),
(605, 15, 'level_e', 'What is the simplest POS form for the function of the K-map in question 13?\r\n', NULL, '(W+Y&#039;)(W&#039;+X&#039;+Z)', '(W+Y)(W&#039;+X&#039;+Z&#039;)', '(W&#039;+X)(W&#039;+Z&#039;)(W+Y)', '(W&#039;+Y&#039;)(W+X+Z)', 'none above', 'optionb', 'MC'),
(606, 15, 'level_e', 'Consider a  function F(A,B,C) = Sum m(1,2,4,5,6,7).  To implement this function using a 4:1 multiplexer without any other logic gates, which of the following is correct?  (Assume that only the constant logic 0 and 1, and the literals A, B, C are available, but not A&#039;, B&#039;, C&#039;.)', NULL, 'connect AB to the selection lines', 'connect AC to the selection lines', 'connect BC to the selection lines', 'connect nothing to the selection lines', 'none of the above', 'optionc', 'MC'),
(607, 15, 'level_e', 'Realize the following functions with \r\ni) an 8:1 multiplexer module, and \r\n\r\nii) a 4:1 multiplexer module, using ab as the selector inputs. \r\n	', '1390467332.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(608, 15, 'level_e', 'Given the following function in sum-of-product forms  (not necessarily  minimized): [BONUS QUESTION]\r\n            F(A,B,C,D) =  ABC&#039; + A&#039;CD + A&#039;C&#039;\r\nRe-express the function in:', NULL, 'Canonical product-of-sums (product-of-maxterms) form.  Use Prod M notation.', 'Minimized product-of-sums form.', 'F&#039; in minimized product-of-sums form.', 'F&#039; in minimized sum-of-products form.', 'Implement F and F&#039; using NAND gates only.  Assume that literals and their complements are available.', 'optionc', 'MC'),
(609, 15, 'level_e', 'Which of the following is/are true in relation to the following sequential circuit?	', '1390468900.jpeg', 'The above circuit is a 3-bit binary up counter.', 'The above circuit is a 3-bit binary down counter. ', 'J-K flip-flops in the circuit change the state with a clock pulse. ', 'The above circuit shows a 3-bit parallel register.', 'The above circuit shows a 3-bit shift register. ', 'optiona', 'MC'),
(610, 15, 'level_e', 'A JK flip flop can be converted to a D-type flip flop by:', NULL, 'Joining the J and K inputs together to from the D input ', 'Joining the J and K inputs via an inverter and designating it as the D input', 'Designating the J input as D input and connecting the K input to logic 1', 'Designating the K input as D input and connecting the J input to logic 0', 'Joining the J input to  the output via an inverter and designating it as the D input ', 'optionb', 'MC'),
(611, 15, 'level_e', '', '1390470686.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(612, 15, 'level_e', '', '1390471280.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(613, 15, 'level_e', '\r\n', '1390491955.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(614, 15, 'level_e', '', '1390492134.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(615, 15, 'level_e', '', '1390492438.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(616, 15, 'level_e', '', '1390492709.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(617, 15, 'level_e', '', '1390492858.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(618, 15, 'level_e', 'The decimal number 6949 is equivalent to (consider the binary, octal and hexadecimal number systems)', NULL, '1010010011011', '17449	', '1F23', '1101100100101	', '17445', 'optiond', 'MC'),
(619, 15, 'level_e', 'The result of the addition of the binary numbers 1101.111 and 1100.010 is', NULL, '11011.111', '11010.111', '11010.001', '11011.010', '11011.111', 'optionc', 'MC'),
(620, 15, 'level_e', 'The sign-magnitude representation of the binary number -1.11 is', NULL, '1 00000000000000000000001   11000000', '0 01111111111111111111111   11000000', '1 00000001   11000000000000000000000', '1 01111111   11000000000000000000000', '0 01111111   11000000000000000000000', 'optionc', 'MC'),
(621, 15, 'level_e', '', '1390493531.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(622, 15, 'level_e', 'The following is a Half-adder logic circuit.\r\n\r\nWhat are the respective values at A, B, C and D?', '1390493726.jpeg', 'A – 0	B – 0 	C – 0	D – 1', 'A – 0	B – 1 	C – 1	D – 0', 'A – 1	B – 0 	C – 0	D – 1', 'A – 1	B – 1	C – 0	D – 1', 'A – 1	B – 1 	C – 1	D – 1', 'optiond', 'MC'),
(623, 15, 'level_e', '', '1390493920.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(624, 15, 'level_e', 'Consider the circuit diagram showing the connection of a JK-flip-flop and the timing diagram given below.\r\n                       \r\nWhat are the respective values of Q1 at A, B, C and D?', '1390494156.jpeg', 'A – 0	B – 0 	C – 0	D – 0', 'A – 0	B – 0 	C – 1	D – 0', 'A – 1	B – 1 	C – 0	D – 1', 'A – 0	B – 1	C – 1	D – 1', 'A – 1	B – 0 	C – 1	D – 0', 'optionb', 'MC'),
(625, 15, 'level_e', 'A 2:4 decoder has 2 inputs A and B, where B is the least significant bit and 4 outputs F0, F1, F2 and F3 where F0 is the least significant bit. What are the valid set Boolean logic expressions that could implement the decoder&#039;s functionality? \r\n', '1390494280.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(626, 15, 'level_e', 'The IEEE short floating point representation of the binary number -1001.1011 is', NULL, '0   00000011    00110110000000000000000', '1   00000011    00000000000000000011011', '1   00000011    00110110000000000000000', '1   00011011    00000000000000000000011', '1   00011011    11000000000000000000000', 'optionc', 'MC'),
(627, 15, 'level_e', '', '1390494588.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(628, 15, 'level_e', '	', '1390497164.jpeg', '', ' ', ' ', '', ' ', 'optiona', 'MC'),
(629, 15, 'level_e', '', '1390497289.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(630, 15, 'level_e', 'Consider the following two binary patterns.\r\nA  --&gt; 01010100\r\nB --&gt; 00110111 \r\nWhich of the following is/are true?', NULL, 'Decimal equivalent of A is 84 and that of B is 55.', 'Decimal equivalent of A is 83 and that of B is 54.', 'Sum of A and B is given by the binary pattern 01100011.', 'Sum of A and B is given by the binary pattern 00011101.', '', 'optiona', 'MC'),
(631, 15, 'level_e', '', '1390497530.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(632, 16, 'level_e', 'Which of the following represents a postorder traversal of T ?', '1390661859.jpeg', 'P Q U W X V Y Z', 'U Q X W P V Z Y', 'U X W Q Z Y V P', 'U X Z Q W Y V P', 'X Z U W Y Q V P', 'optiond', 'MC'),
(633, 16, 'level_e', 'Consider the following pseudocode.\r\nx := 1;\r\ni := 1;\r\nwhile (x &lt;= 1000)\r\nbegin\r\nx := 2x ;\r\ni := i + 1;\r\nend;\r\nWhat is the value of i at the end of the pseudocode?\r\n', NULL, '4', '5', '6', '7', '8', 'optionb', 'MC'),
(634, 16, 'level_e', 'Linked lists are not suitable data structures of which one of the following problems?\r\n\r\n\r\n\r\n\r\n', NULL, 'Insertion sort', 'Binary search', 'Radix sort', 'Polynomial manipulation', '', 'optionb', 'MC'),
(635, 16, 'level_e', 'The postfix form of the expression (A + B)∗(C∗D − E)∗F / G is    ', NULL, 'AB + CD∗E − FG /∗∗ ', '/ AB + CD ∗ E − F ∗∗G', '/ AB + CD ∗ E − ∗F ∗ G ', '/ AB + CDE ∗ − ∗', '', 'optiona', 'MC'),
(636, 16, 'level_e', 'An advantage of chained hash table (external hashing) over the open addressing scheme is', NULL, 'Worst case complexity of search operations is less', 'Space used is less ', 'Deletion is easier ', 'None of the above', '', 'optionb', 'MC'),
(637, 16, 'level_e', 'A language with string manipulation facilities uses the following operations\r\nHead(s): first character of a string\r\nTall(s): all but the first character of a string\r\nConcat(s1, s2): s1 s2\r\nFor the string acbc what will be the output of \r\nConcat(head(s),head(tall(tall(s))))', NULL, 'ac', 'bc', 'ab', 'cc', '', 'optionc', 'MC'),
(638, 16, 'level_e', 'Consider the following statements:\r\n(i) First-in-first out types of computations are efficiently supported by STACKS.\r\n(ii) Implementing LISTS on linked lists is more efficient than implementing LISTS on an array for almost all the basic LIST operations.\r\n(iii) Implementing QUEUES on a circular array is more efficient than Implementing QUEUES on a linear array with two indices.\r\n(iv) Last-in-first-out type of computations are efficient supported by QUEUES.\r\n\r\n', NULL, '(ii) and (iii) are true', '(ii) and (ii) are true', '(iii) and (iv) are true', '(ii) and (iv) are true', '', 'optiona', 'MC'),
(639, 16, 'level_e', 'The passage below is followed by a question and four alternative answers. Select the best alternative.\r\nIn the Panchatantra, a woodpecker offered the following words of consolation to a hensparrow whose eggs had been crushed by an elephant with spring fever;\r\n“For the lost and dead and past\r\nThe wise have no laments\r\nBetween the wise and fools   \r\n Is just this difference”\r\nThis stanza highlights an important lesson that:', NULL, 'Wisdom is a direct function of retaining the lessons contained in the past.', 'There is no end to the reward of discriminating judgment.', 'One must be sensitive to the past only in so far as it offers wisdom, not as an object of brooding or regret.', 'Joy results from resolute yet circumspect use of the active powers; only the foolish would do otherwise.', '', 'optionc', 'MC'),
(640, 16, 'level_m', 'A binary search tree is to be formed inserting number 10, 20, 30, 40, 50 in some order. The number of binary search tree ', NULL, '140', '252', '14', '42', 'None of these', 'optione', 'MC'),
(641, 16, 'level_m', 'Suppose there is a BST with numbers {30,20,40,35, 50, 33, 38,45, 60, 43} inserted in some order. Which of the following is not a possible sequence of search of BST?', NULL, '30, 40, 50, 45, 43 ', '30, 40, 35, 38', '30, 40, 50, 38, 45, 43', '30, 40, 50, 60', 'All are possible', 'optiond', 'MC'),
(642, 16, 'level_m', 'A min-heap is constructed on n elements. The times to find 7th minimum element and 7th maximum element are of the order: ', NULL, 'O(n) and O(n) ', 'O(log(n)) and O(log(n))', 'O(1) and O(n)', 'O(1) and O(1)', 'O(1) and O(log(n)) ', 'optionc', 'MC'),
(643, 16, 'level_m', 'If a disk has a seek time of 20 ms, rotates 20 revolutions per second, has 100 words per block, and each track has a capacity of 300 words, then the total time required to access a one block is: (Choose the closest answer)', NULL, '25', '30', '40', '50', '60', 'optionc', 'MC'),
(644, 16, 'level_m', 'Consider the following function.\r\nf(k)\r\n{x = 2;\r\nfor i = 1 to k\r\nx = x * x;\r\nreturn x;\r\n}\r\nIf n and k are positive integers, then the least value of k such that f(k) &gt;n is approximately', NULL, 'log(logn)', 'logn', 'n', 'nlogn', '2^n', 'optiona', 'MC'),
(645, 16, 'level_m', 'The following data is provided about a hard disk.\r\nNumber of cylinders = 65,356\r\nNumber of heads = 12 \r\nNumber of sectors = 63 \r\nSize of a sector = 512 bytes\r\nNumber of discs = 6\r\nWhat is the capacity of this particular hard disk?', NULL, '25.297 GB', '151.785 GB', '25 GB', '141.360 GB', '23.560 GB', 'optione', 'MC'),
(646, 16, 'level_m', 'The function void qr(int n, int m, int *q, int *r) is designed to compute the quotient and remainder (q and r) of n on division by m. For example, the quotient and remainder of 25 on division by 7 are 3 and 4, since 3 times 7 is 21, which is 4 less than 25. How would you use qr? Fill in the missing lines of code:\r\n\r\nvoid main(void)\r\n{ int n = 25;\r\nint m = 7;\r\nint q, r;\r\nqr( __ , __ , __ , __ ); // This is the answer\r\nprintf(q = %d and r = %d&quot;, q, r); // prints &quot;q = 3 and r = 4&quot;, the values from the example.	', NULL, '&amp;n, &amp;m, q,r', 'n,m,&amp;q,&amp;r ', 'n,m,q,r ', '&amp;n , &amp;m,&amp;q,&amp;r', ' ', 'optionb', 'MC'),
(647, 16, 'level_m', 'A priority queue Q is used to implement a stack stores characters. PUSH© is implemented INSERT (Q, C, K) where k is  an appropriate integer  key chosen by the implementation. POP is implemented as DELETEMIN(Q). for a sequence of operations, the keys chosen are in', NULL, 'Non-increasing order', 'Non-decreasing order', 'Strictly increasing order', 'Strictly decreasing order', '', 'optiond', 'MC'),
(648, 16, 'level_m', 'Consider the following C code\r\nstruct  node{\r\nint val;\r\nstruct node* next;\r\n};\r\nTypedef struct node Node;\r\nNode  * func(Node* head)\r\n{\r\nNode *t1, *t2;\r\nt1=head; \r\nif(t1!=NULL) \r\nt2=t1-&gt;next; \r\nelse return head; \r\nif(t2==NULL) \r\nreturn head;\r\nwhile(t2!=NULL){ \r\nif(t1.val!=t2.val)          //  Statement 1\r\n{\r\nt1-&gt;next=t2; t1=t2;    // Statement 2\r\n} \r\nt2=t2-&gt;next;\r\n}\r\nt1-&gt;next=NULL;\r\nreturn head;\r\n}\r\n\r\nAlso consider that func is called with the following linked list\r\n10-&gt;20-&gt;20-&gt;20-&gt;30-&gt;20-&gt;10\r\n\r\nHow many times is the comparison made in Statement 1?How many times does Statement 2 execute?\r\n', NULL, '4, 5', '5, 4', '6, 4 ', '7, 5', '', 'optionc', 'MC'),
(649, 16, 'level_m', 'Consider the following C code\r\nstruct  node{\r\nint val;\r\nstruct node* next;\r\n};\r\nTypedef struct node Node;\r\nNode  * func(Node* head)\r\n{\r\nNode *t1, *t2;\r\nt1=head; \r\nif(t1!=NULL) \r\nt2=t1-&gt;next; \r\nelse return head; \r\nif(t2==NULL) \r\nreturn head;\r\nwhile(t2!=NULL){ \r\nif(t1.val!=t2.val)          //  Statement 1\r\n{\r\nt1-&gt;next=t2; t1=t2;    // Statement 2\r\n} \r\nt2=t2-&gt;next;\r\n}\r\nt1-&gt;next=NULL;\r\nreturn head;\r\n}\r\n\r\nAlso consider that func is called with the following linked list\r\n10-&gt;20-&gt;20-&gt;20-&gt;30-&gt;20-&gt;10\r\nWhat would be the linked list returned by the function func?', NULL, '10-&gt;20-&gt;20-&gt;20-&gt;30-&gt;20-&gt;10   ', '10-&gt;20-&gt;30-&gt;20-&gt;10', '10-&gt;20-&gt;30 ', '10-&gt;20-&gt;30-&gt;20', '', 'optionb', 'MC'),
(650, 17, 'level_e', 'Q. No. 1 – 25 Carry One Mark Each\r\n	', '1391444390.jpeg', '|s| = 2|T|	', '|S| = |T| - 1	 ', '|S| = |T|	 ', '|S| = |T| + 1', ' ', 'optionc', 'MC'),
(651, 17, 'level_e', '', '1391444495.jpeg', '3.575 ', '3.676', '3.667 ', '3.607', '', 'optiond', 'MC'),
(652, 17, 'level_e', 'What is the possible number of reflexive relations on a set of 5 elements?', '1391444596.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(653, 17, 'level_e', '', '1391444723.jpeg', 'A group      ', 'A ring', 'An integral domain   ', 'A field', '', 'optiona', 'MC'),
(654, 17, 'level_e', '', '1391444805.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(655, 17, 'level_e', '', '1391444893.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(656, 17, 'level_e', 'A main memory unit with a capacity of 4 megabytes is built using 1M×1-bit DRAM chips. Each DRAM chip has 1K rows of cells with 1K cells in each row. The time taken for a single refresh operation is 100 nanoseconds. The time required to perform one refresh operation on all the cells in the memory unit is', '1391444994.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(657, 17, 'level_e', '', '1391445055.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(658, 17, 'level_e', '', '1391447522.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(659, 17, 'level_e', 'In a binary tree with n nodes, every node has an odd number of descendants. Every node is considered to be its own descendant. What is the number of nodes in the tree that have exactly one child?', NULL, '0', '1', '(n – 1)/ 2', 'n-1', '', 'optiona', 'MC'),
(660, 17, 'level_e', 'What does the following program print?\r\n#include &lt;stdio.h&gt;\r\nvoid f(int * p, int * q) {\r\np = q;\r\n*p = 2;\r\n}\r\nint i = 0, j = 1;\r\nint main ( ){\r\nf(&amp;i, &amp; j);\r\nprintf (&quot;%d %d \\ n &quot;, i, j) ;\r\nreturn 0;\r\n}\r\n', NULL, '2 2 ', '2 1 ', '0 1 ', '0 2', '', 'optiond', 'MC'),
(661, 17, 'level_e', '', '1391447763.jpeg', '12', '10', '6', '5', '', 'optionc', 'MC'),
(662, 17, 'level_e', 'Which data structure in a compiler is used for managing information about variables and their attributes?', NULL, 'Abstract syntax tree    ', 'Symbol table', 'Semantic stack', 'Parse table', '', 'optionb', 'MC'),
(663, 17, 'level_e', 'Which languages necessarily need heap allocation in the runtime environment?', NULL, 'Those that support recursion ', 'Those that use dynamic scoping', 'Those that allow dynamic data structures', 'Those that use global variables', '', 'optionc', 'MC'),
(664, 17, 'level_e', 'One of the header fields in an IP datagram is the Time-to-Live (TTL) field. Which of the following statements best explains the need for this field?', NULL, 'It can be used to prioritize packets', 'It can be used to reduce delays', 'It can be used to optimize throughput', 'It can be used to prevent packet looping', '', 'optiond', 'MC'),
(665, 17, 'level_e', 'Which one of the following is not a client server application?', NULL, 'Internet chat', 'Web browsing', 'E-mail', 'Ping', '', 'optiond', 'MC'),
(666, 17, 'level_e', 'Let L1 be a recursive language. Let L2 and L3 be languages that are recursively enumerable but not recursive. Which of the following statements is not necessarily true?', NULL, 'L2 – L1 is recursively enumerable', 'L1 – L3 is recursively enumerable', 'L2 ∩ L1 is recursively enumerable', 'L2 ∪ L1 is recursively enumerable', '', 'optionb', 'MC'),
(667, 17, 'level_e', 'Consider a B+-tree in which the maximum number of keys in a node is 5. What is the minimum number of keys in any non-root node?', NULL, '1', '2', '3', '4', '', 'optionb', 'MC'),
(668, 17, 'level_e', 'A relational schema for a train reservation database is given below\r\nPassenger (pid, pname, age)\r\nReservation (pid, cass, tid)\r\nTable : Passenger				\r\npid	  pname	        Age\r\n0	‘Sachin’	65\r\n1	‘Rahul’	        66\r\n2	‘Sourav’	67\r\n3	‘Anil’	        69\r\n\r\nTable : Reservation\r\npid	class	tid\r\n0	&#039; AC &#039;	8200\r\n1	&#039; AC &#039;	8201\r\n2	&#039; SC&#039;	8201\r\n5	&#039; AC &#039;	8203\r\n1	&#039; SC&#039;	8204\r\n3	&#039; AC &#039;	8202\r\n\r\nWhat pids are returned by the following SQL query for the above instance of the tables?\r\nSELECT pid\r\nFROM Reservation\r\nWHERE class = &#039; AC &#039; AND\r\nEXISTS (SELECT *\r\nFROM Passenger\r\nWHERE age &gt; 65 AND\r\nPassenger.pid = Reservation.pid)\r\n', NULL, '1, 0  ', '1, 2  ', '1, 3  ', '1, 5', '', 'optionc', 'MC'),
(669, 17, 'level_e', 'Which of the following concurrency control protocols ensure both conflict serializability and freedom from deadlock?\r\nI. 2-phase locking\r\nII. Time-stamp ordering\r\n', NULL, 'I only', 'II only', 'Both I and II', 'Neither I nor II', '', 'optionb', 'MC'),
(670, 17, 'level_e', 'The cyclomatic complexity of each of the modules A and B shown below is 10. What is the cyclomatic complexity of the sequential integration shown on the right hand side?', '1391448652.jpeg', '19', '21', '20', '10', '', 'optiona', 'MC'),
(671, 17, 'level_e', 'What is the appropriate pairing of items in the two columns listing various activities encountered in a software life cycle?\r\nP. Requirements Capture  		1. Module Development and Integration\r\nQ. Design     				2. Domain Analysis\r\nR. Implementation    			3. Structural and Behavioral Modeling\r\nS. Maintenance  			4. Performance Tuning', NULL, 'P-3, Q-2,R -4,S-1', 'P-2, Q-3,R-1,S-4', 'P-3, Q-2,R -1,S-4', 'P-2, Q-3,R-4,S-1', '', 'optionb', 'MC'),
(672, 17, 'level_e', 'Consider the methods used by processes P1 and P2 for accessing their critical sections whenever needed, as given below. The initial values of shared boolean variables S1 and S2 are randomly assigned.\r\nWhich one of the following statements describes the properties achieved?', '1391448892.jpeg', 'Mutual exclusion but not progress', 'Progress but not mutual exclusion', 'Neither mutual exclusion nor progress', 'Both mutual exclusion and progress', '', 'optiona', 'MC'),
(673, 17, 'level_e', 'A system uses FIFO policy for page replacement. It has 4 page frames with no pages loaded to begin with. The system first accesses 100 distinct pages in some order and then accesses the same 100 pages but now in the reverse order. How many page faults will occur?', NULL, '196', '192 ', '197', '195', '', 'optiona', 'MC'),
(674, 17, 'level_e', 'Which of the following statements are true?\r\nI.  Shortest remaining time first scheduling may cause starvation\r\nII.  Preemptive scheduling may cause starvation\r\nIII.  Round robin is better than FCFS in terms of response time', NULL, 'I only', 'I and III only ', 'II and III only', 'I, II and III', '', 'optiond', 'MC'),
(675, 17, 'level_m', 'Q. No. 26 – 51 Carry Two Marks Each\r\n\r\nConsider a company that assembles computers. The probability of a faulty assembly of any computer is p. The company therefore subjects each computer to a testing process. This testing process gives the correct result for any computer with a probability of q. What is the probability of a computer being declared faulty?', NULL, 'pq + (1 – p) (1 – q)', '(1 – q)p', '(1 – p)q ', 'pq', '', 'optiona', 'MC'),
(676, 17, 'level_m', '', '1391449265.jpeg', '1/625  ', '4/625 ', '12/625 ', '16/625', '', 'optiona', 'MC'),
(677, 17, 'level_m', 'The degree sequence of a simple graph is the sequence of the degrees of the nodes in the graph in decreasing order. Which of the following sequences can not be the degree sequence of any graph?\r\nI.    7, 6, 5, 4, 4, 3, 2, 1   			 II.  6, 6, 6, 6, 3, 3, 2, 2\r\nIII.  7, 6, 6, 4, 4, 3, 2, 2   			 IV.  8, 7, 7, 6, 4, 2, 1, 1', NULL, 'I and II', 'III and IV ', 'IV only', 'II and IV', '', 'optiond', 'MC'),
(678, 17, 'level_m', 'Consider the following matrix\r\n\r\n\r\nIf the eigenvalues of A are 4 and 8, then', '1391449450.jpeg', 'x = 4,y = 10', 'x = 5,y = 8', 'x = -3,y = 9', 'x = -4,y = 10', '', 'optiond', 'MC'),
(679, 17, 'level_m', 'Suppose the predicate F(x, y, t) is used to represent the statement that person x can fool person y at time t. which one of the statements below expresses best the meaning of the formula ∀x∃y∃t(¬F(x,y,t))?\r\n', NULL, 'Everyone can fool some person at some time', 'No one can fool everyone all the time', 'Everyone cannot fool some person all the time', 'No one can fool some person at some time', '', 'optionb', 'MC'),
(680, 17, 'level_m', 'What is the Boolean expression for the output f of the combinational logic circuit of NOR gates given below?', '1391449609.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(681, 17, 'level_m', '', '1391449749.jpeg', '11,10,01,00   ', '10,11,01,00', '10,00,01,11	', '11,10,00,01', '', 'optiona', 'MC'),
(682, 17, 'level_m', 'A 5-stage pipelined processor has Instruction Fetch (IF), Instruction Decode (ID), Operand Fetch (OF), Perform Operation (PO) and Write Operand (WO) stages. The IF, ID, OF and WO stages take 1 clock cycle each for any instruction. The PO stage takes 1 clock cycle for ADD and SUB instructions, 3 clock cycles for MUL instruction, and 6 clock cycles for DIV instruction respectively. Operand forwarding is used in the pipeline. What is the number of clock cycles needed to execute the following sequence of instructions?\r\n     Instruction		 Meaning of instruction\r\nI0: MUL R2, R0, R1		R2← R0 *R1\r\nI1: DIV R5, R3, R4 		R5 ←R3 /R4\r\nI2: ADD R2, R5, R2		R2 ←R5 + R2\r\nI3: SUB R5, R2, R6 		R5← R2 - R6', NULL, '13', '15', '17', '19', '', 'optionc', 'MC'),
(683, 17, 'level_m', '', '1391450077.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(684, 17, 'level_m', 'What is the value printed by the following C program?\r\n#include &lt;stdio.h&gt;\r\nint f(int * a, int n)\r\n{\r\nif (n &lt;= 0)return 0;\r\nelse if(*a % 2 == 0) return * a + f(a + 1, n - 1);\r\nelse return * a - f(a + 1, n - 1);\r\n}\r\nint main ( )\r\n{\r\nint a [ ] = {12, 7, 13, 4, 11, 6};\r\nprintf (&quot;%d&quot;, f(a, 6));\r\nreturn 0;\r\n}\r\n', NULL, '-9', '5', '15', '19', '', 'optionc', 'MC'),
(685, 17, 'level_m', 'The following C function takes a simply-linked list as input argument. It modifies the list by moving the last element to the front of the list and returns the modified list. Some part of the code is left blank.\r\n  \r\ntypedef struct node {\r\nint value;\r\nstruct node *next;\r\n}      Node;\r\nNode *move_to_front(Node *head) {\r\nNode *p, *q;\r\nif ((head = = NULL:  || (head-&gt;next = = NULL)) return head;\r\nq = NULL; p = head;\r\nwhile (p-&gt; next ! = NULL)  {\r\nq = p;\r\np = p-&gt;next;\r\n}\r\n_______________________________\r\nreturn head;\r\n}\r\nChoose the correct alternative to replace the blank line.', NULL, 'q = NULL; p-&gt;next = head; head = p;', 'q-&gt;next = NULL; head = p; p-&gt;next = head;', 'head = p; p-&gt;next = q; q-&gt;next = NULL;', 'q-&gt;next = NULL; p-&gt;next = head; head = p;', '', 'optiond', 'MC'),
(686, 17, 'level_m', 'The program below uses six temporary variables a, b, c, d, e, f.\r\n        a = 1\r\n	b = 10\r\n	c = 20\r\n	d = a + b\r\n	e = c + d\r\n	f = c + e\r\n	b = c + e\r\n	e = b + f\r\n	d = 5 + e\r\n	return d + f\r\n\r\nAssuming that all operations take their operands from registers, what is the minimum number of registers needed to execute this program without spilling?\r\n', NULL, '2', '3', '4', '6', '', 'optionb', 'MC'),
(687, 17, 'level_m', 'The grammar S -&gt; aSa|bS|c is', NULL, 'LL(1) but not LR(1)', 'LR(1) but not LR(1)', 'Both LL(1) and LR(1)', 'Neither LL(1) nor LR(1)', '', 'optionc', 'MC'),
(688, 17, 'level_m', 'Let L= { w∈ (0 + 1) * | w has even number of 1s} , i.e. L is the set of all bit strings with even number of 1s. Which one of the regular expressions below represents L?', NULL, '(0*10*1) *   ', '0* (10*10*) *', '0* (10*1*) *0*', '0*1 (10*1) *10*', '', 'optionb', 'MC'),
(689, 17, 'level_m', '', '1391450515.jpeg', 'Only L2 is context free  ', 'Only L2 and L3 are context free', 'Only L1 and L2 are context free ', 'All are context free', '', 'optiond', 'MC'),
(690, 17, 'level_m', 'Let w be any string of length n in {0, 1}*. Let L be the set of all substrings of w. What is the minimum number of states in a non-deterministic finite automaton that accepts L?', '1391450604.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(691, 17, 'level_m', 'Consider the following schedule for transactions T1, T2 and T3:\r\n      T1 	    T2 		      T3\r\n   Read (X)\r\n                 Read (Y)\r\n                                  Read (Y)\r\n                 Write (Y)\r\nWrite (X)\r\n                                  Write (X)\r\n                 Read (X)\r\n                 Write (X)\r\n\r\nWhich one of the schedules below is the correct serialization of the above?', NULL, 'T1 -&gt; T3  -&gt;  T2', 'T2  -&gt; T1  -&gt; T3', 'T2   -&gt;  T3  -&gt;  T1', 'T3  -&gt; T1  -&gt; T2', '', 'optiona', 'MC'),
(692, 17, 'level_m', 'The following functional dependencies hold for relations R(A, B, C) and S(B, D, E)\r\nB -&gt; A,\r\nA -&gt; C\r\nThe relation R contains 200 tuples and the relation S contains 100 tuples. What is the maximum number of tuples possible in the natural join R ⋈  S?', NULL, '100 ', '200 ', '300', '2000', '', 'optiona', 'MC'),
(693, 17, 'level_m', 'The following program is to be tested for statement coverage:\r\nbegin\r\n   if(a == b) {S1; exit;}\r\n   else if(c == d) {S2;}\r\n   else {S3; exit;}\r\n    S4;\r\nend\r\n\r\nThe test cases T1, T2, T3 and T4 given below are expressed in terms of the properties satisfied by the values of variables a, b, c and d. The exact values are not given.\r\nT1 : a, b, c and d are all equal\r\nT2 : a, b, c and d are all distinct\r\nT3 : a=b and c !=d\r\nT4 : a !=b and c=d\r\n\r\nWhich of the test suites given below ensures coverage of statements S1, S2, S3 and S4?', NULL, 'T1, T2, T3', 'T2, T4', 'T3, T4', 'T1, T2, T4', '', 'optiond', 'MC');
INSERT INTO `subj_question` (`qnid_s`, `subid`, `level`, `question`, `figure`, `optiona`, `optionb`, `optionc`, `optiond`, `optione`, `correct`, `type`) VALUES
(694, 17, 'level_m', 'The following program consists of 3 concurrent processes and 3 binary semaphores. The semaphores are initialized as S0=1, S1=0, S2=0.\r\n\r\nHow many times will process P0 print ‘0’?', '1391451100.jpeg', 'At least twice', 'Exactly twice', 'Exactly thrice', 'Exactly once', '', 'optiona', 'MC'),
(695, 17, 'level_m', '', '1391451425.jpeg', 'n = 40,k = 26', 'n = 21,k = 12', 'n = 20,k = 10 ', 'n = 41,k = 19', '', 'optionb', 'MC'),
(696, 17, 'level_m', 'Suppose computers A and B have IP addresses 10.105.1.113 and 10.105.1.91 respectively and they both use the same net mask N. Which of the values of N given below should not be used if A and B should belong to the same network?', NULL, '255.255.255.0', '255.255.255.128', '255.255.255.192', '255.255.255.224', '', 'optiond', 'MC'),
(697, 17, 'level_m', 'Common Data Questions: 48 &amp; 49\r\nA computer system has an L1 cache, an L2 cache, and a main memory unit connected as shown below. The block size in L1 cache is 4 words. The block size in L2 cache is 16 words. The memory access times are 2 nanoseconds. 20 nanoseconds and 200 nanoseconds for L1 cache, L2 cache and main memory unit respectively.\r\n \r\nWhen there is a miss in L1 cache and a hit in L2 cache, a block is transferred from L2 cache to L1 cache. What is the time taken for this transfer?', '1391451671.jpeg', '2 nanoseconds', '20 nanoseconds', '22 nanoseconds', '88 nanoseconds', '', 'optionc', 'MC'),
(698, 17, 'level_m', 'Common Data Questions: 48 &amp; 49\r\nA computer system has an L1 cache, an L2 cache, and a main memory unit connected as shown below. The block size in L1 cache is 4 words. The block size in L2 cache is 16 words. The memory access times are 2 nanoseconds. 20 nanoseconds and 200 nanoseconds for L1 cache, L2 cache and main memory unit respectively.\r\n\r\nWhen there is a miss in both L1 cache and L2 cache, first a block is transferred from main memory to L2 cache, and then a block is transferred from L2 cache to L1 cache. What is the total time taken for these transfers?	', '1391451934.jpeg', '222 nanoseconds ', '888 nanoseconds ', '902 nanoseconds ', '968 nanoseconds', ' ', 'optionc', 'MC'),
(699, 17, 'level_m', 'Common Data Questions: 50 &amp; 51\r\nConsider a complete undirected graph with vertex set {0, 1, 2, 3, 4}. Entry Wij in the matrix W below is the weight of the edge {i, j}.\r\nWhat is the minimum possible weight of a spanning tree T in this graph such that vertex 0 is a leaf node in the tree T?', '1391451878.jpeg', '7', '8', '9', '10', '', 'optiond', 'MC'),
(700, 17, 'level_m', 'Common Data Questions: 50 &amp; 51\r\nConsider a complete undirected graph with vertex set {0, 1, 2, 3, 4}. Entry Wij in the matrix W below is the weight of the edge {i, j}.\r\n\r\nWhat is the minimum possible weight of a path P from vertex 1 to vertex 2 in this graph such that P contains at most 3 edges?	', '1391451944.jpeg', '7', '8 ', '9 ', '10', ' ', 'optionb', 'MC'),
(701, 17, 'level_m', 'Statement for Linked Answer Questions: 52 &amp; 53\r\nA hash table of length 10 uses open addressing with hash function h(k)=k mod 10, and linear probing. \r\nAfter inserting 6 values into an empty hash table, the table is as shown below\r\nWhich one of the following choices gives a possible order in which the key values could have been inserted in the table?', '1391452233.jpeg', '46, 42, 34, 52, 23, 33', '34, 42, 23, 52, 33, 46', '46, 34, 42, 23, 52, 33', '42, 46, 33, 23, 34, 52', '', 'optionc', 'MC'),
(702, 17, 'level_m', 'Statement for Linked Answer Questions: 52 &amp; 53\r\nA hash table of length 10 uses open addressing with hash function h(k)=k mod 10, and linear probing. \r\nAfter inserting 6 values into an empty hash table, the table is as shown below\r\n\r\nHow many different insertion sequences of the key values using the same hash function and linear probing will result in the hash table shown above?\r\n', '1391452275.jpeg', '10', '20', '30', '40', '', 'optionc', 'MC'),
(703, 17, 'level_m', 'Consider a network with 6 routers R1 to R6 connected with links having weights as shown in the following diagram\r\n\r\nAll the routers use the distance vector based routing algorithm to update their routing tables. Each router starts with its routing table initialized to contain an entry for each neighbour with the weight of the respective connecting link. After all the routing tables stabilize, how many links in the network will never be used for carrying any data?', '1391452347.jpeg', '4', '3', '2', '1', '', 'optionc', 'MC'),
(704, 17, 'level_m', 'Consider a network with 6 routers R1 to R6 connected with links having weights as shown in the following diagram\r\n\r\nSuppose the weights of all unused links in the previous question are changed to 2 and the distance vector algorithm is used again until all routing tables stabilize. How many links will now remain unused?', '1391452396.jpeg', '0', '1', '2', '3', '', 'optionb', 'MC'),
(705, 17, 'level_m', 'Q. No. 61 – 65 Carry Two Marks Each\r\n\r\nIf 137+276=435 how much is 731+672?', NULL, '534', '1403', '1623', '1513', '', 'optionc', 'MC'),
(706, 17, 'level_m', 'Hari (H), Gita (G), Irfan (I) and Saira (S) are siblings (i.e. brothers and sisters). All were born on 1st january. The age difference between any two successive siblings (that is born one after another) is less than 3 years. Given the following facts:\r\ni.    Hari’s age + Gita’s age &gt; Irfan’s age + Saira’s age\r\nii.  The age difference between Gita and Saira is 1 year. However Gita is not the oldest and Saira is not the youngest.\r\niii.  There are no twins.\r\n \r\nIn what order were they born (oldest first)?', NULL, 'HSIG', 'SGHI', 'IGSH', 'IHSG', '', 'optionb', 'MC'),
(707, 17, 'level_m', '5 skilled workers can build a wall in 20 days: 8 semi-skilled workers can build a wall in 25 days; 10 unskilled workers can build a wall in 30 days. If a team has 2 skilled, 6 semi-skilled and 5 unskilled workers, how long will it take to build the wall?	', NULL, '20', '18 ', '16 ', '15', ' ', 'optiond', 'MC'),
(708, 17, 'level_m', 'Modern warfare has changed from large scale clashes of armies to suppression of civilian populations. Chemical agents that do their work silently appear to be suited to such warfare; and regretfully, there exist people in military establishments who think that chemical agents are useful tools for their cause. Which of the following statements best sums up the meaning of the above passage:', NULL, 'Modern warfare has resulted in civil strife.', 'Chemical agents are useful in modern warfare.', 'Use of chemical agents in warfare would be undesirable', 'People in military establishments like to use chemical agents in war.', '', 'optiond', 'MC'),
(709, 17, 'level_m', 'Given digits 2,2,3,3,4,4,4,4 how many distinct 4 digit numbers greater than 3000 can be formed?', NULL, '50', '51', '52', '54', '', 'optionb', 'MC'),
(710, 17, 'level_e', 'Q. No. 56 – 60 Carry One Mark Each\r\n\r\nChoose the most appropriate word from the options given below to the complete the following sentence:\r\nHis rather casual remarks on politics ___________ his lack of seriousness about the subject.', NULL, 'masked', 'belied', 'betrayed', 'suppressed', '', 'optionc', 'MC'),
(711, 17, 'level_e', 'Which of the following options is closest in meaning to the word Circuitous.', NULL, 'cyclic', 'indirect', 'confusing', 'crooked', '', 'optionb', 'MC'),
(712, 17, 'level_e', 'Choose the most appropriate word from the options given below to complete the following sentence:\r\nIf we manage to ____________ our natural resources, we would leave a better planet for our children.', NULL, 'uphold', 'restrain', 'cherish', 'conserve', '', 'optiond', 'MC'),
(713, 17, 'level_e', '25 persons are in a room. 15 of them play hockey, 17 of them play football and 10 of them play both hockey and football. Then the number of persons playing neither hockey nor football is:', NULL, '2', '17', '13', '3', '', 'optiond', 'MC'),
(714, 17, 'level_e', 'The question below consists of a pair of related words followed by four pairs of words. Select the pair that best expresses the relation in the original pair.\r\nUnemployed: Worker', NULL, 'fallow: land', 'unaware: sleeper', 'wit: jester', 'renovated: house', '', 'optiona', 'MC'),
(715, 18, 'level_e', 'Q. No. 1 – 25 Carry One Mark Each', '1391576992.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(716, 18, 'level_e', '', '1391577048.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(717, 18, 'level_e', '', '1391577103.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(718, 18, 'level_e', '', '1391577440.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(719, 18, 'level_e', '', '1391579315.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(720, 18, 'level_e', '', '1391579372.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(721, 18, 'level_e', '', '1391579428.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(722, 18, 'level_e', '', '1391579489.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(723, 18, 'level_e', '', '1391579533.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(724, 18, 'level_e', '', '1391579749.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(725, 18, 'level_e', '	', '1391579830.jpeg', '', ' ', ' ', '', ' ', 'optionb', 'MC'),
(726, 18, 'level_e', '', '1391580864.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(727, 18, 'level_e', '', '1391580933.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(728, 18, 'level_e', '', '1391581070.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(729, 18, 'level_e', '', '1391581128.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(730, 18, 'level_e', '', '1391581194.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(731, 18, 'level_e', '', '1391581226.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(732, 18, 'level_e', '	', '1391581330.jpeg', '', ' ', ' ', '', ' ', 'optiond', 'MC'),
(733, 18, 'level_e', '', '1391581620.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(734, 18, 'level_e', '', '1391582190.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(735, 18, 'level_e', '', '1391582366.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(736, 18, 'level_e', '', '1391582509.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(737, 18, 'level_e', '', '1391582555.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(738, 18, 'level_e', '', '1391582617.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(739, 18, 'level_e', '', '1391582669.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(740, 18, 'level_m', 'Q. No. 26 – 51 Carry Two Marks Each', '1391582764.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(741, 18, 'level_m', '', '1391582829.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(742, 18, 'level_m', '', '1391582875.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(743, 18, 'level_m', '', '1391582965.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(744, 18, 'level_m', '	', '1391583023.jpeg', '', ' ', ' ', '', ' ', 'optionc', 'MC'),
(745, 18, 'level_m', '', '1391583338.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(746, 18, 'level_m', '', '1391583470.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(747, 18, 'level_m', '', '1391583516.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(748, 18, 'level_m', '	', '1391583628.jpeg', '', ' ', ' ', '', ' ', 'optiona', 'MC'),
(749, 18, 'level_m', '', '1391583824.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(750, 18, 'level_m', '', '1391583959.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(751, 18, 'level_m', '', '1391584544.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(752, 18, 'level_m', '', '1391584615.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(753, 18, 'level_m', '', '1391584940.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(754, 18, 'level_m', '', '1391584990.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(755, 18, 'level_m', '', '1391585312.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(756, 18, 'level_m', '', '1391585363.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(757, 18, 'level_m', '', '1391585415.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(758, 18, 'level_m', '', '1391585462.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(759, 18, 'level_m', '', '1391585766.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(760, 18, 'level_m', '', '1391585974.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(761, 18, 'level_m', '', '1391586214.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(762, 18, 'level_m', 'Statement for Linked Answer Questions: 48 &amp; 49', '1391587277.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(763, 18, 'level_m', '', '1391587419.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(764, 18, 'level_m', '', '1391587512.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(765, 18, 'level_m', '', '1391588299.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(766, 18, 'level_m', '', '1391589750.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(767, 18, 'level_m', '', '1391589824.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(768, 18, 'level_m', '', '1391589902.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(769, 18, 'level_m', '', '1391589960.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(770, 18, 'level_e', 'Q.56 – Q.60 carry one mark each \r\n\r\nWhich of the following options is the closest in meaning to the below:\r\n	Ephemeral \r\n', NULL, 'effeminate ', 'ghostlike   ', 'soft  ', 'short-lived', '', 'optiond', 'MC'),
(771, 18, 'level_e', 'Select the pair that best expresses the relation in the original pair. Erudition: Scholar', NULL, 'steadfast: mercurial    ', 'competence: strict  ', 'skill: craftsman', 'nurse: doctor', '', 'optionc', 'MC'),
(772, 18, 'level_e', 'The two child norm with_______________ for the violators will have significant implication for car demographic profile.\r\n', NULL, 'disincentives  ', 'incitements   ', 'restrictions   ', 'restraints  ', '', 'optiona', 'MC'),
(773, 18, 'level_e', 'There is no fixed relation between food and famine; famine can occur with or without substantial ___________________ in food output.', NULL, 'Aberration  ', 'Weakening  ', 'Decline  ', 'Deterioration  ', '', 'optionc', 'MC'),
(774, 18, 'level_e', 'Consider the function f(x) = max (7 – x, x + 3). In which range does f take its minimum value?	', NULL, '-6≤ x &lt; -2', '-2≤ x &lt; 2 ', '2 ≤ x &lt; 6 ', '6 ≤ x &lt; 10', ' ', 'optionc', 'MC'),
(775, 18, 'level_m', 'Q.61 – Q.65 carry two mark each \r\nIt has taken fifty six long and frustrating years to turn bronze into gold for India’s Olympics aspirations. Beijing 2008 marks a defining moment in India’s Olympic history. From Delhi to Beijing is a long journey but one that our Olympians have undertakes with courage.\r\nWhich of the following statements best sums up the meaning of the above passage:\r\n	', NULL, 'Indian’s participation in Olympics has been frustrating.', 'Beijing Olympics was a landmark in India’s Olympic history. ', 'Our Olympics have undertaken a long journey to Beijing. ', 'India’s bronze medal turned into gold at Beijing.', ' ', 'optionb', 'MC'),
(776, 18, 'level_m', 'Consider the series 1/2 + 1/3 + 1/4 + 1/8 + 1/9 + 1/16 + 1/32 + 1/27 + 1/64 +……. The sum of the infinite series  above is:', NULL, ' ∞', '5/6 ', '1/2', 'None of these', '', 'optiond', 'MC'),
(777, 18, 'level_m', 'A gathering of 50 linguists discovered that 4 knew Kannada, Telugu and Tamil, 7 knew only Telugu and Tamil, 5 knew only Kannada and Tamil, 6 knew only Telugu and Kannada. If the number of linguists who knew Tamil is 24 and those who knew Kannada is also 24, how many linguists knew only Telugu?', NULL, '9', '10', '11', '8', '', 'optionc', 'MC'),
(778, 18, 'level_m', 'A tank has 100 liters of water. At the end of every hour the following two operations are performed  in sequence: i) water equal to m% of current contents of the tank is added to the tank, ii) water equal to n% of current contents of the tank is removed from the tank. At the end of 5 hours the tank contains exactly 100 liters of water. The relation between m and n is:', NULL, 'm = n', 'm &gt; n', 'm &lt; n', 'None of the previous', '', 'optionb', 'MC'),
(779, 18, 'level_m', 'A student is answering a multiple choice examination with 65 questions with a marking scheme as follows: i) 1 mark for each correct answer, ii) - 1/4 for a wrong answer, iii) - 1/8 for a question that has not been attempted. If the student gets 37 marks in the test then the least possible number of questions the student has NOT answered is:', NULL, '6', '5', '7', '4', '', 'optiona', 'MC'),
(780, 19, 'level_e', 'Q. No. 1 – 25 Carry One Mark Each	', '1391658471.jpeg', '', ' ', ' ', '', ' ', 'optiona', 'MC'),
(781, 19, 'level_e', '', '1391658600.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(782, 19, 'level_e', '', '1391658647.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(783, 19, 'level_e', '', '1391658750.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(784, 19, 'level_e', '', '1391658786.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(785, 19, 'level_e', '', '1391658822.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(786, 19, 'level_e', '', '1391658864.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(787, 19, 'level_e', '', '1391658899.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(788, 19, 'level_e', '', '1391658931.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(789, 19, 'level_e', '', '1391658969.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(790, 19, 'level_e', '	', '1391659004.jpeg', '', ' ', ' ', '', ' ', 'optiond', 'MC'),
(791, 19, 'level_e', '', '1391659118.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(792, 19, 'level_e', '', '1391659251.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(793, 19, 'level_e', '', '1391659305.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(794, 19, 'level_e', '', '1391659346.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(795, 19, 'level_e', '', '1391659383.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(796, 19, 'level_e', '', '1391659415.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(797, 19, 'level_e', '', '1391659460.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(798, 19, 'level_e', '', '1391659500.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(799, 19, 'level_e', '	', '1391659539.jpeg', '', ' ', ' ', '', ' ', 'optiona', 'MC'),
(800, 19, 'level_e', '', '1391659618.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(801, 19, 'level_e', '', '1391659669.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(802, 19, 'level_e', '', '1391659932.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(803, 19, 'level_e', '', '1391659967.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(804, 19, 'level_e', 'An  operating  system implements a Policy that requires  a  process  to release  all resources  before\r\nmaking a  request  for another  resource.  Select  the TRUE  statement  from  the  following:\r\n', NULL, 'Both  starvation and deadlock  can  occur', 'Starvation  can  occur  but  deadlock  cannot occur', 'Starvation  car not  occur  but  deadlock  can occur', 'Neither Starvation nor deadlock  can  occur', '', 'optionb', 'MC'),
(805, 19, 'level_m', 'Q. No. 26 – 51 Carry Two Marks Each\r\n\r\nIf  the time-slice  used in  the round-robin scheduling  policy  is  more  than  the  maximum  tine\r\nrequired  to  execute  any  process,  then  the  policy will\r\n', NULL, 'degenerate  to  shortest  job first', 'degenerate  to  priority  scheduling', 'degenerate  to  first  come  first  serve', 'none  of  the  above', '', 'optionc', 'MC'),
(806, 19, 'level_m', 'The  total  number  of  keys  required  for  a  set  of  n individuals  to  be  able  to  communicate   with  each other using secret  key  and  public key cryptosystems,  respectively  are:\r\n	', '1391660924.jpeg', '', ' ', ' ', '', ' ', 'optionc', 'MC'),
(807, 19, 'level_m', '', '1391660981.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(808, 19, 'level_m', '', '1391661026.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(809, 19, 'level_m', '', '1391661118.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(810, 19, 'level_m', '', '1391661159.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(811, 19, 'level_m', '', '1391661196.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(812, 19, 'level_m', '', '1391661232.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(813, 19, 'level_m', '', '1391661284.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(814, 19, 'level_m', '', '1391661490.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(815, 19, 'level_m', '', '1391662060.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(816, 19, 'level_m', '', '1391662270.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(817, 19, 'level_m', '	', '1391662368.jpeg', '', ' ', ' ', '', ' ', 'optionc', 'MC'),
(818, 19, 'level_m', '', '1391662534.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(819, 19, 'level_m', 'Consider  a  CPU  where  all  the  instructions  require 7  clock  cycles  to  complete  execution.  There  are 140  instructions  in  the  instruction  set.  It is  found that  125  control  signals  are  needed  to  be  generated by the  control  unit. While designing  the horizontal  micro  programmed  control  unit,  single address  field  format  is  used  for  branch  control logic.  What is the minimum  size  of the  control word and  control address  register?	', NULL, '125, 7', '125, 10 ', '135, 9 ', '135, 10', ' ', 'optionb', 'MC'),
(820, 19, 'level_m', 'A nonpipelined  single  cycle  processor  operating at 100  MHz  is converted  into  a synchronous pipelined  processor  with  five  stages  requiring  2.5 nsec,  1.5  nsec,  2 nsec,  1.5  nsec  and  2.5  nesec, respectively.  The  delay  of  the  latches  is  0.5  nsec. The  speedup  of the  pipeline  processor  for  a  large number  of  instructions  is', NULL, '4.5', '4.0', '3.33', '3.0', '', 'optionc', 'MC'),
(821, 19, 'level_m', 'Assume  that  a  main  memory  with  only  4  pages, each of  16  bytes,  is initially  empty.  The CPU generates  the  following  sequence  of virtual addresses  and  uses  the  Least  Recently  Used  (LRU) page  replacement  policy\r\n0,4,8,20,24,36,44,12,68,72,80,84,28,32,88,92\r\nHow  many  page  faults  does  this  sequence  cause? What  are  the  page  numbers  of  the  pages  present in  the  main  memory  at  the  end  of  the  sequence?\r\n', NULL, '6  and  1,2,3,4', '7  and  1,2,4,5', '8  and  1,2,4,5', '9  and  1,2,3,\r\n9  and  1,2,3,5', '', 'optionb', 'MC'),
(822, 19, 'level_m', '', '1391663170.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(823, 19, 'level_m', '', '1391663201.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(824, 19, 'level_m', '', '1391663228.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(825, 19, 'level_m', '', '1391663276.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(826, 19, 'level_m', '', '1391663314.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(827, 19, 'level_m', '', '1391663348.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(828, 19, 'level_m', 'Consider the following three schedules of  transactions T1, T2 and T3 [Notation: In the following NYO represents the action Y  (R for read, W for write) performed by transaction N on object O.) \r\n \r\nWhich of the following statements is  TRUE? \r\n		', '1391664296.jpeg', 'S1, S2 and S3 are all conflict equivalent to each other ', 'No two of S1, S2 and 53 are conflict equivalent to each other  ', 'S2 is conflict equivalent to S3, but not to S1   ', 'S1 is conflict equivalent to S2, but not to S3', '  ', 'optiond', 'MC'),
(829, 19, 'level_m', 'Common Data Questions(50 &amp; 51)\r\nA Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequences  of keys. \r\nI. 81, 537, 102, 439, 285, 376, 305 \r\nII. 52, 97, 121, 195, 242, 381, 472 \r\nII. 142, 248, 520, 386, 345, 270, 307 \r\nIV. 550, 139, 507, 395, 463, 402, 270 \r\n \r\nSuppose the BST has been unsuccessfully searched for key 273. Which all of the above sequences list nodes in the order in which we could have encountered them in the search?', NULL, 'II and III only ', 'I and III only ', 'III and IV only', 'III only ', '', 'optiond', 'MC'),
(830, 19, 'level_m', 'Common Data Questions(50 &amp; 51)\r\nA Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequences  of keys. \r\nI. 81, 537, 102, 439, 285, 376, 305 \r\nII. 52, 97, 121, 195, 242, 381, 472 \r\nII. 142, 248, 520, 386, 345, 270, 307 \r\nIV. 550, 139, 507, 395, 463, 402, 270 \r\n\r\nWhich of the following statements is TRUE? ', NULL, 'I, II and IV are in order sequences of three different BSTs ', 'I is a preorder sequence of some BST with 439 as the root ', 'II is an in order sequence of some BST where 121 is the root and 52 is a leaf ', 'IV s a post order sequence of some BST with 149 as the root ', '', 'optionc', 'MC'),
(831, 19, 'level_m', 'Statement for Linked Answer Questions 52 and 53:  \r\n\r\nA CFG G is given with the following productions where S is the start symbol, A is a non-terminal and a and b are terminals. \r\nS → aS | A \r\nA → aAb | bAa | ∈ \r\n \r\nWhich of the following strings is generated by the grammar above?', NULL, 'aabbaha', 'aabaaba', 'abababb', 'aabbaab', '', 'optiond', 'MC'),
(832, 19, 'level_m', 'Statement for Linked Answer Questions 52 and 53:  \r\n\r\nA CFG G is given with the following productions where S is the start symbol, A is a non-terminal and a and b are terminals. \r\nS → aS | A \r\nA → aAb | bAa | ∈ \r\n\r\nFor the correct answer in Q.52 how many steps are required to derive the string and how many parse trees are there’? \r\na.  \r\nb. 6 and 2 \r\nc. 7 and 2 \r\nd. 4 and 2  ', NULL, '6 and 1', '6 and 2', '7 and 2 ', '4 and 2 ', '', 'optiona', 'MC'),
(833, 19, 'level_m', 'Statement for Linked Answer Questions 54 and 55:   \r\nConsider a computer with a 4-way set-associative mapped cache of the following characteristics: \r\na total of 1 MD of main memory, a word size of 1 byte, a block size of 228 words and a cache size of 8 KB. \r\n \r\nThe number of bits in the TAG, SET and WORD fields, respectively are:', NULL, '7, 6, 7', '8, 5, 7 ', '8, 6, 6 ', '9, 4, 7', '', 'optiond', 'MC'),
(834, 19, 'level_m', 'Statement for Linked Answer Questions 54 and 55:   Consider a computer with a 4-way set-associative mapped cache of the following characteristics: \r\na total of 1 MD of main memory, a word size of 1 byte, a block size of 228 words and a cache size of 8 KB. \r\n \r\nWhile accessing the memory location 0C795H by the CPU, the contents of the TAG field of the corresponding cache line is', NULL, '000011000', '110001111', '00011000', '110010101', '', 'optiona', 'MC'),
(835, 19, 'level_e', 'Question 56- 60: One marks each\r\n\r\nThe closest meaning of the word EXHORT is', NULL, 'Urge', 'restrain', 'condemn', 'scold', '', 'optiona', 'MC'),
(836, 19, 'level_e', 'PREAMBLE: CONSTITUTION', NULL, 'Amendment: Law', 'Prologue: Play', 'Episode: Serial', 'plot: story', '', 'optionb', 'MC'),
(837, 19, 'level_e', 'Fill in the blanks\r\nThe committee wrote a ...............report extolling only the strength of the proposal', NULL, 'reasonable', 'supportive', 'biased', 'fragmented', '', 'optionc', 'MC'),
(838, 19, 'level_e', 'If the country has to achieve real prosperity, it is ............. that the fruits of progress\r\nreach all in equal measures. ', NULL, 'Inevitable', 'Contingent', 'Oblivious', 'Imperative', '', 'optiond', 'MC'),
(839, 19, 'level_e', 'A person invest Rs. 1000 at 10% CI compounded annually for 2 years .At the end of\r\n2 years the whole amount is invested at an annual SI of 12 % pa for 5 years. The\r\ntotal value of investment finally is ', NULL, '1776', '1760', '1920', '1936', '', 'optiond', 'MC'),
(840, 19, 'level_m', 'Questions 61-65: Two marks Each\r\n\r\n&quot;The ban on smoking in designated public places can save a large number of well known effects of environmental tobacco smoke, and the passive smokers are the worst affected from it”. Which of the following sentences sums up the meaning of the above passage.', NULL, 'Effects of tobacco are well known', 'The ban of smoking in public places protects the non smokers', 'Passive smoking is bad for your health.', 'The ban of smoking in public places excludes passive smokers.', '', 'optionb', 'MC'),
(841, 19, 'level_m', 'Consider the set of integers (1,2,3..............,5000) the number of integers that is\r\ndivisible by neither 3 nor 4 is :', NULL, '1668', '2084', '2500', '2916', '', 'optionc', 'MC'),
(842, 19, 'level_m', 'Given the sequence A, BB, CCC, DDDD...........and so on , the 240th letter in the\r\nsequence will be:   \r\n', NULL, 'V', 'U', 'T', 'W', '', 'optiona', 'MC'),
(843, 19, 'level_m', 'A positive integer m in base 10 when represented in base 2 has the representation p and the base 3 has the representation q , We get p-q= 990, where the subtraction is done in base 10 , Which of the following is necessarily true:', NULL, 'm&gt;=14', '9&lt;m&lt;13', '6&lt;m&lt;8', 'm&lt;6', '', 'optionb', 'MC'),
(844, 19, 'level_m', '', '1391666712.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(845, 20, 'level_e', 'Q. No. 1 – 25 Carry one Mark Each\r\n\r\nFor the set N of natural numbers and a binary operation f : N x N → N, an element z ∈ N is called an identity for f, if f (a, z) = a = f(z, a), for all a ∈ N. Which of the following binary operations have a identity?\r\n', '1391696060.jpeg', 'I and II only', 'II and III only', 'I and III only', 'None of these', '', 'optiona', 'MC'),
(846, 20, 'level_e', 'In the automaton below, s is the start state and t is the only final state.\r\n  \r\nConsider the strings u = abbaba, v = bab, and w = aabb. Which of the following statements is true?', '1391696261.jpeg', 'The automaton accepts u and v but not w', 'The automaton accepts each of u, v, and w', 'The automaton rejects each of u, v, and w', 'The automaton accepts u but rejects v and w', '', 'optiond', 'MC'),
(847, 20, 'level_e', 'In the context-free grammar below, S is the start symbol, a and b are terminals, and ε denotes the empty string \r\nS → aSa | bSb | a | b | ε\r\nWhich of the following strings is NOT generated by the grammar?	', NULL, 'aaaa', 'baba', 'abba', 'babaaabab', '', 'optionb', 'MC'),
(848, 20, 'level_e', 'Which regular expression best describes the language accepted by the non-deterministic automaton below?', '1391696464.jpeg', '(a + b) * a(a + b)b', '(abb) *', '(a + b) * a(a + b) * b(a + b)*', '(a + b)*', '', 'optiona', 'MC'),
(849, 20, 'level_e', '', '1391697287.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(850, 20, 'level_e', 'The addition of 4-bit, two&#039;s complement, binary numbers 1101 and 0100 results in', NULL, '0001 and an overflow', '1001 and no overflow', '0001 and no overflow', '1001 and an overflow', '', 'optionc', 'MC'),
(851, 20, 'level_e', 'In a binary tree, the number of internal nodes of degree 1 is 5, and the number of internal nodes of degree 2 is 10. The number of leaf nodes in the binary tree is ', NULL, '10', '11', '12', '15', '', 'optionb', 'MC'),
(852, 20, 'level_e', 'A problem in NP is NP-complete if', NULL, 'it can be reduced to the 3-SAT problem in polynomial time', 'the 3-SAT problem can be reduced to it in polynomial time', 'it can be reduced to any other problem in NP in polynomial time', 'some problem in NP can be reduced to it in polynomial time', '', 'optionb', 'MC'),
(853, 20, 'level_e', 'If all the edge weights of an undirected graph are positive, then any subset of edges that connects all the vertices and has minimum total weight is a', NULL, 'Hamiltonian cycle', 'grid', 'hypercube', 'tree', '', 'optiond', 'MC'),
(854, 20, 'level_e', 'In the working-set strategy, which of the following is done by the operating system to prevent thrashing? \r\n(I)   It initiates another process if there are enough extra frames. \r\n(II)  It selects a process to suspend if the sum of the sizes of the working-sets.Exceeds the total number of available frames.	', NULL, 'I only', 'II only ', 'Neither I nor II ', 'Both I and II', ' ', 'optionb', 'MC'),
(855, 20, 'level_e', 'The process state transition diagram of an operating system is as given below. \r\nWhich of the following must be FALSE about the above operating system?', '1391697760.jpeg', 'It is a multiprogrammed operating system', 'It uses preemptive scheduling', 'It uses non-preemptive scheduling', 'It is a multi-user operating system', '', 'optionb', 'MC'),
(856, 20, 'level_e', '', '1391697865.jpeg', '2000', '2500', '4500', '5000', '', 'optiona', 'MC'),
(857, 20, 'level_e', 'Which of the following relational query languages have the same expressive power? \r\n(I)   Relational algebra \r\n(II)  Tuple relational calculus restricted to safe expressions \r\n(III) Domain relational calculus restricted to safe expressions	', NULL, 'II and III only', 'I and II only', 'I and III only', 'I, II and III', '', 'optiond', 'MC'),
(858, 20, 'level_e', 'Which of the following statements is TRUE?', NULL, 'Both Ethernet frame and IP packet include checksum fields', 'Ethernet frame includes a checksum field and IP packet includes a CRC field', 'Ethernet frame includes a CRC field and IP packet includes a checksum field', 'Both Ethernet frame and IP packet include CRC fields', '', 'optionc', 'MC'),
(859, 20, 'level_e', 'Which of the following statement(s) is TRUE? \r\n(I)    A hash function takes a message of arbitrary length and generates a fixed length code. \r\n(II)   A hash function takes a message of fixed length and generates a code of variable length. \r\n(III)  A hash function may give the same hash value for distinct messages.', NULL, 'I only', 'II and III only', 'I and III only', 'II only', '', 'optionc', 'MC'),
(860, 20, 'level_e', 'Let P, Q and R be sets let Δ denote the symmetric difference operator defined as PΔQ = (P U Q) - (P ∩ Q). Using Venn diagrams, determine which of the following is/are TRUE? \r\n(I)  PΔ (Q ∩ R) = (P Δ Q) ∩ (P Δ R) \r\n(II) P ∩(Q ∩ R) =  (P ∩ Q) Δ (P Δ R)', NULL, 'I only', 'II only', 'Neither I nor II', 'Both I and II', '', 'optionc', 'MC'),
(861, 20, 'level_e', 'What is the cardinality of the set of integers X defined below?\r\nX = {n | 1 ≤ n ≤ 123, n is not divisible by either 2, 3 or 5}\r\n', NULL, '28', '33', '37', '44', '', 'optionb', 'MC'),
(862, 20, 'level_e', 'What are the eigenvalues of the matrix P given below', '1391698368.jpeg', 'a, a -√2, a + √2', 'a, a, a', '0, a, 2a', '-a, 2a, 2a', ' ', 'optiona', 'MC'),
(863, 20, 'level_e', 'Which of the following statements about regular languages is NOT true ?', NULL, 'Every language has a regular superset', 'Every language has a regular subset', 'Every subset of a regular language is regular', 'Every subset of a finite language is regular', '', 'optionc', 'MC'),
(864, 20, 'level_e', '', '1391702612.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(865, 20, 'level_e', 'Let L be a context-free language and M a regular language. Then the language L ∩ M is', NULL, 'always regular', 'never regular', 'always a deterministic context-free language', 'always a context-free language', '', 'optiond', 'MC'),
(866, 20, 'level_e', 'The boolean function for a combinational circuit with four inputs is represented by the following Karnaugh map.\r\n                                   \r\nWhich of the product terms given below is an essential prime implicant of the function?\r\n', '1391702790.jpeg', 'QRS', 'PQS', 'PQ&#039;S&#039;', 'Q&#039;S&#039;', '', 'optiond', 'MC'),
(867, 20, 'level_e', 'Which of the following statements about relative addressing mode is FALSE?', NULL, 'It enables reduced instruction size', 'It allows indexing of array elements with same instruction', 'It enables easy relocation of data', 'It enables faster address calculations than absolute addressing', '', 'optiond', 'MC'),
(868, 20, 'level_e', 'Which of the following sequences of array elements forms a heap?', NULL, '{23, 17, 14, 6, 13, 10, 1, 12, 7, 5}', '{23, 17, 14, 6, 13, 10, 1, 5, 7, 12}', '{23, 17, 14, 7, 13, 10, 1, 5, 6, 12}', '{23, 17, 14, 7, 13, 10, 1, 12, 5, 7}', '', 'optionc', 'MC'),
(869, 20, 'level_e', 'Suppose that we have numbers between 1 and 100 in a binary search tree and want to search for the number 55. Which of the following sequences CANNOT be the sequence of nodes examined?', NULL, '{10, 75, 64, 43, 60, 57, 55}', '{90, 12, 68, 34, 62, 45, 55}', '{9, 85, 47, 68, 43, 57, 55}', '{79, 14, 72, 56, 16, 53, 55}', '', 'optionc', 'MC'),
(870, 20, 'level_m', 'Q. No. 26 – 51 Carry Two Marks Each\r\n\r\nIn the context-free grammar below, S is the start symbol, a and b are terminals, and ε denotes the empty string. \r\nS → aSAb | ε \r\nA → bA | ε \r\nThe grammar generates the language', NULL, '((a + b)* b)*', '(ambn | m ≤ n}', '(ambn | m = n)', 'a* b*', '', 'optionb', 'MC'),
(871, 20, 'level_m', 'The majority function is a Boolean function f(x, y, z) that takes the value 1 whenever a majority of the variables x, y, z is  1. In the circuit diagram for the majority function shown below, the logic gates for the boxes labeled P and Q are, respectively,	', '1391703276.jpeg', 'XOR, AND', 'XOR, XOR ', 'OR, OR ', 'OR, AND', ' ', 'optiond', 'MC'),
(872, 20, 'level_m', 'For a state machine with the following state diagram the expression for the next state S+ in terms of the current state S and the input variables x and y is', '1391703379.jpeg', 'S+ = S&#039; . y&#039; + S . x', 'S+ = S. x . y&#039; + S&#039; . y . x&#039;', 'S+ = x . y&#039;', 'S+ = S&#039; . y + S . x&#039;', '', 'optiona', 'MC'),
(873, 20, 'level_m', 'The memory locations 1000, 1001 and 1020 have data values 18, 1 and 16 respectively before the following program is executed.\r\n MOVI	 Rs, 1	         ; Move immediate\r\n LOAD	 Rd, 1000(Rs)	 ; Load from memory\r\n ADDI	 Rd, 1000	 ; Add immediate\r\n STOREI	 0(Rd), 20	 ; Store immediate\r\nWhich of the statements below is TRUE after the program is executed ?', NULL, 'Memory location 1000 has value 20', 'Memory location 1020 has value 20', 'Memory location 1021 has value 20', 'Memory location 1001 has value 20', '', 'optiond', 'MC'),
(874, 20, 'level_m', 'A cache line is 64 bytes. The main memory has latency 32ns and bandwidth 1G.Bytes/s. The time required to fetch the entire cache line from the main memory is', NULL, '32 ns', '64 ns', '96 ns', '128 ns', '', 'optionc', 'MC'),
(875, 20, 'level_m', 'A computer system has a level-1 instruction cache (1-cache), a level-1 data cache (D-cache) and a level-2 cache (L2-cache) with the following specifications:\r\n\r\nThe length of the physical address of a word in the main memory is 30 bits. The capacity of the tag memory in the I-cache, D-cache and L2-cache is, respectively,', '1391703869.jpeg', '1 K x 18-bit, 1 K x 19-bit, 4 K x 16-bit', '1 K x 16-bit, 1 K x 19-bit, 4 K x 18-bit', '1 K x 16-bit, 512 x 18-bit, 1 K x 16-bit', '1 K x 18-bit, 512 x 18-bit, 1 K x 18-bit', '', 'optiona', 'MC'),
(876, 20, 'level_m', 'Which of the following is the correct decomposition of the directed graph given below into its strongly connected components?', '1391703962.jpeg', '{P, Q, R, S}, {T}, {U}, {V}', '{P,Q, R, S, T, V}, {U}', '{P, Q, S, T, V}, {R}, {U}', '{P, Q, R, S, T, U, V}', '', 'optionb', 'MC'),
(877, 20, 'level_m', 'Consider the depth-first-search of an undirected graph with 3 vertices P, Q, and R. Let discovery time d(u) represent the time instant when the vertex u is first visited, and finish time f(u) represent the time instant when the vertex u is last visited. Given that \r\n d(P) = 5 units	 f(P) = 12 units\r\n d(Q) = 6 units	 f(Q) = 10 units\r\n d(R) = 14 unit	 f(R) = 18 units\r\nwhich one of the following statements is TRUE about the graph', NULL, 'There is only one connected component', 'There are two connected components, and P and R are connected', 'There are two connected components, and Q and R are connected', 'There are two connected components, and P and Q are connected', '', 'optiond', 'MC'),
(878, 20, 'level_m', 'The characters a to h have the set of frequencies based on the first 8 Fibonacci numbers as follows \r\na : 1, b : 1, c : 2, d : 3, e : 5, f : 8, g : 13, h : 21 \r\nA Huffman code is used to represent the characters. What is the sequence of characters corresponding to the following code? \r\n110111100111010', NULL, 'fdheg', 'ecgdf', 'dchfg', 'fehdg', '', 'optiona', 'MC'),
(879, 20, 'level_m', 'Which one of the choices given below would be printed when the following program is executed? \r\n#include &lt;stdio.h&gt; \r\nvoid swap (int *x, int *y) \r\n{\r\n                 static int *temp; \r\n                 temp = x; \r\n                 x = y; \r\n                 y = temp; \r\n}\r\nvoid printab ( )\r\n{\r\n                 static int i, a = -3, b = -6; \r\n                 i = 0; \r\n                 while (i &lt; = 4) \r\n                 {\r\n                 if ((i++)%2 = = 1) continue;\r\n                 a = a + i;\r\n                 b = b + i; \r\n}\r\nswap (&amp;a, &amp;b); \r\nprintf(&quot;a =  %d, b = %d\\n&quot;, a, b); \r\n} \r\nmain( )\r\n{ \r\n                        printab( );\r\n                        printab( );\r\n}', NULL, 'a = 0, b = 3\r\na = 0, b = 3', 'a = 3, b = 0\r\na = 12, b = 9', 'a = 3, b = 6\r\na = 3, b = 6', 'a = 6, b = 3\r\na = 15, b = 12\r\n', '', 'optiond', 'MC'),
(880, 20, 'level_m', 'Which one of the choices given below would be printed when the following program is executed?         \r\n#include &lt;stdio.h&gt; \r\nint a1[] = {6, 7, 8, 18, 34, 67}; \r\nint a2[] = {23, 56, 28, 29}; \r\nint a3[] = {-12, 27, -31}; \r\nint *x[] = {a1, a2, a3}; \r\nvoid print(int *a[])\r\n{\r\n            printf(&quot;%d,&quot;, a[0][2]); \r\n            printf(&quot;%d,&quot;, *a[2]); \r\n            printf(&quot;%d,&quot;, *++a[0]); \r\n            printf(&quot;%d,&quot;, *(++a)[0]); \r\n            printf(&quot;%d\\n&quot;, a[-1][+1]); \r\n}\r\nmain( ) \r\n{\r\n             print(x);\r\n}', NULL, '8, -12, 7, 23, 8', '8, 8, 7, 23, 7', '-12, -12, 27, -31, 23', '-12, -12, 27, -31, 56', '', 'optiona', 'MC'),
(881, 20, 'level_m', '', '1391706642.jpeg', '(n = = 0) || (m = = 1)', '(n = = 0) &amp; &amp; (m = = 1)', '(n = = 0) || (m = = n)', '(n = = 0) &amp; &amp; (m = = n)', '', 'optionc', 'MC'),
(882, 20, 'level_m', '', '1391706731.jpeg', '11, 15, 9', '10, 15, 9', '11, 16, 10', '12, 17, 11', '', 'optionb', 'MC'),
(883, 20, 'level_m', 'Consider the solution to the bounded buffer producer/consumer problem by using general semaphores S, F, and E. The semaphore S is the mutual exclusion semaphore initialized to 1. The semaphore F corresponds to the number of free slots in the buffer and is initialized to N. The semaphore E corresponds to the number of elements in the buffer and is initialized to 0.\r\n\r\nWhich of the following interchange operations may result in a deadlock? \r\n(i)   Interchanging Wait (F) and Wait (S) in the Producer process \r\n(ii)  Interchanging Signal (S) and Signal (F) in the Consumer process\r\n', '1391706904.jpeg', 'I only', 'II only', 'Neither I nor II', 'Both I and II', '', 'optiona', 'MC'),
(884, 20, 'level_m', '', '1391707004.jpeg', 'P &lt; S &lt; T', 'S &lt; P &lt; T', 'S &lt; T &lt; P', 'T &lt; S &lt; P', '', 'optionb', 'MC'),
(885, 20, 'level_m', '', '1391707090.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(886, 20, 'level_m', 'Consider a relation R with five attributes V, W, X, Y, and Z. The following functional dependencies hold : VY→ W, WX → Z, and ZY → V. Which of the following is a candidate key for R?', NULL, 'VXZ', 'VXY', 'VWXY', 'VWXYZ', '', 'optionb', 'MC'),
(887, 20, 'level_m', 'In a database file structure, the search key field is 9 bytes long, the block size is 512 bytes, a record pointer is 7 bytes and a block pointer is 6 bytes. The largest possible order of a non-leaf node in a B+ tree implementing this file structure is', NULL, '23', '24', '34', '44', '', 'optionb', 'MC'),
(888, 20, 'level_m', 'A router has two full-duplex Ethernet interfaces each operating at 100 Mb/s. Ethernet frames are at least 84 bytes long (including the Preamble and the Inter-Packet-Gap). The maximum packet processing time at the router for wirespeed forwarding to be possible is (in micro seconds)', NULL, '0.01', '3.36', '6.72', '8', '', 'optionc', 'MC'),
(889, 20, 'level_m', 'A router uses the following routing table:\r\n\r\n Destination 	 Mask   	        Interface \r\n 144.16.0.0	 255.255.0.0 	         eth0\r\n 144.16.64.0	 255.255.224.0 	         eth1\r\n 144.16.68.0	 255.255.255.0 	         eth2\r\n 144.16.68.64	 255.255.255.224	 eth3\r\n\r\nA packet bearing a destination address 144.16.68.117 arrives at the router. On which interface will it be forwarded?\r\n', NULL, 'eth0', 'eth1', 'eth2', 'eth3', '', 'optiona', 'MC'),
(890, 20, 'level_m', 'Suppose that it takes 1 unit of time to transmit a packet (of fixed size) on a communication link. The link layer uses a window flow control protocol with a window size of N packets. Each packet causes an ack or a nak to be generated by the receiver, and ack/nak transmission times are negligible. Further, the round trip time on the link is equal to N units. Consider time i &gt; N. If only acks have been received till time i(no naks), then the goodput evaluated at the transmitter at time i(in packets per unit time) is', '1391707610.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(891, 20, 'level_m', 'Common Data Questions: 47 &amp; 49\r\n \r\nAn array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0.\r\n\r\nThe index of the parent of element X [i], i ≠ 0, is', '1391707815.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(892, 20, 'level_m', 'An array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0.\r\n\r\nIf only the root node does not satisfy the heap property, the algorithm to convert the complete binary tree into a heap has the best asymptotic time complexity of\r\n', NULL, 'O (n)', 'O (log n', 'O (n log n)', 'O (n log log n)', '', 'optionb', 'MC'),
(893, 20, 'level_m', 'An array X of n distinct integers is interpreted as a complete binary tree. The index of the first element of the array is 0.\r\n\r\nIf the root node is at level 0, the level of element X[i], i ≠ 0, is', '1391707929.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(894, 20, 'level_m', 'Common Data Questions: 50 &amp; 51\r\n\r\nA pipelined processor uses a 4-stage instruction pipeline with the following stages: Instruction fetch (IF), Instruction decode (ID), Execute (EX) and Writeback (WB). The arithmetic operations as well as the load and store operations are carried out in the EX stage. The sequence of instructions corresponding to the statement X = (S - R * (P + Q))/T is given below. The values of variables P, Q, R, S and T are available in the registers R0, R1, R2, R3 and R4 respectively, before the execution of the instruction sequence.\r\n ADD	 R5, R0, R1	 ; R5 → R0 + R1\r\n MUL	 R6, R2, R5	 ; R6 → R2 * R5\r\n SUB	 R5, R3, R6	 ; R5 → R3 - R6\r\n DIV	 R6, R5, R4	 ; R6 → R5/R4\r\n STORE	 R6, X	         ; X  ← R6\r\n\r\nThe number of Read-After-Write (RAW) dependencies, Write-After-Read( WAR) dependencies, and Write-After-Write (WAW) dependencies in the sequence of instructions are, respectively,\r\n', NULL, '2, 2, 4', '3, 2, 3', '4, 2, 2', '3, 3, 2', '', 'optionc', 'MC'),
(895, 20, 'level_m', 'A pipelined processor uses a 4-stage instruction pipeline with the following stages: Instruction fetch (IF), Instruction decode (ID), Execute (EX) and Writeback (WB). The arithmetic operations as well as the load and store operations are carried out in the EX stage. The sequence of instructions corresponding to the statement X = (S - R * (P + Q))/T is given below. The values of variables P, Q, R, S and T are available in the registers R0, R1, R2, R3 and R4 respectively, before the execution of the instruction sequence.\r\n ADD	 R5, R0, R1	 ; R5 → R0 + R1\r\n MUL	 R6, R2, R5	 ; R6 → R2 * R5\r\n SUB	 R5, R3, R6	 ; R5 → R3 - R6\r\n DIV	 R6, R5, R4	 ; R6 → R5/R4\r\n STORE	 R6, X	         ; X  ← R6\r\n\r\nThe IF, ID and WB stages take 1 clock cycle each. The EX stage takes 1 clock cycle each for the ADD, SUB and STORE operations, and 3 clock cycles each for MUL and DIV operations. Operand forwarding from the EX stage to the ID stage is used. The number of clock cycles required to complete the sequence of instructions is', NULL, '10', '12', '14', '16', '', '', 'MC'),
(896, 20, 'level_m', 'Common Data Questions: 52 &amp; 53\r\n \r\n\r\n	', '1391708417.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(897, 20, 'level_m', '', '1391708468.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(898, 20, 'level_m', 'Statement for Linked Answer Questions: 54 &amp; 55\r\n\r\nConsider a database with three relation instances shown below. The primary keys for the Drivers and Cars relation are did and cid respectively and the records are stored in ascending order of these primary keys as given in the tables. No indexing is available in the database.\r\n\r\nWhat is the output of the following SQL query? \r\nselect D.dname \r\nfrom Drivers D \r\nwhere D.did in  ( \r\n                        select R.did \r\n                        from Cars C, Reserves R \r\n                        where R.cid = C.cid and C.colour = &#039;red&#039; \r\n                        intersect \r\n                        select R.did \r\n                        from Cars C, Reserves R \r\n                        where R.cid  = C.cid and C.colour = &#039;green&#039;\r\n                         )', '1391709205.jpeg', 'Karthikeyan, Boris', 'Sachin, Salman', 'Karthikeyan, Boris, Sachin', 'Schumacher, Senna', '', 'optiona', 'MC'),
(899, 20, 'level_m', 'Consider a database with three relation instances shown below. The primary keys for the Drivers and Cars relation are did and cid respectively and the records are stored in ascending order of these primary keys as given in the tables. No indexing is available in the database.\r\n\r\nLet n be the number of comparisons performed when the above SQL query is optimally executed. If linear search is used to locate a tuple in a relation using primary key, then n lies in the range', '1391709259.jpeg', '36 - 40', '44 - 48', '60 - 64', '100 - 104', '', 'optiond', 'MC');
INSERT INTO `subj_question` (`qnid_s`, `subid`, `level`, `question`, `figure`, `optiona`, `optionb`, `optionc`, `optiond`, `optione`, `correct`, `type`) VALUES
(900, 20, 'level_e', 'One Marks each(56-60)\r\n \r\nChoose the most appropriate word from the options given below to the complete\r\nthe following sentence:\r\nThere is an essential ______________ in human gestures, and when someone raises his palms of his hands together, we do not know whether it is to bury himself in prayer or to throw himself into the sea.', NULL, 'economy      ', 'dignity	      ', 'insincerity       ', 'reverence       ', 'ambiguity', 'optione', 'MC'),
(901, 20, 'level_e', 'Which of the following options is closest in meaning to the word Eccentric', NULL, 'unclear	      ', 'irregular	        ', 'clever	    ', 'ascetic', '', 'optionb', 'MC'),
(902, 20, 'level_e', 'Choose the most appropriate word from the options given below to the complete\r\nthe following sentence:\r\nNormally an individual thunderstorm lasts about 45 minutes, but under certain conditions the storm may __________, becoming even more severe, for as long as four hours.', NULL, 'Wane	', 'vacillate	', 'persist	', 'moderate', '', 'optionc', 'MC'),
(903, 20, 'level_e', 'Infallible : Error', NULL, 'irreversible : cure', 'invulnerable : emotion ', 'impeccable : flaw ', 'intolerable : defect', '', 'optionc', 'MC'),
(904, 20, 'level_e', 'A train 360 m long is running at speed of 45km/hr. in what time will it pass a bridge 140 m long?		', NULL, '40', '42  ', '45  ', '48', '  ', 'optiona', 'MC'),
(905, 20, 'level_m', '2 Marks each (61-65)\r\nRead the following information carefully and answer the questions 61 and 62:\r\n\r\n(A)Gopal is shorter than Ashok but taller than Kunal.\r\n(B)Navin is shorter than Kunal.\r\n(C)Jayesh is taller than Navin.\r\n(D)Ashok is taller than Jayesh.\r\n\r\nWho among them is the tallest?', NULL, 'Gopal ', 'Ashok ', 'Kunal ', 'Navin ', 'Jayesh', 'optionb', 'MC'),
(906, 20, 'level_m', 'Two pipes A and B can fill a tank in 15 minutes and 20 minutes respectively. Both the pipes are opened together but after 4 minutes, pipe A is turned off. What is the total time required to fill the tank?', NULL, '10 min 20 sec', '11 min 45 sec', '12 min 30 sec', '14 min 40 sec', ' ', 'optiond', 'MC'),
(907, 20, 'level_m', 'P can complete a work in 12 days working 8 hours a day. Q can complete the same work in 8 days working 10 hours a day. If both P and Q work together, working 8 hours a day, in how many days can they complete the work? 	', NULL, '60/11', '61/11  ', '71/11 ', '72/11', ' ', 'optiona', 'MC'),
(908, 20, 'level_m', 'Scientists’ pristine reputation as devotees of the disinterested pursuit of truth gets compromised every now and then by evidence that some scientists have deliberately fabricated experimental results to further their own careers. And this, along with their repeated failures at finding answers to some of the most basic questions of human existence, like the origin of the Universe should strike a chord with the intellectuals, and they should stop putting blind faith in the scientists in exchange for getting  cheap toys.\r\nWhich of the following statements best sums up the above passage:\r\n', NULL, 'The faith of intellectuals in scientists is justified.', 'Scientists are limited, untrustworthy and unintelligent, so the intellectuals should question them.', 'Scientists are simply after unfolding the bare truth to enlighten the world.', 'The scientists give so many useful gifts to intellectuals.', '', 'optionb', 'MC'),
(909, 20, 'level_m', 'How many 3-digit numbers can be formed from the digits 2, 3, 5, 6, 7 and 9, which are divisible by 5 and none of the digits is repeated? ', NULL, '5', '10', '15', '20', '', 'optiond', 'MC'),
(910, 21, 'level_m', 'Q. 26 – Q. 55 carry two marks each. \r\n\r\nLet f be a function from a set A to a set B, g a function from B to C, and h a function from A to C, such that h(a) = g(f (a))for all a ε A. Which of the following statements is always true for all such functions f and g?\r\n', NULL, 'g is onto =&gt; h is onto', 'h is onto =&gt;  f is onto', 'h is onto =&gt; g is onto', 'h is onto =&gt; f and g are onto', '', 'optionc', 'MC'),
(911, 21, 'level_m', '', '1392653877.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(912, 21, 'level_m', 'An unbiased coin is tossed repeatedly until the outcome of two successive tosses is the same. Assuming that the trials are independent, the expected number of tosses is:\r\n', NULL, '3', '4', '5', '6', '', '', 'MC'),
(913, 21, 'level_m', '', '1392654261.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(914, 21, 'level_m', '', '1392654363.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(915, 21, 'level_m', '', '1392654683.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(916, 21, 'level_m', 'Let P be a non-deterministic pushdown automaton (NPDA) with exactly one state, q, and exactly one symbol, Z, in its stack alphabet. State q is both the starting as well as the accepting state of the PDA. The stack is initialized with one Z before the start of the operation of the PDA. Let the input alphabet of the PDA be ∑. Let L(P) be the language accepted by the PDA by reading a string and reaching its accepting state. Let N(P) be the language accepted by the PDA by reading a string and emptying its stack.\r\nWhich of the following statements is TRUE?', NULL, 'L(P) is necessarily ∑*but N(P) is not necessarily ∑*', 'N(P) is necessarily ∑* but L(P) is not necessarily ∑*', 'Both L(P) and N(P) is necessarily ∑*', 'Neither L(P) nor N(P) are necessarily ∑*', '', 'optiond', 'MC'),
(917, 21, 'level_m', 'Consider the regular grammar:\r\nS –&gt; Xa | Ya\r\nX —&gt;Za\r\nZ —&gt; Sa | B\r\nY —&gt; Wa\r\nW —&gt; Sa\r\nWhere S is the starting symbol, the set of terminals is {a} and the set of nonterminals\r\nis {S,W,X,Y,Z}.\r\nWe wish to construct a deterministic finite automaton (DFA) to recognize the same language.\r\nWhat is the minimum number of states required for the DFA?\r\n', NULL, '', '', '', '', '', 'optionc', 'MC'),
(918, 21, 'level_m', 'Given below is a program which when executed spawns two concurrent processes:\r\nSemaphore X:=0;\r\n1* Process now forks into concurrent processes P1 &amp; P2 *1\r\nP1 : repeat forever P2 : repeat forever\r\nV(X); P(X);\r\nCompute; Compute;\r\nP(X); V(X);\r\nConsider the following statements about processes P1 and P2:\r\nI: It is possible for process P1 to starve.\r\nII. It is possible for process P2 to starve.\r\nWhich of the following holds?', NULL, 'Both I and II are true', 'I is true but II is false', 'II is true but I is false', 'Both I and II are false', '', 'optiond', 'MC'),
(919, 21, 'level_m', 'Two concurrent processes P1 and P2 use four shared resources R1, R2, R3 and R4, as shown below.\r\n   P1:              P2:\r\nCompute;          Compute;\r\nUse R1;           Use R1;\r\nUse R2;           Use R2;\r\nUse R3;           Use R3;\r\nUse R4;           Use R4;\r\nBoth processes are started at the same time, and each resource an be accessed by only one process at a time. The following scheduling constraints exist between the access of resources by the processes:\r\nP2 must complete use of Ri before P1 gets access to R1.\r\nP1 must complete use of R2 before P2 gets access to R2.\r\nP2 must complete use of R3 before P1 gets access to R3.\r\nP1 must complete use of R4 before P2 gets access to R4.\r\nThere are no other scheduling constraints between the processes. If only binary semaphores are used to enforce the above scheduling constraints, what is the minimum number of binary semaphores needed?\r\n', NULL, '1', '2', '3', '4', '', 'optionb', 'MC'),
(920, 21, 'level_m', '', '1392656531.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(921, 21, 'level_m', 'A hardwired CPU uses 10 control signals S1 to S10 in various time steps T1 to T5 to\r\nimplement 4 instructions I1 to I4 as shown below.\r\n\r\nWhich of the following pairs of expressions represent the circuit for generating control signals\r\nS5 and S10 respectively [(Ij+Ik)Tn indicates that the control signal should be generated in time\r\nstep Tn if the instruction being executed is Ij or Ik].\r\n	', '1392657762.jpeg', 'S5 =T1 + I2 .T3 &amp; S10 = (I1 + I3) .T4+ (I2 + I4) .T5', 'S5 = T1 + (I2 + I4) . T3 &amp; S10 = (I1 + I3) . T4 + (I2 + I4) . T5 ', 'S5 =T1 + (I2 + I4) .T3 &amp; S10 = (I2 + I3 + I4) .T2 + (I1 + I3) .T4+ (I2 + I4). T5 ', 'S5 = T1 + (I2 + I4) . T3 &amp; S10 = (I2 + I3) . T2 + I4. T3 +(I1 + I3) . T4 + (I2 + I4) . T5', ' ', 'optiond', 'MC'),
(922, 21, 'level_m', 'A line L in a circuit is said to have a stuck-at-0 fault if the lien permanently has a logic value 0. Similarly a line L in a circuit is said to have a stuck-at-1 fault if the line permanently has a logic value 1. a circuit is said to have a multiple stuck at fault if one or more lines have stuck at faults. The total number of distinct multiple stuck at faults possible in a circuit with N lines is:', '1392657713.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(923, 21, 'level_m', 'An instruction set of a processor has 125 signals which can be divided into 5 groups of mutually exclusive signals as follows:\r\nGroup 1: 20 signals, \r\nGroup 2: 70 signals, \r\nGroup 3: 2 signals, \r\nGroup 4: 10 signals, \r\nGroup 5: 23 signals.\r\nHow many bits of the control words can be saved by using vertical microprogramming over horizontal microprogramming?', NULL, '0', '103', '22', '55', '', 'optionb', 'MC'),
(924, 21, 'level_m', 'In a binary tree, for every node the difference between the number of nodes in the left and right subtrees is at most 2. If the height of the tree is h &gt; 0, then the minimum number of nodes in the tree is:', '1392658023.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(925, 21, 'level_m', 'Let G be a weighted undirected graph and e be an edge with maximum weight in G.\r\nSuppose there is a minimum weight spanning tree in G containing the edge e. Which of the following statements is always TRUE?', NULL, 'There exists a cutest in G having all edges of maximum weight', 'There exits a cycle in G having all edges of maximum weight', 'Edge e cannot be contained in a cycle', 'All edges in G have the same weight', '', 'optiona', 'MC'),
(926, 21, 'level_m', 'The following C function takes two ASCII strings and determines whether one is an anagram of the other. An anagram of a string s is a string obtained by permuting the letters in s.\r\nint anagram (char *a, char *b){\r\nint count [128],1;\r\nfor (j = 0; j &lt; 128; j++) count[j]=0;\r\nj = 0;\r\nwhile (a[j] &amp;&amp; b[j]){\r\nA;\r\nB;\r\n}\r\nfor (j = 0; j &lt; 128; j++) if (count[j]) return 0;\r\nreturn 1;\r\n}\r\nChoose the correct alternative for statements A and B.', NULL, 'A: count [a[j]]++ and B: count[b[j]]--', 'A: count [a[j]]++ and B: count[b[j]]++', 'A: count[a[j++]]++ and B: count[b[j]--', 'A: count[a[j]]++ and B: count[b[j++]]--', '', 'optiond', 'MC'),
(927, 21, 'level_m', 'The following C function takes a singly-linked list of integers as a parameter and rearranges the elements of the list. The list is represented as pointer to a structure. The function is called with the list containing the integers 1, 2, 3, 4, 5, 6, 7 in the given order. What will be the contents of the list after the function completes execution?\r\n\r\nstruct node (mt value; struct node * next;};\r\nvoid rearrange (struct node *list) {\r\nstruct node *p, *q;\r\nint temp;\r\nif (!list || list --&gt; next) return;\r\np = list; q = list --&gt; next;\r\nwhile (q) {\r\ntemp = p --&gt; value;\r\np --&gt; value = q --&gt; value;\r\nq --&gt; value = temp;\r\np = q --&gt; next; \r\nq = p? p --&gt; next; 0; \r\n}\r\n}\r\n', NULL, '1, 2, 3, 4, 5, 6, 7', '2, 1, 4, 3, 6, 5, 7', '1, 3, 2, 5, 4, 7, 6', '2, 3, 4, 5, 6, 7, 1', '', 'optionb', 'MC'),
(928, 21, 'level_m', 'Let a and b be two sorted arrays containing n integers each, in non-decreasing order. Let c be a sorted array containing 2n integers obtained by merging the two arrays a and b. assuming the arrays are indexed starting from 0, consider the following four statements(in fig.).\r\n\r\nWhich of the following is TRUE?', '1392659077.jpeg', 'only I and II', 'only I and IV', 'only II and III', 'only III and IV', '', 'optionc', 'MC'),
(929, 21, 'level_m', 'Consider a 2-way set associative cache memory with 4 sets and total 8 cache blocks (0-7) and a main memory with 128 blocks (0-127). What memory blocks will be present in the cache after the following sequence of memory block references if LRU policy is used for cache block replacement? Assuming that initially the cache did not have any memory block from the current job?\r\n0 5 3 9 7 0 16 55', NULL, ') \r\n0 3 5 7 16 55', '0 3 5 7 9 16 55', '0 5 7 9 16 55', '3 5 7 9 16 55', '', 'optionc', 'MC'),
(930, 21, 'level_m', '', '1392659719.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(931, 21, 'level_m', 'In a computer system, four files of size 11050 bytes, 4990 bytes, 5170 bytes and 12640 bytes need to be stored. For storing these files on disk, we can use either 100 byte disk blocks or 200 byte disk blocks (but can’t mix block sizes). For each block used to store a file, 4 bytes of bookkeeping information also needs to be stored on the disk. Thus,the total space used to store a file is the sum of the space taken to store the file and the space taken to store the bookkeeping information for the blocks allocated for storing the file. A disk block can store either bookkeeping information for a file or data from a file, but not both. What is the total space required for storing the files using 100 byte disk blocks and 200 byte disk blocks respectively?', NULL, '35400 and 35800 bytes', '35800 and 35400 bytes', '35600 and 35400 bytes', '35400 and 35600 bytes', '', 'optionc', 'MC'),
(932, 21, 'level_m', 'A company maintains records of sales made by its salespersons and pays them commission based on each individual’s total sales made in a year. This data is maintained in a table with following schema:\r\nsalesinfo = (salespersonid, totalsales, commission)\r\nIn a certain year, due to better business results, the company decides to further reward its salespersons by enhancing the commission paid to them as per the following formula.\r\nIf commission &lt; = 50000, enhance it by 2%\r\nIf 50000 &lt; commission &lt; = 100000, enhance it by 4%\r\nIf commission &gt; 100000, enhance it by 6%\r\nThe IT staff has written three different SQL scripts to calculate enhancement for each slab, each of these scripts is to run as a separate transaction as follows:\r\nT1 Update salesinfo\r\nSet commission = commission * 1.02\r\nWhere commission &lt; = 50000;\r\nT2 Update salesinfo\r\nSet commission = commission * 1.04\r\nWhere commission &gt; 50000 and commission is &lt;= 100000;\r\nT3 Update salesinfo\r\nSet commission = commission * 1.06\r\nWhere commission &gt; 100000;\r\nWhich of the following options of running these transactions will update the commission of all salespersons correctly?\r\n', NULL, 'Execute T1 followed by T2 followed by T3', 'Execute T2, followed by T3; T1 running concurrently throughout', 'Execute T3 followed by T2; T1 running concurrently throughout', 'Execute T3 followed by T2 followed by T1', '', 'optiond', 'MC'),
(933, 21, 'level_m', 'A table ‘student’ with schema (roll, name, hostel, marks) and another table ‘hobby’ with schema (roll, hobbyname) contains records as shown below.\r\n\r\nThe following SQL query is executed on the above tables:\r\nselect hostel\r\nfrom student natural join hobby\r\nwhere marks &gt; = 75 and roll between 2000 and 3000;\r\nRelations S and H with the same schema as those of these two tables respectively contain the same information as tuples. A new relation S’ is obtained by the following relational algebra operation (in Fig 2):	\r\n\r\nThe difference between the number of rows output by the SQL statement and the number of tuples in S’ is:			', '1392661179.jpeg', '6', '4 ', '2  ', '0', '    ', 'optionb', 'MC'),
(934, 21, 'level_m', 'A company maintains records of sales made by its salespersons and pays them commission based on In a schema with attributes A, B, C, D and E following set of functional dependencies are given.\r\nAB\r\nA--&gt;C\r\nCD--&gt;E\r\nB--&gt;D\r\nE--&gt;A\r\nWhich of the following functional dependencies is NOT implied by the above set?', NULL, 'CD --&gt; AC', 'BD --&gt; CD', 'BC --&gt; CD', 'AC --&gt; BC', '', 'optionb', 'MC'),
(935, 21, 'level_m', 'On a TCP connection, current congestion window size is Congestion Window = 4 KB. The window size advertised by the received is Advertise Window = 6 KB. The last byte sent by the sender is LastByteSent = 10240 and the last byte acknowledged by the receiver is LastByteAcked = 8192. The current window size at the sender is:', NULL, '2048 bytes', '4096 bytes', '6144 bytes', '8192 bytes', '', 'optionb', 'MC'),
(936, 21, 'level_m', 'In a TDM medium access control bus LAN, each station is assigned one time slot per cycle for transmission. Assume that the length of each time slot is the time to transmit 100 bits plus the end-to-end propagation delay. Assume a propagation speed of 2x10^8 m/sec (please see figure below). The length of the LAN is 1 km with a bandwidth of 10 Mbps. The maximum number of stations that can be allowed in the LAN so that the throughput of each station can be 2/3 Mbps is:', '1392661824.jpeg', '3', '5', '10', '20', '', 'optionc', 'MC'),
(937, 21, 'level_m', 'A company has a class C network address of 204.204.204.0. It wishes to have three subnets, one with 100 hosts and two with 50 hosts each. Which one of the following options represents a feasible set of subnet address/subnet mask pairs?\r\n(A) 204.204.204.128/255.255.255.192\r\n    204.204.204.0/255.255.255.128\r\n    204.204.204.64/255.255.255.128\r\n(B) 204.204.204.0/255.255.255.192\r\n    204.204.204.192/255.255.255.128\r\n    204.204.204.64/255.255.255.128\r\n(C) 204.204.204.128/255.255.255.128\r\n    204.204.204.192/255.255.255.192\r\n    204.204.204.224/255.255.255.192\r\n(D) 204.204.204.128/255.255.255.128\r\n    204.204.204.64/255.255.255.192\r\n    204.204.204.0/255.255.255.192', NULL, '', '', '', '', '', 'optiond', 'MC'),
(938, 21, 'level_m', 'A sink in  a directed  graph is  a vertex  i, such  that there is  an edge  from  every vertex \r\nj != i  to  i  and there  is no edge  from  i  to  any other &#039;vertex&#039;. A directed graph G with n vertices is represented by its adjacency matrix a, where A[i][j] = 1 if there is an edge directed from vertex i to j and 0 otherwise. The following algorithm determines whether there is a sink in the graph G.\r\n	', '1392663240.jpeg', '', ' ', ' ', '', ' ', 'optionc', 'MC'),
(939, 21, 'level_m', 'A sink in  a directed  graph is  a vertex  i, such  that there is  an edge  from  every vertex \r\nj != i  to  i  and there  is no edge  from  i  to  any other &#039;vertex&#039;. A directed graph G with n vertices is represented by its adjacency matrix a, where A[i][j] = 1 if there is an edge directed from vertex i to j and 0 otherwise. The following algorithm determines whether there is a sink in the graph G.', '1392663465.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(940, 21, 'level_m', 'Q. 61 to Q. 65 carry two marks each\r\n\r\nIf (2y+1)/(y+2) &lt; 1, then which of the following alternatives gives the CORRECT range of y? ', NULL, '- 2 &lt; y &lt; 2 ', '- 2 &lt; y &lt; 1  ', '- 3 &lt; y &lt; 1  ', '- 4 &lt; y &lt; 1', '', 'optionb', 'MC'),
(941, 21, 'level_m', 'A student attempted to solve a quadratic equation in  x twice. However, in the first attempt, he incorrectly wrote the constant term and ended up with the roots as (4, 3). In the second attempt, he incorrectly wrote down the coefficient of  x and got the roots as (3, 2). Based on the above information, the roots of the correct quadratic equation are:\r\n', NULL, '(-3, 4)  ', '(3, -4)  ', '(6, 1)  ', '(4, 2)', '', 'optionc', 'MC'),
(942, 21, 'level_m', 'L, M and N are waiting in a queue meant for children to enter the zoo. There are 5 children between  L and M, and 8 children between M and N. If there are 3 children ahead of N and 21 children behind L, then what is the minimum number of children in the queue? ', NULL, '28', '27', '41', '4', '', 'optiona', 'MC'),
(943, 21, 'level_m', 'Nimbus clouds are dark and ragged, stratus clouds appear dull in colour and cover the entire sky. Cirrus clouds are thin and delicate, whereas cumulus clouds look like cotton balls. It can be inferred from the passage that', NULL, 'A cumulus cloud on the ground is called fog ', 'It is easy to predict the weather by studying clouds   ', 'Clouds are generally of very different shapes, sizes and mass ', 'There are four basic cloud types: stratus, nimbus, cumulus and cirrus', '', 'optionc', 'MC'),
(944, 21, 'level_m', 'Four archers P, Q, R and S try to hit a bull’s eye during a tournament consisting of seven rounds. As illustrated in the figure 1 below, a player receives 10 points for hitting the bulls’ eye, 5 points for  hitting within the inner circle and 1 point for hitting within the outer circle.\r\n\r\nThe final scores received by the players during the tournament are listed in the figure 2 below.\r\n\r\nThe most accurate and the most consistent players during the tournament are respectively ', '1392663976.jpeg', 'P and S', 'Q and R ', 'Q and Q', 'R and Q', '', 'optionb', 'MC'),
(945, 21, 'level_e', 'Q.1 — Q.25 Carry One Mark Each\r\n\r\nA bag contains 10 blue marbles, 20 green marbles and 30 red marbles. A marble is drawn from the bag, its colour recorded and it is put back in the bag. This process is repeated 3 times. The probability that no two of the marbles drawn have the same colour is', NULL, '1/36', '1/6', '1/4', '1/3', '', 'optionb', 'MC'),
(946, 21, 'level_e', '', '1392664750.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(947, 21, 'level_e', '', '1392664903.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(948, 21, 'level_e', '', '1392664938.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(949, 21, 'level_e', 'Which of the following statements is TRUE about the regular expression 01*0?', NULL, 'It represents a finite set of finite strings.', 'It represents an infinite set of finite strings.', 'It represents a finite set of infinite strings.', 'It represents an infinite set of infinite strings.', '', 'optionb', 'MC'),
(950, 21, 'level_e', '', '1392665052.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(951, 21, 'level_e', '', '1392665085.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(952, 21, 'level_e', 'Using Booth’s algorithm for multiplication, the multiplier — 57 will be recorded as', NULL, ' 0 —1 0 0 1 0 0 -1', '0 -1 0 0 1 0 0 0', '1 1 0 0 0 1 1 1', '0 1 0 0 -1 0 0 1', '', 'optiona', 'MC'),
(953, 21, 'level_e', 'A dynamic RAM has a memory cycle time of 64 nsec. It has to be refreshed 100 times per msec and each refresh takes 100 nsec. What percentage of the memory cycle time is used for refreshing?', NULL, '10', '6.4', 'lemda', '0.64', '', 'optionc', 'MC'),
(954, 21, 'level_e', '', '1392665380.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(955, 21, 'level_e', 'How many pulses are needed to change the contents of a 8 bit up-counter from 10101100\r\nto 00100111 (rightmost bit is the LSB)?', NULL, '134', '133', '124', '123', '', 'optiond', 'MC'),
(956, 21, 'level_e', 'The numbers 1, 2, n are inserted in a binary search tree in some order. In the resulting\r\ntree, the right subtree of the root contains p nodes. The first number to be inserted in the tree\r\nmust be', NULL, 'p', 'p + 1', 'n - p', 'n — p + 1', '', 'optionc', 'MC'),
(957, 21, 'level_e', '', '1392665564.jpeg', '0', '4', '3', '2', '', 'optionc', 'MC'),
(958, 21, 'level_e', 'In a depth first traversal of a graph G with n vertices, k edges are marked as tree edges.\r\nThe number of connected components in G is', NULL, 'k', 'k + 1', 'n — k - 1', 'n - k', '', 'optiond', 'MC'),
(959, 21, 'level_e', '', '1392665666.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(960, 21, 'level_e', 'A hash table contains 10 buckets and uses linear probing to resolve collisions. The key values are integers and the hash function used is key 0i’o 10. if the values 43, 165, 62, 123, 142 are inserted in the table, in what location would the key value 142 be inserted?', NULL, '2', '3', '4', '6', '', 'optiond', 'MC'),
(961, 21, 'level_e', 'The Function Point (FP) calculated for a software project are often used to obtain an estimate of Lines of Code (LOC) required for that project. Which of the following statements if FALSE in this context.', NULL, 'The relationship between FP and LOC depends on the programming language used to implement the software.', 'LOC requirement for an assembly language implementation will be more for a given FP value, than LOC for implementation in COBOL.', 'On an average, one LOC of C++ provides approximately 1.6 times the functionality of a single LOC of FORTRAN.', 'FP and LOC are not related to each other.', '', 'optiond', 'MC'),
(962, 21, 'level_e', 'Consider the entities ‘hotel room’, and ‘person’ with a many to many relationship ‘lodging’\r\nas shown below:\r\nHotel Room Person\r\nIf we wish to store information about the rent payment to be made by person(s) occupying different hotel rooms, then this information should appear as an attribute of', '1392665972.jpeg', 'Person', 'Hotel Room', 'Lodging', 'None of these', '', 'optionc', 'MC'),
(963, 21, 'level_e', 'A table has fields Fl, F2, F3, F4, F5 with the following functional dependencies\r\nFl - F3 F2 - F4 (F1.F2) - F5\r\nIn terms of Normalization, this table is in', NULL, '1 NF', '2 NF', '3 NF', 'None of these', '', 'optiona', 'MC'),
(964, 21, 'level_e', 'A B-tree used as an index for a large database table has four levels including the root node. If a new key is inserted in this index, then the maximum number of nodes that could be newly created in the process are', NULL, '5', '4', '3', '2', '', 'optiona', 'MC'),
(965, 21, 'level_e', 'Amongst the ACID properties of a transaction, the ‘Durability’ property requires that the changes made to the database by a successful transaction persist', NULL, 'except in case of an Operating System crash', 'except in case of Disk crash', 'except in case of a power failure', 'always, even if there is a failure of any kind', '', 'optiond', 'MC'),
(966, 21, 'level_e', 'Which of the following statements is TRUE about CSMA/CD', NULL, 'IEEE 802.11 wireless LAN runs CSMA/CD protocol', 'Ethernet is not based on CSMA/CD protocol', 'CSMA/CD is not suitable for a high propagation delay network like statellite network.', 'There is no contention in a CSMA/CD network', '', 'optionc', 'MC'),
(967, 21, 'level_e', 'Which of the following statements is FALSE regarding a bridge', NULL, 'Bridge is a layer 2 device', 'Bridge reduces collision domain', 'Bridge is used to connect two or more LAN segments', 'Bridge reduces broadcast domain', '', 'optiond', 'MC'),
(968, 21, 'level_e', 'Count to infinity is a problem associated with', NULL, 'link state routing protocol', 'distance vector routing protocol', 'DNS while resolving host name', 'TCP for congestion control', '', 'optionb', 'MC'),
(969, 21, 'level_e', 'A HTML form is to be designed to enable purchase of office stationery. Required items are to be selected (checked). Credit card details are to be entered and then the submit button is to be pressed. Which one of the following options would be appropriate for sending the data to the server? Assume that security is handled in a way that is transparent to the form design.', NULL, 'only GET', 'only POST', 'either of GET or POST', 'neither gET not POST', '', 'optionb', 'MC'),
(970, 21, 'level_e', 'Q. 56 – Q. 60 carry one mark each. \r\n\r\nChoose the word from the options given below that is most nearly opposite in meaning to the given word: Deference ', NULL, 'aversion', 'resignation', 'suspicion', 'contempt', '', 'optiond', 'MC'),
(971, 21, 'level_e', 'Choose the most appropriate word(s) from the options: We lost confidence in him because he never __________ the grandiose promises he had made.  ', NULL, 'delivered', 'delivered on ', 'forgot', 'reneged on ', '', 'optiona', 'MC'),
(972, 21, 'level_e', '______________ in the frozen wastes of Arctic takes special equipment. \r\n', NULL, 'To survive', 'Surviving', 'Survival', 'That survival ', '', 'optionc', 'MC'),
(973, 21, 'level_e', 'In how many ways 3 scholarships can be awarded to 4 applicants, when each applicant can receive any number of scholarships? ', NULL, '4', '12', '64', '81', '', 'optionc', 'MC'),
(974, 21, 'level_e', 'The _________ of evidence was on the side of the plaintiff since all but one witness testified that his story was correct', NULL, 'paucity', 'propensity', 'preponderance', 'accuracy', '', 'optiona', 'MC'),
(975, 22, 'level_e', 'Q. 1– Q. 25 carry one mark each. ', '1392720223.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(976, 22, 'level_e', '', '1392720343.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(977, 22, 'level_e', '', '1392720428.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(978, 22, 'level_e', '', '1392720603.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(979, 22, 'level_e', '', '1392720691.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(980, 22, 'level_e', '', '1392720786.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(981, 22, 'level_e', '', '1392720886.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(982, 22, 'level_e', '', '1392720966.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(983, 22, 'level_e', '', '1392721077.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(984, 22, 'level_e', '', '1392721141.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(985, 22, 'level_e', '', '1392721200.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(986, 22, 'level_e', '', '1392721253.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(987, 22, 'level_e', '', '1392721306.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(988, 22, 'level_e', '', '1392721366.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(989, 22, 'level_e', '', '1392721420.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(990, 22, 'level_e', '', '1392721472.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(991, 22, 'level_e', '', '1392721549.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(992, 22, 'level_e', '', '1392721635.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(993, 22, 'level_e', '', '1392721730.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(994, 22, 'level_e', '', '1392721882.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(995, 22, 'level_e', '', '1392721979.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(996, 22, 'level_e', '', '1392722073.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(997, 22, 'level_e', '', '1392722121.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(998, 22, 'level_e', '', '1392722167.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(999, 22, 'level_e', '', '1392722207.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1000, 22, 'level_e', 'Q. 56 – Q. 60 carry one mark each. \r\n\r\nThe environmentalists hope ________ the lake to its pristine condition. ', NULL, 'in restoring', 'in the restoration of', 'to restore', 'restoring ', '', 'optionc', 'MC'),
(1001, 22, 'level_e', 'Choose the word that is most nearly opposite in meaning to the given word: Polemical', NULL, 'imitative  ', 'conciliatory  ', 'truthful', 'ideological ', '', 'optionb', 'MC'),
(1002, 22, 'level_e', 'Despite the mixture’s ______ nature, we found that by lowering its temperature in the laboratory we could dramatically reduce its tendency to vaporize. ', NULL, 'acerbic  ', 'resilient  ', 'volatile   ', 'heterogeneous ', '', 'optionc', 'MC'),
(1003, 22, 'level_e', 'If m students require a total of m pages of stationery in m days, then 100 students will require 100 pages of stationery in', NULL, '100 days', 'm/100 days', '100/m days', 'm days ', '', 'optiond', 'MC'),
(1004, 22, 'level_e', 'Because she had a reputation for _________ we were surprised and pleased when she greeted us so _______. ', NULL, 'insolence …… irately ', 'insouciance …… curtly ', 'graciousness …… amiably  ', 'querulousness …… affably ', '', 'optiond', 'MC'),
(1005, 22, 'level_m', 'Q. 26 to Q. 55 carry two marks each\r\n', '1392722528.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1006, 22, 'level_m', '', '1392722845.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1007, 22, 'level_m', '', '1392722905.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1008, 22, 'level_m', '', '1392722986.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1009, 22, 'level_m', '', '1392723042.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1010, 22, 'level_m', '', '1392723138.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1011, 22, 'level_m', '', '1392723190.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1012, 22, 'level_m', '', '1392723244.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1013, 22, 'level_m', '', '1392723289.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1014, 22, 'level_m', '', '1392723331.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1015, 22, 'level_m', '', '1392723968.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1016, 22, 'level_m', '', '1392724033.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1017, 22, 'level_m', '', '1392724089.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1018, 22, 'level_m', '', '1392724137.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1019, 22, 'level_m', '', '1392724542.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1020, 22, 'level_m', '', '1392724677.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1021, 22, 'level_m', '', '1392724751.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1022, 22, 'level_m', '', '1392724827.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1023, 22, 'level_m', 'Consider  the  following  C  program  which  is supposed  to  compute the  transpose  of a given 4 x 4  matrix  M.  Note  that,  there is  an  X in  the program  which  indicates  some  missing statements.  Choose  the  correct  option  to  replace\r\nX in the  program.', '1392725403.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1024, 22, 'level_m', '', '1392739723.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1025, 22, 'level_m', '', '1392739803.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1026, 22, 'level_m', '', '1392739857.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1027, 22, 'level_m', '', '1392739975.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1028, 22, 'level_m', '', '1392740030.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1029, 22, 'level_m', '', '1392740273.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1030, 22, 'level_m', '', '1392740341.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1031, 22, 'level_m', '', '1392740554.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1032, 22, 'level_m', '', '1392740835.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1033, 22, 'level_m', '', '1392740909.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1034, 22, 'level_m', '', '1392741048.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1035, 22, 'level_m', 'Q. 61 to Q. 65 carry two marks each\r\n\r\nThe number of solutions for the following system of inequalities is \r\nX1 ≥ 0          X2 ≥ 0                 X1+ X2 ≤ 10                        2X1+ 2X2 ≥ 22', NULL, '0', 'infinite  ', '1', '2', '', 'optiona', 'MC'),
(1036, 22, 'level_m', 'In a class of 300 students in an M.Tech programme, each student is required to take at least one \r\nsubject from the following three:    \r\nM600: Advanced Engineering Mathematics \r\nC600: Computational Methods for Engineers       \r\nE600: Experimental Techniques for Engineers \r\nThe registration data for the M.Tech class shows that 100 students have taken M600, 200 students have taken C600, and 60 students  have taken E600. What is the maximum possible number of students in the class who have taken all the above three subjects? \r\n', NULL, '20', '30', '40', '50', '', 'optionb', 'MC'),
(1037, 22, 'level_m', 'Three sisters (R, S, and T) received a total of 24 toys during Christmas. The toys were initially divided among them in a certain proportion. Subsequently, R gave some toys to S which doubled the share of S. Then S in turn gave some of her toys to T, which doubled T’s share. Next, some of T’s toys were given to R, which doubled the number of toys that R currently had. As a result of all such exchanges, the three sisters were left with equal number of toys. How many toys did R have originally?\r\n', NULL, '8', '9', '11', '12', '', 'optionc', 'MC'),
(1038, 22, 'level_m', 'The quality of services delivered by a company consists of six factors as shown below in the radar diagram. The dots in the figure indicate the score for each factor on a scale of 0 to 10. The standardized coefficient for each factor is given in the parentheses. The contribution of each factor to the overall service quality is directly proportional to the factor score and its standardized coefficient.\r\n \r\nThe lowest contribution among all the above factors to the overall quality of services delivered by the company is', NULL, '10%', '20%', '24%', '40%', '', 'optiona', 'MC'),
(1039, 22, 'level_m', 'In order to develop to full potential, a baby needs to be physically able to respond to the environment. \r\nIt can be inferred from the passage that', NULL, 'Full physical potential is needed in order for a baby to be able to respond to the environment. ', 'It is necessary for a baby to be able to physically respond to the environment for it to develop its full potential.', 'Response to the environment of physically able babies needs to be developed to its full potential.', 'A physically able baby needs to develop its full potential in order to respond to its environment.', '', 'optionb', 'MC'),
(215, 7, 'level_m', 'From a vessel filled up with the pure spirit to the brim, two liters of spirit was removed and 2 liters of water was added. After the solution was mixed, 2 liters of the mixture was poured off and again 2 liters of water was added. The solution was stirred again and 2 liters of mixture was removed and 2 liters of water was added. As a result of above operation, the volume of water in the vessel was increased by 3 liters than the volume of spirit remaining in it. How many liters of spirit and water were there in vessel after the above procedure was carried out ?	', NULL, '0.7 liter of spirit and 3.7 liter of water', '1.5 liter of spirit and 4.5 liter of water ', '8.5 liter of spirit and 11.5 liter of water	 ', '0.5 liter of spirit and 3.5 liter of water', ' ', 'optiond', 'MC'),
(216, 7, 'level_m', 'Two men and a woman are entrusted with a task. The second man needs three hours more to cope with the job than the second man and woman need working together. The first man, working alone, would need as much time as the second man and the woman working together. The first man, working alone, would spend eight hours less than the double period of time the second man would spend working alone. How much time would the second man and woman need to complete the task if they all worked together?', NULL, '1 hour                     ', '3 hours                         ', '4 hours                                         ', '5 hours', '', 'optiona', 'MC'),
(217, 7, 'level_e', 'Aptitude: One Marks question (Q56-Q60)\r\n', '1387439856.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(218, 7, 'level_e', 'The question below consists of a pair of related words followed by four pairs of words. Select the pair that best expresses the relation in the original pair.\r\nFUEL:Pipes\r\n', NULL, 'Blood: Veins ', 'Food: Stomach ', 'Wood: Trees', 'Cars: Expressway', '', 'optiona', 'MC'),
(219, 7, 'level_e', 'The price of a pen and a pencil is Rs. 35. The pen was sold at 20% profit and pencil at 10% loss. If in the transaction, the main gains Rs. 4, the cost price of the pen is', NULL, 'Rs. 10        ', 'Rs. 25                         ', 'Rs. 20                              ', 'None of these', '', '', 'MC'),
(220, 7, 'level_e', 'At IIM Bangalore, 60% of the students are boys and rests are girls. Further 15% of boys and 7.5%  of the girls are getting a fee waiver. If the number of those getting a fee waiver is 90, find the total number of students getting 50% concession if it is given that 50% of those not getting a fee waiver are eligible to get half fee concession.', NULL, '360 ', '280', '320  ', '330   ', '350', 'optiond', 'MC'),
(286, 7, 'level_e', 'Which word gives the opposite meaning to heed?', NULL, 'Disregard          ', 'Evade ', 'Dense                               ', 'Hopeful', '', 'optiona', 'MC'),
(1040, 23, 'level_e', '', '1392916229.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1041, 23, 'level_e', '', '1392916398.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1042, 23, 'level_e', '', '1392916439.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1043, 23, 'level_e', '', '1392916509.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1044, 23, 'level_e', '', '1392916552.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1045, 23, 'level_e', '', '1392916594.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1046, 23, 'level_e', '', '1392916643.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1047, 23, 'level_e', '', '1392916674.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1048, 23, 'level_e', '', '1392916707.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1049, 23, 'level_e', '', '1392916756.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1050, 23, 'level_e', '', '1392916785.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1051, 23, 'level_e', '', '1392916850.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1052, 23, 'level_e', '', '1392916923.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1053, 23, 'level_e', '', '1392916972.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1054, 23, 'level_e', '', '1392917009.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1055, 23, 'level_e', '', '1392917151.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1056, 23, 'level_e', '', '1392917191.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1057, 23, 'level_e', '', '1392917253.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1058, 23, 'level_e', '', '1392917292.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1059, 23, 'level_e', '', '1392917324.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1060, 23, 'level_e', '', '1392917364.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1061, 23, 'level_e', '', '1392917412.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1062, 23, 'level_e', '', '1392917562.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1063, 23, 'level_e', '', '1392917603.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1064, 23, 'level_e', '\r\n', '1392917878.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1065, 23, 'level_e', 'Q56 - Q60 one mark each\r\n\r\nChoose the most appropriate alternative from the options given below to complete the following sentence:\r\nI ___ to have bought a diamond ring.', NULL, ' have a liking', 'should have liked', 'would like', 'may like', '', 'optionc', 'MC'),
(1066, 23, 'level_e', 'Choose the most appropriate alternative from the options given below to complete the following sentence:\r\nFood prices ___ again this month.', NULL, 'have raised', 'have been raising	', 'have been rising	', 'have arose', '', 'optionc', 'MC'),
(1067, 23, 'level_e', 'Choose the most appropriate alternative from the options given below to complete the following sentence:\r\nTo those of us who had always thought him timid, his ___ came as a surprise.', NULL, 'intrepidity			', 'inevitability		', 'inability			', 'inertness', '', 'optiona', 'MC'),
(1068, 23, 'level_e', 'The arithmetic mean of five different natural numbers is 12. The largest possible value among the numbers is', NULL, '12', '40', '50', '60', '', 'optionc', 'MC'),
(1069, 23, 'level_e', 'Two policemen, A and B, fire once each at the same time at an escaping convict. The probability that A hits the convict is three times the probability that B hits the convict. If the probability of the convict not getting injured is 0.5, the probability that B hits the convict is', NULL, '0.14', '0.22', '0.33', '0.40', '', 'optiona', 'MC'),
(1070, 23, 'level_m', '', '1392957637.png', 'P', 'Q  ', 'R  ', 'S', '  ', 'optionb', 'MC'),
(1071, 23, 'level_m', 'If a prime number on division by 4 gives a remainder of 1, then that number can be expressed as', NULL, 'sum of squares of two natural numbers', 'sum of cubes of two natural numbers', 'sum of square roots of two natural numbers', 'sum of cube roots of two natural numbers', '', 'optiona', 'MC'),
(1072, 23, 'level_m', 'Two points (4, p) and (0, q) lie on a straight line having a slope of 3/4. The value of (p – q) is', NULL, '-3', '0', '3', '4', '', 'optionc', 'MC'),
(1073, 23, 'level_m', 'Choose the most appropriate alternative from the options given below to complete the following sentence:\r\nThe administrators went on to implement yet another unreasonable measure, arguing that the measures were already ___ and one more would hardly make a difference.', NULL, 'reflective	', 'utopian', 'luxuriant', 'unpopular', '', 'optiond', 'MC'),
(1074, 23, 'level_m', 'In the early nineteenth century, theories of social evolution were inspired less by Biology than by the conviction of social scientists that there was a growing improvement in social institutions. Progress was taken for granted and social scientists attempted to discover its laws and phases.\r\nWhich one of the following inferences may be drawn with the greatest accuracy from the above passage?\r\nSocial scientists', NULL, 'did not question that progress was a fact.', 'did not approve of Biology.', 'framed the laws of progress.', 'emphasized Biology over Social Sciences.', '', 'optiona', 'MC'),
(1075, 23, 'level_m', '∀x Person(x) ⇒ (∃t ∀y Person(y) ⇒Fools(x,y,t)) ', NULL, 'Any person can fool some of the people all of the time', 'Any person can fool all of the people some of the time', 'Any person can fool all of the people all of the time', 'None of the above', '', 'optionb', 'MC'),
(1076, 23, 'level_m', '	', '1392957482.png', '5, 6  ', '4, 5, 6, 7, 8     ', '4, 6     ', 'None of these', '  ', 'optiond', 'MC'),
(1077, 23, 'level_m', '', '1392957550.png', '1 3 8 2 3 4', '1 1 23 2 2 ', '2 3 82 10 8  ', '2 1 4 2 3 4', ' ', 'optiond', 'MC'),
(1078, 23, 'level_m', 'Which one of the statements given below correctly describes the operation of the following function?\r\nvoid func(float a[], int k, float v) {\r\nbool found=false; inti=0; float b;\r\n\r\nwhile(!found &amp;&amp;i&lt;k) {\r\nif (a[i] == v) {\r\nb=a[i]; a[i]=a[0]; a[0]=b;\r\nfound=true;\r\n         }\r\ni++;\r\n} }', NULL, 'Returns the index of the array element whose value is equal to v.', 'Swaps the 0th and the vth element of the array.', 'Returns the vth element of the array.', 'Swaps the array element whose value is equal to v with the 0th array element.', '', 'optiond', 'MC'),
(1079, 23, 'level_m', 'Consider the following facts about parsers. Identify the correct option. 	', NULL, 'Canonical LR is the most powerful and will work on a very large class of grammars', 'Lookahead LR is intermediate in power between canonical LR and simple LR parser ', 'all of the parsers in (a) and (b) are more powerful than LL(1) parser ', 'all of the above are correct', ' ', 'optionb', 'MC'),
(1080, 23, 'level_m', '', '1392951487.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1081, 23, 'level_m', 'Let A be some item in the database and transactions T1, T2 and T3 be defined to perform the following operations:\r\nT1: Add one to A\r\nT2:Double A\r\nT3:Display A on the screen and set A to one\r\nSuppose transactions T1, T2 and T3 are allowed to execute concurrently. If A has initial value zero, which one of the following serial schedules is incorrect:', NULL, 'T1-T2-T3  :  A = 1', 'T3-T1-T2  :  A = 4', 'T3-T2-T1  :  A = 3', 'None of the above', '', 'optiond', 'MC'),
(1082, 23, 'level_m', 'Consider the following C++ program:\r\n#include&lt;iostream.h&gt;\r\nint func(int x, int y, int z[]);\r\nint main(void) {\r\nint a = 1, b = 3, c[] = {1, 2, 3, 4, 5};\r\ncout&lt;&lt;func(a, b, c) &lt;&lt;endl;\r\nreturn 0;\r\n}\r\nint func(int x, int y, int z[]) {\r\nint p = 0;\r\nwhile(x &lt;= 4 &amp;&amp; y &lt;=4) {\r\nif (x &gt; y) {\r\np = z[x];\r\nx += 2;\r\n            }\r\n	else{\r\np=z[y];\r\ny++;\r\n            }\r\n         } 	\r\nreturn p;\r\n}\r\nWhich one of the following is the resulting output?', NULL, '4', '2', '1', '5', '', 'optiond', 'MC'),
(1083, 23, 'level_m', 'Consider the following segment of a C++ program.\r\nint x[5];\r\nchar y[15];\r\n          ...\r\nwhile ( func(x[3],y) ) { \r\n          ...\r\n        }\r\n    Which one of the following could be the function prototype for func?\r\n      (1) voidfunc(int, char)      (2) boolfunc(int [], char [])      (3) boolfunc(int, char *)\r\n      (4) voidfunc(int, int)       (5) boolfunc(int, char [])         (6) intfunc(int*, int [])\r\n', NULL, '1 and 3', '2 and 4', '3 and 5 ', '4 and 6', '', 'optionc', 'MC'),
(1084, 23, 'level_m', 'Consider a system that uses paging. Suppose an instruction in process P references virtual address V, which is located in page G, offset O. A page fault occurs if ', NULL, 'There is no pair [G,F] in the transition look-aside buffer. ', 'G is larger then the number of frames in memory. ', 'G is a page in some other process. ', 'The page table entry PageTable[G] indicates that page G is not in memory. ', '', 'optiond', 'MC'),
(1085, 23, 'level_m', '', '1392951785.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1086, 23, 'level_m', '', '1392951816.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1087, 23, 'level_m', '', '1392951876.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1088, 23, 'level_m', '', '1392957432.png', 'P1, P2 and P3', 'P1 and P2  ', 'P2 and P3  ', 'None of the above', '  ', 'optionb', 'MC'),
(1089, 23, 'level_m', 'If a process has allocated every 1024th virtual page (e.g. it has allocated virtual pages 0, 1024, 2048, 3072, 4096, 5120 ... 1024000), which one of the following page table schemes will use the LEAST amount of memory?', NULL, 'A flat page table', 'A two-level page table with 1024 first level entries', 'A two-level page table with 2048 first level entries', 'An inverted page table', 'Each of the above page table will use exactly the same amount of memory', 'optiond', 'MC');
INSERT INTO `subj_question` (`qnid_s`, `subid`, `level`, `question`, `figure`, `optiona`, `optionb`, `optionc`, `optiond`, `optione`, `correct`, `type`) VALUES
(1090, 23, 'level_m', 'Using the SCAN (a.k.a. elevator) disk scheduling algorithm, determine how far the disk head moves servicing the following outstanding requests: 150, 19, 20, 900, 99. Assume the disk&#039;s head is currently over track 100 and moving toward smaller track numbers.  Also, assume that all of these track requests have already been received.	', NULL, '962 tracks', '1064 tracks ', '1681 tracks ', '1863 tracks', 'None of these are true ', 'optione', 'MC'),
(1091, 23, 'level_m', '', '1392952323.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1092, 23, 'level_m', '', '1392952329.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1093, 23, 'level_m', '	', '1392952370.jpeg', '', ' ', ' ', '', ' ', 'optiona', 'MC'),
(1094, 23, 'level_m', '', '1392952418.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1095, 23, 'level_m', '', '1392952474.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1096, 23, 'level_m', '', '1392952511.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1097, 23, 'level_m', '', '1392952574.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1098, 23, 'level_m', '', '1392952628.jpeg', '', '', '', '', '', 'optionc', 'MC'),
(1099, 23, 'level_m', '', '1392952712.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1100, 23, 'level_m', '', '1392952751.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1101, 23, 'level_m', '', '1392952812.jpeg', '', '', '', '', '', 'optiond', 'MC'),
(1102, 23, 'level_m', '', '1392952873.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1103, 23, 'level_m', '', '1392952988.jpeg', '', '', '', '', '', 'optiona', 'MC'),
(1104, 23, 'level_m', '', '1392953119.jpeg', '', '', '', '', '', 'optionb', 'MC'),
(1106, 4, 'level_e', 'This is a test:', NULL, NULL, NULL, NULL, NULL, NULL, '1.2', 'NT');

-- --------------------------------------------------------

--
-- Table structure for table `test`
--

CREATE TABLE IF NOT EXISTS `test` (
  `testid` bigint(20) NOT NULL,
  `testname` varchar(30) NOT NULL,
  `testdesc` varchar(100) DEFAULT NULL,
  `testdate` date DEFAULT NULL,
  `testtime` time DEFAULT NULL,
  `subid` int(11) DEFAULT NULL,
  `testfrom` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `testto` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `duration` int(11) DEFAULT NULL,
  `totalquestions` int(11) DEFAULT NULL,
  `total` bigint(20) DEFAULT NULL,
  `testcode` varchar(40) NOT NULL,
  `tcid` bigint(20) DEFAULT NULL,
  `status` tinyint(4) DEFAULT '0',
  `mean` double DEFAULT NULL,
  `variance` double DEFAULT NULL,
  `standard_deviation` double DEFAULT NULL,
  PRIMARY KEY (`testid`),
  UNIQUE KEY `testname` (`testname`),
  KEY `test_fk1` (`subid`),
  KEY `test_fk2` (`tcid`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `test`
--

INSERT INTO `test` (`testid`, `testname`, `testdesc`, `testdate`, `testtime`, `subid`, `testfrom`, `testto`, `duration`, `totalquestions`, `total`, `testcode`, `tcid`, `status`, `mean`, `variance`, `standard_deviation`) VALUES
(0, 'Full Mock Test-1', 'Full Mock Test-1', '2014-01-05', NULL, 6, '2013-12-18 06:05:11', '0000-00-00 00:00:00', 180, 65, NULL, '', NULL, 0, NULL, NULL, NULL),
(4, 'Computer Architecture Test', 'Computer Architecture Test', '2014-01-23', '14:16:48', 5, '2013-11-23 01:35:17', '2013-11-24 18:29:59', 120, 50, 100, '"ZãHÝŠÿ', NULL, 0, 47.07, 373.87, 19.34),
(5, 'Mock_Test_20th_Feb', 'Mock Test', '2014-02-20', '00:00:00', 7, '2014-02-20 05:49:00', '0000-00-00 00:00:00', 180, 65, 100, '', 0, 0, NULL, NULL, NULL),
(6, 'Full Mock Test-3', 'Full Mock Test-3', '2014-01-07', NULL, 8, '2013-12-21 05:51:20', '0000-00-00 00:00:00', 180, 65, NULL, '', NULL, 0, NULL, NULL, NULL),
(7, 'Mock Test-1', 'Mock Test-1', '2014-01-26', NULL, 9, '2013-12-31 09:42:23', '0000-00-00 00:00:00', 180, 65, 100, '', NULL, 0, 36.22, 346.66, 18.62),
(8, 'Data Structures', 'Data Structures Test', '2014-01-15', NULL, 10, '2014-01-15 04:07:20', '2014-01-15 18:30:00', 105, 45, 45, '', NULL, 0, 22.51, 79.74, 8.93),
(9, 'Math test', 'Math test', '2014-01-17', NULL, 11, '2014-01-17 05:05:25', '0000-00-00 00:00:00', 90, 55, 110, '', NULL, 0, 24.76, 265.93, 16.31),
(10, 'Software_Engineering', 'Software Engineering Test', '2014-01-22', NULL, 13, '2014-01-22 05:27:28', '0000-00-00 00:00:00', 75, 24, 48, '', NULL, 0, 21.8, 77.51, 8.8),
(11, 'C_Programming', 'C_Programming_Test', '2014-01-22', NULL, 12, '2014-01-22 06:38:32', '0000-00-00 00:00:00', 135, 60, 120, '', NULL, 0, 60, 523.41, 22.88),
(12, 'DBMS_Test', 'DBMS Test', '2014-01-23', NULL, 14, '2014-01-23 05:11:14', '0000-00-00 00:00:00', 162, 54, 108, '', NULL, 0, 50.13, 369.84, 19.23),
(13, 'Digital_Design', 'Digital Design Test', '2014-01-24', NULL, 15, '2014-01-24 05:29:27', '0000-00-00 00:00:00', 100, 40, 80, '', NULL, 0, 27.63, 126.57, 11.25),
(14, 'Test1_26Jan2014', 'Test1_26Jan2014', '2014-01-26', NULL, 0, '2014-01-25 16:22:24', '0000-00-00 00:00:00', 180, 65, NULL, '', NULL, 0, NULL, NULL, NULL),
(15, 'Test_2010', 'test_2010', '2014-02-04', NULL, 17, '2014-02-04 05:45:58', '0000-00-00 00:00:00', 180, 65, 100, '', NULL, 0, 49.14, 332.8, 18.24),
(16, 'Mock_Test_5_Feb', 'Mock Test February 5th 2014', '2014-02-05', NULL, 18, '2014-02-05 09:24:55', '0000-00-00 00:00:00', 180, 65, 100, '', NULL, 0, 29.54, 205.66, 14.34),
(17, 'Mock_Test_6_Feb', 'Mock Test February 6th&#039; 2014', '2014-02-06', NULL, 19, '2014-02-06 07:37:15', '0000-00-00 00:00:00', 180, 65, 100, '', NULL, 0, 39.4, 257.65, 16.05),
(18, 'Mock_Test_7_Feb', 'Mock Test February 7th 2014', '2014-02-07', NULL, 20, '2014-02-07 05:15:20', '0000-00-00 00:00:00', 180, 65, 100, '', NULL, 0, 44.4, 216.24, 14.71),
(19, 'Mock_Test_18_Feb', 'Mock Test February 18th&#039; 2014', '2014-02-18', NULL, 21, '2014-02-18 05:33:39', '0000-00-00 00:00:00', 180, 65, 100, '', NULL, 0, NULL, NULL, NULL),
(20, 'Mock_Test_19_Feb', 'Mock Test February 19 2014', '2014-02-19', NULL, 22, '2014-02-19 05:29:26', '0000-00-00 00:00:00', 180, 65, 100, '', NULL, 0, NULL, NULL, NULL),
(21, 'Mock_Test_21_Feb', 'Mock Test February 21 2014', '2014-02-21', NULL, 23, '2014-02-21 03:50:17', '0000-00-00 00:00:00', 180, 65, 100, '', NULL, 0, 51.18, 205.89, 14.35),
(22, 'DemoTest', 'Demo', '2014-03-22', NULL, 4, '2014-03-22 08:27:55', '0000-00-00 00:00:00', 15, 9, 9, '', NULL, 1, NULL, NULL, NULL);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
